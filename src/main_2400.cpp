// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.UniqueComponentAttribute
#include "Pathfinding/UniqueComponentAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String tag
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::UniqueComponentAttribute::dyn_tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::UniqueComponentAttribute::dyn_tag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tag"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.IVersionedMonoBehaviourInternal
#include "Pathfinding/IVersionedMonoBehaviourInternal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.IVersionedMonoBehaviourInternal.UpgradeFromUnityThread
void Pathfinding::IVersionedMonoBehaviourInternal::UpgradeFromUnityThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IVersionedMonoBehaviourInternal::UpgradeFromUnityThread");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IVersionedMonoBehaviourInternal*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.VersionedMonoBehaviour
#include "Pathfinding/VersionedMonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
[[deprecated("Use field access instead!")]] int& Pathfinding::VersionedMonoBehaviour::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VersionedMonoBehaviour::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.VersionedMonoBehaviour.Awake
void Pathfinding::VersionedMonoBehaviour::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VersionedMonoBehaviour::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.VersionedMonoBehaviour.Reset
void Pathfinding::VersionedMonoBehaviour::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VersionedMonoBehaviour::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.VersionedMonoBehaviour.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void Pathfinding::VersionedMonoBehaviour::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VersionedMonoBehaviour::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.VersionedMonoBehaviour.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void Pathfinding::VersionedMonoBehaviour::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VersionedMonoBehaviour::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.VersionedMonoBehaviour.OnUpgradeSerializedData
int Pathfinding::VersionedMonoBehaviour::OnUpgradeSerializedData(int version, bool unityThread) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VersionedMonoBehaviour::OnUpgradeSerializedData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, version, unityThread);
}
// Autogenerated method: Pathfinding.VersionedMonoBehaviour.Pathfinding.IVersionedMonoBehaviourInternal.UpgradeFromUnityThread
void Pathfinding::VersionedMonoBehaviour::Pathfinding_IVersionedMonoBehaviourInternal_UpgradeFromUnityThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::VersionedMonoBehaviour::Pathfinding.IVersionedMonoBehaviourInternal.UpgradeFromUnityThread");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ABPath
#include "Pathfinding/ABPath.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.GridNode
#include "Pathfinding/GridNode.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.PathLog
#include "Pathfinding/PathLog.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Pathfinding.NNConstraint NNConstraintNone
::Pathfinding::NNConstraint* Pathfinding::ABPath::_get_NNConstraintNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::_get_NNConstraintNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NNConstraint*>("Pathfinding", "ABPath", "NNConstraintNone"));
}
// Autogenerated static field setter
// Set static field: static private readonly Pathfinding.NNConstraint NNConstraintNone
void Pathfinding::ABPath::_set_NNConstraintNone(::Pathfinding::NNConstraint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::_set_NNConstraintNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ABPath", "NNConstraintNone", value));
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode startNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::ABPath::dyn_startNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_startNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode endNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::ABPath::dyn_endNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_endNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 originalStartPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::ABPath::dyn_originalStartPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_originalStartPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalStartPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 originalEndPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::ABPath::dyn_originalEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_originalEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalEndPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::ABPath::dyn_startPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_startPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 endPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::ABPath::dyn_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_endPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Int3 startIntPoint
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::ABPath::dyn_startIntPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_startIntPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startIntPoint"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean calculatePartial
[[deprecated("Use field access instead!")]] bool& Pathfinding::ABPath::dyn_calculatePartial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_calculatePartial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calculatePartial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.PathNode partialBestTarget
[[deprecated("Use field access instead!")]] ::Pathfinding::PathNode*& Pathfinding::ABPath::dyn_partialBestTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_partialBestTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partialBestTarget"))->offset;
  return *reinterpret_cast<::Pathfinding::PathNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32[] endNodeCosts
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::ABPath::dyn_endNodeCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_endNodeCosts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endNodeCosts"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GridNode gridSpecialCaseNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GridNode*& Pathfinding::ABPath::dyn_gridSpecialCaseNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_gridSpecialCaseNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gridSpecialCaseNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GridNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.ABPath.get_hasEndPoint
bool Pathfinding::ABPath::get_hasEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::get_hasEndPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ABPath.Construct
::Pathfinding::ABPath* Pathfinding::ABPath::Construct(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "ABPath", "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ABPath*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, callback);
}
// Autogenerated method: Pathfinding.ABPath.Setup
void Pathfinding::ABPath::Setup(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::Pathfinding::OnPathDelegate* callbackDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(callbackDelegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, callbackDelegate);
}
// Autogenerated method: Pathfinding.ABPath.FakePath
::Pathfinding::ABPath* Pathfinding::ABPath::FakePath(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* vectorPath, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* nodePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::FakePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "ABPath", "FakePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vectorPath), ::il2cpp_utils::ExtractType(nodePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ABPath*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vectorPath, nodePath);
}
// Autogenerated method: Pathfinding.ABPath.UpdateStartEnd
void Pathfinding::ABPath::UpdateStartEnd(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::UpdateStartEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStartEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end);
}
// Autogenerated method: Pathfinding.ABPath.EndPointGridGraphSpecialCase
bool Pathfinding::ABPath::EndPointGridGraphSpecialCase(::Pathfinding::GraphNode* closestWalkableEndNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::EndPointGridGraphSpecialCase");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 29));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, closestWalkableEndNode);
}
// Autogenerated method: Pathfinding.ABPath.SetFlagOnSurroundingGridNodes
void Pathfinding::ABPath::SetFlagOnSurroundingGridNodes(::Pathfinding::GridNode* gridNode, int flag, bool flagState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::SetFlagOnSurroundingGridNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFlagOnSurroundingGridNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gridNode), ::il2cpp_utils::ExtractType(flag), ::il2cpp_utils::ExtractType(flagState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gridNode, flag, flagState);
}
// Autogenerated method: Pathfinding.ABPath.CompletePathIfStartIsValidTarget
void Pathfinding::ABPath::CompletePathIfStartIsValidTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::CompletePathIfStartIsValidTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ABPath.CompletePartial
void Pathfinding::ABPath::CompletePartial(::Pathfinding::PathNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::CompletePartial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompletePartial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.ABPath.CompleteWith
void Pathfinding::ABPath::CompleteWith(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::CompleteWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.ABPath.GetMovementVector
::UnityEngine::Vector3 Pathfinding::ABPath::GetMovementVector(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::GetMovementVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMovementVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point);
}
// Autogenerated method: Pathfinding.ABPath.GetConnectionSpecialCost
uint Pathfinding::ABPath::GetConnectionSpecialCost(::Pathfinding::GraphNode* a, ::Pathfinding::GraphNode* b, uint currentCost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::GetConnectionSpecialCost");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 18));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, a, b, currentCost);
}
// Autogenerated method: Pathfinding.ABPath.Reset
void Pathfinding::ABPath::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ABPath.Prepare
void Pathfinding::ABPath::Prepare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::Prepare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ABPath.Initialize
void Pathfinding::ABPath::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ABPath.Cleanup
void Pathfinding::ABPath::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ABPath.CalculateStep
void Pathfinding::ABPath::CalculateStep(int64_t targetTick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::CalculateStep");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetTick);
}
// Autogenerated method: Pathfinding.ABPath.DebugString
::StringW Pathfinding::ABPath::DebugString(::Pathfinding::PathLog logMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::DebugString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, logMode);
}
// Autogenerated method: Pathfinding.ABPath..cctor
void Pathfinding::ABPath::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "ABPath", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ConstantPath
#include "Pathfinding/ConstantPath.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.PathEndingCondition
#include "Pathfinding/PathEndingCondition.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode startNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::ConstantPath::dyn_startNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ConstantPath::dyn_startNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::ConstantPath::dyn_startPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ConstantPath::dyn_startPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 originalStartPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::ConstantPath::dyn_originalStartPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ConstantPath::dyn_originalStartPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalStartPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.GraphNode> allNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::ConstantPath::dyn_allNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ConstantPath::dyn_allNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathEndingCondition endingCondition
[[deprecated("Use field access instead!")]] ::Pathfinding::PathEndingCondition*& Pathfinding::ConstantPath::dyn_endingCondition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ConstantPath::dyn_endingCondition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endingCondition"))->offset;
  return *reinterpret_cast<::Pathfinding::PathEndingCondition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.ConstantPath.Construct
::Pathfinding::ConstantPath* Pathfinding::ConstantPath::Construct(::UnityEngine::Vector3 start, int maxGScore, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ConstantPath::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "ConstantPath", "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(maxGScore), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ConstantPath*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, maxGScore, callback);
}
// Autogenerated method: Pathfinding.ConstantPath.Setup
void Pathfinding::ConstantPath::Setup(::UnityEngine::Vector3 start, int maxGScore, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ConstantPath::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(maxGScore), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, maxGScore, callback);
}
// Autogenerated method: Pathfinding.ConstantPath.get_FloodingPath
bool Pathfinding::ConstantPath::get_FloodingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ConstantPath::get_FloodingPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ConstantPath.OnEnterPool
void Pathfinding::ConstantPath::OnEnterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ConstantPath::OnEnterPool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ConstantPath.Reset
void Pathfinding::ConstantPath::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ConstantPath::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ConstantPath.Prepare
void Pathfinding::ConstantPath::Prepare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ConstantPath::Prepare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ConstantPath.Initialize
void Pathfinding::ConstantPath::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ConstantPath::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ConstantPath.Cleanup
void Pathfinding::ConstantPath::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ConstantPath::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ConstantPath.CalculateStep
void Pathfinding::ConstantPath::CalculateStep(int64_t targetTick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ConstantPath::CalculateStep");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetTick);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.EndingConditionDistance
#include "Pathfinding/EndingConditionDistance.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxGScore
[[deprecated("Use field access instead!")]] int& Pathfinding::EndingConditionDistance::dyn_maxGScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EndingConditionDistance::dyn_maxGScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxGScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.EndingConditionDistance.TargetFound
bool Pathfinding::EndingConditionDistance::TargetFound(::Pathfinding::PathNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EndingConditionDistance::TargetFound");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathEndingCondition*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.FleePath
#include "Pathfinding/FleePath.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.FleePath.Construct
::Pathfinding::FleePath* Pathfinding::FleePath::Construct(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 avoid, int searchLength, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FleePath::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "FleePath", "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(avoid), ::il2cpp_utils::ExtractType(searchLength), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::FleePath*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, avoid, searchLength, callback);
}
// Autogenerated method: Pathfinding.FleePath.Setup
void Pathfinding::FleePath::Setup(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 avoid, int searchLength, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FleePath::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(avoid), ::il2cpp_utils::ExtractType(searchLength), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, avoid, searchLength, callback);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.FloodPath
#include "Pathfinding/FloodPath.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 originalStartPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::FloodPath::dyn_originalStartPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::dyn_originalStartPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalStartPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::FloodPath::dyn_startPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::dyn_startPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode startNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::FloodPath::dyn_startNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::dyn_startNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean saveParents
[[deprecated("Use field access instead!")]] bool& Pathfinding::FloodPath::dyn_saveParents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::dyn_saveParents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveParents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.Dictionary`2<Pathfinding.GraphNode,Pathfinding.GraphNode> parents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, ::Pathfinding::GraphNode*>*& Pathfinding::FloodPath::dyn_parents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::dyn_parents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, ::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.FloodPath.HasPathTo
bool Pathfinding::FloodPath::HasPathTo(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::HasPathTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasPathTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.FloodPath.GetParent
::Pathfinding::GraphNode* Pathfinding::FloodPath::GetParent(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.FloodPath.Construct
::Pathfinding::FloodPath* Pathfinding::FloodPath::Construct(::UnityEngine::Vector3 start, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "FloodPath", "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::FloodPath*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, callback);
}
// Autogenerated method: Pathfinding.FloodPath.Construct
::Pathfinding::FloodPath* Pathfinding::FloodPath::Construct(::Pathfinding::GraphNode* start, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "FloodPath", "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::FloodPath*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, callback);
}
// Autogenerated method: Pathfinding.FloodPath.Setup
void Pathfinding::FloodPath::Setup(::UnityEngine::Vector3 start, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, callback);
}
// Autogenerated method: Pathfinding.FloodPath.Setup
void Pathfinding::FloodPath::Setup(::Pathfinding::GraphNode* start, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, callback);
}
// Autogenerated method: Pathfinding.FloodPath.get_FloodingPath
bool Pathfinding::FloodPath::get_FloodingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::get_FloodingPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.FloodPath.Reset
void Pathfinding::FloodPath::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.FloodPath.Prepare
void Pathfinding::FloodPath::Prepare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::Prepare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.FloodPath.Initialize
void Pathfinding::FloodPath::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.FloodPath.CalculateStep
void Pathfinding::FloodPath::CalculateStep(int64_t targetTick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPath::CalculateStep");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetTick);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.FloodPathConstraint
#include "Pathfinding/FloodPathConstraint.hpp"
// Including type: Pathfinding.FloodPath
#include "Pathfinding/FloodPath.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.FloodPath path
[[deprecated("Use field access instead!")]] ::Pathfinding::FloodPath*& Pathfinding::FloodPathConstraint::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPathConstraint::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Pathfinding::FloodPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.FloodPathConstraint.Suitable
bool Pathfinding::FloodPathConstraint::Suitable(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPathConstraint::Suitable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NNConstraint*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.FloodPathTracer
#include "Pathfinding/FloodPathTracer.hpp"
// Including type: Pathfinding.FloodPath
#include "Pathfinding/FloodPath.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.FloodPath flood
[[deprecated("Use field access instead!")]] ::Pathfinding::FloodPath*& Pathfinding::FloodPathTracer::dyn_flood() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPathTracer::dyn_flood");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flood"))->offset;
  return *reinterpret_cast<::Pathfinding::FloodPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.FloodPathTracer.Construct
::Pathfinding::FloodPathTracer* Pathfinding::FloodPathTracer::Construct(::UnityEngine::Vector3 start, ::Pathfinding::FloodPath* flood, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPathTracer::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "FloodPathTracer", "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(flood), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::FloodPathTracer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, flood, callback);
}
// Autogenerated method: Pathfinding.FloodPathTracer.Setup
void Pathfinding::FloodPathTracer::Setup(::UnityEngine::Vector3 start, ::Pathfinding::FloodPath* flood, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPathTracer::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(flood), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, flood, callback);
}
// Autogenerated method: Pathfinding.FloodPathTracer.Trace
void Pathfinding::FloodPathTracer::Trace(::Pathfinding::GraphNode* from) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPathTracer::Trace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from);
}
// Autogenerated method: Pathfinding.FloodPathTracer.get_hasEndPoint
bool Pathfinding::FloodPathTracer::get_hasEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPathTracer::get_hasEndPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.FloodPathTracer.Reset
void Pathfinding::FloodPathTracer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPathTracer::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.FloodPathTracer.Initialize
void Pathfinding::FloodPathTracer::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPathTracer::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.FloodPathTracer.CalculateStep
void Pathfinding::FloodPathTracer::CalculateStep(int64_t targetTick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FloodPathTracer::CalculateStep");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetTick);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.MultiTargetPath
#include "Pathfinding/MultiTargetPath.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.PathLog
#include "Pathfinding/PathLog.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.OnPathDelegate[] callbacks
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::OnPathDelegate*>& Pathfinding::MultiTargetPath::dyn_callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::dyn_callbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbacks"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::OnPathDelegate*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode[] targetNodes
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GraphNode*>& Pathfinding::MultiTargetPath::dyn_targetNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::dyn_targetNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetNodes"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GraphNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 targetNodeCount
[[deprecated("Use field access instead!")]] int& Pathfinding::MultiTargetPath::dyn_targetNodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::dyn_targetNodeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetNodeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean[] targetsFound
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& Pathfinding::MultiTargetPath::dyn_targetsFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::dyn_targetsFound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetsFound"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] targetPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Pathfinding::MultiTargetPath::dyn_targetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::dyn_targetPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] originalTargetPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Pathfinding::MultiTargetPath::dyn_originalTargetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::dyn_originalTargetPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalTargetPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Vector3>[] vectorPaths
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*>& Pathfinding::MultiTargetPath::dyn_vectorPaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::dyn_vectorPaths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vectorPaths"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.GraphNode>[] nodePaths
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*>& Pathfinding::MultiTargetPath::dyn_nodePaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::dyn_nodePaths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodePaths"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean pathsForAll
[[deprecated("Use field access instead!")]] bool& Pathfinding::MultiTargetPath::dyn_pathsForAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::dyn_pathsForAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathsForAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 chosenTarget
[[deprecated("Use field access instead!")]] int& Pathfinding::MultiTargetPath::dyn_chosenTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::dyn_chosenTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chosenTarget"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 sequentialTarget
[[deprecated("Use field access instead!")]] int& Pathfinding::MultiTargetPath::dyn_sequentialTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::dyn_sequentialTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sequentialTarget"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.MultiTargetPath/HeuristicMode heuristicMode
[[deprecated("Use field access instead!")]] ::Pathfinding::MultiTargetPath::HeuristicMode& Pathfinding::MultiTargetPath::dyn_heuristicMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::dyn_heuristicMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heuristicMode"))->offset;
  return *reinterpret_cast<::Pathfinding::MultiTargetPath::HeuristicMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <inverted>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::MultiTargetPath::dyn_$inverted$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::dyn_$inverted$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<inverted>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.MultiTargetPath.get_inverted
bool Pathfinding::MultiTargetPath::get_inverted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::get_inverted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inverted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MultiTargetPath.set_inverted
void Pathfinding::MultiTargetPath::set_inverted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::set_inverted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inverted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.MultiTargetPath.Construct
::Pathfinding::MultiTargetPath* Pathfinding::MultiTargetPath::Construct(::ArrayW<::UnityEngine::Vector3> startPoints, ::UnityEngine::Vector3 target, ::ArrayW<::Pathfinding::OnPathDelegate*> callbackDelegates, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "MultiTargetPath", "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPoints), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(callbackDelegates), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::MultiTargetPath*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startPoints, target, callbackDelegates, callback);
}
// Autogenerated method: Pathfinding.MultiTargetPath.Construct
::Pathfinding::MultiTargetPath* Pathfinding::MultiTargetPath::Construct(::UnityEngine::Vector3 start, ::ArrayW<::UnityEngine::Vector3> targets, ::ArrayW<::Pathfinding::OnPathDelegate*> callbackDelegates, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "MultiTargetPath", "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(targets), ::il2cpp_utils::ExtractType(callbackDelegates), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::MultiTargetPath*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, targets, callbackDelegates, callback);
}
// Autogenerated method: Pathfinding.MultiTargetPath.Setup
void Pathfinding::MultiTargetPath::Setup(::UnityEngine::Vector3 start, ::ArrayW<::UnityEngine::Vector3> targets, ::ArrayW<::Pathfinding::OnPathDelegate*> callbackDelegates, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(targets), ::il2cpp_utils::ExtractType(callbackDelegates), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, targets, callbackDelegates, callback);
}
// Autogenerated method: Pathfinding.MultiTargetPath.ChooseShortestPath
void Pathfinding::MultiTargetPath::ChooseShortestPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::ChooseShortestPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChooseShortestPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MultiTargetPath.SetPathParametersForReturn
void Pathfinding::MultiTargetPath::SetPathParametersForReturn(int target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::SetPathParametersForReturn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPathParametersForReturn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Pathfinding.MultiTargetPath.FoundTarget
void Pathfinding::MultiTargetPath::FoundTarget(::Pathfinding::PathNode* nodeR, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::FoundTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FoundTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeR), ::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodeR, i);
}
// Autogenerated method: Pathfinding.MultiTargetPath.RebuildOpenList
void Pathfinding::MultiTargetPath::RebuildOpenList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::RebuildOpenList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildOpenList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MultiTargetPath.RecalculateHTarget
void Pathfinding::MultiTargetPath::RecalculateHTarget(bool firstTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::RecalculateHTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateHTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstTime);
}
// Autogenerated method: Pathfinding.MultiTargetPath.ResetFlags
void Pathfinding::MultiTargetPath::ResetFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::ResetFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MultiTargetPath.Reset
void Pathfinding::MultiTargetPath::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MultiTargetPath.OnEnterPool
void Pathfinding::MultiTargetPath::OnEnterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::OnEnterPool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MultiTargetPath.ReturnPath
void Pathfinding::MultiTargetPath::ReturnPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::ReturnPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MultiTargetPath.Prepare
void Pathfinding::MultiTargetPath::Prepare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::Prepare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MultiTargetPath.Initialize
void Pathfinding::MultiTargetPath::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MultiTargetPath.Cleanup
void Pathfinding::MultiTargetPath::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MultiTargetPath.CalculateStep
void Pathfinding::MultiTargetPath::CalculateStep(int64_t targetTick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::CalculateStep");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetTick);
}
// Autogenerated method: Pathfinding.MultiTargetPath.Trace
void Pathfinding::MultiTargetPath::Trace(::Pathfinding::PathNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::Trace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.MultiTargetPath.DebugString
::StringW Pathfinding::MultiTargetPath::DebugString(::Pathfinding::PathLog logMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::DebugString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, logMode);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.MultiTargetPath/HeuristicMode
#include "Pathfinding/MultiTargetPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.MultiTargetPath/HeuristicMode None
::Pathfinding::MultiTargetPath::HeuristicMode Pathfinding::MultiTargetPath::HeuristicMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::HeuristicMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::MultiTargetPath::HeuristicMode>("Pathfinding", "MultiTargetPath/HeuristicMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.MultiTargetPath/HeuristicMode None
void Pathfinding::MultiTargetPath::HeuristicMode::_set_None(::Pathfinding::MultiTargetPath::HeuristicMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::HeuristicMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "MultiTargetPath/HeuristicMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.MultiTargetPath/HeuristicMode Average
::Pathfinding::MultiTargetPath::HeuristicMode Pathfinding::MultiTargetPath::HeuristicMode::_get_Average() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::HeuristicMode::_get_Average");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::MultiTargetPath::HeuristicMode>("Pathfinding", "MultiTargetPath/HeuristicMode", "Average"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.MultiTargetPath/HeuristicMode Average
void Pathfinding::MultiTargetPath::HeuristicMode::_set_Average(::Pathfinding::MultiTargetPath::HeuristicMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::HeuristicMode::_set_Average");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "MultiTargetPath/HeuristicMode", "Average", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.MultiTargetPath/HeuristicMode MovingAverage
::Pathfinding::MultiTargetPath::HeuristicMode Pathfinding::MultiTargetPath::HeuristicMode::_get_MovingAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::HeuristicMode::_get_MovingAverage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::MultiTargetPath::HeuristicMode>("Pathfinding", "MultiTargetPath/HeuristicMode", "MovingAverage"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.MultiTargetPath/HeuristicMode MovingAverage
void Pathfinding::MultiTargetPath::HeuristicMode::_set_MovingAverage(::Pathfinding::MultiTargetPath::HeuristicMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::HeuristicMode::_set_MovingAverage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "MultiTargetPath/HeuristicMode", "MovingAverage", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.MultiTargetPath/HeuristicMode Midpoint
::Pathfinding::MultiTargetPath::HeuristicMode Pathfinding::MultiTargetPath::HeuristicMode::_get_Midpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::HeuristicMode::_get_Midpoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::MultiTargetPath::HeuristicMode>("Pathfinding", "MultiTargetPath/HeuristicMode", "Midpoint"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.MultiTargetPath/HeuristicMode Midpoint
void Pathfinding::MultiTargetPath::HeuristicMode::_set_Midpoint(::Pathfinding::MultiTargetPath::HeuristicMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::HeuristicMode::_set_Midpoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "MultiTargetPath/HeuristicMode", "Midpoint", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.MultiTargetPath/HeuristicMode MovingMidpoint
::Pathfinding::MultiTargetPath::HeuristicMode Pathfinding::MultiTargetPath::HeuristicMode::_get_MovingMidpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::HeuristicMode::_get_MovingMidpoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::MultiTargetPath::HeuristicMode>("Pathfinding", "MultiTargetPath/HeuristicMode", "MovingMidpoint"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.MultiTargetPath/HeuristicMode MovingMidpoint
void Pathfinding::MultiTargetPath::HeuristicMode::_set_MovingMidpoint(::Pathfinding::MultiTargetPath::HeuristicMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::HeuristicMode::_set_MovingMidpoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "MultiTargetPath/HeuristicMode", "MovingMidpoint", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.MultiTargetPath/HeuristicMode Sequential
::Pathfinding::MultiTargetPath::HeuristicMode Pathfinding::MultiTargetPath::HeuristicMode::_get_Sequential() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::HeuristicMode::_get_Sequential");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::MultiTargetPath::HeuristicMode>("Pathfinding", "MultiTargetPath/HeuristicMode", "Sequential"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.MultiTargetPath/HeuristicMode Sequential
void Pathfinding::MultiTargetPath::HeuristicMode::_set_Sequential(::Pathfinding::MultiTargetPath::HeuristicMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::HeuristicMode::_set_Sequential");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "MultiTargetPath/HeuristicMode", "Sequential", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::MultiTargetPath::HeuristicMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MultiTargetPath::HeuristicMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RandomPath
#include "Pathfinding/RandomPath.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 searchLength
[[deprecated("Use field access instead!")]] int& Pathfinding::RandomPath::dyn_searchLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::dyn_searchLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "searchLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 spread
[[deprecated("Use field access instead!")]] int& Pathfinding::RandomPath::dyn_spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::dyn_spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spread"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single aimStrength
[[deprecated("Use field access instead!")]] float& Pathfinding::RandomPath::dyn_aimStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::dyn_aimStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aimStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PathNode chosenNodeR
[[deprecated("Use field access instead!")]] ::Pathfinding::PathNode*& Pathfinding::RandomPath::dyn_chosenNodeR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::dyn_chosenNodeR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chosenNodeR"))->offset;
  return *reinterpret_cast<::Pathfinding::PathNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PathNode maxGScoreNodeR
[[deprecated("Use field access instead!")]] ::Pathfinding::PathNode*& Pathfinding::RandomPath::dyn_maxGScoreNodeR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::dyn_maxGScoreNodeR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxGScoreNodeR"))->offset;
  return *reinterpret_cast<::Pathfinding::PathNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxGScore
[[deprecated("Use field access instead!")]] int& Pathfinding::RandomPath::dyn_maxGScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::dyn_maxGScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxGScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 aim
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::RandomPath::dyn_aim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::dyn_aim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aim"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nodesEvaluatedRep
[[deprecated("Use field access instead!")]] int& Pathfinding::RandomPath::dyn_nodesEvaluatedRep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::dyn_nodesEvaluatedRep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodesEvaluatedRep"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Random rnd
[[deprecated("Use field access instead!")]] ::System::Random*& Pathfinding::RandomPath::dyn_rnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::dyn_rnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rnd"))->offset;
  return *reinterpret_cast<::System::Random**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RandomPath.Construct
::Pathfinding::RandomPath* Pathfinding::RandomPath::Construct(::UnityEngine::Vector3 start, int length, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RandomPath", "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RandomPath*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, length, callback);
}
// Autogenerated method: Pathfinding.RandomPath.Setup
::Pathfinding::RandomPath* Pathfinding::RandomPath::Setup(::UnityEngine::Vector3 start, int length, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RandomPath*, false>(this, ___internal__method, start, length, callback);
}
// Autogenerated method: Pathfinding.RandomPath.get_FloodingPath
bool Pathfinding::RandomPath::get_FloodingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::get_FloodingPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RandomPath.get_hasEndPoint
bool Pathfinding::RandomPath::get_hasEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::get_hasEndPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RandomPath.Reset
void Pathfinding::RandomPath::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RandomPath.ReturnPath
void Pathfinding::RandomPath::ReturnPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::ReturnPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RandomPath.Prepare
void Pathfinding::RandomPath::Prepare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::Prepare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RandomPath.Initialize
void Pathfinding::RandomPath::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RandomPath.CalculateStep
void Pathfinding::RandomPath::CalculateStep(int64_t targetTick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RandomPath::CalculateStep");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetTick);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.XPath
#include "Pathfinding/XPath.hpp"
// Including type: Pathfinding.PathEndingCondition
#include "Pathfinding/PathEndingCondition.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathEndingCondition endingCondition
[[deprecated("Use field access instead!")]] ::Pathfinding::PathEndingCondition*& Pathfinding::XPath::dyn_endingCondition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::XPath::dyn_endingCondition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endingCondition"))->offset;
  return *reinterpret_cast<::Pathfinding::PathEndingCondition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.XPath.Construct
::Pathfinding::XPath* Pathfinding::XPath::Construct(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::XPath::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "XPath", "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::XPath*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, callback);
}
// Autogenerated method: Pathfinding.XPath.ChangeEndNode
void Pathfinding::XPath::ChangeEndNode(::Pathfinding::GraphNode* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::XPath::ChangeEndNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeEndNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Pathfinding.XPath.Reset
void Pathfinding::XPath::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::XPath::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.XPath.EndPointGridGraphSpecialCase
bool Pathfinding::XPath::EndPointGridGraphSpecialCase(::Pathfinding::GraphNode* endNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::XPath::EndPointGridGraphSpecialCase");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 29));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, endNode);
}
// Autogenerated method: Pathfinding.XPath.CompletePathIfStartIsValidTarget
void Pathfinding::XPath::CompletePathIfStartIsValidTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::XPath::CompletePathIfStartIsValidTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.XPath.CalculateStep
void Pathfinding::XPath::CalculateStep(int64_t targetTick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::XPath::CalculateStep");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetTick);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathEndingCondition
#include "Pathfinding/PathEndingCondition.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.Path path
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::PathEndingCondition::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathEndingCondition::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathEndingCondition.TargetFound
bool Pathfinding::PathEndingCondition::TargetFound(::Pathfinding::PathNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathEndingCondition::TargetFound");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathEndingCondition*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ABPathEndingCondition
#include "Pathfinding/ABPathEndingCondition.hpp"
// Including type: Pathfinding.ABPath
#include "Pathfinding/ABPath.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.ABPath abPath
[[deprecated("Use field access instead!")]] ::Pathfinding::ABPath*& Pathfinding::ABPathEndingCondition::dyn_abPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPathEndingCondition::dyn_abPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abPath"))->offset;
  return *reinterpret_cast<::Pathfinding::ABPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.ABPathEndingCondition.TargetFound
bool Pathfinding::ABPathEndingCondition::TargetFound(::Pathfinding::PathNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPathEndingCondition::TargetFound");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathEndingCondition*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.EndingConditionProximity
#include "Pathfinding/EndingConditionProximity.hpp"
// Including type: Pathfinding.ABPath
#include "Pathfinding/ABPath.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single maxDistance
[[deprecated("Use field access instead!")]] float& Pathfinding::EndingConditionProximity::dyn_maxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EndingConditionProximity::dyn_maxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.EndingConditionProximity.TargetFound
bool Pathfinding::EndingConditionProximity::TargetFound(::Pathfinding::PathNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EndingConditionProximity::TargetFound");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPathEndingCondition*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.BlockManager
#include "Pathfinding/BlockManager.hpp"
// Including type: Pathfinding.BlockManager/BlockMode
#include "Pathfinding/BlockManager_BlockMode.hpp"
// Including type: Pathfinding.BlockManager/TraversalProvider
#include "Pathfinding/BlockManager_TraversalProvider.hpp"
// Including type: Pathfinding.BlockManager/<>c__DisplayClass6_0
#include "Pathfinding/BlockManager_--c__DisplayClass6_0.hpp"
// Including type: Pathfinding.BlockManager/<>c__DisplayClass7_0
#include "Pathfinding/BlockManager_--c__DisplayClass7_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.SingleNodeBlocker
#include "Pathfinding/SingleNodeBlocker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Pathfinding.GraphNode,System.Collections.Generic.List`1<Pathfinding.SingleNodeBlocker>> blocked
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, ::System::Collections::Generic::List_1<::Pathfinding::SingleNodeBlocker*>*>*& Pathfinding::BlockManager::dyn_blocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::dyn_blocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blocked"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, ::System::Collections::Generic::List_1<::Pathfinding::SingleNodeBlocker*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.BlockManager.Start
void Pathfinding::BlockManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.BlockManager.NodeContainsAnyOf
bool Pathfinding::BlockManager::NodeContainsAnyOf(::Pathfinding::GraphNode* node, ::System::Collections::Generic::List_1<::Pathfinding::SingleNodeBlocker*>* selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::NodeContainsAnyOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NodeContainsAnyOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(selector)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node, selector);
}
// Autogenerated method: Pathfinding.BlockManager.NodeContainsAnyExcept
bool Pathfinding::BlockManager::NodeContainsAnyExcept(::Pathfinding::GraphNode* node, ::System::Collections::Generic::List_1<::Pathfinding::SingleNodeBlocker*>* selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::NodeContainsAnyExcept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NodeContainsAnyExcept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(selector)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node, selector);
}
// Autogenerated method: Pathfinding.BlockManager.InternalBlock
void Pathfinding::BlockManager::InternalBlock(::Pathfinding::GraphNode* node, ::Pathfinding::SingleNodeBlocker* blocker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::InternalBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(blocker)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, blocker);
}
// Autogenerated method: Pathfinding.BlockManager.InternalUnblock
void Pathfinding::BlockManager::InternalUnblock(::Pathfinding::GraphNode* node, ::Pathfinding::SingleNodeBlocker* blocker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::InternalUnblock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(blocker)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, blocker);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.BlockManager/BlockMode
#include "Pathfinding/BlockManager_BlockMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.BlockManager/BlockMode AllExceptSelector
::Pathfinding::BlockManager::BlockMode Pathfinding::BlockManager::BlockMode::_get_AllExceptSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::BlockMode::_get_AllExceptSelector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::BlockManager::BlockMode>("Pathfinding", "BlockManager/BlockMode", "AllExceptSelector"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.BlockManager/BlockMode AllExceptSelector
void Pathfinding::BlockManager::BlockMode::_set_AllExceptSelector(::Pathfinding::BlockManager::BlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::BlockMode::_set_AllExceptSelector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "BlockManager/BlockMode", "AllExceptSelector", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.BlockManager/BlockMode OnlySelector
::Pathfinding::BlockManager::BlockMode Pathfinding::BlockManager::BlockMode::_get_OnlySelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::BlockMode::_get_OnlySelector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::BlockManager::BlockMode>("Pathfinding", "BlockManager/BlockMode", "OnlySelector"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.BlockManager/BlockMode OnlySelector
void Pathfinding::BlockManager::BlockMode::_set_OnlySelector(::Pathfinding::BlockManager::BlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::BlockMode::_set_OnlySelector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "BlockManager/BlockMode", "OnlySelector", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::BlockManager::BlockMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::BlockMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.BlockManager/TraversalProvider
#include "Pathfinding/BlockManager_TraversalProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.SingleNodeBlocker
#include "Pathfinding/SingleNodeBlocker.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.BlockManager blockManager
[[deprecated("Use field access instead!")]] ::Pathfinding::BlockManager*& Pathfinding::BlockManager::TraversalProvider::dyn_blockManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::TraversalProvider::dyn_blockManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockManager"))->offset;
  return *reinterpret_cast<::Pathfinding::BlockManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.BlockManager/BlockMode <mode>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::BlockManager::BlockMode& Pathfinding::BlockManager::TraversalProvider::dyn_$mode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::TraversalProvider::dyn_$mode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<mode>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::BlockManager::BlockMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Pathfinding.SingleNodeBlocker> selector
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::SingleNodeBlocker*>*& Pathfinding::BlockManager::TraversalProvider::dyn_selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::TraversalProvider::dyn_selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selector"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::SingleNodeBlocker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.BlockManager/TraversalProvider.get_mode
::Pathfinding::BlockManager::BlockMode Pathfinding::BlockManager::TraversalProvider::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::TraversalProvider::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::BlockManager::BlockMode, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.BlockManager/TraversalProvider.set_mode
void Pathfinding::BlockManager::TraversalProvider::set_mode(::Pathfinding::BlockManager::BlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::TraversalProvider::set_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.BlockManager/TraversalProvider.CanTraverse
bool Pathfinding::BlockManager::TraversalProvider::CanTraverse(::Pathfinding::Path* path, ::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::TraversalProvider::CanTraverse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::BlockManager::TraversalProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path, node);
}
// Autogenerated method: Pathfinding.BlockManager/TraversalProvider.GetTraversalCost
uint Pathfinding::BlockManager::TraversalProvider::GetTraversalCost(::Pathfinding::Path* path, ::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::TraversalProvider::GetTraversalCost");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::BlockManager::TraversalProvider*), 5));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, path, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.BlockManager/<>c__DisplayClass6_0
#include "Pathfinding/BlockManager_--c__DisplayClass6_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.SingleNodeBlocker
#include "Pathfinding/SingleNodeBlocker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.BlockManager <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::BlockManager*& Pathfinding::BlockManager::$$c__DisplayClass6_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::$$c__DisplayClass6_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::BlockManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode node
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::BlockManager::$$c__DisplayClass6_0::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::$$c__DisplayClass6_0::dyn_node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.SingleNodeBlocker blocker
[[deprecated("Use field access instead!")]] ::Pathfinding::SingleNodeBlocker*& Pathfinding::BlockManager::$$c__DisplayClass6_0::dyn_blocker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::$$c__DisplayClass6_0::dyn_blocker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blocker"))->offset;
  return *reinterpret_cast<::Pathfinding::SingleNodeBlocker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.BlockManager/<>c__DisplayClass6_0.<InternalBlock>b__0
void Pathfinding::BlockManager::$$c__DisplayClass6_0::$InternalBlock$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::$$c__DisplayClass6_0::<InternalBlock>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InternalBlock>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.BlockManager/<>c__DisplayClass7_0
#include "Pathfinding/BlockManager_--c__DisplayClass7_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.SingleNodeBlocker
#include "Pathfinding/SingleNodeBlocker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.BlockManager <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::BlockManager*& Pathfinding::BlockManager::$$c__DisplayClass7_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::$$c__DisplayClass7_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::BlockManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode node
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::BlockManager::$$c__DisplayClass7_0::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::$$c__DisplayClass7_0::dyn_node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.SingleNodeBlocker blocker
[[deprecated("Use field access instead!")]] ::Pathfinding::SingleNodeBlocker*& Pathfinding::BlockManager::$$c__DisplayClass7_0::dyn_blocker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::$$c__DisplayClass7_0::dyn_blocker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blocker"))->offset;
  return *reinterpret_cast<::Pathfinding::SingleNodeBlocker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.BlockManager/<>c__DisplayClass7_0.<InternalUnblock>b__0
void Pathfinding::BlockManager::$$c__DisplayClass7_0::$InternalUnblock$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BlockManager::$$c__DisplayClass7_0::<InternalUnblock>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InternalUnblock>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.SingleNodeBlocker
#include "Pathfinding/SingleNodeBlocker.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.BlockManager
#include "Pathfinding/BlockManager.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GraphNode <lastBlocked>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::SingleNodeBlocker::dyn_$lastBlocked$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SingleNodeBlocker::dyn_$lastBlocked$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lastBlocked>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.BlockManager manager
[[deprecated("Use field access instead!")]] ::Pathfinding::BlockManager*& Pathfinding::SingleNodeBlocker::dyn_manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SingleNodeBlocker::dyn_manager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "manager"))->offset;
  return *reinterpret_cast<::Pathfinding::BlockManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.SingleNodeBlocker.get_lastBlocked
::Pathfinding::GraphNode* Pathfinding::SingleNodeBlocker::get_lastBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SingleNodeBlocker::get_lastBlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastBlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.SingleNodeBlocker.set_lastBlocked
void Pathfinding::SingleNodeBlocker::set_lastBlocked(::Pathfinding::GraphNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SingleNodeBlocker::set_lastBlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lastBlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.SingleNodeBlocker.BlockAtCurrentPosition
void Pathfinding::SingleNodeBlocker::BlockAtCurrentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SingleNodeBlocker::BlockAtCurrentPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockAtCurrentPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.SingleNodeBlocker.BlockAt
void Pathfinding::SingleNodeBlocker::BlockAt(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SingleNodeBlocker::BlockAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.SingleNodeBlocker.Block
void Pathfinding::SingleNodeBlocker::Block(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SingleNodeBlocker::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.SingleNodeBlocker.Unblock
void Pathfinding::SingleNodeBlocker::Unblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SingleNodeBlocker::Unblock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AstarProfiler
#include "Pathfinding/AstarProfiler.hpp"
// Including type: Pathfinding.AstarProfiler/ProfilePoint
#include "Pathfinding/AstarProfiler_ProfilePoint.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,Pathfinding.AstarProfiler/ProfilePoint> profiles
::System::Collections::Generic::Dictionary_2<::StringW, ::Pathfinding::AstarProfiler::ProfilePoint*>* Pathfinding::AstarProfiler::_get_profiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_get_profiles");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::Pathfinding::AstarProfiler::ProfilePoint*>*>("Pathfinding", "AstarProfiler", "profiles")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,Pathfinding.AstarProfiler/ProfilePoint> profiles
void Pathfinding::AstarProfiler::_set_profiles(::System::Collections::Generic::Dictionary_2<::StringW, ::Pathfinding::AstarProfiler::ProfilePoint*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_set_profiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AstarProfiler", "profiles", value));
}
// Autogenerated static field getter
// Get static field: static private System.DateTime startTime
::System::DateTime Pathfinding::AstarProfiler::_get_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_get_startTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("Pathfinding", "AstarProfiler", "startTime"));
}
// Autogenerated static field setter
// Set static field: static private System.DateTime startTime
void Pathfinding::AstarProfiler::_set_startTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_set_startTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AstarProfiler", "startTime", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.AstarProfiler/ProfilePoint[] fastProfiles
::ArrayW<::Pathfinding::AstarProfiler::ProfilePoint*> Pathfinding::AstarProfiler::_get_fastProfiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_get_fastProfiles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Pathfinding::AstarProfiler::ProfilePoint*>>("Pathfinding", "AstarProfiler", "fastProfiles"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.AstarProfiler/ProfilePoint[] fastProfiles
void Pathfinding::AstarProfiler::_set_fastProfiles(::ArrayW<::Pathfinding::AstarProfiler::ProfilePoint*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_set_fastProfiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AstarProfiler", "fastProfiles", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] fastProfileNames
::ArrayW<::StringW> Pathfinding::AstarProfiler::_get_fastProfileNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_get_fastProfileNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Pathfinding", "AstarProfiler", "fastProfileNames"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] fastProfileNames
void Pathfinding::AstarProfiler::_set_fastProfileNames(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_set_fastProfileNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AstarProfiler", "fastProfileNames", value));
}
// Autogenerated method: Pathfinding.AstarProfiler.InitializeFastProfile
void Pathfinding::AstarProfiler::InitializeFastProfile(::ArrayW<::StringW> profileNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::InitializeFastProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "InitializeFastProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(profileNames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, profileNames);
}
// Autogenerated method: Pathfinding.AstarProfiler.StartFastProfile
void Pathfinding::AstarProfiler::StartFastProfile(int tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::StartFastProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "StartFastProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Pathfinding.AstarProfiler.EndFastProfile
void Pathfinding::AstarProfiler::EndFastProfile(int tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::EndFastProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "EndFastProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Pathfinding.AstarProfiler.EndProfile
void Pathfinding::AstarProfiler::EndProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::EndProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "EndProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.AstarProfiler.StartProfile
void Pathfinding::AstarProfiler::StartProfile(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::StartProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "StartProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Pathfinding.AstarProfiler.EndProfile
void Pathfinding::AstarProfiler::EndProfile(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::EndProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "EndProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Pathfinding.AstarProfiler.Reset
void Pathfinding::AstarProfiler::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.AstarProfiler.PrintFastResults
void Pathfinding::AstarProfiler::PrintFastResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::PrintFastResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "PrintFastResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.AstarProfiler.PrintResults
void Pathfinding::AstarProfiler::PrintResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::PrintResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "PrintResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.AstarProfiler..cctor
void Pathfinding::AstarProfiler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AstarProfiler/ProfilePoint
#include "Pathfinding/AstarProfiler_ProfilePoint.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Diagnostics.Stopwatch watch
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& Pathfinding::AstarProfiler::ProfilePoint::dyn_watch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::ProfilePoint::dyn_watch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watch"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 totalCalls
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarProfiler::ProfilePoint::dyn_totalCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::ProfilePoint::dyn_totalCalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalCalls"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 tmpBytes
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::AstarProfiler::ProfilePoint::dyn_tmpBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::ProfilePoint::dyn_tmpBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tmpBytes"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 totalBytes
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::AstarProfiler::ProfilePoint::dyn_totalBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::ProfilePoint::dyn_totalBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalBytes"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.DynamicGridObstacle
#include "Pathfinding/DynamicGridObstacle.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider coll
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& Pathfinding::DynamicGridObstacle::dyn_coll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::dyn_coll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coll"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider2D coll2D
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider2D*& Pathfinding::DynamicGridObstacle::dyn_coll2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::dyn_coll2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coll2D"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform tr
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::DynamicGridObstacle::dyn_tr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::dyn_tr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tr"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single updateError
[[deprecated("Use field access instead!")]] float& Pathfinding::DynamicGridObstacle::dyn_updateError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::dyn_updateError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateError"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single checkTime
[[deprecated("Use field access instead!")]] float& Pathfinding::DynamicGridObstacle::dyn_checkTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::dyn_checkTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bounds prevBounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& Pathfinding::DynamicGridObstacle::dyn_prevBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::dyn_prevBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevBounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion prevRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Pathfinding::DynamicGridObstacle::dyn_prevRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::dyn_prevRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean prevEnabled
[[deprecated("Use field access instead!")]] bool& Pathfinding::DynamicGridObstacle::dyn_prevEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::dyn_prevEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastCheckTime
[[deprecated("Use field access instead!")]] float& Pathfinding::DynamicGridObstacle::dyn_lastCheckTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::dyn_lastCheckTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCheckTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<Pathfinding.GraphUpdateObject> pendingGraphUpdates
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Pathfinding::GraphUpdateObject*>*& Pathfinding::DynamicGridObstacle::dyn_pendingGraphUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::dyn_pendingGraphUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pendingGraphUpdates"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Pathfinding::GraphUpdateObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.DynamicGridObstacle.get_bounds
::UnityEngine::Bounds Pathfinding::DynamicGridObstacle::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::get_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.DynamicGridObstacle.get_colliderEnabled
bool Pathfinding::DynamicGridObstacle::get_colliderEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::get_colliderEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colliderEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.DynamicGridObstacle.Update
void Pathfinding::DynamicGridObstacle::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.DynamicGridObstacle.DoUpdateGraphs
void Pathfinding::DynamicGridObstacle::DoUpdateGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::DoUpdateGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoUpdateGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.DynamicGridObstacle.BoundsVolume
float Pathfinding::DynamicGridObstacle::BoundsVolume(::UnityEngine::Bounds b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::BoundsVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "DynamicGridObstacle", "BoundsVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b);
}
// Autogenerated method: Pathfinding.DynamicGridObstacle.Awake
void Pathfinding::DynamicGridObstacle::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.DynamicGridObstacle.OnPostScan
void Pathfinding::DynamicGridObstacle::OnPostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::OnPostScan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.DynamicGridObstacle.OnDisable
void Pathfinding::DynamicGridObstacle::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::DynamicGridObstacle::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Funnel
#include "Pathfinding/Funnel.hpp"
// Including type: Pathfinding.Funnel/FunnelPortals
#include "Pathfinding/Funnel_FunnelPortals.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Funnel.SplitIntoParts
::System::Collections::Generic::List_1<::Pathfinding::Funnel::PathPart>* Pathfinding::Funnel::SplitIntoParts(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Funnel::SplitIntoParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Funnel", "SplitIntoParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::Funnel::PathPart>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Pathfinding.Funnel.ConstructFunnelPortals
::Pathfinding::Funnel::FunnelPortals Pathfinding::Funnel::ConstructFunnelPortals(::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* nodes, ::Pathfinding::Funnel::PathPart part) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Funnel::ConstructFunnelPortals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Funnel", "ConstructFunnelPortals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(part)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Funnel::FunnelPortals, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodes, part);
}
// Autogenerated method: Pathfinding.Funnel.ShrinkPortals
void Pathfinding::Funnel::ShrinkPortals(::Pathfinding::Funnel::FunnelPortals portals, float shrink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Funnel::ShrinkPortals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Funnel", "ShrinkPortals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(portals), ::il2cpp_utils::ExtractType(shrink)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, portals, shrink);
}
// Autogenerated method: Pathfinding.Funnel.UnwrapHelper
bool Pathfinding::Funnel::UnwrapHelper(::UnityEngine::Vector3 portalStart, ::UnityEngine::Vector3 portalEnd, ::UnityEngine::Vector3 prevPoint, ::UnityEngine::Vector3 nextPoint, ByRef<::UnityEngine::Quaternion> mRot, ByRef<::UnityEngine::Vector3> mOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Funnel::UnwrapHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Funnel", "UnwrapHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(portalStart), ::il2cpp_utils::ExtractType(portalEnd), ::il2cpp_utils::ExtractType(prevPoint), ::il2cpp_utils::ExtractType(nextPoint), ::il2cpp_utils::ExtractType(mRot), ::il2cpp_utils::ExtractType(mOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, portalStart, portalEnd, prevPoint, nextPoint, byref(mRot), byref(mOffset));
}
// Autogenerated method: Pathfinding.Funnel.Unwrap
void Pathfinding::Funnel::Unwrap(::Pathfinding::Funnel::FunnelPortals funnel, ::ArrayW<::UnityEngine::Vector2> left, ::ArrayW<::UnityEngine::Vector2> right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Funnel::Unwrap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Funnel", "Unwrap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(funnel), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, funnel, left, right);
}
// Autogenerated method: Pathfinding.Funnel.FixFunnel
int Pathfinding::Funnel::FixFunnel(::ArrayW<::UnityEngine::Vector2> left, ::ArrayW<::UnityEngine::Vector2> right, int numPortals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Funnel::FixFunnel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Funnel", "FixFunnel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(numPortals)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, numPortals);
}
// Autogenerated method: Pathfinding.Funnel.ToXZ
::UnityEngine::Vector2 Pathfinding::Funnel::ToXZ(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Funnel::ToXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Funnel", "ToXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p);
}
// Autogenerated method: Pathfinding.Funnel.FromXZ
::UnityEngine::Vector3 Pathfinding::Funnel::FromXZ(::UnityEngine::Vector2 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Funnel::FromXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Funnel", "FromXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p);
}
// Autogenerated method: Pathfinding.Funnel.RightOrColinear
bool Pathfinding::Funnel::RightOrColinear(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Funnel::RightOrColinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Funnel", "RightOrColinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.Funnel.LeftOrColinear
bool Pathfinding::Funnel::LeftOrColinear(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Funnel::LeftOrColinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Funnel", "LeftOrColinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.Funnel.Calculate
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::Funnel::Calculate(::Pathfinding::Funnel::FunnelPortals funnel, bool unwrap, bool splitAtEveryPortal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Funnel::Calculate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Funnel", "Calculate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(funnel), ::il2cpp_utils::ExtractType(unwrap), ::il2cpp_utils::ExtractType(splitAtEveryPortal)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, funnel, unwrap, splitAtEveryPortal);
}
// Autogenerated method: Pathfinding.Funnel.Calculate
void Pathfinding::Funnel::Calculate(::ArrayW<::UnityEngine::Vector2> left, ::ArrayW<::UnityEngine::Vector2> right, int numPortals, int startIndex, ::System::Collections::Generic::List_1<int>* funnelPath, int maxCorners, ByRef<bool> lastCorner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Funnel::Calculate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Funnel", "Calculate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(numPortals), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(funnelPath), ::il2cpp_utils::ExtractType(maxCorners), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, numPortals, startIndex, funnelPath, maxCorners, byref(lastCorner));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphUpdateUtilities
#include "Pathfinding/GraphUpdateUtilities.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.GraphUpdateUtilities.UpdateGraphsNoBlock
bool Pathfinding::GraphUpdateUtilities::UpdateGraphsNoBlock(::Pathfinding::GraphUpdateObject* guo, ::Pathfinding::GraphNode* node1, ::Pathfinding::GraphNode* node2, bool alwaysRevert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateUtilities::UpdateGraphsNoBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphUpdateUtilities", "UpdateGraphsNoBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guo), ::il2cpp_utils::ExtractType(node1), ::il2cpp_utils::ExtractType(node2), ::il2cpp_utils::ExtractType(alwaysRevert)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guo, node1, node2, alwaysRevert);
}
// Autogenerated method: Pathfinding.GraphUpdateUtilities.UpdateGraphsNoBlock
bool Pathfinding::GraphUpdateUtilities::UpdateGraphsNoBlock(::Pathfinding::GraphUpdateObject* guo, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* nodes, bool alwaysRevert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateUtilities::UpdateGraphsNoBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphUpdateUtilities", "UpdateGraphsNoBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guo), ::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(alwaysRevert)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guo, nodes, alwaysRevert);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathUtilities
#include "Pathfinding/PathUtilities.hpp"
// Including type: Pathfinding.PathUtilities/<>c__DisplayClass3_0
#include "Pathfinding/PathUtilities_--c__DisplayClass3_0.hpp"
// Including type: Pathfinding.PathUtilities/<>c__DisplayClass6_0
#include "Pathfinding/PathUtilities_--c__DisplayClass6_0.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Pathfinding.IRaycastableGraph
#include "Pathfinding/IRaycastableGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Queue`1<Pathfinding.GraphNode> BFSQueue
::System::Collections::Generic::Queue_1<::Pathfinding::GraphNode*>* Pathfinding::PathUtilities::_get_BFSQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::_get_BFSQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Queue_1<::Pathfinding::GraphNode*>*>("Pathfinding", "PathUtilities", "BFSQueue"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Queue`1<Pathfinding.GraphNode> BFSQueue
void Pathfinding::PathUtilities::_set_BFSQueue(::System::Collections::Generic::Queue_1<::Pathfinding::GraphNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::_set_BFSQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathUtilities", "BFSQueue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<Pathfinding.GraphNode,System.Int32> BFSMap
::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, int>* Pathfinding::PathUtilities::_get_BFSMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::_get_BFSMap");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, int>*>("Pathfinding", "PathUtilities", "BFSMap")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<Pathfinding.GraphNode,System.Int32> BFSMap
void Pathfinding::PathUtilities::_set_BFSMap(::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::_set_BFSMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathUtilities", "BFSMap", value));
}
// Autogenerated method: Pathfinding.PathUtilities.IsPathPossible
bool Pathfinding::PathUtilities::IsPathPossible(::Pathfinding::GraphNode* node1, ::Pathfinding::GraphNode* node2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::IsPathPossible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "IsPathPossible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node1), ::il2cpp_utils::ExtractType(node2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node1, node2);
}
// Autogenerated method: Pathfinding.PathUtilities.IsPathPossible
bool Pathfinding::PathUtilities::IsPathPossible(::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* nodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::IsPathPossible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "IsPathPossible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodes);
}
// Autogenerated method: Pathfinding.PathUtilities.IsPathPossible
bool Pathfinding::PathUtilities::IsPathPossible(::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* nodes, int tagMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::IsPathPossible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "IsPathPossible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(tagMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodes, tagMask);
}
// Autogenerated method: Pathfinding.PathUtilities.GetReachableNodes
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::PathUtilities::GetReachableNodes(::Pathfinding::GraphNode* seed, int tagMask, ::System::Func_2<::Pathfinding::GraphNode*, bool>* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::GetReachableNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "GetReachableNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seed), ::il2cpp_utils::ExtractType(tagMask), ::il2cpp_utils::ExtractType(filter)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seed, tagMask, filter);
}
// Autogenerated method: Pathfinding.PathUtilities.BFS
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::PathUtilities::BFS(::Pathfinding::GraphNode* seed, int depth, int tagMask, ::System::Func_2<::Pathfinding::GraphNode*, bool>* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::BFS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "BFS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seed), ::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(tagMask), ::il2cpp_utils::ExtractType(filter)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seed, depth, tagMask, filter);
}
// Autogenerated method: Pathfinding.PathUtilities.GetSpiralPoints
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::PathUtilities::GetSpiralPoints(int count, float clearance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::GetSpiralPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "GetSpiralPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(clearance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, count, clearance);
}
// Autogenerated method: Pathfinding.PathUtilities.InvoluteOfCircle
::UnityEngine::Vector3 Pathfinding::PathUtilities::InvoluteOfCircle(float a, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::InvoluteOfCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "InvoluteOfCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, t);
}
// Autogenerated method: Pathfinding.PathUtilities.GetPointsAroundPointWorld
void Pathfinding::PathUtilities::GetPointsAroundPointWorld(::UnityEngine::Vector3 p, ::Pathfinding::IRaycastableGraph* g, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* previousPoints, float radius, float clearanceRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::GetPointsAroundPointWorld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "GetPointsAroundPointWorld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(previousPoints), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(clearanceRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, g, previousPoints, radius, clearanceRadius);
}
// Autogenerated method: Pathfinding.PathUtilities.GetPointsAroundPoint
void Pathfinding::PathUtilities::GetPointsAroundPoint(::UnityEngine::Vector3 center, ::Pathfinding::IRaycastableGraph* g, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* previousPoints, float radius, float clearanceRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::GetPointsAroundPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "GetPointsAroundPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(previousPoints), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(clearanceRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, g, previousPoints, radius, clearanceRadius);
}
// Autogenerated method: Pathfinding.PathUtilities.GetPointsOnNodes
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::PathUtilities::GetPointsOnNodes(::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* nodes, int count, float clearanceRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::GetPointsOnNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "GetPointsOnNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(clearanceRadius)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodes, count, clearanceRadius);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathUtilities/<>c__DisplayClass3_0
#include "Pathfinding/PathUtilities_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.HashSet`1<Pathfinding.GraphNode> map
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Pathfinding::GraphNode*>*& Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_map");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "map"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.GraphNode> reachable
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_reachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_reachable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reachable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Stack`1<Pathfinding.GraphNode> dfsStack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::Pathfinding::GraphNode*>*& Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_dfsStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_dfsStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dfsStack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tagMask
[[deprecated("Use field access instead!")]] int& Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_tagMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_tagMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Pathfinding.GraphNode,System.Boolean> filter
[[deprecated("Use field access instead!")]] ::System::Func_2<::Pathfinding::GraphNode*, bool>*& Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_filter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filter"))->offset;
  return *reinterpret_cast<::System::Func_2<::Pathfinding::GraphNode*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathUtilities/<>c__DisplayClass3_0.<GetReachableNodes>b__0
void Pathfinding::PathUtilities::$$c__DisplayClass3_0::$GetReachableNodes$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass3_0::<GetReachableNodes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetReachableNodes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PathUtilities/<>c__DisplayClass3_0.<GetReachableNodes>b__1
void Pathfinding::PathUtilities::$$c__DisplayClass3_0::$GetReachableNodes$b__1(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass3_0::<GetReachableNodes>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetReachableNodes>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathUtilities/<>c__DisplayClass6_0
#include "Pathfinding/PathUtilities_--c__DisplayClass6_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<Pathfinding.GraphNode,System.Int32> map
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, int>*& Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_map");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "map"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Pathfinding.GraphNode,System.Boolean> filter
[[deprecated("Use field access instead!")]] ::System::Func_2<::Pathfinding::GraphNode*, bool>*& Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_filter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filter"))->offset;
  return *reinterpret_cast<::System::Func_2<::Pathfinding::GraphNode*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentDist
[[deprecated("Use field access instead!")]] int& Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_currentDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_currentDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentDist"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.GraphNode> result
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Queue`1<Pathfinding.GraphNode> que
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Pathfinding::GraphNode*>*& Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_que() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_que");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "que"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tagMask
[[deprecated("Use field access instead!")]] int& Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_tagMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_tagMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathUtilities/<>c__DisplayClass6_0.<BFS>b__0
void Pathfinding::PathUtilities::$$c__DisplayClass6_0::$BFS$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass6_0::<BFS>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BFS>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PathUtilities/<>c__DisplayClass6_0.<BFS>b__1
void Pathfinding::PathUtilities::$$c__DisplayClass6_0::$BFS$b__1(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass6_0::<BFS>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BFS>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ProceduralGridMover
#include "Pathfinding/ProceduralGridMover.hpp"
// Including type: Pathfinding.ProceduralGridMover/<>c__DisplayClass12_0
#include "Pathfinding/ProceduralGridMover_--c__DisplayClass12_0.hpp"
// Including type: Pathfinding.ProceduralGridMover/<UpdateGraphCoroutine>d__13
#include "Pathfinding/ProceduralGridMover_-UpdateGraphCoroutine-d__13.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Pathfinding.GridNodeBase
#include "Pathfinding/GridNodeBase.hpp"
// Including type: Pathfinding.GridGraph
#include "Pathfinding/GridGraph.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single updateDistance
[[deprecated("Use field access instead!")]] float& Pathfinding::ProceduralGridMover::dyn_updateDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::dyn_updateDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::ProceduralGridMover::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GridNodeBase[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GridNodeBase*>& Pathfinding::ProceduralGridMover::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GridNodeBase*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <updatingGraph>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::ProceduralGridMover::dyn_$updatingGraph$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::dyn_$updatingGraph$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<updatingGraph>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GridGraph graph
[[deprecated("Use field access instead!")]] ::Pathfinding::GridGraph*& Pathfinding::ProceduralGridMover::dyn_graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::dyn_graph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graph"))->offset;
  return *reinterpret_cast<::Pathfinding::GridGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 graphIndex
[[deprecated("Use field access instead!")]] int& Pathfinding::ProceduralGridMover::dyn_graphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::dyn_graphIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.ProceduralGridMover.get_updatingGraph
bool Pathfinding::ProceduralGridMover::get_updatingGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::get_updatingGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_updatingGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ProceduralGridMover.set_updatingGraph
void Pathfinding::ProceduralGridMover::set_updatingGraph(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::set_updatingGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_updatingGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.ProceduralGridMover.Start
void Pathfinding::ProceduralGridMover::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ProceduralGridMover.Update
void Pathfinding::ProceduralGridMover::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ProceduralGridMover.PointToGraphSpace
::UnityEngine::Vector3 Pathfinding::ProceduralGridMover::PointToGraphSpace(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::PointToGraphSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointToGraphSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.ProceduralGridMover.UpdateGraph
void Pathfinding::ProceduralGridMover::UpdateGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::UpdateGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ProceduralGridMover.UpdateGraphCoroutine
::System::Collections::IEnumerator* Pathfinding::ProceduralGridMover::UpdateGraphCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::UpdateGraphCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGraphCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ProceduralGridMover/<>c__DisplayClass12_0
#include "Pathfinding/ProceduralGridMover_--c__DisplayClass12_0.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Pathfinding.IWorkItemContext
#include "Pathfinding/IWorkItemContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.IEnumerator ie
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& Pathfinding::ProceduralGridMover::$$c__DisplayClass12_0::dyn_ie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$$c__DisplayClass12_0::dyn_ie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ie"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ProceduralGridMover <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::ProceduralGridMover*& Pathfinding::ProceduralGridMover::$$c__DisplayClass12_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$$c__DisplayClass12_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::ProceduralGridMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.ProceduralGridMover/<>c__DisplayClass12_0.<UpdateGraph>b__0
bool Pathfinding::ProceduralGridMover::$$c__DisplayClass12_0::$UpdateGraph$b__0(::Pathfinding::IWorkItemContext* context, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$$c__DisplayClass12_0::<UpdateGraph>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateGraph>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(force)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, force);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.ProceduralGridMover/<UpdateGraphCoroutine>d__13
#include "Pathfinding/ProceduralGridMover_-UpdateGraphCoroutine-d__13.hpp"
// Including type: Pathfinding.GridNodeBase
#include "Pathfinding/GridNodeBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ProceduralGridMover <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::ProceduralGridMover*& Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::ProceduralGridMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Int2 <offset>5__2
[[deprecated("Use field access instead!")]] ::Pathfinding::Int2& Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$offset$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$offset$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<offset>5__2"))->offset;
  return *reinterpret_cast<::Pathfinding::Int2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <width>5__3
[[deprecated("Use field access instead!")]] int& Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$width$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$width$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<width>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <depth>5__4
[[deprecated("Use field access instead!")]] int& Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$depth$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$depth$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<depth>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GridNodeBase[] <nodes>5__5
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GridNodeBase*>& Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$nodes$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$nodes$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<nodes>5__5"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GridNodeBase*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <layers>5__6
[[deprecated("Use field access instead!")]] int& Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$layers$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$layers$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<layers>5__6"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.IntRect <recalculateRect>5__7
[[deprecated("Use field access instead!")]] ::Pathfinding::IntRect& Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$recalculateRect$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$recalculateRect$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<recalculateRect>5__7"))->offset;
  return *reinterpret_cast<::Pathfinding::IntRect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.IntRect <connectionRect>5__8
[[deprecated("Use field access instead!")]] ::Pathfinding::IntRect& Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$connectionRect$5__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$connectionRect$5__8");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<connectionRect>5__8"))->offset;
  return *reinterpret_cast<::Pathfinding::IntRect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <yieldEvery>5__9
[[deprecated("Use field access instead!")]] int& Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$yieldEvery$5__9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$yieldEvery$5__9");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<yieldEvery>5__9"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <counter>5__10
[[deprecated("Use field access instead!")]] int& Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$counter$5__10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$counter$5__10");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<counter>5__10"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <l>5__11
[[deprecated("Use field access instead!")]] int& Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$l$5__11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$l$5__11");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<l>5__11"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <layerOffset>5__12
[[deprecated("Use field access instead!")]] int& Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$layerOffset$5__12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$layerOffset$5__12");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<layerOffset>5__12"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.ProceduralGridMover/<UpdateGraphCoroutine>d__13.System.IDisposable.Dispose
void Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ProceduralGridMover/<UpdateGraphCoroutine>d__13.MoveNext
bool Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ProceduralGridMover/<UpdateGraphCoroutine>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ProceduralGridMover/<UpdateGraphCoroutine>d__13.System.Collections.IEnumerator.Reset
void Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ProceduralGridMover/<UpdateGraphCoroutine>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ProceduralGridMover::$UpdateGraphCoroutine$d__13*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Profile
#include "Pathfinding/Profile.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean PROFILE_MEM
bool Pathfinding::Profile::_get_PROFILE_MEM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::_get_PROFILE_MEM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Pathfinding", "Profile", "PROFILE_MEM"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean PROFILE_MEM
void Pathfinding::Profile::_set_PROFILE_MEM(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::_set_PROFILE_MEM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Profile", "PROFILE_MEM", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean dontCountFirst
bool Pathfinding::Profile::_get_dontCountFirst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::_get_dontCountFirst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Pathfinding", "Profile", "dontCountFirst"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean dontCountFirst
void Pathfinding::Profile::_set_dontCountFirst(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::_set_dontCountFirst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Profile", "dontCountFirst", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::Profile::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.Stopwatch watch
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& Pathfinding::Profile::dyn_watch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::dyn_watch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watch"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 counter
[[deprecated("Use field access instead!")]] int& Pathfinding::Profile::dyn_counter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::dyn_counter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "counter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 mem
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::Profile::dyn_mem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::dyn_mem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mem"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 smem
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::Profile::dyn_smem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::dyn_smem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smem"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 control
[[deprecated("Use field access instead!")]] int& Pathfinding::Profile::dyn_control() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::dyn_control");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "control"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Profile.ControlValue
int Pathfinding::Profile::ControlValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::ControlValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ControlValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Profile.WriteCSV
void Pathfinding::Profile::WriteCSV(::StringW path, ::ArrayW<::Pathfinding::Profile*> profiles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::WriteCSV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Profile", "WriteCSV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(profiles)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, profiles);
}
// Autogenerated method: Pathfinding.Profile.Run
void Pathfinding::Profile::Run(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Pathfinding.Profile.Start
void Pathfinding::Profile::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Profile.Stop
void Pathfinding::Profile::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Profile.Log
void Pathfinding::Profile::Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Profile.ConsoleLog
void Pathfinding::Profile::ConsoleLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::ConsoleLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConsoleLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Profile.Stop
void Pathfinding::Profile::Stop(int control) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(control)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, control);
}
// Autogenerated method: Pathfinding.Profile.Control
void Pathfinding::Profile::Control(::Pathfinding::Profile* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::Control");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Control", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: Pathfinding.Profile.ToString
::StringW Pathfinding::Profile::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.UnityReferenceHelper
#include "Pathfinding/UnityReferenceHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String guid
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::UnityReferenceHelper::dyn_guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::UnityReferenceHelper::dyn_guid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "guid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.UnityReferenceHelper.GetGUID
::StringW Pathfinding::UnityReferenceHelper::GetGUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::UnityReferenceHelper::GetGUID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGUID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.UnityReferenceHelper.Awake
void Pathfinding::UnityReferenceHelper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::UnityReferenceHelper::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.UnityReferenceHelper.Reset
void Pathfinding::UnityReferenceHelper::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::UnityReferenceHelper::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Legacy.LegacyAIPath
#include "Pathfinding/Legacy/LegacyAIPath.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single forwardLook
[[deprecated("Use field access instead!")]] float& Pathfinding::Legacy::LegacyAIPath::dyn_forwardLook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyAIPath::dyn_forwardLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forwardLook"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean closestOnPathCheck
[[deprecated("Use field access instead!")]] bool& Pathfinding::Legacy::LegacyAIPath::dyn_closestOnPathCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyAIPath::dyn_closestOnPathCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closestOnPathCheck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single minMoveScale
[[deprecated("Use field access instead!")]] float& Pathfinding::Legacy::LegacyAIPath::dyn_minMoveScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyAIPath::dyn_minMoveScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minMoveScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 currentWaypointIndex
[[deprecated("Use field access instead!")]] int& Pathfinding::Legacy::LegacyAIPath::dyn_currentWaypointIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyAIPath::dyn_currentWaypointIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentWaypointIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 lastFoundWaypointPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Legacy::LegacyAIPath::dyn_lastFoundWaypointPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyAIPath::dyn_lastFoundWaypointPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastFoundWaypointPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single lastFoundWaypointTime
[[deprecated("Use field access instead!")]] float& Pathfinding::Legacy::LegacyAIPath::dyn_lastFoundWaypointTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyAIPath::dyn_lastFoundWaypointTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastFoundWaypointTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 targetDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Legacy::LegacyAIPath::dyn_targetDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyAIPath::dyn_targetDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Legacy.LegacyAIPath.XZSqrMagnitude
float Pathfinding::Legacy::LegacyAIPath::XZSqrMagnitude(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyAIPath::XZSqrMagnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "XZSqrMagnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.Legacy.LegacyAIPath.RotateTowards
void Pathfinding::Legacy::LegacyAIPath::RotateTowards(::UnityEngine::Vector3 dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyAIPath::RotateTowards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateTowards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dir);
}
// Autogenerated method: Pathfinding.Legacy.LegacyAIPath.CalculateTargetPoint
::UnityEngine::Vector3 Pathfinding::Legacy::LegacyAIPath::CalculateTargetPoint(::UnityEngine::Vector3 p, ::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyAIPath::CalculateTargetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTargetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p, a, b);
}
// Autogenerated method: Pathfinding.Legacy.LegacyAIPath.Awake
void Pathfinding::Legacy::LegacyAIPath::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyAIPath::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Legacy.LegacyAIPath.OnPathComplete
void Pathfinding::Legacy::LegacyAIPath::OnPathComplete(::Pathfinding::Path* _p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyAIPath::OnPathComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _p);
}
// Autogenerated method: Pathfinding.Legacy.LegacyAIPath.Update
void Pathfinding::Legacy::LegacyAIPath::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyAIPath::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Legacy.LegacyAIPath.CalculateVelocity
::UnityEngine::Vector3 Pathfinding::Legacy::LegacyAIPath::CalculateVelocity(::UnityEngine::Vector3 currentPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyAIPath::CalculateVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, currentPosition);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Legacy.LegacyRichAI
#include "Pathfinding/Legacy/LegacyRichAI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single deltaTime
float Pathfinding::Legacy::LegacyRichAI::_get_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyRichAI::_get_deltaTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pathfinding.Legacy", "LegacyRichAI", "deltaTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single deltaTime
void Pathfinding::Legacy::LegacyRichAI::_set_deltaTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyRichAI::_set_deltaTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Legacy", "LegacyRichAI", "deltaTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean preciseSlowdown
[[deprecated("Use field access instead!")]] bool& Pathfinding::Legacy::LegacyRichAI::dyn_preciseSlowdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyRichAI::dyn_preciseSlowdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preciseSlowdown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean raycastingForGroundPlacement
[[deprecated("Use field access instead!")]] bool& Pathfinding::Legacy::LegacyRichAI::dyn_raycastingForGroundPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyRichAI::dyn_raycastingForGroundPlacement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycastingForGroundPlacement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Legacy::LegacyRichAI::dyn_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyRichAI::dyn_velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastTargetPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Legacy::LegacyRichAI::dyn_lastTargetPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyRichAI::dyn_lastTargetPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTargetPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 currentTargetDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Legacy::LegacyRichAI::dyn_currentTargetDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyRichAI::dyn_currentTargetDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTargetDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Legacy.LegacyRichAI.RotateTowards
bool Pathfinding::Legacy::LegacyRichAI::RotateTowards(::UnityEngine::Vector3 trotdir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyRichAI::RotateTowards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateTowards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trotdir)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, trotdir);
}
// Autogenerated method: Pathfinding.Legacy.LegacyRichAI.Awake
void Pathfinding::Legacy::LegacyRichAI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyRichAI::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Legacy.LegacyRichAI.Update
void Pathfinding::Legacy::LegacyRichAI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyRichAI::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Legacy.LegacyRichAI.RaycastPosition
::UnityEngine::Vector3 Pathfinding::Legacy::LegacyRichAI::RaycastPosition(::UnityEngine::Vector3 position, float lasty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyRichAI::RaycastPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaycastPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(lasty)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position, lasty);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Legacy.LegacyRVOController
#include "Pathfinding/Legacy/LegacyRVOController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask mask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::Legacy::LegacyRVOController::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyRVOController::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableRotation
[[deprecated("Use field access instead!")]] bool& Pathfinding::Legacy::LegacyRVOController::dyn_enableRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyRVOController::dyn_enableRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::Legacy::LegacyRVOController::dyn_rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyRVOController::dyn_rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Legacy.LegacyRVOController.Update
void Pathfinding::Legacy::LegacyRVOController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Legacy::LegacyRVOController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Voxels.VoxelArea
#include "Pathfinding/Voxels/VoxelArea.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 MaxHeight
uint Pathfinding::Voxels::VoxelArea::_get_MaxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::_get_MaxHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding.Voxels", "VoxelArea", "MaxHeight"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 MaxHeight
void Pathfinding::Voxels::VoxelArea::_set_MaxHeight(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::_set_MaxHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "VoxelArea", "MaxHeight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxHeightInt
int Pathfinding::Voxels::VoxelArea::_get_MaxHeightInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::_get_MaxHeightInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Voxels", "VoxelArea", "MaxHeightInt"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxHeightInt
void Pathfinding::Voxels::VoxelArea::_set_MaxHeightInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::_set_MaxHeightInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "VoxelArea", "MaxHeightInt", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 InvalidSpanValue
uint Pathfinding::Voxels::VoxelArea::_get_InvalidSpanValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::_get_InvalidSpanValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding.Voxels", "VoxelArea", "InvalidSpanValue"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 InvalidSpanValue
void Pathfinding::Voxels::VoxelArea::_set_InvalidSpanValue(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::_set_InvalidSpanValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "VoxelArea", "InvalidSpanValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single AvgSpanLayerCountEstimate
float Pathfinding::Voxels::VoxelArea::_get_AvgSpanLayerCountEstimate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::_get_AvgSpanLayerCountEstimate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pathfinding.Voxels", "VoxelArea", "AvgSpanLayerCountEstimate"));
}
// Autogenerated static field setter
// Set static field: static public System.Single AvgSpanLayerCountEstimate
void Pathfinding::Voxels::VoxelArea::_set_AvgSpanLayerCountEstimate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::_set_AvgSpanLayerCountEstimate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "VoxelArea", "AvgSpanLayerCountEstimate", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 width
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::VoxelArea::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 depth
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::VoxelArea::dyn_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_depth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Voxels.CompactVoxelSpan[] compactSpans
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::Voxels::CompactVoxelSpan>& Pathfinding::Voxels::VoxelArea::dyn_compactSpans() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_compactSpans");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compactSpans"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::Voxels::CompactVoxelSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Voxels.CompactVoxelCell[] compactCells
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::Voxels::CompactVoxelCell>& Pathfinding::Voxels::VoxelArea::dyn_compactCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_compactCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compactCells"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::Voxels::CompactVoxelCell>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 compactSpanCount
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::VoxelArea::dyn_compactSpanCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_compactSpanCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compactSpanCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16[] tmpUShortArr
[[deprecated("Use field access instead!")]] ::ArrayW<uint16_t>& Pathfinding::Voxels::VoxelArea::dyn_tmpUShortArr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_tmpUShortArr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tmpUShortArr"))->offset;
  return *reinterpret_cast<::ArrayW<uint16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] areaTypes
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Voxels::VoxelArea::dyn_areaTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_areaTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "areaTypes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16[] dist
[[deprecated("Use field access instead!")]] ::ArrayW<uint16_t>& Pathfinding::Voxels::VoxelArea::dyn_dist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_dist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dist"))->offset;
  return *reinterpret_cast<::ArrayW<uint16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 maxDistance
[[deprecated("Use field access instead!")]] uint16_t& Pathfinding::Voxels::VoxelArea::dyn_maxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_maxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistance"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxRegions
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::VoxelArea::dyn_maxRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_maxRegions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRegions"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] DirectionX
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Voxels::VoxelArea::dyn_DirectionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_DirectionX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DirectionX"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] DirectionZ
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Voxels::VoxelArea::dyn_DirectionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_DirectionZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DirectionZ"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] VectorDirection
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Pathfinding::Voxels::VoxelArea::dyn_VectorDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_VectorDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VectorDirection"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linkedSpanCount
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::VoxelArea::dyn_linkedSpanCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_linkedSpanCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkedSpanCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Voxels.LinkedVoxelSpan[] linkedSpans
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::Voxels::LinkedVoxelSpan>& Pathfinding::Voxels::VoxelArea::dyn_linkedSpans() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_linkedSpans");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkedSpans"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::Voxels::LinkedVoxelSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] removedStack
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Voxels::VoxelArea::dyn_removedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_removedStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "removedStack"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 removedStackCount
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::VoxelArea::dyn_removedStackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::dyn_removedStackCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "removedStackCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Voxels.VoxelArea.Reset
void Pathfinding::Voxels::VoxelArea::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Voxels.VoxelArea.ResetLinkedVoxelSpans
void Pathfinding::Voxels::VoxelArea::ResetLinkedVoxelSpans() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::ResetLinkedVoxelSpans");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetLinkedVoxelSpans", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Voxels.VoxelArea.GetSpanCountAll
int Pathfinding::Voxels::VoxelArea::GetSpanCountAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::GetSpanCountAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpanCountAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Voxels.VoxelArea.GetSpanCount
int Pathfinding::Voxels::VoxelArea::GetSpanCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::GetSpanCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpanCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Voxels.VoxelArea.PushToSpanRemovedStack
void Pathfinding::Voxels::VoxelArea::PushToSpanRemovedStack(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::PushToSpanRemovedStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushToSpanRemovedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.Voxels.VoxelArea.AddLinkedSpan
void Pathfinding::Voxels::VoxelArea::AddLinkedSpan(int index, uint bottom, uint top, int area, int voxelWalkableClimb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelArea::AddLinkedSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLinkedSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(bottom), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(area), ::il2cpp_utils::ExtractType(voxelWalkableClimb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, bottom, top, area, voxelWalkableClimb);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Voxels.LinkedVoxelSpan
#include "Pathfinding/Voxels/LinkedVoxelSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 bottom
[[deprecated("Use field access instead!")]] uint& Pathfinding::Voxels::LinkedVoxelSpan::dyn_bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::LinkedVoxelSpan::dyn_bottom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bottom"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 top
[[deprecated("Use field access instead!")]] uint& Pathfinding::Voxels::LinkedVoxelSpan::dyn_top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::LinkedVoxelSpan::dyn_top");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "top"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 next
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::LinkedVoxelSpan::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::LinkedVoxelSpan::dyn_next");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 area
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::LinkedVoxelSpan::dyn_area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::LinkedVoxelSpan::dyn_area");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "area"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Voxels.LinkedVoxelSpan..ctor
Pathfinding::Voxels::LinkedVoxelSpan::LinkedVoxelSpan(uint bottom, uint top, int area) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::LinkedVoxelSpan::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bottom), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(area)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bottom, top, area);
}
// Autogenerated method: Pathfinding.Voxels.LinkedVoxelSpan..ctor
// ABORTED elsewhere.  Pathfinding::Voxels::LinkedVoxelSpan::LinkedVoxelSpan(uint bottom, uint top, int area, int next)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Voxels.RasterizationMesh
#include "Pathfinding/Voxels/RasterizationMesh.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshFilter original
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& Pathfinding::Voxels::RasterizationMesh::dyn_original() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::RasterizationMesh::dyn_original");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "original"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 area
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::RasterizationMesh::dyn_area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::RasterizationMesh::dyn_area");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "area"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] vertices
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Pathfinding::Voxels::RasterizationMesh::dyn_vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::RasterizationMesh::dyn_vertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vertices"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] triangles
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Voxels::RasterizationMesh::dyn_triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::RasterizationMesh::dyn_triangles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triangles"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 numVertices
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::RasterizationMesh::dyn_numVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::RasterizationMesh::dyn_numVertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numVertices"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 numTriangles
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::RasterizationMesh::dyn_numTriangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::RasterizationMesh::dyn_numTriangles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numTriangles"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Bounds bounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& Pathfinding::Voxels::RasterizationMesh::dyn_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::RasterizationMesh::dyn_bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Matrix4x4 matrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Pathfinding::Voxels::RasterizationMesh::dyn_matrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::RasterizationMesh::dyn_matrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean pool
[[deprecated("Use field access instead!")]] bool& Pathfinding::Voxels::RasterizationMesh::dyn_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::RasterizationMesh::dyn_pool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pool"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Voxels.RasterizationMesh.RecalculateBounds
void Pathfinding::Voxels::RasterizationMesh::RecalculateBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::RasterizationMesh::RecalculateBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Voxels.RasterizationMesh.Pool
void Pathfinding::Voxels::RasterizationMesh::Pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::RasterizationMesh::Pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Voxels.VoxelContourSet
#include "Pathfinding/Voxels/VoxelContourSet.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.Voxels.VoxelContour> conts
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::Voxels::VoxelContour>*& Pathfinding::Voxels::VoxelContourSet::dyn_conts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelContourSet::dyn_conts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "conts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::Voxels::VoxelContour>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Bounds bounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& Pathfinding::Voxels::VoxelContourSet::dyn_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelContourSet::dyn_bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Voxels.VoxelCell
#include "Pathfinding/Voxels/VoxelCell.hpp"
// Including type: Pathfinding.Voxels.VoxelSpan
#include "Pathfinding/Voxels/VoxelSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Voxels.VoxelSpan firstSpan
[[deprecated("Use field access instead!")]] ::Pathfinding::Voxels::VoxelSpan*& Pathfinding::Voxels::VoxelCell::dyn_firstSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelCell::dyn_firstSpan");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstSpan"))->offset;
  return *reinterpret_cast<::Pathfinding::Voxels::VoxelSpan**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Voxels.VoxelCell.AddSpan
void Pathfinding::Voxels::VoxelCell::AddSpan(uint bottom, uint top, int area, int voxelWalkableClimb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelCell::AddSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bottom), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(area), ::il2cpp_utils::ExtractType(voxelWalkableClimb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bottom, top, area, voxelWalkableClimb);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Voxels.CompactVoxelCell
#include "Pathfinding/Voxels/CompactVoxelCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 index
[[deprecated("Use field access instead!")]] uint& Pathfinding::Voxels::CompactVoxelCell::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::CompactVoxelCell::dyn_index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 count
[[deprecated("Use field access instead!")]] uint& Pathfinding::Voxels::CompactVoxelCell::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::CompactVoxelCell::dyn_count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Voxels.CompactVoxelCell..ctor
// ABORTED elsewhere.  Pathfinding::Voxels::CompactVoxelCell::CompactVoxelCell(uint i, uint c)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Voxels.CompactVoxelSpan
#include "Pathfinding/Voxels/CompactVoxelSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt16 y
[[deprecated("Use field access instead!")]] uint16_t& Pathfinding::Voxels::CompactVoxelSpan::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::CompactVoxelSpan::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 con
[[deprecated("Use field access instead!")]] uint& Pathfinding::Voxels::CompactVoxelSpan::dyn_con() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::CompactVoxelSpan::dyn_con");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "con"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 h
[[deprecated("Use field access instead!")]] uint& Pathfinding::Voxels::CompactVoxelSpan::dyn_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::CompactVoxelSpan::dyn_h");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "h"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 reg
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::CompactVoxelSpan::dyn_reg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::CompactVoxelSpan::dyn_reg");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reg"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Voxels.CompactVoxelSpan..ctor
Pathfinding::Voxels::CompactVoxelSpan::CompactVoxelSpan(uint16_t bottom, uint height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::CompactVoxelSpan::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bottom), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bottom, height);
}
// Autogenerated method: Pathfinding.Voxels.CompactVoxelSpan.SetConnection
void Pathfinding::Voxels::CompactVoxelSpan::SetConnection(int dir, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::CompactVoxelSpan::SetConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dir, value);
}
// Autogenerated method: Pathfinding.Voxels.CompactVoxelSpan.GetConnection
int Pathfinding::Voxels::CompactVoxelSpan::GetConnection(int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::CompactVoxelSpan::GetConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dir);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Voxels.VoxelSpan
#include "Pathfinding/Voxels/VoxelSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 bottom
[[deprecated("Use field access instead!")]] uint& Pathfinding::Voxels::VoxelSpan::dyn_bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelSpan::dyn_bottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bottom"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 top
[[deprecated("Use field access instead!")]] uint& Pathfinding::Voxels::VoxelSpan::dyn_top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelSpan::dyn_top");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "top"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Voxels.VoxelSpan next
[[deprecated("Use field access instead!")]] ::Pathfinding::Voxels::VoxelSpan*& Pathfinding::Voxels::VoxelSpan::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelSpan::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::Pathfinding::Voxels::VoxelSpan**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 area
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::VoxelSpan::dyn_area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelSpan::dyn_area");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "area"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Voxels.Voxelize
#include "Pathfinding/Voxels/Voxelize.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Voxels.RasterizationMesh
#include "Pathfinding/Voxels/RasterizationMesh.hpp"
// Including type: Pathfinding.Voxels.VoxelArea
#include "Pathfinding/Voxels/VoxelArea.hpp"
// Including type: Pathfinding.Voxels.VoxelContourSet
#include "Pathfinding/Voxels/VoxelContourSet.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
// Including type: Pathfinding.Voxels.VoxelContour
#include "Pathfinding/Voxels/VoxelContour.hpp"
// Including type: Pathfinding.Voxels.VoxelMesh
#include "Pathfinding/Voxels/VoxelMesh.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 NotConnected
uint Pathfinding::Voxels::Voxelize::_get_NotConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_get_NotConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding.Voxels", "Voxelize", "NotConnected"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 NotConnected
void Pathfinding::Voxels::Voxelize::_set_NotConnected(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_set_NotConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "Voxelize", "NotConnected", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxLayers
int Pathfinding::Voxels::Voxelize::_get_MaxLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_get_MaxLayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Voxels", "Voxelize", "MaxLayers"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxLayers
void Pathfinding::Voxels::Voxelize::_set_MaxLayers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_set_MaxLayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "Voxelize", "MaxLayers", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxRegions
int Pathfinding::Voxels::Voxelize::_get_MaxRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_get_MaxRegions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Voxels", "Voxelize", "MaxRegions"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxRegions
void Pathfinding::Voxels::Voxelize::_set_MaxRegions(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_set_MaxRegions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "Voxelize", "MaxRegions", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 UnwalkableArea
int Pathfinding::Voxels::Voxelize::_get_UnwalkableArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_get_UnwalkableArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Voxels", "Voxelize", "UnwalkableArea"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 UnwalkableArea
void Pathfinding::Voxels::Voxelize::_set_UnwalkableArea(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_set_UnwalkableArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "Voxelize", "UnwalkableArea", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt16 BorderReg
uint16_t Pathfinding::Voxels::Voxelize::_get_BorderReg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_get_BorderReg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint16_t>("Pathfinding.Voxels", "Voxelize", "BorderReg"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt16 BorderReg
void Pathfinding::Voxels::Voxelize::_set_BorderReg(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_set_BorderReg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "Voxelize", "BorderReg", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RC_BORDER_VERTEX
int Pathfinding::Voxels::Voxelize::_get_RC_BORDER_VERTEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_get_RC_BORDER_VERTEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Voxels", "Voxelize", "RC_BORDER_VERTEX"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RC_BORDER_VERTEX
void Pathfinding::Voxels::Voxelize::_set_RC_BORDER_VERTEX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_set_RC_BORDER_VERTEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "Voxelize", "RC_BORDER_VERTEX", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RC_AREA_BORDER
int Pathfinding::Voxels::Voxelize::_get_RC_AREA_BORDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_get_RC_AREA_BORDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Voxels", "Voxelize", "RC_AREA_BORDER"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RC_AREA_BORDER
void Pathfinding::Voxels::Voxelize::_set_RC_AREA_BORDER(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_set_RC_AREA_BORDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "Voxelize", "RC_AREA_BORDER", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 VERTEX_BUCKET_COUNT
int Pathfinding::Voxels::Voxelize::_get_VERTEX_BUCKET_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_get_VERTEX_BUCKET_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Voxels", "Voxelize", "VERTEX_BUCKET_COUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 VERTEX_BUCKET_COUNT
void Pathfinding::Voxels::Voxelize::_set_VERTEX_BUCKET_COUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_set_VERTEX_BUCKET_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "Voxelize", "VERTEX_BUCKET_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 RC_CONTOUR_TESS_WALL_EDGES
int Pathfinding::Voxels::Voxelize::_get_RC_CONTOUR_TESS_WALL_EDGES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_get_RC_CONTOUR_TESS_WALL_EDGES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Voxels", "Voxelize", "RC_CONTOUR_TESS_WALL_EDGES"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 RC_CONTOUR_TESS_WALL_EDGES
void Pathfinding::Voxels::Voxelize::_set_RC_CONTOUR_TESS_WALL_EDGES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_set_RC_CONTOUR_TESS_WALL_EDGES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "Voxelize", "RC_CONTOUR_TESS_WALL_EDGES", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 RC_CONTOUR_TESS_AREA_EDGES
int Pathfinding::Voxels::Voxelize::_get_RC_CONTOUR_TESS_AREA_EDGES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_get_RC_CONTOUR_TESS_AREA_EDGES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Voxels", "Voxelize", "RC_CONTOUR_TESS_AREA_EDGES"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 RC_CONTOUR_TESS_AREA_EDGES
void Pathfinding::Voxels::Voxelize::_set_RC_CONTOUR_TESS_AREA_EDGES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_set_RC_CONTOUR_TESS_AREA_EDGES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "Voxelize", "RC_CONTOUR_TESS_AREA_EDGES", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 RC_CONTOUR_TESS_TILE_EDGES
int Pathfinding::Voxels::Voxelize::_get_RC_CONTOUR_TESS_TILE_EDGES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_get_RC_CONTOUR_TESS_TILE_EDGES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Voxels", "Voxelize", "RC_CONTOUR_TESS_TILE_EDGES"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 RC_CONTOUR_TESS_TILE_EDGES
void Pathfinding::Voxels::Voxelize::_set_RC_CONTOUR_TESS_TILE_EDGES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_set_RC_CONTOUR_TESS_TILE_EDGES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "Voxelize", "RC_CONTOUR_TESS_TILE_EDGES", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ContourRegMask
int Pathfinding::Voxels::Voxelize::_get_ContourRegMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_get_ContourRegMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Voxels", "Voxelize", "ContourRegMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ContourRegMask
void Pathfinding::Voxels::Voxelize::_set_ContourRegMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::_set_ContourRegMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Voxels", "Voxelize", "ContourRegMask", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.Voxels.RasterizationMesh> inputMeshes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>*& Pathfinding::Voxels::Voxelize::dyn_inputMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_inputMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputMeshes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 voxelWalkableClimb
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::Voxelize::dyn_voxelWalkableClimb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_voxelWalkableClimb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voxelWalkableClimb"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 voxelWalkableHeight
[[deprecated("Use field access instead!")]] uint& Pathfinding::Voxels::Voxelize::dyn_voxelWalkableHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_voxelWalkableHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voxelWalkableHeight"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single cellSize
[[deprecated("Use field access instead!")]] float& Pathfinding::Voxels::Voxelize::dyn_cellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_cellSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cellSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single cellHeight
[[deprecated("Use field access instead!")]] float& Pathfinding::Voxels::Voxelize::dyn_cellHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_cellHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cellHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 minRegionSize
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::Voxelize::dyn_minRegionSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_minRegionSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minRegionSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 borderSize
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::Voxelize::dyn_borderSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_borderSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "borderSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxEdgeLength
[[deprecated("Use field access instead!")]] float& Pathfinding::Voxels::Voxelize::dyn_maxEdgeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_maxEdgeLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxEdgeLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSlope
[[deprecated("Use field access instead!")]] float& Pathfinding::Voxels::Voxelize::dyn_maxSlope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_maxSlope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSlope"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RecastGraph/RelevantGraphSurfaceMode relevantGraphSurfaceMode
[[deprecated("Use field access instead!")]] ::Pathfinding::RecastGraph::RelevantGraphSurfaceMode& Pathfinding::Voxels::Voxelize::dyn_relevantGraphSurfaceMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_relevantGraphSurfaceMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "relevantGraphSurfaceMode"))->offset;
  return *reinterpret_cast<::Pathfinding::RecastGraph::RelevantGraphSurfaceMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Bounds forcedBounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& Pathfinding::Voxels::Voxelize::dyn_forcedBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_forcedBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forcedBounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Voxels.VoxelArea voxelArea
[[deprecated("Use field access instead!")]] ::Pathfinding::Voxels::VoxelArea*& Pathfinding::Voxels::Voxelize::dyn_voxelArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_voxelArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voxelArea"))->offset;
  return *reinterpret_cast<::Pathfinding::Voxels::VoxelArea**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Voxels.VoxelContourSet countourSet
[[deprecated("Use field access instead!")]] ::Pathfinding::Voxels::VoxelContourSet*& Pathfinding::Voxels::Voxelize::dyn_countourSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_countourSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "countourSet"))->offset;
  return *reinterpret_cast<::Pathfinding::Voxels::VoxelContourSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Util.GraphTransform transform
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::GraphTransform*& Pathfinding::Voxels::Voxelize::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::GraphTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Util.GraphTransform <transformVoxel2Graph>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::GraphTransform*& Pathfinding::Voxels::Voxelize::dyn_$transformVoxel2Graph$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_$transformVoxel2Graph$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<transformVoxel2Graph>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::GraphTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::Voxelize::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 depth
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::Voxelize::dyn_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_depth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 voxelOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Voxels::Voxelize::dyn_voxelOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_voxelOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voxelOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 cellScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Voxels::Voxelize::dyn_cellScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::dyn_cellScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cellScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.BuildContours
void Pathfinding::Voxels::Voxelize::BuildContours(float maxError, int maxEdgeLength, ::Pathfinding::Voxels::VoxelContourSet* cset, int buildFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::BuildContours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildContours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxError), ::il2cpp_utils::ExtractType(maxEdgeLength), ::il2cpp_utils::ExtractType(cset), ::il2cpp_utils::ExtractType(buildFlags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, maxError, maxEdgeLength, cset, buildFlags);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.GetClosestIndices
void Pathfinding::Voxels::Voxelize::GetClosestIndices(::ArrayW<int> vertsa, int nvertsa, ::ArrayW<int> vertsb, int nvertsb, ByRef<int> ia, ByRef<int> ib) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::GetClosestIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClosestIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertsa), ::il2cpp_utils::ExtractType(nvertsa), ::il2cpp_utils::ExtractType(vertsb), ::il2cpp_utils::ExtractType(nvertsb), ::il2cpp_utils::ExtractType(ia), ::il2cpp_utils::ExtractType(ib)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertsa, nvertsa, vertsb, nvertsb, byref(ia), byref(ib));
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.ReleaseContours
void Pathfinding::Voxels::Voxelize::ReleaseContours(::Pathfinding::Voxels::VoxelContourSet* cset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::ReleaseContours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "ReleaseContours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cset);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.MergeContours
bool Pathfinding::Voxels::Voxelize::MergeContours(ByRef<::Pathfinding::Voxels::VoxelContour> ca, ByRef<::Pathfinding::Voxels::VoxelContour> cb, int ia, int ib) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::MergeContours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "MergeContours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ca), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(ia), ::il2cpp_utils::ExtractType(ib)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ca), byref(cb), ia, ib);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.SimplifyContour
void Pathfinding::Voxels::Voxelize::SimplifyContour(::System::Collections::Generic::List_1<int>* verts, ::System::Collections::Generic::List_1<int>* simplified, float maxError, int maxEdgeLenght, int buildFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::SimplifyContour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimplifyContour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(simplified), ::il2cpp_utils::ExtractType(maxError), ::il2cpp_utils::ExtractType(maxEdgeLenght), ::il2cpp_utils::ExtractType(buildFlags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, verts, simplified, maxError, maxEdgeLenght, buildFlags);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.WalkContour
void Pathfinding::Voxels::Voxelize::WalkContour(int x, int z, int i, ::ArrayW<uint16_t> flags, ::System::Collections::Generic::List_1<int>* verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::WalkContour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WalkContour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(verts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z, i, flags, verts);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.GetCornerHeight
int Pathfinding::Voxels::Voxelize::GetCornerHeight(int x, int z, int i, int dir, ByRef<bool> isBorderVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::GetCornerHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCornerHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(dir), ::il2cpp_utils::ExtractType(isBorderVertex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, z, i, dir, byref(isBorderVertex));
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.RemoveDegenerateSegments
void Pathfinding::Voxels::Voxelize::RemoveDegenerateSegments(::System::Collections::Generic::List_1<int>* simplified) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::RemoveDegenerateSegments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveDegenerateSegments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(simplified)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, simplified);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.CalcAreaOfPolygon2D
int Pathfinding::Voxels::Voxelize::CalcAreaOfPolygon2D(::ArrayW<int> verts, int nverts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::CalcAreaOfPolygon2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalcAreaOfPolygon2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(nverts)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, verts, nverts);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.Ileft
bool Pathfinding::Voxels::Voxelize::Ileft(int a, int b, int c, ::ArrayW<int> va, ::ArrayW<int> vb, ::ArrayW<int> vc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::Ileft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "Ileft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(va), ::il2cpp_utils::ExtractType(vb), ::il2cpp_utils::ExtractType(vc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c, va, vb, vc);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.Diagonal
bool Pathfinding::Voxels::Voxelize::Diagonal(int i, int j, int n, ::ArrayW<int> verts, ::ArrayW<int> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::Diagonal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "Diagonal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(j), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(indices)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i, j, n, verts, indices);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.InCone
bool Pathfinding::Voxels::Voxelize::InCone(int i, int j, int n, ::ArrayW<int> verts, ::ArrayW<int> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::InCone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "InCone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(j), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(indices)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i, j, n, verts, indices);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.Left
bool Pathfinding::Voxels::Voxelize::Left(int a, int b, int c, ::ArrayW<int> verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::Left");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "Left", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(verts)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c, verts);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.LeftOn
bool Pathfinding::Voxels::Voxelize::LeftOn(int a, int b, int c, ::ArrayW<int> verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::LeftOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "LeftOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(verts)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c, verts);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.Collinear
bool Pathfinding::Voxels::Voxelize::Collinear(int a, int b, int c, ::ArrayW<int> verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::Collinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "Collinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(verts)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c, verts);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.Area2
int Pathfinding::Voxels::Voxelize::Area2(int a, int b, int c, ::ArrayW<int> verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::Area2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "Area2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(verts)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c, verts);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.Diagonalie
bool Pathfinding::Voxels::Voxelize::Diagonalie(int i, int j, int n, ::ArrayW<int> verts, ::ArrayW<int> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::Diagonalie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "Diagonalie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(j), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(indices)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i, j, n, verts, indices);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.Xorb
bool Pathfinding::Voxels::Voxelize::Xorb(bool x, bool y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::Xorb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "Xorb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.IntersectProp
bool Pathfinding::Voxels::Voxelize::IntersectProp(int a, int b, int c, int d, ::ArrayW<int> verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::IntersectProp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "IntersectProp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(verts)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c, d, verts);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.Between
bool Pathfinding::Voxels::Voxelize::Between(int a, int b, int c, ::ArrayW<int> verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::Between");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "Between", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(verts)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c, verts);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.Intersect
bool Pathfinding::Voxels::Voxelize::Intersect(int a, int b, int c, int d, ::ArrayW<int> verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::Intersect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "Intersect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(verts)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c, d, verts);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.Vequal
bool Pathfinding::Voxels::Voxelize::Vequal(int a, int b, ::ArrayW<int> verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::Vequal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "Vequal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(verts)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, verts);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.Prev
int Pathfinding::Voxels::Voxelize::Prev(int i, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::Prev");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "Prev", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i, n);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.Next
int Pathfinding::Voxels::Voxelize::Next(int i, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i, n);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.BuildPolyMesh
void Pathfinding::Voxels::Voxelize::BuildPolyMesh(::Pathfinding::Voxels::VoxelContourSet* cset, int nvp, ByRef<::Pathfinding::Voxels::VoxelMesh> mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::BuildPolyMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildPolyMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cset), ::il2cpp_utils::ExtractType(nvp), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::Voxels::VoxelMesh&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cset, nvp, byref(mesh));
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.Triangulate
int Pathfinding::Voxels::Voxelize::Triangulate(int n, ::ArrayW<int> verts, ByRef<::ArrayW<int>> indices, ByRef<::ArrayW<int>> tris) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::Triangulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Triangulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(tris)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, n, verts, byref(indices), byref(tris));
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.get_transformVoxel2Graph
::Pathfinding::Util::GraphTransform* Pathfinding::Voxels::Voxelize::get_transformVoxel2Graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::get_transformVoxel2Graph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transformVoxel2Graph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::GraphTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.set_transformVoxel2Graph
void Pathfinding::Voxels::Voxelize::set_transformVoxel2Graph(::Pathfinding::Util::GraphTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::set_transformVoxel2Graph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_transformVoxel2Graph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.CompactSpanToVector
::UnityEngine::Vector3 Pathfinding::Voxels::Voxelize::CompactSpanToVector(int x, int z, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::CompactSpanToVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompactSpanToVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, z, i);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.VectorToIndex
void Pathfinding::Voxels::Voxelize::VectorToIndex(::UnityEngine::Vector3 p, ByRef<int> x, ByRef<int> z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::VectorToIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VectorToIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p, byref(x), byref(z));
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.Init
void Pathfinding::Voxels::Voxelize::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.VoxelizeInput
void Pathfinding::Voxels::Voxelize::VoxelizeInput(::Pathfinding::Util::GraphTransform* graphTransform, ::UnityEngine::Bounds graphSpaceBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::VoxelizeInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VoxelizeInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphTransform), ::il2cpp_utils::ExtractType(graphSpaceBounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graphTransform, graphSpaceBounds);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.DebugDrawSpans
void Pathfinding::Voxels::Voxelize::DebugDrawSpans() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::DebugDrawSpans");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugDrawSpans", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.BuildCompactField
void Pathfinding::Voxels::Voxelize::BuildCompactField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::BuildCompactField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildCompactField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.BuildVoxelConnections
void Pathfinding::Voxels::Voxelize::BuildVoxelConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::BuildVoxelConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildVoxelConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.DrawLine
void Pathfinding::Voxels::Voxelize::DrawLine(int a, int b, ::ArrayW<int> indices, ::ArrayW<int> verts, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::DrawLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b, indices, verts, color);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.VoxelToWorld
::UnityEngine::Vector3 Pathfinding::Voxels::Voxelize::VoxelToWorld(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::VoxelToWorld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VoxelToWorld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.VoxelToWorldInt3
::Pathfinding::Int3 Pathfinding::Voxels::Voxelize::VoxelToWorldInt3(::Pathfinding::Int3 voxelPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::VoxelToWorldInt3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VoxelToWorldInt3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voxelPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, voxelPosition);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.ConvertPosWithoutOffset
::UnityEngine::Vector3 Pathfinding::Voxels::Voxelize::ConvertPosWithoutOffset(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::ConvertPosWithoutOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertPosWithoutOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.ConvertPosition
::UnityEngine::Vector3 Pathfinding::Voxels::Voxelize::ConvertPosition(int x, int z, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::ConvertPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, z, i);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.ErodeWalkableArea
void Pathfinding::Voxels::Voxelize::ErodeWalkableArea(int radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::ErodeWalkableArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ErodeWalkableArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, radius);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.BuildDistanceField
void Pathfinding::Voxels::Voxelize::BuildDistanceField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::BuildDistanceField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildDistanceField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.ErodeVoxels
void Pathfinding::Voxels::Voxelize::ErodeVoxels(int radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::ErodeVoxels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ErodeVoxels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, radius);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.FilterLowHeightSpans
void Pathfinding::Voxels::Voxelize::FilterLowHeightSpans(uint voxelWalkableHeight, float cs, float ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::FilterLowHeightSpans");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterLowHeightSpans", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voxelWalkableHeight), ::il2cpp_utils::ExtractType(cs), ::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, voxelWalkableHeight, cs, ch);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.FilterLedges
void Pathfinding::Voxels::Voxelize::FilterLedges(uint voxelWalkableHeight, int voxelWalkableClimb, float cs, float ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::FilterLedges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterLedges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voxelWalkableHeight), ::il2cpp_utils::ExtractType(voxelWalkableClimb), ::il2cpp_utils::ExtractType(cs), ::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, voxelWalkableHeight, voxelWalkableClimb, cs, ch);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.FloodRegion
bool Pathfinding::Voxels::Voxelize::FloodRegion(int x, int z, int i, uint level, uint16_t r, ::ArrayW<uint16_t> srcReg, ::ArrayW<uint16_t> srcDist, ::ArrayW<::Pathfinding::Int3> stack, ::ArrayW<int> flags, ::ArrayW<bool> closed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::FloodRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FloodRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(srcReg), ::il2cpp_utils::ExtractType(srcDist), ::il2cpp_utils::ExtractType(stack), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(closed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, z, i, level, r, srcReg, srcDist, stack, flags, closed);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.MarkRectWithRegion
void Pathfinding::Voxels::Voxelize::MarkRectWithRegion(int minx, int maxx, int minz, int maxz, uint16_t region, ::ArrayW<uint16_t> srcReg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::MarkRectWithRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkRectWithRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minx), ::il2cpp_utils::ExtractType(maxx), ::il2cpp_utils::ExtractType(minz), ::il2cpp_utils::ExtractType(maxz), ::il2cpp_utils::ExtractType(region), ::il2cpp_utils::ExtractType(srcReg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, minx, maxx, minz, maxz, region, srcReg);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.CalculateDistanceField
uint16_t Pathfinding::Voxels::Voxelize::CalculateDistanceField(::ArrayW<uint16_t> src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::CalculateDistanceField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateDistanceField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, src);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.BoxBlur
::ArrayW<uint16_t> Pathfinding::Voxels::Voxelize::BoxBlur(::ArrayW<uint16_t> src, ::ArrayW<uint16_t> dst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::BoxBlur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BoxBlur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint16_t>, false>(this, ___internal__method, src, dst);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.BuildRegions
void Pathfinding::Voxels::Voxelize::BuildRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::BuildRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.union_find_find
int Pathfinding::Voxels::Voxelize::union_find_find(::ArrayW<int> arr, int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::union_find_find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "union_find_find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arr), ::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arr, x);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.union_find_union
void Pathfinding::Voxels::Voxelize::union_find_union(::ArrayW<int> arr, int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::union_find_union");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Voxelize", "union_find_union", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arr), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arr, a, b);
}
// Autogenerated method: Pathfinding.Voxels.Voxelize.FilterSmallRegions
void Pathfinding::Voxels::Voxelize::FilterSmallRegions(::ArrayW<uint16_t> reg, int minRegionSize, int maxRegions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Voxelize::FilterSmallRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterSmallRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reg), ::il2cpp_utils::ExtractType(minRegionSize), ::il2cpp_utils::ExtractType(maxRegions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reg, minRegionSize, maxRegions);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Voxels.VoxelPolygonClipper
#include "Pathfinding/Voxels/VoxelPolygonClipper.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single[] x
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Pathfinding::Voxels::VoxelPolygonClipper::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelPolygonClipper::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] y
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Pathfinding::Voxels::VoxelPolygonClipper::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelPolygonClipper::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] z
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Pathfinding::Voxels::VoxelPolygonClipper::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelPolygonClipper::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 n
[[deprecated("Use field access instead!")]] int& Pathfinding::Voxels::VoxelPolygonClipper::dyn_n() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelPolygonClipper::dyn_n");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "n"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Voxels.VoxelPolygonClipper..ctor
Pathfinding::Voxels::VoxelPolygonClipper::VoxelPolygonClipper(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelPolygonClipper::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: Pathfinding.Voxels.VoxelPolygonClipper.set_Item
void Pathfinding::Voxels::VoxelPolygonClipper::set_Item(int i, ::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelPolygonClipper::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, value);
}
// Autogenerated method: Pathfinding.Voxels.VoxelPolygonClipper.ClipPolygonAlongX
void Pathfinding::Voxels::VoxelPolygonClipper::ClipPolygonAlongX(ByRef<::Pathfinding::Voxels::VoxelPolygonClipper> result, float multi, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelPolygonClipper::ClipPolygonAlongX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ClipPolygonAlongX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(multi), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(result), multi, offset);
}
// Autogenerated method: Pathfinding.Voxels.VoxelPolygonClipper.ClipPolygonAlongZWithYZ
void Pathfinding::Voxels::VoxelPolygonClipper::ClipPolygonAlongZWithYZ(ByRef<::Pathfinding::Voxels::VoxelPolygonClipper> result, float multi, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelPolygonClipper::ClipPolygonAlongZWithYZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ClipPolygonAlongZWithYZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(multi), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(result), multi, offset);
}
// Autogenerated method: Pathfinding.Voxels.VoxelPolygonClipper.ClipPolygonAlongZWithY
void Pathfinding::Voxels::VoxelPolygonClipper::ClipPolygonAlongZWithY(ByRef<::Pathfinding::Voxels::VoxelPolygonClipper> result, float multi, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::VoxelPolygonClipper::ClipPolygonAlongZWithY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ClipPolygonAlongZWithY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(multi), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(result), multi, offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Voxels.Int3PolygonClipper
#include "Pathfinding/Voxels/Int3PolygonClipper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single[] clipPolygonCache
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Pathfinding::Voxels::Int3PolygonClipper::dyn_clipPolygonCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Int3PolygonClipper::dyn_clipPolygonCache");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipPolygonCache"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] clipPolygonIntCache
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Voxels::Int3PolygonClipper::dyn_clipPolygonIntCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Int3PolygonClipper::dyn_clipPolygonIntCache");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipPolygonIntCache"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Voxels.Int3PolygonClipper.Init
void Pathfinding::Voxels::Int3PolygonClipper::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Int3PolygonClipper::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Voxels.Int3PolygonClipper.ClipPolygon
int Pathfinding::Voxels::Int3PolygonClipper::ClipPolygon(::ArrayW<::Pathfinding::Int3> vIn, int n, ::ArrayW<::Pathfinding::Int3> vOut, int multi, int offset, int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Int3PolygonClipper::ClipPolygon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ClipPolygon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vIn), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(vOut), ::il2cpp_utils::ExtractType(multi), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, vIn, n, vOut, multi, offset, axis);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Voxels.Utility
#include "Pathfinding/Voxels/Utility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Voxels.Utility.Min
float Pathfinding::Voxels::Utility::Min(float a, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Utility::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Utility", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: Pathfinding.Voxels.Utility.Max
float Pathfinding::Voxels::Utility::Max(float a, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Utility::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Utility", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: Pathfinding.Voxels.Utility.RemoveDuplicateVertices
::ArrayW<::Pathfinding::Int3> Pathfinding::Voxels::Utility::RemoveDuplicateVertices(::ArrayW<::Pathfinding::Int3> vertices, ::ArrayW<int> triangles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Voxels::Utility::RemoveDuplicateVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Voxels", "Utility", "RemoveDuplicateVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(triangles)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Pathfinding::Int3>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vertices, triangles);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Recast.RecastMeshGatherer
#include "Pathfinding/Recast/RecastMeshGatherer.hpp"
// Including type: Pathfinding.Recast.RecastMeshGatherer/CapsuleCache
#include "Pathfinding/Recast/RecastMeshGatherer_CapsuleCache.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: Pathfinding.Voxels.RasterizationMesh
#include "Pathfinding/Voxels/RasterizationMesh.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.BoxCollider
#include "UnityEngine/BoxCollider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] BoxColliderTris
::ArrayW<int> Pathfinding::Recast::RecastMeshGatherer::_get_BoxColliderTris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::_get_BoxColliderTris");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding.Recast", "RecastMeshGatherer", "BoxColliderTris"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] BoxColliderTris
void Pathfinding::Recast::RecastMeshGatherer::_set_BoxColliderTris(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::_set_BoxColliderTris");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Recast", "RecastMeshGatherer", "BoxColliderTris", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] BoxColliderVerts
::ArrayW<::UnityEngine::Vector3> Pathfinding::Recast::RecastMeshGatherer::_get_BoxColliderVerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::_get_BoxColliderVerts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("Pathfinding.Recast", "RecastMeshGatherer", "BoxColliderVerts"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] BoxColliderVerts
void Pathfinding::Recast::RecastMeshGatherer::_set_BoxColliderVerts(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::_set_BoxColliderVerts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Recast", "RecastMeshGatherer", "BoxColliderVerts", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 terrainSampleSize
[[deprecated("Use field access instead!")]] int& Pathfinding::Recast::RecastMeshGatherer::dyn_terrainSampleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::dyn_terrainSampleSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "terrainSampleSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.LayerMask mask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::Recast::RecastMeshGatherer::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.String> tagMask
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Pathfinding::Recast::RecastMeshGatherer::dyn_tagMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::dyn_tagMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagMask"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single colliderRasterizeDetail
[[deprecated("Use field access instead!")]] float& Pathfinding::Recast::RecastMeshGatherer::dyn_colliderRasterizeDetail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::dyn_colliderRasterizeDetail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colliderRasterizeDetail"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Bounds bounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& Pathfinding::Recast::RecastMeshGatherer::dyn_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::dyn_bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.Recast.RecastMeshGatherer/CapsuleCache> capsuleCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::Recast::RecastMeshGatherer::CapsuleCache*>*& Pathfinding::Recast::RecastMeshGatherer::dyn_capsuleCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::dyn_capsuleCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "capsuleCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::Recast::RecastMeshGatherer::CapsuleCache*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Recast.RecastMeshGatherer.FilterMeshes
::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>* Pathfinding::Recast::RecastMeshGatherer::FilterMeshes(::ArrayW<::UnityEngine::MeshFilter*> meshFilters, ::System::Collections::Generic::List_1<::StringW>* tagMask, ::UnityEngine::LayerMask layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::FilterMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Recast", "RecastMeshGatherer", "FilterMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshFilters), ::il2cpp_utils::ExtractType(tagMask), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, meshFilters, tagMask, layerMask);
}
// Autogenerated method: Pathfinding.Recast.RecastMeshGatherer.CollectSceneMeshes
void Pathfinding::Recast::RecastMeshGatherer::CollectSceneMeshes(::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>* meshes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::CollectSceneMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollectSceneMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, meshes);
}
// Autogenerated method: Pathfinding.Recast.RecastMeshGatherer.CollectRecastMeshObjs
void Pathfinding::Recast::RecastMeshGatherer::CollectRecastMeshObjs(::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::CollectRecastMeshObjs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollectRecastMeshObjs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Pathfinding.Recast.RecastMeshGatherer.CollectTerrainMeshes
void Pathfinding::Recast::RecastMeshGatherer::CollectTerrainMeshes(bool rasterizeTrees, float desiredChunkSize, ::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::CollectTerrainMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollectTerrainMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rasterizeTrees), ::il2cpp_utils::ExtractType(desiredChunkSize), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rasterizeTrees, desiredChunkSize, result);
}
// Autogenerated method: Pathfinding.Recast.RecastMeshGatherer.GenerateTerrainChunks
void Pathfinding::Recast::RecastMeshGatherer::GenerateTerrainChunks(::UnityEngine::Terrain* terrain, ::UnityEngine::Bounds bounds, float desiredChunkSize, ::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::GenerateTerrainChunks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTerrainChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(terrain), ::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(desiredChunkSize), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, terrain, bounds, desiredChunkSize, result);
}
// Autogenerated method: Pathfinding.Recast.RecastMeshGatherer.CeilDivision
int Pathfinding::Recast::RecastMeshGatherer::CeilDivision(int lhs, int rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::CeilDivision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Recast", "RecastMeshGatherer", "CeilDivision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.Recast.RecastMeshGatherer.GenerateHeightmapChunk
::Pathfinding::Voxels::RasterizationMesh* Pathfinding::Recast::RecastMeshGatherer::GenerateHeightmapChunk(::ArrayW<float> heights, ::UnityEngine::Vector3 sampleSize, ::UnityEngine::Vector3 offset, int x0, int z0, int width, int depth, int stride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::GenerateHeightmapChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateHeightmapChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(heights), ::il2cpp_utils::ExtractType(sampleSize), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(x0), ::il2cpp_utils::ExtractType(z0), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(stride)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Voxels::RasterizationMesh*, false>(this, ___internal__method, heights, sampleSize, offset, x0, z0, width, depth, stride);
}
// Autogenerated method: Pathfinding.Recast.RecastMeshGatherer.CollectTreeMeshes
void Pathfinding::Recast::RecastMeshGatherer::CollectTreeMeshes(::UnityEngine::Terrain* terrain, ::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::CollectTreeMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollectTreeMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(terrain), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, terrain, result);
}
// Autogenerated method: Pathfinding.Recast.RecastMeshGatherer.CollectColliderMeshes
void Pathfinding::Recast::RecastMeshGatherer::CollectColliderMeshes(::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::CollectColliderMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollectColliderMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: Pathfinding.Recast.RecastMeshGatherer.RasterizeCollider
::Pathfinding::Voxels::RasterizationMesh* Pathfinding::Recast::RecastMeshGatherer::RasterizeCollider(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::RasterizeCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RasterizeCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Voxels::RasterizationMesh*, false>(this, ___internal__method, col);
}
// Autogenerated method: Pathfinding.Recast.RecastMeshGatherer.RasterizeCollider
::Pathfinding::Voxels::RasterizationMesh* Pathfinding::Recast::RecastMeshGatherer::RasterizeCollider(::UnityEngine::Collider* col, ::UnityEngine::Matrix4x4 localToWorldMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::RasterizeCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RasterizeCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col), ::il2cpp_utils::ExtractType(localToWorldMatrix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Voxels::RasterizationMesh*, false>(this, ___internal__method, col, localToWorldMatrix);
}
// Autogenerated method: Pathfinding.Recast.RecastMeshGatherer.RasterizeBoxCollider
::Pathfinding::Voxels::RasterizationMesh* Pathfinding::Recast::RecastMeshGatherer::RasterizeBoxCollider(::UnityEngine::BoxCollider* collider, ::UnityEngine::Matrix4x4 localToWorldMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::RasterizeBoxCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RasterizeBoxCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider), ::il2cpp_utils::ExtractType(localToWorldMatrix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Voxels::RasterizationMesh*, false>(this, ___internal__method, collider, localToWorldMatrix);
}
// Autogenerated method: Pathfinding.Recast.RecastMeshGatherer.RasterizeCapsuleCollider
::Pathfinding::Voxels::RasterizationMesh* Pathfinding::Recast::RecastMeshGatherer::RasterizeCapsuleCollider(float radius, float height, ::UnityEngine::Bounds bounds, ::UnityEngine::Matrix4x4 localToWorldMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::RasterizeCapsuleCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RasterizeCapsuleCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(localToWorldMatrix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Voxels::RasterizationMesh*, false>(this, ___internal__method, radius, height, bounds, localToWorldMatrix);
}
// Autogenerated method: Pathfinding.Recast.RecastMeshGatherer..cctor
void Pathfinding::Recast::RecastMeshGatherer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Recast", "RecastMeshGatherer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Recast.RecastMeshGatherer/CapsuleCache
#include "Pathfinding/Recast/RecastMeshGatherer_CapsuleCache.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 rows
[[deprecated("Use field access instead!")]] int& Pathfinding::Recast::RecastMeshGatherer::CapsuleCache::dyn_rows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::CapsuleCache::dyn_rows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rows"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single height
[[deprecated("Use field access instead!")]] float& Pathfinding::Recast::RecastMeshGatherer::CapsuleCache::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::CapsuleCache::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] verts
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Pathfinding::Recast::RecastMeshGatherer::CapsuleCache::dyn_verts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::CapsuleCache::dyn_verts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] tris
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Recast::RecastMeshGatherer::CapsuleCache::dyn_tris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Recast::RecastMeshGatherer::CapsuleCache::dyn_tris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tris"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
// Including type: Pathfinding.Serialization.GraphMeta
#include "Pathfinding/Serialization/GraphMeta.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.GraphNode[] id2NodeMapping
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GraphNode*>& Pathfinding::Serialization::GraphSerializationContext::dyn_id2NodeMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::dyn_id2NodeMapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id2NodeMapping"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GraphNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.IO.BinaryReader reader
[[deprecated("Use field access instead!")]] ::System::IO::BinaryReader*& Pathfinding::Serialization::GraphSerializationContext::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::IO::BinaryReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.IO.BinaryWriter writer
[[deprecated("Use field access instead!")]] ::System::IO::BinaryWriter*& Pathfinding::Serialization::GraphSerializationContext::dyn_writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::dyn_writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writer"))->offset;
  return *reinterpret_cast<::System::IO::BinaryWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 graphIndex
[[deprecated("Use field access instead!")]] uint& Pathfinding::Serialization::GraphSerializationContext::dyn_graphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::dyn_graphIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Pathfinding.Serialization.GraphMeta meta
[[deprecated("Use field access instead!")]] ::Pathfinding::Serialization::GraphMeta*& Pathfinding::Serialization::GraphSerializationContext::dyn_meta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::dyn_meta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meta"))->offset;
  return *reinterpret_cast<::Pathfinding::Serialization::GraphMeta**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.SerializeNodeReference
void Pathfinding::Serialization::GraphSerializationContext::SerializeNodeReference(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::SerializeNodeReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeNodeReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.DeserializeNodeReference
::Pathfinding::GraphNode* Pathfinding::Serialization::GraphSerializationContext::DeserializeNodeReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::DeserializeNodeReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeNodeReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.SerializeVector3
void Pathfinding::Serialization::GraphSerializationContext::SerializeVector3(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::SerializeVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.DeserializeVector3
::UnityEngine::Vector3 Pathfinding::Serialization::GraphSerializationContext::DeserializeVector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::DeserializeVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.SerializeInt3
void Pathfinding::Serialization::GraphSerializationContext::SerializeInt3(::Pathfinding::Int3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::SerializeInt3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeInt3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.DeserializeInt3
::Pathfinding::Int3 Pathfinding::Serialization::GraphSerializationContext::DeserializeInt3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::DeserializeInt3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInt3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.DeserializeInt
int Pathfinding::Serialization::GraphSerializationContext::DeserializeInt(int defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::DeserializeInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, defaultValue);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.DeserializeFloat
float Pathfinding::Serialization::GraphSerializationContext::DeserializeFloat(float defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::DeserializeFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, defaultValue);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.DeserializeUnityObject
::UnityEngine::Object* Pathfinding::Serialization::GraphSerializationContext::DeserializeUnityObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::DeserializeUnityObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeUnityObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.AstarSerializer
#include "Pathfinding/Serialization/AstarSerializer.hpp"
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass30_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass30_0.hpp"
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass31_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass31_0.hpp"
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass33_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass33_0.hpp"
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass44_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass44_0.hpp"
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass45_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass45_0.hpp"
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass46_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass46_0.hpp"
// Including type: Pathfinding.AstarData
#include "Pathfinding/AstarData.hpp"
// Including type: Pathfinding.Ionic.Zip.ZipFile
#include "Pathfinding/Ionic/Zip/ZipFile.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: Pathfinding.Serialization.GraphMeta
#include "Pathfinding/Serialization/GraphMeta.hpp"
// Including type: Pathfinding.Serialization.SerializeSettings
#include "Pathfinding/Serialization/SerializeSettings.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Text.UTF8Encoding
#include "System/Text/UTF8Encoding.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: Pathfinding.Ionic.Zip.ZipEntry
#include "Pathfinding/Ionic/Zip/ZipEntry.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String binaryExt
::StringW Pathfinding::Serialization::AstarSerializer::_get_binaryExt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_get_binaryExt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Pathfinding.Serialization", "AstarSerializer", "binaryExt"));
}
// Autogenerated static field setter
// Set static field: static private System.String binaryExt
void Pathfinding::Serialization::AstarSerializer::_set_binaryExt(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_set_binaryExt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Serialization", "AstarSerializer", "binaryExt", value));
}
// Autogenerated static field getter
// Get static field: static private System.String jsonExt
::StringW Pathfinding::Serialization::AstarSerializer::_get_jsonExt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_get_jsonExt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Pathfinding.Serialization", "AstarSerializer", "jsonExt"));
}
// Autogenerated static field setter
// Set static field: static private System.String jsonExt
void Pathfinding::Serialization::AstarSerializer::_set_jsonExt(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_set_jsonExt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Serialization", "AstarSerializer", "jsonExt", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.StringBuilder _stringBuilder
::System::Text::StringBuilder* Pathfinding::Serialization::AstarSerializer::_get__stringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_get__stringBuilder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::StringBuilder*>("Pathfinding.Serialization", "AstarSerializer", "_stringBuilder"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.StringBuilder _stringBuilder
void Pathfinding::Serialization::AstarSerializer::_set__stringBuilder(::System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_set__stringBuilder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Serialization", "AstarSerializer", "_stringBuilder", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Version V3_8_3
::System::Version* Pathfinding::Serialization::AstarSerializer::_get_V3_8_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_get_V3_8_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("Pathfinding.Serialization", "AstarSerializer", "V3_8_3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version V3_8_3
void Pathfinding::Serialization::AstarSerializer::_set_V3_8_3(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_set_V3_8_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Serialization", "AstarSerializer", "V3_8_3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Version V3_9_0
::System::Version* Pathfinding::Serialization::AstarSerializer::_get_V3_9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_get_V3_9_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("Pathfinding.Serialization", "AstarSerializer", "V3_9_0"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version V3_9_0
void Pathfinding::Serialization::AstarSerializer::_set_V3_9_0(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_set_V3_9_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Serialization", "AstarSerializer", "V3_9_0", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Version V4_1_0
::System::Version* Pathfinding::Serialization::AstarSerializer::_get_V4_1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_get_V4_1_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("Pathfinding.Serialization", "AstarSerializer", "V4_1_0"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version V4_1_0
void Pathfinding::Serialization::AstarSerializer::_set_V4_1_0(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_set_V4_1_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Serialization", "AstarSerializer", "V4_1_0", value));
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.AstarData data
[[deprecated("Use field access instead!")]] ::Pathfinding::AstarData*& Pathfinding::Serialization::AstarSerializer::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::Pathfinding::AstarData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Zip.ZipFile zip
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zip::ZipFile*& Pathfinding::Serialization::AstarSerializer::dyn_zip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_zip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zip"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zip::ZipFile**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.MemoryStream zipStream
[[deprecated("Use field access instead!")]] ::System::IO::MemoryStream*& Pathfinding::Serialization::AstarSerializer::dyn_zipStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_zipStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zipStream"))->offset;
  return *reinterpret_cast<::System::IO::MemoryStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Serialization.GraphMeta meta
[[deprecated("Use field access instead!")]] ::Pathfinding::Serialization::GraphMeta*& Pathfinding::Serialization::AstarSerializer::dyn_meta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_meta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meta"))->offset;
  return *reinterpret_cast<::Pathfinding::Serialization::GraphMeta**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Serialization.SerializeSettings settings
[[deprecated("Use field access instead!")]] ::Pathfinding::Serialization::SerializeSettings*& Pathfinding::Serialization::AstarSerializer::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::Pathfinding::Serialization::SerializeSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject contextRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Pathfinding::Serialization::AstarSerializer::dyn_contextRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_contextRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contextRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.NavGraph[] graphs
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::NavGraph*>& Pathfinding::Serialization::AstarSerializer::dyn_graphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_graphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphs"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::NavGraph*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Pathfinding.NavGraph,System.Int32> graphIndexInZip
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Pathfinding::NavGraph*, int>*& Pathfinding::Serialization::AstarSerializer::dyn_graphIndexInZip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_graphIndexInZip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphIndexInZip"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Pathfinding::NavGraph*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 graphIndexOffset
[[deprecated("Use field access instead!")]] int& Pathfinding::Serialization::AstarSerializer::dyn_graphIndexOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_graphIndexOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphIndexOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 checksum
[[deprecated("Use field access instead!")]] uint& Pathfinding::Serialization::AstarSerializer::dyn_checksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_checksum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checksum"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.UTF8Encoding encoding
[[deprecated("Use field access instead!")]] ::System::Text::UTF8Encoding*& Pathfinding::Serialization::AstarSerializer::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::System::Text::UTF8Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.GetStringBuilder
::System::Text::StringBuilder* Pathfinding::Serialization::AstarSerializer::GetStringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::GetStringBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "GetStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SetGraphIndexOffset
void Pathfinding::Serialization::AstarSerializer::SetGraphIndexOffset(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SetGraphIndexOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGraphIndexOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.AddChecksum
void Pathfinding::Serialization::AstarSerializer::AddChecksum(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::AddChecksum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChecksum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.AddEntry
void Pathfinding::Serialization::AstarSerializer::AddEntry(::StringW name, ::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::AddEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, bytes);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.GetChecksum
uint Pathfinding::Serialization::AstarSerializer::GetChecksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::GetChecksum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChecksum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.OpenSerialize
void Pathfinding::Serialization::AstarSerializer::OpenSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::OpenSerialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.CloseSerialize
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::CloseSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::CloseSerialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeGraphs
void Pathfinding::Serialization::AstarSerializer::SerializeGraphs(::ArrayW<::Pathfinding::NavGraph*> _graphs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_graphs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _graphs);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeMeta
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::SerializeMeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeMeta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeMeta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.Serialize
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::Serialize(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, graph);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeNodes
void Pathfinding::Serialization::AstarSerializer::SerializeNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.GetMaxNodeIndexInAllGraphs
int Pathfinding::Serialization::AstarSerializer::GetMaxNodeIndexInAllGraphs(::ArrayW<::Pathfinding::NavGraph*> graphs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::GetMaxNodeIndexInAllGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "GetMaxNodeIndexInAllGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphs);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeNodeIndices
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::SerializeNodeIndices(::ArrayW<::Pathfinding::NavGraph*> graphs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeNodeIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "SerializeNodeIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphs)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphs);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeGraphExtraInfo
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::SerializeGraphExtraInfo(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeGraphExtraInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "SerializeGraphExtraInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeGraphNodeReferences
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::SerializeGraphNodeReferences(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeGraphNodeReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "SerializeGraphNodeReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeExtraInfo
void Pathfinding::Serialization::AstarSerializer::SerializeExtraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeExtraInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeExtraInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeNodeLinks
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::SerializeNodeLinks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeNodeLinks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeNodeLinks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.GetEntry
::Pathfinding::Ionic::Zip::ZipEntry* Pathfinding::Serialization::AstarSerializer::GetEntry(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::GetEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::ZipEntry*, false>(this, ___internal__method, name);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.ContainsEntry
bool Pathfinding::Serialization::AstarSerializer::ContainsEntry(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::ContainsEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.OpenDeserialize
bool Pathfinding::Serialization::AstarSerializer::OpenDeserialize(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::OpenDeserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bytes);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.FullyDefinedVersion
::System::Version* Pathfinding::Serialization::AstarSerializer::FullyDefinedVersion(::System::Version* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::FullyDefinedVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "FullyDefinedVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.CloseDeserialize
void Pathfinding::Serialization::AstarSerializer::CloseDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::CloseDeserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeGraph
::Pathfinding::NavGraph* Pathfinding::Serialization::AstarSerializer::DeserializeGraph(int zipIndex, int graphIndex, ::ArrayW<::System::Type*> availableGraphTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(zipIndex), ::il2cpp_utils::ExtractType(graphIndex), ::il2cpp_utils::ExtractType(availableGraphTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavGraph*, false>(this, ___internal__method, zipIndex, graphIndex, availableGraphTypes);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeGraphs
::ArrayW<::Pathfinding::NavGraph*> Pathfinding::Serialization::AstarSerializer::DeserializeGraphs(::ArrayW<::System::Type*> availableGraphTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(availableGraphTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Pathfinding::NavGraph*>, false>(this, ___internal__method, availableGraphTypes);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeExtraInfo
bool Pathfinding::Serialization::AstarSerializer::DeserializeExtraInfo(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeExtraInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeExtraInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, graph);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.AnyDestroyedNodesInGraphs
bool Pathfinding::Serialization::AstarSerializer::AnyDestroyedNodesInGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::AnyDestroyedNodesInGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnyDestroyedNodesInGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeNodeReferenceMap
::ArrayW<::Pathfinding::GraphNode*> Pathfinding::Serialization::AstarSerializer::DeserializeNodeReferenceMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeNodeReferenceMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeNodeReferenceMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Pathfinding::GraphNode*>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeNodeReferences
void Pathfinding::Serialization::AstarSerializer::DeserializeNodeReferences(::Pathfinding::NavGraph* graph, ::ArrayW<::Pathfinding::GraphNode*> int2Node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeNodeReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeNodeReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(int2Node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, int2Node);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeExtraInfo
void Pathfinding::Serialization::AstarSerializer::DeserializeExtraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeExtraInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeExtraInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeNodeLinks
void Pathfinding::Serialization::AstarSerializer::DeserializeNodeLinks(::ArrayW<::Pathfinding::GraphNode*> int2Node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeNodeLinks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeNodeLinks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(int2Node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, int2Node);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.PostDeserialization
void Pathfinding::Serialization::AstarSerializer::PostDeserialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::PostDeserialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeEditorSettingsCompatibility
void Pathfinding::Serialization::AstarSerializer::DeserializeEditorSettingsCompatibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeEditorSettingsCompatibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeEditorSettingsCompatibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.GetBinaryReader
::System::IO::BinaryReader* Pathfinding::Serialization::AstarSerializer::GetBinaryReader(::Pathfinding::Ionic::Zip::ZipEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::GetBinaryReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "GetBinaryReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::BinaryReader*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entry);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.GetString
::StringW Pathfinding::Serialization::AstarSerializer::GetString(::Pathfinding::Ionic::Zip::ZipEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entry);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeMeta
::Pathfinding::Serialization::GraphMeta* Pathfinding::Serialization::AstarSerializer::DeserializeMeta(::Pathfinding::Ionic::Zip::ZipEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeMeta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeMeta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Serialization::GraphMeta*, false>(this, ___internal__method, entry);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeBinaryMeta
::Pathfinding::Serialization::GraphMeta* Pathfinding::Serialization::AstarSerializer::DeserializeBinaryMeta(::Pathfinding::Ionic::Zip::ZipEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeBinaryMeta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeBinaryMeta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Serialization::GraphMeta*, false>(this, ___internal__method, entry);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SaveToFile
void Pathfinding::Serialization::AstarSerializer::SaveToFile(::StringW path, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SaveToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "SaveToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, data);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.LoadFromFile
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::LoadFromFile(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::LoadFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "LoadFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer..cctor
void Pathfinding::Serialization::AstarSerializer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass30_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass30_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxIndex
[[deprecated("Use field access instead!")]] int& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass30_0::dyn_maxIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass30_0::dyn_maxIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Pathfinding.GraphNode> <>9__0
[[deprecated("Use field access instead!")]] ::System::Action_1<::Pathfinding::GraphNode*>*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass30_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass30_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::System::Action_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass30_0.<GetMaxNodeIndexInAllGraphs>b__0
void Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass30_0::$GetMaxNodeIndexInAllGraphs$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass30_0::<GetMaxNodeIndexInAllGraphs>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMaxNodeIndexInAllGraphs>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass31_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass31_0.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxNodeIndex2
[[deprecated("Use field access instead!")]] int& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass31_0::dyn_maxNodeIndex2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass31_0::dyn_maxNodeIndex2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNodeIndex2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.BinaryWriter writer
[[deprecated("Use field access instead!")]] ::System::IO::BinaryWriter*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass31_0::dyn_writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass31_0::dyn_writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writer"))->offset;
  return *reinterpret_cast<::System::IO::BinaryWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Pathfinding.GraphNode> <>9__0
[[deprecated("Use field access instead!")]] ::System::Action_1<::Pathfinding::GraphNode*>*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass31_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass31_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::System::Action_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass31_0.<SerializeNodeIndices>b__0
void Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass31_0::$SerializeNodeIndices$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass31_0::<SerializeNodeIndices>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SerializeNodeIndices>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass33_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass33_0.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Serialization.GraphSerializationContext ctx
[[deprecated("Use field access instead!")]] ::Pathfinding::Serialization::GraphSerializationContext*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass33_0::dyn_ctx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass33_0::dyn_ctx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctx"))->offset;
  return *reinterpret_cast<::Pathfinding::Serialization::GraphSerializationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass33_0.<SerializeGraphNodeReferences>b__0
void Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass33_0::$SerializeGraphNodeReferences$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass33_0::<SerializeGraphNodeReferences>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SerializeGraphNodeReferences>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass44_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass44_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean result
[[deprecated("Use field access instead!")]] bool& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass44_0::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass44_0::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Pathfinding.GraphNode> <>9__0
[[deprecated("Use field access instead!")]] ::System::Action_1<::Pathfinding::GraphNode*>*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass44_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass44_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::System::Action_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass44_0.<AnyDestroyedNodesInGraphs>b__0
void Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass44_0::$AnyDestroyedNodesInGraphs$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass44_0::<AnyDestroyedNodesInGraphs>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnyDestroyedNodesInGraphs>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass45_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass45_0.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IO.BinaryReader reader
[[deprecated("Use field access instead!")]] ::System::IO::BinaryReader*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass45_0::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass45_0::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::IO::BinaryReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode[] int2Node
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GraphNode*>& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass45_0::dyn_int2Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass45_0::dyn_int2Node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "int2Node"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GraphNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Pathfinding.GraphNode> <>9__0
[[deprecated("Use field access instead!")]] ::System::Action_1<::Pathfinding::GraphNode*>*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass45_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass45_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::System::Action_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass45_0.<DeserializeNodeReferenceMap>b__0
void Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass45_0::$DeserializeNodeReferenceMap$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass45_0::<DeserializeNodeReferenceMap>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DeserializeNodeReferenceMap>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass46_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass46_0.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Serialization.GraphSerializationContext ctx
[[deprecated("Use field access instead!")]] ::Pathfinding::Serialization::GraphSerializationContext*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass46_0::dyn_ctx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass46_0::dyn_ctx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctx"))->offset;
  return *reinterpret_cast<::Pathfinding::Serialization::GraphSerializationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass46_0.<DeserializeNodeReferences>b__0
void Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass46_0::$DeserializeNodeReferences$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass46_0::<DeserializeNodeReferences>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DeserializeNodeReferences>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.GraphMeta
#include "Pathfinding/Serialization/GraphMeta.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Version version
[[deprecated("Use field access instead!")]] ::System::Version*& Pathfinding::Serialization::GraphMeta::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphMeta::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 graphs
[[deprecated("Use field access instead!")]] int& Pathfinding::Serialization::GraphMeta::dyn_graphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphMeta::dyn_graphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> guids
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Pathfinding::Serialization::GraphMeta::dyn_guids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphMeta::dyn_guids");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "guids"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> typeNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Pathfinding::Serialization::GraphMeta::dyn_typeNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphMeta::dyn_typeNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.GraphMeta.GetGraphType
::System::Type* Pathfinding::Serialization::GraphMeta::GetGraphType(int index, ::ArrayW<::System::Type*> availableGraphTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphMeta::GetGraphType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGraphType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(availableGraphTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, index, availableGraphTypes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.SerializeSettings
#include "Pathfinding/Serialization/SerializeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean nodes
[[deprecated("Use field access instead!")]] bool& Pathfinding::Serialization::SerializeSettings::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::SerializeSettings::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean prettyPrint
[[deprecated("Use field access instead!")]] bool& Pathfinding::Serialization::SerializeSettings::dyn_prettyPrint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::SerializeSettings::dyn_prettyPrint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prettyPrint"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean editorSettings
[[deprecated("Use field access instead!")]] bool& Pathfinding::Serialization::SerializeSettings::dyn_editorSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::SerializeSettings::dyn_editorSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorSettings"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.SerializeSettings.get_Settings
::Pathfinding::Serialization::SerializeSettings* Pathfinding::Serialization::SerializeSettings::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::SerializeSettings::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "SerializeSettings", "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Serialization::SerializeSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.JsonMemberAttribute
#include "Pathfinding/Serialization/JsonMemberAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.JsonOptInAttribute
#include "Pathfinding/Serialization/JsonOptInAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Serialization.TinyJsonSerializer
#include "Pathfinding/Serialization/TinyJsonSerializer.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Globalization.CultureInfo invariantCulture
::System::Globalization::CultureInfo* Pathfinding::Serialization::TinyJsonSerializer::_get_invariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::_get_invariantCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("Pathfinding.Serialization", "TinyJsonSerializer", "invariantCulture"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Globalization.CultureInfo invariantCulture
void Pathfinding::Serialization::TinyJsonSerializer::_set_invariantCulture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::_set_invariantCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Serialization", "TinyJsonSerializer", "invariantCulture", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder output
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& Pathfinding::Serialization::TinyJsonSerializer::dyn_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::dyn_output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "output"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Type,System.Action`1<System.Object>> serializers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Action_1<::Il2CppObject*>*>*& Pathfinding::Serialization::TinyJsonSerializer::dyn_serializers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::dyn_serializers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Action_1<::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.Serialize
void Pathfinding::Serialization::TinyJsonSerializer::Serialize(::Il2CppObject* obj, ::System::Text::StringBuilder* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "TinyJsonSerializer", "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, output);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.Serialize
void Pathfinding::Serialization::TinyJsonSerializer::Serialize(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.QuotedField
void Pathfinding::Serialization::TinyJsonSerializer::QuotedField(::StringW name, ::StringW contents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::QuotedField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QuotedField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(contents)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, contents);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.SerializeUnityObject
void Pathfinding::Serialization::TinyJsonSerializer::SerializeUnityObject(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::SerializeUnityObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeUnityObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer..cctor
void Pathfinding::Serialization::TinyJsonSerializer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "TinyJsonSerializer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.<.ctor>b__4_0
void Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_0(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::<.ctor>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.<.ctor>b__4_1
void Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_1(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::<.ctor>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.<.ctor>b__4_7
void Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_7(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::<.ctor>b__4_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.<.ctor>b__4_2
void Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_2(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::<.ctor>b__4_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.<.ctor>b__4_3
void Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_3(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::<.ctor>b__4_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.<.ctor>b__4_4
void Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_4(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::<.ctor>b__4_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.<.ctor>b__4_5
void Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_5(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::<.ctor>b__4_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.<.ctor>b__4_6
void Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_6(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::<.ctor>b__4_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Serialization.TinyJsonDeserializer
#include "Pathfinding/Serialization/TinyJsonDeserializer.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Globalization.NumberFormatInfo numberFormat
::System::Globalization::NumberFormatInfo* Pathfinding::Serialization::TinyJsonDeserializer::_get_numberFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::_get_numberFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberFormatInfo*>("Pathfinding.Serialization", "TinyJsonDeserializer", "numberFormat"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Globalization.NumberFormatInfo numberFormat
void Pathfinding::Serialization::TinyJsonDeserializer::_set_numberFormat(::System::Globalization::NumberFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::_set_numberFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Serialization", "TinyJsonDeserializer", "numberFormat", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.TextReader reader
[[deprecated("Use field access instead!")]] ::System::IO::TextReader*& Pathfinding::Serialization::TinyJsonDeserializer::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::IO::TextReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject contextRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Pathfinding::Serialization::TinyJsonDeserializer::dyn_contextRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::dyn_contextRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contextRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder builder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& Pathfinding::Serialization::TinyJsonDeserializer::dyn_builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::dyn_builder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "builder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.Deserialize
::Il2CppObject* Pathfinding::Serialization::TinyJsonDeserializer::Deserialize(::StringW text, ::System::Type* type, ::Il2CppObject* populate, ::UnityEngine::GameObject* contextRoot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "TinyJsonDeserializer", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(populate), ::il2cpp_utils::ExtractType(contextRoot)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, type, populate, contextRoot);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.Deserialize
::Il2CppObject* Pathfinding::Serialization::TinyJsonDeserializer::Deserialize(::System::Type* tp, ::Il2CppObject* populate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tp), ::il2cpp_utils::ExtractType(populate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, tp, populate);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.DeserializeUnityObject
::UnityEngine::Object* Pathfinding::Serialization::TinyJsonDeserializer::DeserializeUnityObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::DeserializeUnityObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeUnityObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.DeserializeUnityObjectInner
::UnityEngine::Object* Pathfinding::Serialization::TinyJsonDeserializer::DeserializeUnityObjectInner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::DeserializeUnityObjectInner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeUnityObjectInner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.EatWhitespace
void Pathfinding::Serialization::TinyJsonDeserializer::EatWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::EatWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.Eat
void Pathfinding::Serialization::TinyJsonDeserializer::Eat(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::Eat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Eat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.EatUntil
::StringW Pathfinding::Serialization::TinyJsonDeserializer::EatUntil(::StringW c, bool inString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::EatUntil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatUntil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(inString)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, c, inString);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.TryEat
bool Pathfinding::Serialization::TinyJsonDeserializer::TryEat(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::TryEat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.EatField
::StringW Pathfinding::Serialization::TinyJsonDeserializer::EatField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::EatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.SkipFieldData
void Pathfinding::Serialization::TinyJsonDeserializer::SkipFieldData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::SkipFieldData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipFieldData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer..cctor
void Pathfinding::Serialization::TinyJsonDeserializer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "TinyJsonDeserializer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.WindowsStore.WindowsStoreCompatibility
#include "Pathfinding/WindowsStore/WindowsStoreCompatibility.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.WindowsStore.WindowsStoreCompatibility.GetTypeFromInfo
::System::Type* Pathfinding::WindowsStore::WindowsStoreCompatibility::GetTypeFromInfo(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WindowsStore::WindowsStoreCompatibility::GetTypeFromInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.WindowsStore", "WindowsStoreCompatibility", "GetTypeFromInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Pathfinding.WindowsStore.WindowsStoreCompatibility.GetTypeInfo
::System::Type* Pathfinding::WindowsStore::WindowsStoreCompatibility::GetTypeInfo(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WindowsStore::WindowsStoreCompatibility::GetTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.WindowsStore", "WindowsStoreCompatibility", "GetTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.PreserveAttribute
#include "Pathfinding/Util/PreserveAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.ListExtensions
#include "Pathfinding/Util/ListExtensions.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.Draw
#include "Pathfinding/Util/Draw.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Pathfinding.Util.Draw Debug
::Pathfinding::Util::Draw* Pathfinding::Util::Draw::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Draw::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Util::Draw*>("Pathfinding.Util", "Draw", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public readonly Pathfinding.Util.Draw Debug
void Pathfinding::Util::Draw::_set_Debug(::Pathfinding::Util::Draw* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Draw::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "Draw", "Debug", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Pathfinding.Util.Draw Gizmos
::Pathfinding::Util::Draw* Pathfinding::Util::Draw::_get_Gizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Draw::_get_Gizmos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Util::Draw*>("Pathfinding.Util", "Draw", "Gizmos"));
}
// Autogenerated static field setter
// Set static field: static public readonly Pathfinding.Util.Draw Gizmos
void Pathfinding::Util::Draw::_set_Gizmos(::Pathfinding::Util::Draw* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Draw::_set_Gizmos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "Draw", "Gizmos", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean gizmos
[[deprecated("Use field access instead!")]] bool& Pathfinding::Util::Draw::dyn_gizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Draw::dyn_gizmos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gizmos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 matrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Pathfinding::Util::Draw::dyn_matrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Draw::dyn_matrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Util.Draw.SetColor
void Pathfinding::Util::Draw::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Draw::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: Pathfinding.Util.Draw.Polyline
void Pathfinding::Util::Draw::Polyline(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points, ::UnityEngine::Color color, bool cycle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Draw::Polyline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Polyline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(cycle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points, color, cycle);
}
// Autogenerated method: Pathfinding.Util.Draw.Line
void Pathfinding::Util::Draw::Line(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Draw::Line");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Line", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b, color);
}
// Autogenerated method: Pathfinding.Util.Draw.CircleXZ
void Pathfinding::Util::Draw::CircleXZ(::UnityEngine::Vector3 center, float radius, ::UnityEngine::Color color, float startAngle, float endAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Draw::CircleXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CircleXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(startAngle), ::il2cpp_utils::ExtractType(endAngle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, center, radius, color, startAngle, endAngle);
}
// Autogenerated method: Pathfinding.Util.Draw.Cylinder
void Pathfinding::Util::Draw::Cylinder(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 up, float height, float radius, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Draw::Cylinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cylinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(up), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, up, height, radius, color);
}
// Autogenerated method: Pathfinding.Util.Draw.CrossXZ
void Pathfinding::Util::Draw::CrossXZ(::UnityEngine::Vector3 position, ::UnityEngine::Color color, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Draw::CrossXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, color, size);
}
// Autogenerated method: Pathfinding.Util.Draw.Bezier
void Pathfinding::Util::Draw::Bezier(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Draw::Bezier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bezier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b, color);
}
// Autogenerated method: Pathfinding.Util.Draw..cctor
void Pathfinding::Util::Draw::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Draw::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Draw", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.MovementUtilities
#include "Pathfinding/Util/MovementUtilities.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Util.MovementUtilities.ClampVelocity
::UnityEngine::Vector2 Pathfinding::Util::MovementUtilities::ClampVelocity(::UnityEngine::Vector2 velocity, float maxSpeed, float slowdownFactor, bool slowWhenNotFacingTarget, ::UnityEngine::Vector2 forward) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::MovementUtilities::ClampVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "MovementUtilities", "ClampVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(maxSpeed), ::il2cpp_utils::ExtractType(slowdownFactor), ::il2cpp_utils::ExtractType(slowWhenNotFacingTarget), ::il2cpp_utils::ExtractType(forward)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, velocity, maxSpeed, slowdownFactor, slowWhenNotFacingTarget, forward);
}
// Autogenerated method: Pathfinding.Util.MovementUtilities.CalculateAccelerationToReachPoint
::UnityEngine::Vector2 Pathfinding::Util::MovementUtilities::CalculateAccelerationToReachPoint(::UnityEngine::Vector2 deltaPosition, ::UnityEngine::Vector2 targetVelocity, ::UnityEngine::Vector2 currentVelocity, float forwardsAcceleration, float rotationSpeed, float maxSpeed, ::UnityEngine::Vector2 forwardsVector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::MovementUtilities::CalculateAccelerationToReachPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "MovementUtilities", "CalculateAccelerationToReachPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaPosition), ::il2cpp_utils::ExtractType(targetVelocity), ::il2cpp_utils::ExtractType(currentVelocity), ::il2cpp_utils::ExtractType(forwardsAcceleration), ::il2cpp_utils::ExtractType(rotationSpeed), ::il2cpp_utils::ExtractType(maxSpeed), ::il2cpp_utils::ExtractType(forwardsVector)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deltaPosition, targetVelocity, currentVelocity, forwardsAcceleration, rotationSpeed, maxSpeed, forwardsVector);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.IAstarPooledObject
#include "Pathfinding/Util/IAstarPooledObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Util.IAstarPooledObject.OnEnterPool
void Pathfinding::Util::IAstarPooledObject::OnEnterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::IAstarPooledObject::OnEnterPool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::IAstarPooledObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.PathInterpolator
#include "Pathfinding/Util/PathInterpolator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Util.IMovementPlane
#include "Pathfinding/Util/IMovementPlane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> path
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Pathfinding::Util::PathInterpolator::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single distanceToSegmentStart
[[deprecated("Use field access instead!")]] float& Pathfinding::Util::PathInterpolator::dyn_distanceToSegmentStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::dyn_distanceToSegmentStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distanceToSegmentStart"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentDistance
[[deprecated("Use field access instead!")]] float& Pathfinding::Util::PathInterpolator::dyn_currentDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::dyn_currentDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentSegmentLength
[[deprecated("Use field access instead!")]] float& Pathfinding::Util::PathInterpolator::dyn_currentSegmentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::dyn_currentSegmentLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSegmentLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single totalDistance
[[deprecated("Use field access instead!")]] float& Pathfinding::Util::PathInterpolator::dyn_totalDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::dyn_totalDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <segmentIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::PathInterpolator::dyn_$segmentIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::dyn_$segmentIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<segmentIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.get_position
::UnityEngine::Vector3 Pathfinding::Util::PathInterpolator::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::get_position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::PathInterpolator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.get_endPoint
::UnityEngine::Vector3 Pathfinding::Util::PathInterpolator::get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::get_endPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.get_tangent
::UnityEngine::Vector3 Pathfinding::Util::PathInterpolator::get_tangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::get_tangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.get_remainingDistance
float Pathfinding::Util::PathInterpolator::get_remainingDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::get_remainingDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_remainingDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.set_remainingDistance
void Pathfinding::Util::PathInterpolator::set_remainingDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::set_remainingDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_remainingDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.get_distance
float Pathfinding::Util::PathInterpolator::get_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::get_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.set_distance
void Pathfinding::Util::PathInterpolator::set_distance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::set_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.get_segmentIndex
int Pathfinding::Util::PathInterpolator::get_segmentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::get_segmentIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_segmentIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.set_segmentIndex
void Pathfinding::Util::PathInterpolator::set_segmentIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::set_segmentIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_segmentIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.get_valid
bool Pathfinding::Util::PathInterpolator::get_valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::get_valid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_valid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.GetRemainingPath
void Pathfinding::Util::PathInterpolator::GetRemainingPath(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::GetRemainingPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemainingPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.SetPath
void Pathfinding::Util::PathInterpolator::SetPath(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::SetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.MoveToSegment
void Pathfinding::Util::PathInterpolator::MoveToSegment(int index, float fractionAlongSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::MoveToSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(fractionAlongSegment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, fractionAlongSegment);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.MoveToClosestPoint
void Pathfinding::Util::PathInterpolator::MoveToClosestPoint(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::MoveToClosestPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToClosestPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.MoveToLocallyClosestPoint
void Pathfinding::Util::PathInterpolator::MoveToLocallyClosestPoint(::UnityEngine::Vector3 point, bool allowForwards, bool allowBackwards) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::MoveToLocallyClosestPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToLocallyClosestPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(allowForwards), ::il2cpp_utils::ExtractType(allowBackwards)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point, allowForwards, allowBackwards);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.MoveToCircleIntersection2D
void Pathfinding::Util::PathInterpolator::MoveToCircleIntersection2D(::UnityEngine::Vector3 circleCenter3D, float radius, ::Pathfinding::Util::IMovementPlane* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::MoveToCircleIntersection2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToCircleIntersection2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(circleCenter3D), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, circleCenter3D, radius, transform);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.PrevSegment
void Pathfinding::Util::PathInterpolator::PrevSegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::PrevSegment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::PathInterpolator*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.PathInterpolator.NextSegment
void Pathfinding::Util::PathInterpolator::NextSegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::PathInterpolator::NextSegment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::PathInterpolator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.IMovementPlane
#include "Pathfinding/Util/IMovementPlane.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Util.IMovementPlane.ToPlane
::UnityEngine::Vector2 Pathfinding::Util::IMovementPlane::ToPlane(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::IMovementPlane::ToPlane");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::IMovementPlane*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.Util.IMovementPlane.ToPlane
::UnityEngine::Vector2 Pathfinding::Util::IMovementPlane::ToPlane(::UnityEngine::Vector3 p, ByRef<float> elevation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::IMovementPlane::ToPlane");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::IMovementPlane*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, p, byref(elevation));
}
// Autogenerated method: Pathfinding.Util.IMovementPlane.ToWorld
::UnityEngine::Vector3 Pathfinding::Util::IMovementPlane::ToWorld(::UnityEngine::Vector2 p, float elevation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::IMovementPlane::ToWorld");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::IMovementPlane*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p, elevation);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.ITransform
#include "Pathfinding/Util/ITransform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Util.ITransform.Transform
::UnityEngine::Vector3 Pathfinding::Util::ITransform::Transform(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::ITransform::Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::ITransform*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.Util.ITransform.InverseTransform
::UnityEngine::Vector3 Pathfinding::Util::ITransform::InverseTransform(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::ITransform::InverseTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::ITransform*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Pathfinding.Util.GraphTransform identityTransform
::Pathfinding::Util::GraphTransform* Pathfinding::Util::GraphTransform::_get_identityTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::_get_identityTransform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Util::GraphTransform*>("Pathfinding.Util", "GraphTransform", "identityTransform"));
}
// Autogenerated static field setter
// Set static field: static public readonly Pathfinding.Util.GraphTransform identityTransform
void Pathfinding::Util::GraphTransform::_set_identityTransform(::Pathfinding::Util::GraphTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::_set_identityTransform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "GraphTransform", "identityTransform", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean identity
[[deprecated("Use field access instead!")]] bool& Pathfinding::Util::GraphTransform::dyn_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::dyn_identity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "identity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean onlyTranslational
[[deprecated("Use field access instead!")]] bool& Pathfinding::Util::GraphTransform::dyn_onlyTranslational() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::dyn_onlyTranslational");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlyTranslational"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean isXY
[[deprecated("Use field access instead!")]] bool& Pathfinding::Util::GraphTransform::dyn_isXY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::dyn_isXY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isXY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean isXZ
[[deprecated("Use field access instead!")]] bool& Pathfinding::Util::GraphTransform::dyn_isXZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::dyn_isXZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isXZ"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Matrix4x4 matrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Pathfinding::Util::GraphTransform::dyn_matrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::dyn_matrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Matrix4x4 inverseMatrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Pathfinding::Util::GraphTransform::dyn_inverseMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::dyn_inverseMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inverseMatrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 up
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Util::GraphTransform::dyn_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::dyn_up");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "up"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 translation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Util::GraphTransform::dyn_translation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::dyn_translation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "translation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.Int3 i3translation
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::Util::GraphTransform::dyn_i3translation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::dyn_i3translation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "i3translation"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Pathfinding::Util::GraphTransform::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Quaternion inverseRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Pathfinding::Util::GraphTransform::dyn_inverseRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::dyn_inverseRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inverseRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Util.GraphTransform.WorldUpAtGraphPosition
::UnityEngine::Vector3 Pathfinding::Util::GraphTransform::WorldUpAtGraphPosition(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::WorldUpAtGraphPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorldUpAtGraphPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point);
}
// Autogenerated method: Pathfinding.Util.GraphTransform.MatrixIsTranslational
bool Pathfinding::Util::GraphTransform::MatrixIsTranslational(::UnityEngine::Matrix4x4 matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::MatrixIsTranslational");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "GraphTransform", "MatrixIsTranslational", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matrix)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matrix);
}
// Autogenerated method: Pathfinding.Util.GraphTransform.Transform
::UnityEngine::Vector3 Pathfinding::Util::GraphTransform::Transform(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::GraphTransform*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point);
}
// Autogenerated method: Pathfinding.Util.GraphTransform.TransformVector
::UnityEngine::Vector3 Pathfinding::Util::GraphTransform::TransformVector(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::TransformVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point);
}
// Autogenerated method: Pathfinding.Util.GraphTransform.Transform
void Pathfinding::Util::GraphTransform::Transform(::ArrayW<::Pathfinding::Int3> arr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arr);
}
// Autogenerated method: Pathfinding.Util.GraphTransform.Transform
void Pathfinding::Util::GraphTransform::Transform(::ArrayW<::UnityEngine::Vector3> arr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arr);
}
// Autogenerated method: Pathfinding.Util.GraphTransform.InverseTransform
::UnityEngine::Vector3 Pathfinding::Util::GraphTransform::InverseTransform(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::InverseTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::GraphTransform*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point);
}
// Autogenerated method: Pathfinding.Util.GraphTransform.InverseTransform
::Pathfinding::Int3 Pathfinding::Util::GraphTransform::InverseTransform(::Pathfinding::Int3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::InverseTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, point);
}
// Autogenerated method: Pathfinding.Util.GraphTransform.InverseTransform
void Pathfinding::Util::GraphTransform::InverseTransform(::ArrayW<::Pathfinding::Int3> arr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::InverseTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arr);
}
// Autogenerated method: Pathfinding.Util.GraphTransform.Transform
::UnityEngine::Bounds Pathfinding::Util::GraphTransform::Transform(::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method, bounds);
}
// Autogenerated method: Pathfinding.Util.GraphTransform.InverseTransform
::UnityEngine::Bounds Pathfinding::Util::GraphTransform::InverseTransform(::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::InverseTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method, bounds);
}
// Autogenerated method: Pathfinding.Util.GraphTransform.Pathfinding.Util.IMovementPlane.ToPlane
::UnityEngine::Vector2 Pathfinding::Util::GraphTransform::Pathfinding_Util_IMovementPlane_ToPlane(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::Pathfinding.Util.IMovementPlane.ToPlane");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::GraphTransform*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, point);
}
// Autogenerated method: Pathfinding.Util.GraphTransform.Pathfinding.Util.IMovementPlane.ToPlane
::UnityEngine::Vector2 Pathfinding::Util::GraphTransform::Pathfinding_Util_IMovementPlane_ToPlane(::UnityEngine::Vector3 point, ByRef<float> elevation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::Pathfinding.Util.IMovementPlane.ToPlane");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::GraphTransform*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, point, byref(elevation));
}
// Autogenerated method: Pathfinding.Util.GraphTransform.Pathfinding.Util.IMovementPlane.ToWorld
::UnityEngine::Vector3 Pathfinding::Util::GraphTransform::Pathfinding_Util_IMovementPlane_ToWorld(::UnityEngine::Vector2 point, float elevation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::Pathfinding.Util.IMovementPlane.ToWorld");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::GraphTransform*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point, elevation);
}
// Autogenerated method: Pathfinding.Util.GraphTransform..cctor
void Pathfinding::Util::GraphTransform::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "GraphTransform", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Util.GraphTransform.op_Multiply
::Pathfinding::Util::GraphTransform* Pathfinding::Util::operator*(::Pathfinding::Util::GraphTransform& lhs, const ::UnityEngine::Matrix4x4& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "GraphTransform", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::GraphTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &lhs, rhs);
}
// Autogenerated method: Pathfinding.Util.GraphTransform.op_Multiply
::Pathfinding::Util::GraphTransform* Pathfinding::Util::operator*(const ::UnityEngine::Matrix4x4& lhs, ::Pathfinding::Util::GraphTransform& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphTransform::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "GraphTransform", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(&rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::GraphTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, &rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.TileHandler
#include "Pathfinding/Util/TileHandler.hpp"
// Including type: Pathfinding.Util.TileHandler/TileType
#include "Pathfinding/Util/TileHandler_TileType.hpp"
// Including type: Pathfinding.Util.TileHandler/CutMode
#include "Pathfinding/Util/TileHandler_CutMode.hpp"
// Including type: Pathfinding.Util.TileHandler/Cut
#include "Pathfinding/Util/TileHandler_Cut.hpp"
// Including type: Pathfinding.Util.TileHandler/CuttingResult
#include "Pathfinding/Util/TileHandler_CuttingResult.hpp"
// Including type: Pathfinding.Util.TileHandler/<>c__DisplayClass37_0
#include "Pathfinding/Util/TileHandler_--c__DisplayClass37_0.hpp"
// Including type: Pathfinding.Util.TileHandler/<>c__DisplayClass41_0
#include "Pathfinding/Util/TileHandler_--c__DisplayClass41_0.hpp"
// Including type: Pathfinding.NavmeshBase
#include "Pathfinding/NavmeshBase.hpp"
// Including type: Pathfinding.ClipperLib.Clipper
#include "Pathfinding/ClipperLib/Clipper.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Pathfinding.Util.GridLookup`1
#include "Pathfinding/Util/GridLookup_1.hpp"
// Including type: Pathfinding.NavmeshClipper
#include "Pathfinding/NavmeshClipper.hpp"
// Including type: Pathfinding.NavmeshTile
#include "Pathfinding/NavmeshTile.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
// Including type: Pathfinding.IntRect
#include "Pathfinding/IntRect.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.NavmeshCut
#include "Pathfinding/NavmeshCut.hpp"
// Including type: Pathfinding.Poly2Tri.Polygon
#include "Pathfinding/Poly2Tri/Polygon.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: Pathfinding.ClipperLib.PolyTree
#include "Pathfinding/ClipperLib/PolyTree.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: Pathfinding.IWorkItemContext
#include "Pathfinding/IWorkItemContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Pathfinding.NavmeshBase graph
[[deprecated("Use field access instead!")]] ::Pathfinding::NavmeshBase*& Pathfinding::Util::TileHandler::dyn_graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::dyn_graph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graph"))->offset;
  return *reinterpret_cast<::Pathfinding::NavmeshBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 tileXCount
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::TileHandler::dyn_tileXCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::dyn_tileXCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tileXCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 tileZCount
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::TileHandler::dyn_tileZCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::dyn_tileZCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tileZCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.ClipperLib.Clipper clipper
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::Clipper*& Pathfinding::Util::TileHandler::dyn_clipper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::dyn_clipper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipper"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::Clipper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<Pathfinding.Int2,System.Int32> cached_Int2_int_dict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Pathfinding::Int2, int>*& Pathfinding::Util::TileHandler::dyn_cached_Int2_int_dict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::dyn_cached_Int2_int_dict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cached_Int2_int_dict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Pathfinding::Int2, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.Util.TileHandler/TileType[] activeTileTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::Util::TileHandler::TileType*>& Pathfinding::Util::TileHandler::dyn_activeTileTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::dyn_activeTileTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeTileTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::Util::TileHandler::TileType*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32[] activeTileRotations
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Util::TileHandler::dyn_activeTileRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::dyn_activeTileRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeTileRotations"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32[] activeTileOffsets
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Util::TileHandler::dyn_activeTileOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::dyn_activeTileOffsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeTileOffsets"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean[] reloadedInBatch
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& Pathfinding::Util::TileHandler::dyn_reloadedInBatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::dyn_reloadedInBatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reloadedInBatch"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Pathfinding.Util.GridLookup`1<Pathfinding.NavmeshClipper> cuts
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::GridLookup_1<::Pathfinding::NavmeshClipper*>*& Pathfinding::Util::TileHandler::dyn_cuts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::dyn_cuts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cuts"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::GridLookup_1<::Pathfinding::NavmeshClipper*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 batchDepth
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::TileHandler::dyn_batchDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::dyn_batchDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "batchDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.Voxels.Int3PolygonClipper simpleClipper
[[deprecated("Use field access instead!")]] ::Pathfinding::Voxels::Int3PolygonClipper& Pathfinding::Util::TileHandler::dyn_simpleClipper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::dyn_simpleClipper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simpleClipper"))->offset;
  return *reinterpret_cast<::Pathfinding::Voxels::Int3PolygonClipper*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Util.TileHandler.get_isBatching
bool Pathfinding::Util::TileHandler::get_isBatching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::get_isBatching");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isBatching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.TileHandler.get_isValid
bool Pathfinding::Util::TileHandler::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::get_isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.TileHandler.OnRecalculatedTiles
void Pathfinding::Util::TileHandler::OnRecalculatedTiles(::ArrayW<::Pathfinding::NavmeshTile*> recalculatedTiles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::OnRecalculatedTiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRecalculatedTiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recalculatedTiles)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recalculatedTiles);
}
// Autogenerated method: Pathfinding.Util.TileHandler.GetActiveRotation
int Pathfinding::Util::TileHandler::GetActiveRotation(::Pathfinding::Int2 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::GetActiveRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActiveRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.Util.TileHandler.RegisterTileType
::Pathfinding::Util::TileHandler::TileType* Pathfinding::Util::TileHandler::RegisterTileType(::UnityEngine::Mesh* source, ::Pathfinding::Int3 centerOffset, int width, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::RegisterTileType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterTileType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(centerOffset), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::TileHandler::TileType*, false>(this, ___internal__method, source, centerOffset, width, depth);
}
// Autogenerated method: Pathfinding.Util.TileHandler.CreateTileTypesFromGraph
void Pathfinding::Util::TileHandler::CreateTileTypesFromGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::CreateTileTypesFromGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTileTypesFromGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.TileHandler.UpdateTileType
void Pathfinding::Util::TileHandler::UpdateTileType(::Pathfinding::NavmeshTile* tile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::UpdateTileType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTileType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tile)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tile);
}
// Autogenerated method: Pathfinding.Util.TileHandler.StartBatchLoad
void Pathfinding::Util::TileHandler::StartBatchLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::StartBatchLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBatchLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.TileHandler.EndBatchLoad
void Pathfinding::Util::TileHandler::EndBatchLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::EndBatchLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndBatchLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.TileHandler.CutPoly
::Pathfinding::Util::TileHandler::CuttingResult Pathfinding::Util::TileHandler::CutPoly(::ArrayW<::Pathfinding::Int3> verts, ::ArrayW<int> tris, ::ArrayW<::Pathfinding::Int3> extraShape, ::Pathfinding::Util::GraphTransform* graphTransform, ::Pathfinding::IntRect tiles, ::Pathfinding::Util::TileHandler::CutMode mode, int perturbate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::CutPoly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CutPoly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(tris), ::il2cpp_utils::ExtractType(extraShape), ::il2cpp_utils::ExtractType(graphTransform), ::il2cpp_utils::ExtractType(tiles), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(perturbate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::TileHandler::CuttingResult, false>(this, ___internal__method, verts, tris, extraShape, graphTransform, tiles, mode, perturbate);
}
// Autogenerated method: Pathfinding.Util.TileHandler.PrepareNavmeshCutsForCutting
::System::Collections::Generic::List_1<::Pathfinding::Util::TileHandler::Cut*>* Pathfinding::Util::TileHandler::PrepareNavmeshCutsForCutting(::System::Collections::Generic::List_1<::Pathfinding::NavmeshCut*>* navmeshCuts, ::Pathfinding::Util::GraphTransform* transform, ::Pathfinding::IntRect cutSpaceBounds, int perturbate, bool anyNavmeshAdds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::PrepareNavmeshCutsForCutting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "TileHandler", "PrepareNavmeshCutsForCutting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(navmeshCuts), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(cutSpaceBounds), ::il2cpp_utils::ExtractType(perturbate), ::il2cpp_utils::ExtractType(anyNavmeshAdds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::Util::TileHandler::Cut*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, navmeshCuts, transform, cutSpaceBounds, perturbate, anyNavmeshAdds);
}
// Autogenerated method: Pathfinding.Util.TileHandler.PoolPolygon
void Pathfinding::Util::TileHandler::PoolPolygon(::Pathfinding::Poly2Tri::Polygon* polygon, ::System::Collections::Generic::Stack_1<::Pathfinding::Poly2Tri::Polygon*>* pool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::PoolPolygon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "TileHandler", "PoolPolygon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(polygon), ::il2cpp_utils::ExtractType(pool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, polygon, pool);
}
// Autogenerated method: Pathfinding.Util.TileHandler.CutAll
void Pathfinding::Util::TileHandler::CutAll(::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>* poly, ::System::Collections::Generic::List_1<int>* intersectingCutIndices, ::System::Collections::Generic::List_1<::Pathfinding::Util::TileHandler::Cut*>* cuts, ::Pathfinding::ClipperLib::PolyTree* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::CutAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CutAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poly), ::il2cpp_utils::ExtractType(intersectingCutIndices), ::il2cpp_utils::ExtractType(cuts), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poly, intersectingCutIndices, cuts, result);
}
// Autogenerated method: Pathfinding.Util.TileHandler.CutDual
void Pathfinding::Util::TileHandler::CutDual(::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>* poly, ::System::Collections::Generic::List_1<int>* tmpIntersectingCuts, ::System::Collections::Generic::List_1<::Pathfinding::Util::TileHandler::Cut*>* cuts, bool hasDual, ::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>*>* intermediateResult, ::Pathfinding::ClipperLib::PolyTree* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::CutDual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CutDual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poly), ::il2cpp_utils::ExtractType(tmpIntersectingCuts), ::il2cpp_utils::ExtractType(cuts), ::il2cpp_utils::ExtractType(hasDual), ::il2cpp_utils::ExtractType(intermediateResult), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poly, tmpIntersectingCuts, cuts, hasDual, intermediateResult, result);
}
// Autogenerated method: Pathfinding.Util.TileHandler.CutExtra
void Pathfinding::Util::TileHandler::CutExtra(::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>* poly, ::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>* extraClipShape, ::Pathfinding::ClipperLib::PolyTree* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::CutExtra");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CutExtra", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poly), ::il2cpp_utils::ExtractType(extraClipShape), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poly, extraClipShape, result);
}
// Autogenerated method: Pathfinding.Util.TileHandler.ClipAgainstRectangle
int Pathfinding::Util::TileHandler::ClipAgainstRectangle(::ArrayW<::Pathfinding::Int3> clipIn, ::ArrayW<::Pathfinding::Int3> clipOut, ::Pathfinding::Int2 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::ClipAgainstRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClipAgainstRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipIn), ::il2cpp_utils::ExtractType(clipOut), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, clipIn, clipOut, size);
}
// Autogenerated method: Pathfinding.Util.TileHandler.CopyMesh
void Pathfinding::Util::TileHandler::CopyMesh(::ArrayW<::Pathfinding::Int3> vertices, ::ArrayW<int> triangles, ::System::Collections::Generic::List_1<::Pathfinding::Int3>* outVertices, ::System::Collections::Generic::List_1<int>* outTriangles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::CopyMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "TileHandler", "CopyMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(outVertices), ::il2cpp_utils::ExtractType(outTriangles)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vertices, triangles, outVertices, outTriangles);
}
// Autogenerated method: Pathfinding.Util.TileHandler.DelaunayRefinement
void Pathfinding::Util::TileHandler::DelaunayRefinement(::ArrayW<::Pathfinding::Int3> verts, ::ArrayW<int> tris, ByRef<int> tCount, bool delaunay, bool colinear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::DelaunayRefinement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelaunayRefinement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(tris), ::il2cpp_utils::ExtractType(tCount), ::il2cpp_utils::ExtractType(delaunay), ::il2cpp_utils::ExtractType(colinear)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, verts, tris, byref(tCount), delaunay, colinear);
}
// Autogenerated method: Pathfinding.Util.TileHandler.ClearTile
void Pathfinding::Util::TileHandler::ClearTile(int x, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::ClearTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z);
}
// Autogenerated method: Pathfinding.Util.TileHandler.ReloadInBounds
void Pathfinding::Util::TileHandler::ReloadInBounds(::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::ReloadInBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadInBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bounds);
}
// Autogenerated method: Pathfinding.Util.TileHandler.ReloadInBounds
void Pathfinding::Util::TileHandler::ReloadInBounds(::Pathfinding::IntRect tiles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::ReloadInBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadInBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tiles)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tiles);
}
// Autogenerated method: Pathfinding.Util.TileHandler.ReloadTile
void Pathfinding::Util::TileHandler::ReloadTile(int x, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::ReloadTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z);
}
// Autogenerated method: Pathfinding.Util.TileHandler.LoadTile
void Pathfinding::Util::TileHandler::LoadTile(::Pathfinding::Util::TileHandler::TileType* tile, int x, int z, int rotation, int yoffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::LoadTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tile), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(yoffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tile, x, z, rotation, yoffset);
}
// Autogenerated method: Pathfinding.Util.TileHandler.<StartBatchLoad>b__23_0
bool Pathfinding::Util::TileHandler::$StartBatchLoad$b__23_0(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::<StartBatchLoad>b__23_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartBatchLoad>b__23_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, force);
}
// Autogenerated method: Pathfinding.Util.TileHandler.<EndBatchLoad>b__24_0
bool Pathfinding::Util::TileHandler::$EndBatchLoad$b__24_0(::Pathfinding::IWorkItemContext* ctx, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::<EndBatchLoad>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<EndBatchLoad>b__24_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(force)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ctx, force);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.TileHandler/TileType
#include "Pathfinding/Util/TileHandler_TileType.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] Rotations
::ArrayW<int> Pathfinding::Util::TileHandler::TileType::_get_Rotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::TileType::_get_Rotations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding.Util", "TileHandler/TileType", "Rotations"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] Rotations
void Pathfinding::Util::TileHandler::TileType::_set_Rotations(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::TileType::_set_Rotations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "TileHandler/TileType", "Rotations", value));
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Int3[] verts
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::Int3>& Pathfinding::Util::TileHandler::TileType::dyn_verts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::TileType::dyn_verts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verts"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::Int3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] tris
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Util::TileHandler::TileType::dyn_tris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::TileType::dyn_tris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tris"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Int3 offset
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::Util::TileHandler::TileType::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::TileType::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastYOffset
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::TileHandler::TileType::dyn_lastYOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::TileType::dyn_lastYOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastYOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastRotation
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::TileHandler::TileType::dyn_lastRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::TileType::dyn_lastRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRotation"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 width
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::TileHandler::TileType::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::TileType::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 depth
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::TileHandler::TileType::dyn_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::TileType::dyn_depth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Util.TileHandler/TileType.get_Width
int Pathfinding::Util::TileHandler::TileType::get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::TileType::get_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.TileHandler/TileType.get_Depth
int Pathfinding::Util::TileHandler::TileType::get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::TileType::get_Depth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.TileHandler/TileType.Load
void Pathfinding::Util::TileHandler::TileType::Load(ByRef<::ArrayW<::Pathfinding::Int3>> verts, ByRef<::ArrayW<int>> tris, int rotation, int yoffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::TileType::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::Pathfinding::Int3>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<int>&>(), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(yoffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(verts), byref(tris), rotation, yoffset);
}
// Autogenerated method: Pathfinding.Util.TileHandler/TileType..cctor
void Pathfinding::Util::TileHandler::TileType::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::TileType::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "TileHandler/TileType", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.TileHandler/CutMode
#include "Pathfinding/Util/TileHandler_CutMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Util.TileHandler/CutMode CutAll
::Pathfinding::Util::TileHandler::CutMode Pathfinding::Util::TileHandler::CutMode::_get_CutAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::CutMode::_get_CutAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Util::TileHandler::CutMode>("Pathfinding.Util", "TileHandler/CutMode", "CutAll"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Util.TileHandler/CutMode CutAll
void Pathfinding::Util::TileHandler::CutMode::_set_CutAll(::Pathfinding::Util::TileHandler::CutMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::CutMode::_set_CutAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "TileHandler/CutMode", "CutAll", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Util.TileHandler/CutMode CutDual
::Pathfinding::Util::TileHandler::CutMode Pathfinding::Util::TileHandler::CutMode::_get_CutDual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::CutMode::_get_CutDual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Util::TileHandler::CutMode>("Pathfinding.Util", "TileHandler/CutMode", "CutDual"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Util.TileHandler/CutMode CutDual
void Pathfinding::Util::TileHandler::CutMode::_set_CutDual(::Pathfinding::Util::TileHandler::CutMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::CutMode::_set_CutDual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "TileHandler/CutMode", "CutDual", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Util.TileHandler/CutMode CutExtra
::Pathfinding::Util::TileHandler::CutMode Pathfinding::Util::TileHandler::CutMode::_get_CutExtra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::CutMode::_get_CutExtra");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Util::TileHandler::CutMode>("Pathfinding.Util", "TileHandler/CutMode", "CutExtra"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Util.TileHandler/CutMode CutExtra
void Pathfinding::Util::TileHandler::CutMode::_set_CutExtra(::Pathfinding::Util::TileHandler::CutMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::CutMode::_set_CutExtra");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "TileHandler/CutMode", "CutExtra", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::TileHandler::CutMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::CutMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.TileHandler/Cut
#include "Pathfinding/Util/TileHandler_Cut.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.IntRect bounds
[[deprecated("Use field access instead!")]] ::Pathfinding::IntRect& Pathfinding::Util::TileHandler::Cut::dyn_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::Cut::dyn_bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bounds"))->offset;
  return *reinterpret_cast<::Pathfinding::IntRect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Int2 boundsY
[[deprecated("Use field access instead!")]] ::Pathfinding::Int2& Pathfinding::Util::TileHandler::Cut::dyn_boundsY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::Cut::dyn_boundsY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boundsY"))->offset;
  return *reinterpret_cast<::Pathfinding::Int2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isDual
[[deprecated("Use field access instead!")]] bool& Pathfinding::Util::TileHandler::Cut::dyn_isDual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::Cut::dyn_isDual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDual"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean cutsAddedGeom
[[deprecated("Use field access instead!")]] bool& Pathfinding::Util::TileHandler::Cut::dyn_cutsAddedGeom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::Cut::dyn_cutsAddedGeom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutsAddedGeom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.ClipperLib.IntPoint> contour
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>*& Pathfinding::Util::TileHandler::Cut::dyn_contour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::Cut::dyn_contour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contour"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.TileHandler/<>c__DisplayClass37_0
#include "Pathfinding/Util/TileHandler_--c__DisplayClass37_0.hpp"
// Including type: Pathfinding.IWorkItemContext
#include "Pathfinding/IWorkItemContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Util.TileHandler <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::TileHandler*& Pathfinding::Util::TileHandler::$$c__DisplayClass37_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::$$c__DisplayClass37_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::TileHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 x
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::TileHandler::$$c__DisplayClass37_0::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::$$c__DisplayClass37_0::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 z
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::TileHandler::$$c__DisplayClass37_0::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::$$c__DisplayClass37_0::dyn_z");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Util.TileHandler/<>c__DisplayClass37_0.<ClearTile>b__0
bool Pathfinding::Util::TileHandler::$$c__DisplayClass37_0::$ClearTile$b__0(::Pathfinding::IWorkItemContext* context, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::$$c__DisplayClass37_0::<ClearTile>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearTile>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(force)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, force);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.TileHandler/<>c__DisplayClass41_0
#include "Pathfinding/Util/TileHandler_--c__DisplayClass41_0.hpp"
// Including type: Pathfinding.IWorkItemContext
#include "Pathfinding/IWorkItemContext.hpp"
// Including type: Pathfinding.Util.TileHandler/TileType
#include "Pathfinding/Util/TileHandler_TileType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Util.TileHandler <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::TileHandler*& Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::TileHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 index
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 yoffset
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::dyn_yoffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::dyn_yoffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yoffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 rotation
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Util.TileHandler/TileType tile
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::TileHandler::TileType*& Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::dyn_tile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::dyn_tile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tile"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::TileHandler::TileType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 x
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 z
[[deprecated("Use field access instead!")]] int& Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::dyn_z");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Util.TileHandler/<>c__DisplayClass41_0.<LoadTile>b__0
bool Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::$LoadTile$b__0(::Pathfinding::IWorkItemContext* context, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::TileHandler::$$c__DisplayClass41_0::<LoadTile>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadTile>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(force)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, force);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.Checksum
#include "Pathfinding/Util/Checksum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Util.Checksum.GetChecksum
uint Pathfinding::Util::Checksum::GetChecksum(::ArrayW<uint8_t> arr, uint hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Checksum::GetChecksum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Checksum", "GetChecksum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arr), ::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arr, hash);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.Memory
#include "Pathfinding/Util/Memory.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
