// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.Photon.Realtime.MonoBehaviourEmpty/<>c__DisplayClass6_0/<<StartCoroutineAndDestroy>g__Routine|0>d
#include "Fusion/Photon/Realtime/MonoBehaviourEmpty_--c__DisplayClass6_0_--StartCoroutineAndDestroy-g__Routine-0-d.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Photon.Realtime.MonoBehaviourEmpty/<>c__DisplayClass6_0 <>4__this
[[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0*& Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Photon.Realtime.MonoBehaviourEmpty/<>c__DisplayClass6_0/<<StartCoroutineAndDestroy>g__Routine|0>d.System.IDisposable.Dispose
void Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.MonoBehaviourEmpty/<>c__DisplayClass6_0/<<StartCoroutineAndDestroy>g__Routine|0>d.MoveNext
bool Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.MonoBehaviourEmpty/<>c__DisplayClass6_0/<<StartCoroutineAndDestroy>g__Routine|0>d.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.MonoBehaviourEmpty/<>c__DisplayClass6_0/<<StartCoroutineAndDestroy>g__Routine|0>d.System.Collections.IEnumerator.Reset
void Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.MonoBehaviourEmpty/<>c__DisplayClass6_0/<<StartCoroutineAndDestroy>g__Routine|0>d.System.Collections.IEnumerator.get_Current
::Il2CppObject* Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::MonoBehaviourEmpty::$$c__DisplayClass6_0::$$StartCoroutineAndDestroy$g__Routine|0$d*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Room
#include "Fusion/Photon/Realtime/Room.hpp"
// Including type: Fusion.Photon.Realtime.LoadBalancingClient
#include "Fusion/Photon/Realtime/LoadBalancingClient.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Fusion.Photon.Realtime.Player
#include "Fusion/Photon/Realtime/Player.hpp"
// Including type: Fusion.Photon.Realtime.RoomOptions
#include "Fusion/Photon/Realtime/RoomOptions.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Fusion.Photon.Realtime.WebFlags
#include "Fusion/Photon/Realtime/WebFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Fusion.Photon.Realtime.LoadBalancingClient <LoadBalancingClient>k__BackingField
[[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::LoadBalancingClient*& Fusion::Photon::Realtime::Room::dyn_$LoadBalancingClient$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::dyn_$LoadBalancingClient$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LoadBalancingClient>k__BackingField"))->offset;
  return *reinterpret_cast<::Fusion::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isOffline
[[deprecated("Use field access instead!")]] bool& Fusion::Photon::Realtime::Room::dyn_isOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::dyn_isOffline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOffline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,Fusion.Photon.Realtime.Player> players
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::Fusion::Photon::Realtime::Player*>*& Fusion::Photon::Realtime::Room::dyn_players() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::dyn_players");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "players"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::Fusion::Photon::Realtime::Player*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <BroadcastPropertiesChangeToAll>k__BackingField
[[deprecated("Use field access instead!")]] bool& Fusion::Photon::Realtime::Room::dyn_$BroadcastPropertiesChangeToAll$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::dyn_$BroadcastPropertiesChangeToAll$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BroadcastPropertiesChangeToAll>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SuppressRoomEvents>k__BackingField
[[deprecated("Use field access instead!")]] bool& Fusion::Photon::Realtime::Room::dyn_$SuppressRoomEvents$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::dyn_$SuppressRoomEvents$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SuppressRoomEvents>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SuppressPlayerInfo>k__BackingField
[[deprecated("Use field access instead!")]] bool& Fusion::Photon::Realtime::Room::dyn_$SuppressPlayerInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::dyn_$SuppressPlayerInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SuppressPlayerInfo>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <PublishUserId>k__BackingField
[[deprecated("Use field access instead!")]] bool& Fusion::Photon::Realtime::Room::dyn_$PublishUserId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::dyn_$PublishUserId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PublishUserId>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <DeleteNullProperties>k__BackingField
[[deprecated("Use field access instead!")]] bool& Fusion::Photon::Realtime::Room::dyn_$DeleteNullProperties$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::dyn_$DeleteNullProperties$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DeleteNullProperties>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_LoadBalancingClient
::Fusion::Photon::Realtime::LoadBalancingClient* Fusion::Photon::Realtime::Room::get_LoadBalancingClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_LoadBalancingClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoadBalancingClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Photon::Realtime::LoadBalancingClient*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.set_LoadBalancingClient
void Fusion::Photon::Realtime::Room::set_LoadBalancingClient(::Fusion::Photon::Realtime::LoadBalancingClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::set_LoadBalancingClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LoadBalancingClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.set_Name
void Fusion::Photon::Realtime::Room::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_IsOffline
bool Fusion::Photon::Realtime::Room::get_IsOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_IsOffline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOffline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.set_IsOffline
void Fusion::Photon::Realtime::Room::set_IsOffline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::set_IsOffline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsOffline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.set_IsOpen
void Fusion::Photon::Realtime::Room::set_IsOpen(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::set_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.set_IsVisible
void Fusion::Photon::Realtime::Room::set_IsVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::set_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.set_MaxPlayers
void Fusion::Photon::Realtime::Room::set_MaxPlayers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::set_MaxPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_Players
::System::Collections::Generic::Dictionary_2<int, ::Fusion::Photon::Realtime::Player*>* Fusion::Photon::Realtime::Room::get_Players() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_Players");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Players", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<int, ::Fusion::Photon::Realtime::Player*>*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.set_Players
void Fusion::Photon::Realtime::Room::set_Players(::System::Collections::Generic::Dictionary_2<int, ::Fusion::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::set_Players");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Players", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_ExpectedUsers
::ArrayW<::StringW> Fusion::Photon::Realtime::Room::get_ExpectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_ExpectedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_PlayerTtl
int Fusion::Photon::Realtime::Room::get_PlayerTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_PlayerTtl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayerTtl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.set_PlayerTtl
void Fusion::Photon::Realtime::Room::set_PlayerTtl(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::set_PlayerTtl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayerTtl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_EmptyRoomTtl
int Fusion::Photon::Realtime::Room::get_EmptyRoomTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_EmptyRoomTtl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EmptyRoomTtl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.set_EmptyRoomTtl
void Fusion::Photon::Realtime::Room::set_EmptyRoomTtl(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::set_EmptyRoomTtl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EmptyRoomTtl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_MasterClientId
int Fusion::Photon::Realtime::Room::get_MasterClientId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_MasterClientId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MasterClientId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_PropertiesListedInLobby
::ArrayW<::StringW> Fusion::Photon::Realtime::Room::get_PropertiesListedInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_PropertiesListedInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertiesListedInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.set_PropertiesListedInLobby
void Fusion::Photon::Realtime::Room::set_PropertiesListedInLobby(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::set_PropertiesListedInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PropertiesListedInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_AutoCleanUp
bool Fusion::Photon::Realtime::Room::get_AutoCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_AutoCleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoCleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_BroadcastPropertiesChangeToAll
bool Fusion::Photon::Realtime::Room::get_BroadcastPropertiesChangeToAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_BroadcastPropertiesChangeToAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BroadcastPropertiesChangeToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.set_BroadcastPropertiesChangeToAll
void Fusion::Photon::Realtime::Room::set_BroadcastPropertiesChangeToAll(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::set_BroadcastPropertiesChangeToAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BroadcastPropertiesChangeToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_SuppressRoomEvents
bool Fusion::Photon::Realtime::Room::get_SuppressRoomEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_SuppressRoomEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SuppressRoomEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.set_SuppressRoomEvents
void Fusion::Photon::Realtime::Room::set_SuppressRoomEvents(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::set_SuppressRoomEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SuppressRoomEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_SuppressPlayerInfo
bool Fusion::Photon::Realtime::Room::get_SuppressPlayerInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_SuppressPlayerInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SuppressPlayerInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.set_SuppressPlayerInfo
void Fusion::Photon::Realtime::Room::set_SuppressPlayerInfo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::set_SuppressPlayerInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SuppressPlayerInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_PublishUserId
bool Fusion::Photon::Realtime::Room::get_PublishUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_PublishUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublishUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.set_PublishUserId
void Fusion::Photon::Realtime::Room::set_PublishUserId(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::set_PublishUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PublishUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_DeleteNullProperties
bool Fusion::Photon::Realtime::Room::get_DeleteNullProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_DeleteNullProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeleteNullProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.set_DeleteNullProperties
void Fusion::Photon::Realtime::Room::set_DeleteNullProperties(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::set_DeleteNullProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DeleteNullProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.InternalCacheRoomFlags
void Fusion::Photon::Realtime::Room::InternalCacheRoomFlags(int roomFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::InternalCacheRoomFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCacheRoomFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomFlags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomFlags);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.SetCustomProperties
bool Fusion::Photon::Realtime::Room::SetCustomProperties(::ExitGames::Client::Photon::Hashtable* propertiesToSet, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Fusion::Photon::Realtime::WebFlags* webFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::SetCustomProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Room*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, propertiesToSet, expectedProperties, webFlags);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.SetPropertiesListedInLobby
bool Fusion::Photon::Realtime::Room::SetPropertiesListedInLobby(::ArrayW<::StringW> lobbyProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::SetPropertiesListedInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPropertiesListedInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyProps)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lobbyProps);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.RemovePlayer
void Fusion::Photon::Realtime::Room::RemovePlayer(::Fusion::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::RemovePlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Room*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.RemovePlayer
void Fusion::Photon::Realtime::Room::RemovePlayer(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::RemovePlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Room*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.SetMasterClient
bool Fusion::Photon::Realtime::Room::SetMasterClient(::Fusion::Photon::Realtime::Player* masterClientPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::SetMasterClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMasterClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(masterClientPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, masterClientPlayer);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.AddPlayer
bool Fusion::Photon::Realtime::Room::AddPlayer(::Fusion::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::AddPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Room*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.StorePlayer
::Fusion::Photon::Realtime::Player* Fusion::Photon::Realtime::Room::StorePlayer(::Fusion::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::StorePlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Room*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Photon::Realtime::Player*, false>(this, ___internal__method, player);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.GetPlayer
::Fusion::Photon::Realtime::Player* Fusion::Photon::Realtime::Room::GetPlayer(int id, bool findMaster) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::GetPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Room*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Photon::Realtime::Player*, false>(this, ___internal__method, id, findMaster);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.ClearExpectedUsers
bool Fusion::Photon::Realtime::Room::ClearExpectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::ClearExpectedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearExpectedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.SetExpectedUsers
bool Fusion::Photon::Realtime::Room::SetExpectedUsers(::ArrayW<::StringW> newExpectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::SetExpectedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExpectedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newExpectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, newExpectedUsers);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.SetExpectedUsers
bool Fusion::Photon::Realtime::Room::SetExpectedUsers(::ArrayW<::StringW> newExpectedUsers, ::ArrayW<::StringW> oldExpectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::SetExpectedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExpectedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newExpectedUsers), ::il2cpp_utils::ExtractType(oldExpectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, newExpectedUsers, oldExpectedUsers);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_Name
::StringW Fusion::Photon::Realtime::Room::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_IsOpen
bool Fusion::Photon::Realtime::Room::get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_IsVisible
bool Fusion::Photon::Realtime::Room::get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_MaxPlayers
int Fusion::Photon::Realtime::Room::get_MaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_MaxPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.get_PlayerCount
int Fusion::Photon::Realtime::Room::get_PlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::get_PlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.InternalCacheProperties
void Fusion::Photon::Realtime::Room::InternalCacheProperties(::ExitGames::Client::Photon::Hashtable* propertiesToCache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::InternalCacheProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::RoomInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesToCache);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.ToString
::StringW Fusion::Photon::Realtime::Room::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::RoomInfo*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Room.ToStringFull
::StringW Fusion::Photon::Realtime::Room::ToStringFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Room::ToStringFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.Photon.Realtime.RoomInfo
#include "Fusion/Photon/Realtime/RoomInfo.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean RemovedFromList
[[deprecated("Use field access instead!")]] bool& Fusion::Photon::Realtime::RoomInfo::dyn_RemovedFromList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::dyn_RemovedFromList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RemovedFromList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.Hashtable customProperties
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Hashtable*& Fusion::Photon::Realtime::RoomInfo::dyn_customProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::dyn_customProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customProperties"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 maxPlayers
[[deprecated("Use field access instead!")]] int& Fusion::Photon::Realtime::RoomInfo::dyn_maxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::dyn_maxPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPlayers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 emptyRoomTtl
[[deprecated("Use field access instead!")]] int& Fusion::Photon::Realtime::RoomInfo::dyn_emptyRoomTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::dyn_emptyRoomTtl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emptyRoomTtl"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 playerTtl
[[deprecated("Use field access instead!")]] int& Fusion::Photon::Realtime::RoomInfo::dyn_playerTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::dyn_playerTtl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerTtl"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String[] expectedUsers
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Fusion::Photon::Realtime::RoomInfo::dyn_expectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::dyn_expectedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expectedUsers"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean isOpen
[[deprecated("Use field access instead!")]] bool& Fusion::Photon::Realtime::RoomInfo::dyn_isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::dyn_isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean isVisible
[[deprecated("Use field access instead!")]] bool& Fusion::Photon::Realtime::RoomInfo::dyn_isVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::dyn_isVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean autoCleanUp
[[deprecated("Use field access instead!")]] bool& Fusion::Photon::Realtime::RoomInfo::dyn_autoCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::dyn_autoCleanUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoCleanUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String name
[[deprecated("Use field access instead!")]] ::StringW& Fusion::Photon::Realtime::RoomInfo::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 masterClientId
[[deprecated("Use field access instead!")]] int& Fusion::Photon::Realtime::RoomInfo::dyn_masterClientId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::dyn_masterClientId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "masterClientId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String[] propertiesListedInLobby
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Fusion::Photon::Realtime::RoomInfo::dyn_propertiesListedInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::dyn_propertiesListedInLobby");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertiesListedInLobby"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <PlayerCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::Photon::Realtime::RoomInfo::dyn_$PlayerCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::dyn_$PlayerCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlayerCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Photon.Realtime.RoomInfo.get_CustomProperties
::ExitGames::Client::Photon::Hashtable* Fusion::Photon::Realtime::RoomInfo::get_CustomProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::get_CustomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::Hashtable*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.RoomInfo.get_Name
::StringW Fusion::Photon::Realtime::RoomInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.RoomInfo.get_PlayerCount
int Fusion::Photon::Realtime::RoomInfo::get_PlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::get_PlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.RoomInfo.set_PlayerCount
void Fusion::Photon::Realtime::RoomInfo::set_PlayerCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::set_PlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.RoomInfo.get_MaxPlayers
int Fusion::Photon::Realtime::RoomInfo::get_MaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::get_MaxPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.RoomInfo.get_IsOpen
bool Fusion::Photon::Realtime::RoomInfo::get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::get_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.RoomInfo.get_IsVisible
bool Fusion::Photon::Realtime::RoomInfo::get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::get_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.RoomInfo.ToStringFull
::StringW Fusion::Photon::Realtime::RoomInfo::ToStringFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::ToStringFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.RoomInfo.InternalCacheProperties
void Fusion::Photon::Realtime::RoomInfo::InternalCacheProperties(::ExitGames::Client::Photon::Hashtable* propertiesToCache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::InternalCacheProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::RoomInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesToCache);
}
// Autogenerated method: Fusion.Photon.Realtime.RoomInfo.Equals
bool Fusion::Photon::Realtime::RoomInfo::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Fusion.Photon.Realtime.RoomInfo.GetHashCode
int Fusion::Photon::Realtime::RoomInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.RoomInfo.ToString
::StringW Fusion::Photon::Realtime::RoomInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::RoomInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.Photon.Realtime.SupportLogger
#include "Fusion/Photon/Realtime/SupportLogger.hpp"
// Including type: Fusion.Photon.Realtime.LoadBalancingClient
#include "Fusion/Photon/Realtime/LoadBalancingClient.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Fusion.Photon.Realtime.FriendInfo
#include "Fusion/Photon/Realtime/FriendInfo.hpp"
// Including type: Fusion.Photon.Realtime.DisconnectCause
#include "Fusion/Photon/Realtime/DisconnectCause.hpp"
// Including type: Fusion.Photon.Realtime.RegionHandler
#include "Fusion/Photon/Realtime/RegionHandler.hpp"
// Including type: Fusion.Photon.Realtime.RoomInfo
#include "Fusion/Photon/Realtime/RoomInfo.hpp"
// Including type: Fusion.Photon.Realtime.Player
#include "Fusion/Photon/Realtime/Player.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Fusion.Photon.Realtime.TypedLobbyInfo
#include "Fusion/Photon/Realtime/TypedLobbyInfo.hpp"
// Including type: Fusion.Photon.Realtime.ErrorInfo
#include "Fusion/Photon/Realtime/ErrorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean LogTrafficStats
[[deprecated("Use field access instead!")]] bool& Fusion::Photon::Realtime::SupportLogger::dyn_LogTrafficStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::dyn_LogTrafficStats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LogTrafficStats"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::LoadBalancingClient*& Fusion::Photon::Realtime::SupportLogger::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Fusion::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Stopwatch startStopwatch
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& Fusion::Photon::Realtime::SupportLogger::dyn_startStopwatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::dyn_startStopwatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startStopwatch"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialOnApplicationPauseSkipped
[[deprecated("Use field access instead!")]] bool& Fusion::Photon::Realtime::SupportLogger::dyn_initialOnApplicationPauseSkipped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::dyn_initialOnApplicationPauseSkipped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialOnApplicationPauseSkipped"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pingMax
[[deprecated("Use field access instead!")]] int& Fusion::Photon::Realtime::SupportLogger::dyn_pingMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::dyn_pingMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingMax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pingMin
[[deprecated("Use field access instead!")]] int& Fusion::Photon::Realtime::SupportLogger::dyn_pingMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::dyn_pingMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingMin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.get_Client
::Fusion::Photon::Realtime::LoadBalancingClient* Fusion::Photon::Realtime::SupportLogger::get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::get_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Photon::Realtime::LoadBalancingClient*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.set_Client
void Fusion::Photon::Realtime::SupportLogger::set_Client(::Fusion::Photon::Realtime::LoadBalancingClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::set_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.Start
void Fusion::Photon::Realtime::SupportLogger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnDestroy
void Fusion::Photon::Realtime::SupportLogger::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnApplicationPause
void Fusion::Photon::Realtime::SupportLogger::OnApplicationPause(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnApplicationQuit
void Fusion::Photon::Realtime::SupportLogger::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.StartLogStats
void Fusion::Photon::Realtime::SupportLogger::StartLogStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::StartLogStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLogStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.StopLogStats
void Fusion::Photon::Realtime::SupportLogger::StopLogStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::StopLogStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopLogStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.StartTrackValues
void Fusion::Photon::Realtime::SupportLogger::StartTrackValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::StartTrackValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTrackValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.StopTrackValues
void Fusion::Photon::Realtime::SupportLogger::StopTrackValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::StopTrackValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopTrackValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.GetFormattedTimestamp
::StringW Fusion::Photon::Realtime::SupportLogger::GetFormattedTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::GetFormattedTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFormattedTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.TrackValues
void Fusion::Photon::Realtime::SupportLogger::TrackValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::TrackValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.LogStats
void Fusion::Photon::Realtime::SupportLogger::LogStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::LogStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.LogBasics
void Fusion::Photon::Realtime::SupportLogger::LogBasics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::LogBasics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogBasics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnConnected
void Fusion::Photon::Realtime::SupportLogger::OnConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnConnectedToMaster
void Fusion::Photon::Realtime::SupportLogger::OnConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnConnectedToMaster");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnFriendListUpdate
void Fusion::Photon::Realtime::SupportLogger::OnFriendListUpdate(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnJoinedLobby
void Fusion::Photon::Realtime::SupportLogger::OnJoinedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnJoinedLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnLeftLobby
void Fusion::Photon::Realtime::SupportLogger::OnLeftLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnLeftLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnCreateRoomFailed
void Fusion::Photon::Realtime::SupportLogger::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnJoinedRoom
void Fusion::Photon::Realtime::SupportLogger::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnJoinRoomFailed
void Fusion::Photon::Realtime::SupportLogger::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnJoinRandomFailed
void Fusion::Photon::Realtime::SupportLogger::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnCreatedRoom
void Fusion::Photon::Realtime::SupportLogger::OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnLeftRoom
void Fusion::Photon::Realtime::SupportLogger::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnDisconnected
void Fusion::Photon::Realtime::SupportLogger::OnDisconnected(::Fusion::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnRegionListReceived
void Fusion::Photon::Realtime::SupportLogger::OnRegionListReceived(::Fusion::Photon::Realtime::RegionHandler* regionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnRegionListReceived");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regionHandler);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnRoomListUpdate
void Fusion::Photon::Realtime::SupportLogger::OnRoomListUpdate(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::RoomInfo*>* roomList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnRoomListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomList);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnPlayerEnteredRoom
void Fusion::Photon::Realtime::SupportLogger::OnPlayerEnteredRoom(::Fusion::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnPlayerLeftRoom
void Fusion::Photon::Realtime::SupportLogger::OnPlayerLeftRoom(::Fusion::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnRoomPropertiesUpdate
void Fusion::Photon::Realtime::SupportLogger::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnPlayerPropertiesUpdate
void Fusion::Photon::Realtime::SupportLogger::OnPlayerPropertiesUpdate(::Fusion::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnMasterClientSwitched
void Fusion::Photon::Realtime::SupportLogger::OnMasterClientSwitched(::Fusion::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnCustomAuthenticationResponse
void Fusion::Photon::Realtime::SupportLogger::OnCustomAuthenticationResponse(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnCustomAuthenticationResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnCustomAuthenticationFailed
void Fusion::Photon::Realtime::SupportLogger::OnCustomAuthenticationFailed(::StringW debugMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnCustomAuthenticationFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, debugMessage);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnLobbyStatisticsUpdate
void Fusion::Photon::Realtime::SupportLogger::OnLobbyStatisticsUpdate(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::TypedLobbyInfo*>* lobbyStatistics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnLobbyStatisticsUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyStatistics);
}
// Autogenerated method: Fusion.Photon.Realtime.SupportLogger.OnErrorInfo
void Fusion::Photon::Realtime::SupportLogger::OnErrorInfo(::Fusion::Photon::Realtime::ErrorInfo* errorInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::SupportLogger::OnErrorInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::SupportLogger*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.Photon.Realtime.WebRpcResponse
#include "Fusion/Photon/Realtime/WebRpcResponse.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Fusion::Photon::Realtime::WebRpcResponse::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebRpcResponse::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <ResultCode>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::Photon::Realtime::WebRpcResponse::dyn_$ResultCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebRpcResponse::dyn_$ResultCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ResultCode>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Message>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Fusion::Photon::Realtime::WebRpcResponse::dyn_$Message$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebRpcResponse::dyn_$Message$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Message>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Object> <Parameters>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*& Fusion::Photon::Realtime::WebRpcResponse::dyn_$Parameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebRpcResponse::dyn_$Parameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parameters>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Photon.Realtime.WebRpcResponse.get_Name
::StringW Fusion::Photon::Realtime::WebRpcResponse::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebRpcResponse::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.WebRpcResponse.set_Name
void Fusion::Photon::Realtime::WebRpcResponse::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebRpcResponse::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.WebRpcResponse.get_ResultCode
int Fusion::Photon::Realtime::WebRpcResponse::get_ResultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebRpcResponse::get_ResultCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.WebRpcResponse.set_ResultCode
void Fusion::Photon::Realtime::WebRpcResponse::set_ResultCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebRpcResponse::set_ResultCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.WebRpcResponse.get_ReturnCode
int Fusion::Photon::Realtime::WebRpcResponse::get_ReturnCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebRpcResponse::get_ReturnCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.WebRpcResponse.get_Message
::StringW Fusion::Photon::Realtime::WebRpcResponse::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebRpcResponse::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.WebRpcResponse.set_Message
void Fusion::Photon::Realtime::WebRpcResponse::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebRpcResponse::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.WebRpcResponse.get_DebugMessage
::StringW Fusion::Photon::Realtime::WebRpcResponse::get_DebugMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebRpcResponse::get_DebugMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DebugMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.WebRpcResponse.get_Parameters
::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* Fusion::Photon::Realtime::WebRpcResponse::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebRpcResponse::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.WebRpcResponse.set_Parameters
void Fusion::Photon::Realtime::WebRpcResponse::set_Parameters(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebRpcResponse::set_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.WebRpcResponse.ToStringFull
::StringW Fusion::Photon::Realtime::WebRpcResponse::ToStringFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebRpcResponse::ToStringFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.WebFlags
#include "Fusion/Photon/Realtime/WebFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Fusion.Photon.Realtime.WebFlags Default
::Fusion::Photon::Realtime::WebFlags* Fusion::Photon::Realtime::WebFlags::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Photon::Realtime::WebFlags*>("Fusion.Photon.Realtime", "WebFlags", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly Fusion.Photon.Realtime.WebFlags Default
void Fusion::Photon::Realtime::WebFlags::_set_Default(::Fusion::Photon::Realtime::WebFlags* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime", "WebFlags", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte HttpForwardConst
uint8_t Fusion::Photon::Realtime::WebFlags::_get_HttpForwardConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::_get_HttpForwardConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Fusion.Photon.Realtime", "WebFlags", "HttpForwardConst"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte HttpForwardConst
void Fusion::Photon::Realtime::WebFlags::_set_HttpForwardConst(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::_set_HttpForwardConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime", "WebFlags", "HttpForwardConst", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SendAuthCookieConst
uint8_t Fusion::Photon::Realtime::WebFlags::_get_SendAuthCookieConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::_get_SendAuthCookieConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Fusion.Photon.Realtime", "WebFlags", "SendAuthCookieConst"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SendAuthCookieConst
void Fusion::Photon::Realtime::WebFlags::_set_SendAuthCookieConst(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::_set_SendAuthCookieConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime", "WebFlags", "SendAuthCookieConst", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SendSyncConst
uint8_t Fusion::Photon::Realtime::WebFlags::_get_SendSyncConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::_get_SendSyncConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Fusion.Photon.Realtime", "WebFlags", "SendSyncConst"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SendSyncConst
void Fusion::Photon::Realtime::WebFlags::_set_SendSyncConst(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::_set_SendSyncConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime", "WebFlags", "SendSyncConst", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SendStateConst
uint8_t Fusion::Photon::Realtime::WebFlags::_get_SendStateConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::_get_SendStateConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Fusion.Photon.Realtime", "WebFlags", "SendStateConst"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SendStateConst
void Fusion::Photon::Realtime::WebFlags::_set_SendStateConst(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::_set_SendStateConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime", "WebFlags", "SendStateConst", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte WebhookFlags
[[deprecated("Use field access instead!")]] uint8_t& Fusion::Photon::Realtime::WebFlags::dyn_WebhookFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::dyn_WebhookFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WebhookFlags"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Photon.Realtime.WebFlags.get_HttpForward
bool Fusion::Photon::Realtime::WebFlags::get_HttpForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::get_HttpForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HttpForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.WebFlags.set_HttpForward
void Fusion::Photon::Realtime::WebFlags::set_HttpForward(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::set_HttpForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HttpForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.WebFlags.get_SendAuthCookie
bool Fusion::Photon::Realtime::WebFlags::get_SendAuthCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::get_SendAuthCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendAuthCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.WebFlags.set_SendAuthCookie
void Fusion::Photon::Realtime::WebFlags::set_SendAuthCookie(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::set_SendAuthCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendAuthCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.WebFlags.get_SendSync
bool Fusion::Photon::Realtime::WebFlags::get_SendSync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::get_SendSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.WebFlags.set_SendSync
void Fusion::Photon::Realtime::WebFlags::set_SendSync(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::set_SendSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.WebFlags.get_SendState
bool Fusion::Photon::Realtime::WebFlags::get_SendState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::get_SendState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.WebFlags.set_SendState
void Fusion::Photon::Realtime::WebFlags::set_SendState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::set_SendState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.WebFlags..cctor
void Fusion::Photon::Realtime::WebFlags::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::WebFlags::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime", "WebFlags", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.PhotonAppSettings
#include "Fusion/Photon/Realtime/PhotonAppSettings.hpp"
// Including type: Fusion.Photon.Realtime.AppSettings
#include "Fusion/Photon/Realtime/AppSettings.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Fusion.Photon.Realtime.PhotonAppSettings _instance
::Fusion::Photon::Realtime::PhotonAppSettings* Fusion::Photon::Realtime::PhotonAppSettings::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::PhotonAppSettings::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Photon::Realtime::PhotonAppSettings*>("Fusion.Photon.Realtime", "PhotonAppSettings", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Fusion.Photon.Realtime.PhotonAppSettings _instance
void Fusion::Photon::Realtime::PhotonAppSettings::_set__instance(::Fusion::Photon::Realtime::PhotonAppSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::PhotonAppSettings::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime", "PhotonAppSettings", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ExpectedResourceName
::StringW Fusion::Photon::Realtime::PhotonAppSettings::_get_ExpectedResourceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::PhotonAppSettings::_get_ExpectedResourceName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Fusion.Photon.Realtime", "PhotonAppSettings", "ExpectedResourceName"));
}
// Autogenerated static field setter
// Set static field: static public System.String ExpectedResourceName
void Fusion::Photon::Realtime::PhotonAppSettings::_set_ExpectedResourceName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::PhotonAppSettings::_set_ExpectedResourceName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime", "PhotonAppSettings", "ExpectedResourceName", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ExpectedAssetName
::StringW Fusion::Photon::Realtime::PhotonAppSettings::_get_ExpectedAssetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::PhotonAppSettings::_get_ExpectedAssetName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Fusion.Photon.Realtime", "PhotonAppSettings", "ExpectedAssetName"));
}
// Autogenerated static field setter
// Set static field: static public System.String ExpectedAssetName
void Fusion::Photon::Realtime::PhotonAppSettings::_set_ExpectedAssetName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::PhotonAppSettings::_set_ExpectedAssetName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime", "PhotonAppSettings", "ExpectedAssetName", value));
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Photon.Realtime.AppSettings AppSettings
[[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::AppSettings*& Fusion::Photon::Realtime::PhotonAppSettings::dyn_AppSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::PhotonAppSettings::dyn_AppSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppSettings"))->offset;
  return *reinterpret_cast<::Fusion::Photon::Realtime::AppSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Photon.Realtime.PhotonAppSettings.get_Instance
::Fusion::Photon::Realtime::PhotonAppSettings* Fusion::Photon::Realtime::PhotonAppSettings::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::PhotonAppSettings::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime", "PhotonAppSettings", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Photon::Realtime::PhotonAppSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.PhotonAppSettings.set_Instance
void Fusion::Photon::Realtime::PhotonAppSettings::set_Instance(::Fusion::Photon::Realtime::PhotonAppSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::PhotonAppSettings::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime", "PhotonAppSettings", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Extension.RealtimeExtensions_Hashtable
#include "Fusion/Photon/Realtime/Extension/RealtimeExtensions_Hashtable.hpp"
// Including type: ExitGames.Client.Photon.StreamBuffer
#include "ExitGames/Client/Photon/StreamBuffer.hpp"
// Including type: ExitGames.Client.Photon.Protocol18
#include "ExitGames/Client/Photon/Protocol18.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Fusion.SessionProperty
#include "Fusion/SessionProperty.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly ExitGames.Client.Photon.StreamBuffer buffer
::ExitGames::Client::Photon::StreamBuffer* Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::_get_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::_get_buffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExitGames::Client::Photon::StreamBuffer*>("Fusion.Photon.Realtime.Extension", "RealtimeExtensions_Hashtable", "buffer"));
}
// Autogenerated static field setter
// Set static field: static private readonly ExitGames.Client.Photon.StreamBuffer buffer
void Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::_set_buffer(::ExitGames::Client::Photon::StreamBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::_set_buffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Extension", "RealtimeExtensions_Hashtable", "buffer", value));
}
// Autogenerated static field getter
// Get static field: static private readonly ExitGames.Client.Photon.Protocol18 protocol
::ExitGames::Client::Photon::Protocol18* Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::_get_protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::_get_protocol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExitGames::Client::Photon::Protocol18*>("Fusion.Photon.Realtime.Extension", "RealtimeExtensions_Hashtable", "protocol"));
}
// Autogenerated static field setter
// Set static field: static private readonly ExitGames.Client.Photon.Protocol18 protocol
void Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::_set_protocol(::ExitGames::Client::Photon::Protocol18* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::_set_protocol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Extension", "RealtimeExtensions_Hashtable", "protocol", value));
}
// Autogenerated method: Fusion.Photon.Realtime.Extension.RealtimeExtensions_Hashtable.ConvertToDictionaryProperty
::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>* Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::ConvertToDictionaryProperty(::ExitGames::Client::Photon::Hashtable* customProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::ConvertToDictionaryProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Extension", "RealtimeExtensions_Hashtable", "ConvertToDictionaryProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(customProperties)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, customProperties);
}
// Autogenerated method: Fusion.Photon.Realtime.Extension.RealtimeExtensions_Hashtable.ConvertToHashtable
::ExitGames::Client::Photon::Hashtable* Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::ConvertToHashtable(::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>* properties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::ConvertToHashtable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Extension", "RealtimeExtensions_Hashtable", "ConvertToHashtable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(properties)})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, properties);
}
// Autogenerated method: Fusion.Photon.Realtime.Extension.RealtimeExtensions_Hashtable.CalculateTotalSize
int Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::CalculateTotalSize(::ExitGames::Client::Photon::Hashtable* hashtable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::CalculateTotalSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Extension", "RealtimeExtensions_Hashtable", "CalculateTotalSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashtable)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashtable);
}
// Autogenerated method: Fusion.Photon.Realtime.Extension.RealtimeExtensions_Hashtable..cctor
void Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Extension::RealtimeExtensions_Hashtable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Extension", "RealtimeExtensions_Hashtable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Extension.RealtimeExtensions_RoomInfo
#include "Fusion/Photon/Realtime/Extension/RealtimeExtensions_RoomInfo.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Fusion.SessionProperty
#include "Fusion/SessionProperty.hpp"
// Including type: Fusion.Photon.Realtime.RoomInfo
#include "Fusion/Photon/Realtime/RoomInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Fusion.Photon.Realtime.Extension.RealtimeExtensions_RoomInfo.GetCustomProperties
::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>* Fusion::Photon::Realtime::Extension::RealtimeExtensions_RoomInfo::GetCustomProperties(::Fusion::Photon::Realtime::RoomInfo* roomInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Extension::RealtimeExtensions_RoomInfo::GetCustomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Extension", "RealtimeExtensions_RoomInfo", "GetCustomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Extension.RealtimeExtensions_DictionaryProperties
#include "Fusion/Photon/Realtime/Extension/RealtimeExtensions_DictionaryProperties.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Fusion.SessionProperty
#include "Fusion/SessionProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Fusion.Photon.Realtime.Extension.RealtimeExtensions_DictionaryProperties.CalculateTotalSize
int Fusion::Photon::Realtime::Extension::RealtimeExtensions_DictionaryProperties::CalculateTotalSize(::System::Collections::Generic::Dictionary_2<::StringW, ::Fusion::SessionProperty*>* dictionary) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Extension::RealtimeExtensions_DictionaryProperties::CalculateTotalSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Extension", "RealtimeExtensions_DictionaryProperties", "CalculateTotalSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionary)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dictionary);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.Photon.Realtime.Async.PhotonConnectionCallbacks
#include "Fusion/Photon/Realtime/Async/PhotonConnectionCallbacks.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Fusion.Photon.Realtime.RegionHandler
#include "Fusion/Photon/Realtime/RegionHandler.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action ConnectedToMaster
[[deprecated("Use field access instead!")]] ::System::Action*& Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks::dyn_ConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks::dyn_ConnectedToMaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectedToMaster"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action ConnectedToNameServer
[[deprecated("Use field access instead!")]] ::System::Action*& Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks::dyn_ConnectedToNameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks::dyn_ConnectedToNameServer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectedToNameServer"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Fusion.Photon.Realtime.RegionHandler> RegionListReceived
[[deprecated("Use field access instead!")]] ::System::Action_1<::Fusion::Photon::Realtime::RegionHandler*>*& Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks::dyn_RegionListReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks::dyn_RegionListReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RegionListReceived"))->offset;
  return *reinterpret_cast<::System::Action_1<::Fusion::Photon::Realtime::RegionHandler*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Fusion.Photon.Realtime.DisconnectCause> Disconnected
[[deprecated("Use field access instead!")]] ::System::Action_1<::Fusion::Photon::Realtime::DisconnectCause>*& Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks::dyn_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks::dyn_Disconnected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Disconnected"))->offset;
  return *reinterpret_cast<::System::Action_1<::Fusion::Photon::Realtime::DisconnectCause>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> CustomAuthenticationFailed
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks::dyn_CustomAuthenticationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks::dyn_CustomAuthenticationFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomAuthenticationFailed"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.Object>> CustomAuthenticationResponse
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*& Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks::dyn_CustomAuthenticationResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks::dyn_CustomAuthenticationResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomAuthenticationResponse"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Async.PhotonMatchmakingCallbacks
#include "Fusion/Photon/Realtime/Async/PhotonMatchmakingCallbacks.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Fusion.Photon.Realtime.FriendInfo
#include "Fusion/Photon/Realtime/FriendInfo.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Collections.Generic.List`1<Fusion.Photon.Realtime.FriendInfo>> FriendListUpdate
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::FriendInfo*>*>*& Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks::dyn_FriendListUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks::dyn_FriendListUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FriendListUpdate"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::FriendInfo*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action JoinedRoom
[[deprecated("Use field access instead!")]] ::System::Action*& Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks::dyn_JoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks::dyn_JoinedRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JoinedRoom"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action CreatedRoom
[[deprecated("Use field access instead!")]] ::System::Action*& Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks::dyn_CreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks::dyn_CreatedRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CreatedRoom"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<System.Int16,System.String> JoinRoomFailed
[[deprecated("Use field access instead!")]] ::System::Action_2<int16_t, ::StringW>*& Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks::dyn_JoinRoomFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks::dyn_JoinRoomFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JoinRoomFailed"))->offset;
  return *reinterpret_cast<::System::Action_2<int16_t, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<System.Int16,System.String> JoinRoomRandomFailed
[[deprecated("Use field access instead!")]] ::System::Action_2<int16_t, ::StringW>*& Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks::dyn_JoinRoomRandomFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks::dyn_JoinRoomRandomFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JoinRoomRandomFailed"))->offset;
  return *reinterpret_cast<::System::Action_2<int16_t, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<System.Int16,System.String> CreateRoomFailed
[[deprecated("Use field access instead!")]] ::System::Action_2<int16_t, ::StringW>*& Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks::dyn_CreateRoomFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks::dyn_CreateRoomFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CreateRoomFailed"))->offset;
  return *reinterpret_cast<::System::Action_2<int16_t, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action LeftRoom
[[deprecated("Use field access instead!")]] ::System::Action*& Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks::dyn_LeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks::dyn_LeftRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftRoom"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Async.PhotonLobbyCallbacks
#include "Fusion/Photon/Realtime/Async/PhotonLobbyCallbacks.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action JoinedLobby
[[deprecated("Use field access instead!")]] ::System::Action*& Fusion::Photon::Realtime::Async::PhotonLobbyCallbacks::dyn_JoinedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::PhotonLobbyCallbacks::dyn_JoinedLobby");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JoinedLobby"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Async.DisconnectException
#include "Fusion/Photon/Realtime/Async/DisconnectException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.Photon.Realtime.DisconnectCause Cause
[[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::DisconnectCause& Fusion::Photon::Realtime::Async::DisconnectException::dyn_Cause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::DisconnectException::dyn_Cause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Cause"))->offset;
  return *reinterpret_cast<::Fusion::Photon::Realtime::DisconnectCause*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Async.AuthenticationFailedException
#include "Fusion/Photon/Realtime/Async/AuthenticationFailedException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Async.OperationException
#include "Fusion/Photon/Realtime/Async/OperationException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int16 ErrorCode
[[deprecated("Use field access instead!")]] int16_t& Fusion::Photon::Realtime::Async::OperationException::dyn_ErrorCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationException::dyn_ErrorCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ErrorCode"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Async.OperationStartException
#include "Fusion/Photon/Realtime/Async/OperationStartException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Async.OperationTimeoutException
#include "Fusion/Photon/Realtime/Async/OperationTimeoutException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions
#include "Fusion/Photon/Realtime/Async/LoadBalancingClientAsyncExtensions.hpp"
// Including type: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions/<>c__DisplayClass10_0
#include "Fusion/Photon/Realtime/Async/LoadBalancingClientAsyncExtensions_--c__DisplayClass10_0.hpp"
// Including type: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions/<>c__DisplayClass11_0
#include "Fusion/Photon/Realtime/Async/LoadBalancingClientAsyncExtensions_--c__DisplayClass11_0.hpp"
// Including type: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions/<>c__DisplayClass3_0
#include "Fusion/Photon/Realtime/Async/LoadBalancingClientAsyncExtensions_--c__DisplayClass3_0.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: Fusion.Photon.Realtime.LoadBalancingClient
#include "Fusion/Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Fusion.Photon.Realtime.AppSettings
#include "Fusion/Photon/Realtime/AppSettings.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Fusion.Photon.Realtime.EnterRoomParams
#include "Fusion/Photon/Realtime/EnterRoomParams.hpp"
// Including type: Fusion.Photon.Realtime.OpJoinRandomRoomParams
#include "Fusion/Photon/Realtime/OpJoinRandomRoomParams.hpp"
// Including type: Fusion.Photon.Realtime.TypedLobby
#include "Fusion/Photon/Realtime/TypedLobby.hpp"
// Including type: Fusion.Photon.Realtime.Async.OperationHandler
#include "Fusion/Photon/Realtime/Async/OperationHandler.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 SERVICE_INTERVAL_MS
int Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::_get_SERVICE_INTERVAL_MS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::_get_SERVICE_INTERVAL_MS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Photon.Realtime.Async", "LoadBalancingClientAsyncExtensions", "SERVICE_INTERVAL_MS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SERVICE_INTERVAL_MS
void Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::_set_SERVICE_INTERVAL_MS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::_set_SERVICE_INTERVAL_MS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "LoadBalancingClientAsyncExtensions", "SERVICE_INTERVAL_MS", value));
}
// Autogenerated method: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions.ConnectToMasterAsync
::System::Threading::Tasks::Task* Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::ConnectToMasterAsync(::Fusion::Photon::Realtime::LoadBalancingClient* client, ::Fusion::Photon::Realtime::AppSettings* appSettings, bool createServiceTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::ConnectToMasterAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "LoadBalancingClientAsyncExtensions", "ConnectToMasterAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(appSettings), ::il2cpp_utils::ExtractType(createServiceTask)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, appSettings, createServiceTask);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions.ReconnectAndRejoinAsync
::System::Threading::Tasks::Task* Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::ReconnectAndRejoinAsync(::Fusion::Photon::Realtime::LoadBalancingClient* client, bool throwOnError, bool createServiceTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::ReconnectAndRejoinAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "LoadBalancingClientAsyncExtensions", "ReconnectAndRejoinAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(throwOnError), ::il2cpp_utils::ExtractType(createServiceTask)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, throwOnError, createServiceTask);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions.DisconnectAsync
::System::Threading::Tasks::Task* Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::DisconnectAsync(::Fusion::Photon::Realtime::LoadBalancingClient* client, bool createServiceTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::DisconnectAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "LoadBalancingClientAsyncExtensions", "DisconnectAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(createServiceTask)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, createServiceTask);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions.CreateRoomAsync
::System::Threading::Tasks::Task_1<int16_t>* Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::CreateRoomAsync(::Fusion::Photon::Realtime::LoadBalancingClient* client, ::Fusion::Photon::Realtime::EnterRoomParams* enterRoomParams, bool throwOnError, bool createServiceTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::CreateRoomAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "LoadBalancingClientAsyncExtensions", "CreateRoomAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(enterRoomParams), ::il2cpp_utils::ExtractType(throwOnError), ::il2cpp_utils::ExtractType(createServiceTask)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int16_t>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, enterRoomParams, throwOnError, createServiceTask);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions.CreateOrJoinRoomAsync
::System::Threading::Tasks::Task_1<int16_t>* Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::CreateOrJoinRoomAsync(::Fusion::Photon::Realtime::LoadBalancingClient* client, ::Fusion::Photon::Realtime::EnterRoomParams* enterRoomParams, bool throwOnError, bool createServiceTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::CreateOrJoinRoomAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "LoadBalancingClientAsyncExtensions", "CreateOrJoinRoomAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(enterRoomParams), ::il2cpp_utils::ExtractType(throwOnError), ::il2cpp_utils::ExtractType(createServiceTask)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int16_t>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, enterRoomParams, throwOnError, createServiceTask);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions.JoinRoomAsync
::System::Threading::Tasks::Task_1<int16_t>* Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::JoinRoomAsync(::Fusion::Photon::Realtime::LoadBalancingClient* client, ::Fusion::Photon::Realtime::EnterRoomParams* enterRoomParams, bool throwOnError, bool createServiceTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::JoinRoomAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "LoadBalancingClientAsyncExtensions", "JoinRoomAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(enterRoomParams), ::il2cpp_utils::ExtractType(throwOnError), ::il2cpp_utils::ExtractType(createServiceTask)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int16_t>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, enterRoomParams, throwOnError, createServiceTask);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions.JoinRandomOrCreateRoomAsync
::System::Threading::Tasks::Task_1<int16_t>* Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::JoinRandomOrCreateRoomAsync(::Fusion::Photon::Realtime::LoadBalancingClient* client, ::Fusion::Photon::Realtime::OpJoinRandomRoomParams* joinRandomRoomParams, ::Fusion::Photon::Realtime::EnterRoomParams* enterRoomParams, bool throwOnError, bool createServiceTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::JoinRandomOrCreateRoomAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "LoadBalancingClientAsyncExtensions", "JoinRandomOrCreateRoomAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(joinRandomRoomParams), ::il2cpp_utils::ExtractType(enterRoomParams), ::il2cpp_utils::ExtractType(throwOnError), ::il2cpp_utils::ExtractType(createServiceTask)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int16_t>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, joinRandomRoomParams, enterRoomParams, throwOnError, createServiceTask);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions.JoinRandomRoomAsync
::System::Threading::Tasks::Task_1<int16_t>* Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::JoinRandomRoomAsync(::Fusion::Photon::Realtime::LoadBalancingClient* client, ::Fusion::Photon::Realtime::OpJoinRandomRoomParams* joinRandomRoomParams, bool throwOnError, bool createServiceTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::JoinRandomRoomAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "LoadBalancingClientAsyncExtensions", "JoinRandomRoomAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(joinRandomRoomParams), ::il2cpp_utils::ExtractType(throwOnError), ::il2cpp_utils::ExtractType(createServiceTask)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int16_t>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, joinRandomRoomParams, throwOnError, createServiceTask);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions.JoinLobbyAsync
::System::Threading::Tasks::Task_1<int16_t>* Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::JoinLobbyAsync(::Fusion::Photon::Realtime::LoadBalancingClient* client, ::Fusion::Photon::Realtime::TypedLobby* lobby, bool throwOnError, bool createServiceTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::JoinLobbyAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "LoadBalancingClientAsyncExtensions", "JoinLobbyAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(lobby), ::il2cpp_utils::ExtractType(throwOnError), ::il2cpp_utils::ExtractType(createServiceTask)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int16_t>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, lobby, throwOnError, createServiceTask);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions.CreateOpHandler
::Fusion::Photon::Realtime::Async::OperationHandler* Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::CreateOpHandler(::Fusion::Photon::Realtime::LoadBalancingClient* client, bool throwOnErrors, bool createServiceTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::CreateOpHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "LoadBalancingClientAsyncExtensions", "CreateOpHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(throwOnErrors), ::il2cpp_utils::ExtractType(createServiceTask)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Photon::Realtime::Async::OperationHandler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, throwOnErrors, createServiceTask);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions.Service_ClientUpdate
void Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::Service_ClientUpdate(::Fusion::Photon::Realtime::LoadBalancingClient* client, ::System::Threading::CancellationToken token, ::System::Threading::Tasks::TaskCompletionSource_1<int16_t>* completionSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::Service_ClientUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "LoadBalancingClientAsyncExtensions", "Service_ClientUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(completionSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, token, completionSource);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions/<>c__DisplayClass10_0
#include "Fusion/Photon/Realtime/Async/LoadBalancingClientAsyncExtensions_--c__DisplayClass10_0.hpp"
// Including type: Fusion.Photon.Realtime.LoadBalancingClient
#include "Fusion/Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Fusion.Photon.Realtime.Async.OperationHandler
#include "Fusion/Photon/Realtime/Async/OperationHandler.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::LoadBalancingClient*& Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass10_0::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass10_0::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Fusion::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Photon.Realtime.Async.OperationHandler handler
[[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::Async::OperationHandler*& Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass10_0::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass10_0::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::Fusion::Photon::Realtime::Async::OperationHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions/<>c__DisplayClass10_0.<CreateOpHandler>b__0
::System::Threading::Tasks::Task* Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass10_0::$CreateOpHandler$b__0(::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass10_0::<CreateOpHandler>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateOpHandler>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, token);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions/<>c__DisplayClass11_0
#include "Fusion/Photon/Realtime/Async/LoadBalancingClientAsyncExtensions_--c__DisplayClass11_0.hpp"
// Including type: Fusion.Photon.Realtime.LoadBalancingClient
#include "Fusion/Photon/Realtime/LoadBalancingClient.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass11_0::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass11_0::dyn_token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::LoadBalancingClient*& Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass11_0::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass11_0::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Fusion::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<System.Int16> completionSource
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<int16_t>*& Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass11_0::dyn_completionSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass11_0::dyn_completionSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionSource"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<int16_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions/<>c__DisplayClass11_0.<Service_ClientUpdate>b__0
::System::Threading::Tasks::Task_1<bool>* Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass11_0::$Service_ClientUpdate$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass11_0::<Service_ClientUpdate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Service_ClientUpdate>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions/<>c__DisplayClass3_0
#include "Fusion/Photon/Realtime/Async/LoadBalancingClientAsyncExtensions_--c__DisplayClass3_0.hpp"
// Including type: Fusion.Photon.Realtime.Async.OperationHandler
#include "Fusion/Photon/Realtime/Async/OperationHandler.hpp"
// Including type: Fusion.Photon.Realtime.DisconnectCause
#include "Fusion/Photon/Realtime/DisconnectCause.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.Photon.Realtime.Async.OperationHandler handler
[[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::Async::OperationHandler*& Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass3_0::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass3_0::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::Fusion::Photon::Realtime::Async::OperationHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.LoadBalancingClientAsyncExtensions/<>c__DisplayClass3_0.<DisconnectAsync>b__0
void Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass3_0::$DisconnectAsync$b__0(::Fusion::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::LoadBalancingClientAsyncExtensions::$$c__DisplayClass3_0::<DisconnectAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DisconnectAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.Photon.Realtime.Async.Log
#include "Fusion/Photon/Realtime/Async/Log.hpp"
// Including type: Fusion.Photon.Realtime.Async.Log/<>c
#include "Fusion/Photon/Realtime/Async/Log_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object sync
::Il2CppObject* Fusion::Photon::Realtime::Async::Log::_get_sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::_get_sync");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Fusion.Photon.Realtime.Async", "Log", "sync"));
}
// Autogenerated static field setter
// Set static field: static private System.Object sync
void Fusion::Photon::Realtime::Async::Log::_set_sync(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::_set_sync");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "Log", "sync", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.String> infoCallback
::System::Action_1<::StringW>* Fusion::Photon::Realtime::Async::Log::_get_infoCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::_get_infoCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("Fusion.Photon.Realtime.Async", "Log", "infoCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.String> infoCallback
void Fusion::Photon::Realtime::Async::Log::_set_infoCallback(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::_set_infoCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "Log", "infoCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.String> warnCallback
::System::Action_1<::StringW>* Fusion::Photon::Realtime::Async::Log::_get_warnCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::_get_warnCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("Fusion.Photon.Realtime.Async", "Log", "warnCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.String> warnCallback
void Fusion::Photon::Realtime::Async::Log::_set_warnCallback(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::_set_warnCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "Log", "warnCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.String> errorCallback
::System::Action_1<::StringW>* Fusion::Photon::Realtime::Async::Log::_get_errorCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::_get_errorCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("Fusion.Photon.Realtime.Async", "Log", "errorCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.String> errorCallback
void Fusion::Photon::Realtime::Async::Log::_set_errorCallback(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::_set_errorCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "Log", "errorCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Exception> exnCallback
::System::Action_1<::System::Exception*>* Fusion::Photon::Realtime::Async::Log::_get_exnCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::_get_exnCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::System::Exception*>*>("Fusion.Photon.Realtime.Async", "Log", "exnCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Exception> exnCallback
void Fusion::Photon::Realtime::Async::Log::_set_exnCallback(::System::Action_1<::System::Exception*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::_set_exnCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "Log", "exnCallback", value));
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log.Init
void Fusion::Photon::Realtime::Async::Log::Init(::System::Action_1<::StringW>* info, ::System::Action_1<::StringW>* warn, ::System::Action_1<::StringW>* error, ::System::Action_1<::System::Exception*>* exn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "Log", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(warn), ::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(exn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, info, warn, error, exn);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log.InitForConsole
void Fusion::Photon::Realtime::Async::Log::InitForConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::InitForConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "Log", "InitForConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log.InitForSystemDiagnostics
void Fusion::Photon::Realtime::Async::Log::InitForSystemDiagnostics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::InitForSystemDiagnostics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "Log", "InitForSystemDiagnostics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log.Debug
void Fusion::Photon::Realtime::Async::Log::Debug(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::Debug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "Log", "Debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log.Trace
void Fusion::Photon::Realtime::Async::Log::Trace(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::Trace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "Log", "Trace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log.Info
void Fusion::Photon::Realtime::Async::Log::Info(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::Info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "Log", "Info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log.Warn
void Fusion::Photon::Realtime::Async::Log::Warn(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::Warn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "Log", "Warn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log.Error
void Fusion::Photon::Realtime::Async::Log::Error(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "Log", "Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log.Exception
void Fusion::Photon::Realtime::Async::Log::Exception(::System::Exception* exn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "Log", "Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exn);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Photon.Realtime.Async.Log/<>c
#include "Fusion/Photon/Realtime/Async/Log_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Fusion.Photon.Realtime.Async.Log/<>c <>9
::Fusion::Photon::Realtime::Async::Log::$$c* Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Fusion::Photon::Realtime::Async::Log::$$c*>("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Fusion.Photon.Realtime.Async.Log/<>c <>9
void Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9(::Fusion::Photon::Realtime::Async::Log::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.String> <>9__6_0
::System::Action_1<::StringW>* Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.String> <>9__6_0
void Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__6_0(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.String> <>9__6_1
::System::Action_1<::StringW>* Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__6_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__6_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__6_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.String> <>9__6_1
void Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__6_1(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__6_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__6_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.String> <>9__6_2
::System::Action_1<::StringW>* Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__6_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__6_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__6_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.String> <>9__6_2
void Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__6_2(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__6_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__6_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Exception> <>9__6_3
::System::Action_1<::System::Exception*>* Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__6_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__6_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::System::Exception*>*>("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__6_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Exception> <>9__6_3
void Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__6_3(::System::Action_1<::System::Exception*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__6_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__6_3", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.String> <>9__7_0
::System::Action_1<::StringW>* Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.String> <>9__7_0
void Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__7_0(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__7_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.String> <>9__7_1
::System::Action_1<::StringW>* Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__7_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__7_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__7_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.String> <>9__7_1
void Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__7_1(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__7_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__7_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.String> <>9__7_2
::System::Action_1<::StringW>* Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__7_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__7_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__7_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.String> <>9__7_2
void Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__7_2(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__7_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__7_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Exception> <>9__7_3
::System::Action_1<::System::Exception*>* Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__7_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_get_$$9__7_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::System::Exception*>*>("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__7_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Exception> <>9__7_3
void Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__7_3(::System::Action_1<::System::Exception*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::_set_$$9__7_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "Log/<>c", "<>9__7_3", value)));
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log/<>c..cctor
void Fusion::Photon::Realtime::Async::Log::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Photon.Realtime.Async", "Log/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log/<>c.<InitForConsole>b__6_0
void Fusion::Photon::Realtime::Async::Log::$$c::$InitForConsole$b__6_0(::StringW info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::<InitForConsole>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitForConsole>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log/<>c.<InitForConsole>b__6_1
void Fusion::Photon::Realtime::Async::Log::$$c::$InitForConsole$b__6_1(::StringW warn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::<InitForConsole>b__6_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitForConsole>b__6_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(warn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, warn);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log/<>c.<InitForConsole>b__6_2
void Fusion::Photon::Realtime::Async::Log::$$c::$InitForConsole$b__6_2(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::<InitForConsole>b__6_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitForConsole>b__6_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log/<>c.<InitForConsole>b__6_3
void Fusion::Photon::Realtime::Async::Log::$$c::$InitForConsole$b__6_3(::System::Exception* exn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::<InitForConsole>b__6_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitForConsole>b__6_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exn);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log/<>c.<InitForSystemDiagnostics>b__7_0
void Fusion::Photon::Realtime::Async::Log::$$c::$InitForSystemDiagnostics$b__7_0(::StringW info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::<InitForSystemDiagnostics>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitForSystemDiagnostics>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log/<>c.<InitForSystemDiagnostics>b__7_1
void Fusion::Photon::Realtime::Async::Log::$$c::$InitForSystemDiagnostics$b__7_1(::StringW warn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::<InitForSystemDiagnostics>b__7_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitForSystemDiagnostics>b__7_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(warn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, warn);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log/<>c.<InitForSystemDiagnostics>b__7_2
void Fusion::Photon::Realtime::Async::Log::$$c::$InitForSystemDiagnostics$b__7_2(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::<InitForSystemDiagnostics>b__7_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitForSystemDiagnostics>b__7_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.Log/<>c.<InitForSystemDiagnostics>b__7_3
void Fusion::Photon::Realtime::Async::Log::$$c::$InitForSystemDiagnostics$b__7_3(::System::Exception* exn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::Log::$$c::<InitForSystemDiagnostics>b__7_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitForSystemDiagnostics>b__7_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exn);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.Photon.Realtime.Async.OperationHandler
#include "Fusion/Photon/Realtime/Async/OperationHandler.hpp"
// Including type: Fusion.Photon.Realtime.Async.PhotonConnectionCallbacks
#include "Fusion/Photon/Realtime/Async/PhotonConnectionCallbacks.hpp"
// Including type: Fusion.Photon.Realtime.Async.PhotonMatchmakingCallbacks
#include "Fusion/Photon/Realtime/Async/PhotonMatchmakingCallbacks.hpp"
// Including type: Fusion.Photon.Realtime.Async.PhotonLobbyCallbacks
#include "Fusion/Photon/Realtime/Async/PhotonLobbyCallbacks.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Fusion.Photon.Realtime.DisconnectCause
#include "Fusion/Photon/Realtime/DisconnectCause.hpp"
// Including type: Fusion.Photon.Realtime.RegionHandler
#include "Fusion/Photon/Realtime/RegionHandler.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Fusion.Photon.Realtime.FriendInfo
#include "Fusion/Photon/Realtime/FriendInfo.hpp"
// Including type: Fusion.Photon.Realtime.RoomInfo
#include "Fusion/Photon/Realtime/RoomInfo.hpp"
// Including type: Fusion.Photon.Realtime.TypedLobbyInfo
#include "Fusion/Photon/Realtime/TypedLobbyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single OPERATION_TIMEOUT_SEC
float Fusion::Photon::Realtime::Async::OperationHandler::_get_OPERATION_TIMEOUT_SEC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::_get_OPERATION_TIMEOUT_SEC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Fusion.Photon.Realtime.Async", "OperationHandler", "OPERATION_TIMEOUT_SEC"));
}
// Autogenerated static field setter
// Set static field: static private System.Single OPERATION_TIMEOUT_SEC
void Fusion::Photon::Realtime::Async::OperationHandler::_set_OPERATION_TIMEOUT_SEC(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::_set_OPERATION_TIMEOUT_SEC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Photon.Realtime.Async", "OperationHandler", "OPERATION_TIMEOUT_SEC", value));
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Photon.Realtime.Async.PhotonConnectionCallbacks ConnectionCallbacks
[[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks*& Fusion::Photon::Realtime::Async::OperationHandler::dyn_ConnectionCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::dyn_ConnectionCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionCallbacks"))->offset;
  return *reinterpret_cast<::Fusion::Photon::Realtime::Async::PhotonConnectionCallbacks**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Photon.Realtime.Async.PhotonMatchmakingCallbacks MatchmakingCallbacks
[[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks*& Fusion::Photon::Realtime::Async::OperationHandler::dyn_MatchmakingCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::dyn_MatchmakingCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchmakingCallbacks"))->offset;
  return *reinterpret_cast<::Fusion::Photon::Realtime::Async::PhotonMatchmakingCallbacks**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Photon.Realtime.Async.PhotonLobbyCallbacks LobbyCallbacks
[[deprecated("Use field access instead!")]] ::Fusion::Photon::Realtime::Async::PhotonLobbyCallbacks*& Fusion::Photon::Realtime::Async::OperationHandler::dyn_LobbyCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::dyn_LobbyCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LobbyCallbacks"))->offset;
  return *reinterpret_cast<::Fusion::Photon::Realtime::Async::PhotonLobbyCallbacks**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _throwOnErrors
[[deprecated("Use field access instead!")]] bool& Fusion::Photon::Realtime::Async::OperationHandler::dyn__throwOnErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::dyn__throwOnErrors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_throwOnErrors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.TaskCompletionSource`1<System.Int16> _result
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<int16_t>*& Fusion::Photon::Realtime::Async::OperationHandler::dyn__result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::dyn__result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_result"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<int16_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _cancellation
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& Fusion::Photon::Realtime::Async::OperationHandler::dyn__cancellation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::dyn__cancellation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellation"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.get_Task
::System::Threading::Tasks::Task_1<int16_t>* Fusion::Photon::Realtime::Async::OperationHandler::get_Task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::get_Task");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int16_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.get_CompletionSource
::System::Threading::Tasks::TaskCompletionSource_1<int16_t>* Fusion::Photon::Realtime::Async::OperationHandler::get_CompletionSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::get_CompletionSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletionSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::TaskCompletionSource_1<int16_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.get_Token
::System::Threading::CancellationToken Fusion::Photon::Realtime::Async::OperationHandler::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationToken, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.get_IsCancellationRequested
bool Fusion::Photon::Realtime::Async::OperationHandler::get_IsCancellationRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::get_IsCancellationRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCancellationRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.SetResult
void Fusion::Photon::Realtime::Async::OperationHandler::SetResult(int16_t result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::SetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.SetException
void Fusion::Photon::Realtime::Async::OperationHandler::SetException(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::SetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnConnected
void Fusion::Photon::Realtime::Async::OperationHandler::OnConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnConnectedToMaster
void Fusion::Photon::Realtime::Async::OperationHandler::OnConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnConnectedToMaster");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnCustomAuthenticationFailed
void Fusion::Photon::Realtime::Async::OperationHandler::OnCustomAuthenticationFailed(::StringW debugMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnCustomAuthenticationFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, debugMessage);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnCustomAuthenticationResponse
void Fusion::Photon::Realtime::Async::OperationHandler::OnCustomAuthenticationResponse(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnCustomAuthenticationResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnDisconnected
void Fusion::Photon::Realtime::Async::OperationHandler::OnDisconnected(::Fusion::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnRegionListReceived
void Fusion::Photon::Realtime::Async::OperationHandler::OnRegionListReceived(::Fusion::Photon::Realtime::RegionHandler* regionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnRegionListReceived");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regionHandler);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnCreatedRoom
void Fusion::Photon::Realtime::Async::OperationHandler::OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnCreateRoomFailed
void Fusion::Photon::Realtime::Async::OperationHandler::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnFriendListUpdate
void Fusion::Photon::Realtime::Async::OperationHandler::OnFriendListUpdate(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnJoinedRoom
void Fusion::Photon::Realtime::Async::OperationHandler::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnJoinRandomFailed
void Fusion::Photon::Realtime::Async::OperationHandler::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnJoinRoomFailed
void Fusion::Photon::Realtime::Async::OperationHandler::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnLeftRoom
void Fusion::Photon::Realtime::Async::OperationHandler::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnJoinedLobby
void Fusion::Photon::Realtime::Async::OperationHandler::OnJoinedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnJoinedLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnLeftLobby
void Fusion::Photon::Realtime::Async::OperationHandler::OnLeftLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnLeftLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnRoomListUpdate
void Fusion::Photon::Realtime::Async::OperationHandler::OnRoomListUpdate(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::RoomInfo*>* roomList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnRoomListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomList);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.OnLobbyStatisticsUpdate
void Fusion::Photon::Realtime::Async::OperationHandler::OnLobbyStatisticsUpdate(::System::Collections::Generic::List_1<::Fusion::Photon::Realtime::TypedLobbyInfo*>* lobbyStatistics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::OnLobbyStatisticsUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Photon::Realtime::Async::OperationHandler*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyStatistics);
}
// Autogenerated method: Fusion.Photon.Realtime.Async.OperationHandler.<.ctor>b__15_0
void Fusion::Photon::Realtime::Async::OperationHandler::$_ctor$b__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Photon::Realtime::Async::OperationHandler::<.ctor>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.CodeAnalysis.EmbeddedAttribute
#include "Microsoft/CodeAnalysis/EmbeddedAttribute__.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.IsReadOnlyAttribute
#include "System/Runtime/CompilerServices/IsReadOnlyAttribute_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.IsUnmanagedAttribute
#include "System/Runtime/CompilerServices/IsUnmanagedAttribute_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Allocator
#include "Fusion/Allocator.hpp"
// Including type: Fusion.Allocator/Block
#include "Fusion/Allocator_Block.hpp"
// Including type: Fusion.Allocator/BlockList
#include "Fusion/Allocator_BlockList.hpp"
// Including type: Fusion.Allocator/Bucket
#include "Fusion/Allocator_Bucket.hpp"
// Including type: Fusion.Allocator/AllocatorBucketSize
#include "Fusion/Allocator_AllocatorBucketSize.hpp"
// Including type: Fusion.Allocator/Segment
#include "Fusion/Allocator_Segment.hpp"
// Including type: Fusion.Sockets.NetBitBuffer
#include "Fusion/Sockets/NetBitBuffer.hpp"
// Including type: Fusion.Simulation/IDeltaCompressor
#include "Fusion/Simulation_IDeltaCompressor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 SIZE
int Fusion::Allocator::_get_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_get_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Allocator", "SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SIZE
void Fusion::Allocator::_set_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_set_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator", "SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 WORD_SHIFT
int Fusion::Allocator::_get_WORD_SHIFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_get_WORD_SHIFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Allocator", "WORD_SHIFT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 WORD_SHIFT
void Fusion::Allocator::_set_WORD_SHIFT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_set_WORD_SHIFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator", "WORD_SHIFT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 WORD_BYTE_SIZE
int Fusion::Allocator::_get_WORD_BYTE_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_get_WORD_BYTE_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Allocator", "WORD_BYTE_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 WORD_BYTE_SIZE
void Fusion::Allocator::_set_WORD_BYTE_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_set_WORD_BYTE_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator", "WORD_BYTE_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 HEAP_ALIGNMENT
int Fusion::Allocator::_get_HEAP_ALIGNMENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_get_HEAP_ALIGNMENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Allocator", "HEAP_ALIGNMENT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 HEAP_ALIGNMENT
void Fusion::Allocator::_set_HEAP_ALIGNMENT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_set_HEAP_ALIGNMENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator", "HEAP_ALIGNMENT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 REPLICATE_WORD_SHIFT
int Fusion::Allocator::_get_REPLICATE_WORD_SHIFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_get_REPLICATE_WORD_SHIFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Allocator", "REPLICATE_WORD_SHIFT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 REPLICATE_WORD_SHIFT
void Fusion::Allocator::_set_REPLICATE_WORD_SHIFT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_set_REPLICATE_WORD_SHIFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator", "REPLICATE_WORD_SHIFT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 REPLICATE_WORD_SIZE
int Fusion::Allocator::_get_REPLICATE_WORD_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_get_REPLICATE_WORD_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Allocator", "REPLICATE_WORD_SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 REPLICATE_WORD_SIZE
void Fusion::Allocator::_set_REPLICATE_WORD_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_set_REPLICATE_WORD_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator", "REPLICATE_WORD_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 REPLICATE_WORD_ALIGN
int Fusion::Allocator::_get_REPLICATE_WORD_ALIGN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_get_REPLICATE_WORD_ALIGN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Allocator", "REPLICATE_WORD_ALIGN"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 REPLICATE_WORD_ALIGN
void Fusion::Allocator::_set_REPLICATE_WORD_ALIGN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_set_REPLICATE_WORD_ALIGN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator", "REPLICATE_WORD_ALIGN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BUCKET_COUNT
int Fusion::Allocator::_get_BUCKET_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_get_BUCKET_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Allocator", "BUCKET_COUNT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUCKET_COUNT
void Fusion::Allocator::_set_BUCKET_COUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_set_BUCKET_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator", "BUCKET_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte BUCKET_INVALID
uint8_t Fusion::Allocator::_get_BUCKET_INVALID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_get_BUCKET_INVALID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Fusion", "Allocator", "BUCKET_INVALID"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte BUCKET_INVALID
void Fusion::Allocator::_set_BUCKET_INVALID(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_set_BUCKET_INVALID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator", "BUCKET_INVALID", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 PTR_SIZE
int Fusion::Allocator::_get_PTR_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_get_PTR_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Allocator", "PTR_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 PTR_SIZE
void Fusion::Allocator::_set_PTR_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::_set_PTR_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator", "PTR_SIZE", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte* _root
[[deprecated("Use field access instead!")]] uint8_t*& Fusion::Allocator::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::dyn__root");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte* _heap
[[deprecated("Use field access instead!")]] uint8_t*& Fusion::Allocator::dyn__heap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::dyn__heap");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_heap"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte* _meta
[[deprecated("Use field access instead!")]] uint8_t*& Fusion::Allocator::dyn__meta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::dyn__meta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meta"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Void* _globals
[[deprecated("Use field access instead!")]] void*& Fusion::Allocator::dyn__globals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::dyn__globals");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globals"))->offset;
  return *reinterpret_cast<void**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Void* _checksum
[[deprecated("Use field access instead!")]] void*& Fusion::Allocator::dyn__checksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::dyn__checksum");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checksum"))->offset;
  return *reinterpret_cast<void**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Void* _replicate
[[deprecated("Use field access instead!")]] void*& Fusion::Allocator::dyn__replicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::dyn__replicate");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_replicate"))->offset;
  return *reinterpret_cast<void**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Allocator/Block* _blocks
[[deprecated("Use field access instead!")]] ::Fusion::Allocator::Block*& Fusion::Allocator::dyn__blocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::dyn__blocks");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blocks"))->offset;
  return *reinterpret_cast<::Fusion::Allocator::Block**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Allocator/BlockList* _blocksFreeList
[[deprecated("Use field access instead!")]] ::Fusion::Allocator::BlockList*& Fusion::Allocator::dyn__blocksFreeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::dyn__blocksFreeList");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blocksFreeList"))->offset;
  return *reinterpret_cast<::Fusion::Allocator::BlockList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Allocator/Bucket* _buckets
[[deprecated("Use field access instead!")]] ::Fusion::Allocator::Bucket*& Fusion::Allocator::dyn__buckets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::dyn__buckets");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buckets"))->offset;
  return *reinterpret_cast<::Fusion::Allocator::Bucket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte* _bucketsMap
[[deprecated("Use field access instead!")]] uint8_t*& Fusion::Allocator::dyn__bucketsMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::dyn__bucketsMap");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bucketsMap"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Allocator/BlockList* _bucketsLists
[[deprecated("Use field access instead!")]] ::Fusion::Allocator::BlockList*& Fusion::Allocator::dyn__bucketsLists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::dyn__bucketsLists");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bucketsLists"))->offset;
  return *reinterpret_cast<::Fusion::Allocator::BlockList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Allocator/Config _config
[[deprecated("Use field access instead!")]] ::Fusion::Allocator::Config& Fusion::Allocator::dyn__config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::dyn__config");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_config"))->offset;
  return *reinterpret_cast<::Fusion::Allocator::Config*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxBlockIndexUsed
[[deprecated("Use field access instead!")]] int& Fusion::Allocator::dyn__maxBlockIndexUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::dyn__maxBlockIndexUsed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxBlockIndexUsed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _checksumByteLength
[[deprecated("Use field access instead!")]] int& Fusion::Allocator::dyn__checksumByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::dyn__checksumByteLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checksumByteLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _replicateByteLength
[[deprecated("Use field access instead!")]] int& Fusion::Allocator::dyn__replicateByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::dyn__replicateByteLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_replicateByteLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Allocator.get_Configuration
::Fusion::Allocator::Config Fusion::Allocator::get_Configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::get_Configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Allocator::Config, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Allocator.get_Globals
void* Fusion::Allocator::get_Globals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::get_Globals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Globals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<void*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Allocator.get_Checksum
void* Fusion::Allocator::get_Checksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::get_Checksum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Checksum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<void*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Allocator.get_Replicate
int* Fusion::Allocator::get_Replicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::get_Replicate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Replicate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Allocator.get_ChecksumByteLength
int Fusion::Allocator::get_ChecksumByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::get_ChecksumByteLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ChecksumByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Allocator.get_ReplicateByteLength
int Fusion::Allocator::get_ReplicateByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::get_ReplicateByteLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ReplicateByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Allocator.get_ReplicateWordLength
int Fusion::Allocator::get_ReplicateWordLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::get_ReplicateWordLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ReplicateWordLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Allocator.get_ReplicateHeapWordOffset
int Fusion::Allocator::get_ReplicateHeapWordOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::get_ReplicateHeapWordOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ReplicateHeapWordOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Allocator.Meta
::Fusion::Ptr Fusion::Allocator::Meta(void* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Meta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Meta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Ptr, false>(this, ___internal__method, p);
}
// Autogenerated method: Fusion.Allocator.Meta
void* Fusion::Allocator::Meta(::Fusion::Ptr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Meta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Meta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<void*, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Fusion.Allocator.GetReplicateWordOffset
int Fusion::Allocator::GetReplicateWordOffset(void* ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::GetReplicateWordOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetReplicateWordOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Fusion.Allocator.GetReplicateWordOffset
int Fusion::Allocator::GetReplicateWordOffset(::Fusion::Ptr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::GetReplicateWordOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetReplicateWordOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Fusion.Allocator.Ptr
::Fusion::Ptr Fusion::Allocator::Ptr(void* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Ptr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Ptr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Ptr, false>(this, ___internal__method, p);
}
// Autogenerated method: Fusion.Allocator.Ptr
void* Fusion::Allocator::Ptr(::Fusion::Ptr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Ptr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Ptr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<void*, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Fusion.Allocator.IsPointerInMeta
bool Fusion::Allocator::IsPointerInMeta(void* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::IsPointerInMeta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsPointerInMeta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: Fusion.Allocator.IsPointerInHeap
bool Fusion::Allocator::IsPointerInHeap(void* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::IsPointerInHeap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsPointerInHeap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: Fusion.Allocator.WordCount
int Fusion::Allocator::WordCount(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::WordCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator", "WordCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: Fusion.Allocator.GetBucket
::Fusion::Allocator::Bucket* Fusion::Allocator::GetBucket(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::GetBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Allocator::Bucket*, false>(this, ___internal__method, index);
}
// Autogenerated method: Fusion.Allocator.GetBucketForBlock
::Fusion::Allocator::Bucket* Fusion::Allocator::GetBucketForBlock(::Fusion::Allocator::Block* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::GetBucketForBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBucketForBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Allocator::Bucket*, false>(this, ___internal__method, block);
}
// Autogenerated method: Fusion.Allocator.GetBucketList
::Fusion::Allocator::BlockList* Fusion::Allocator::GetBucketList(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::GetBucketList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBucketList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Allocator::BlockList*, false>(this, ___internal__method, index);
}
// Autogenerated method: Fusion.Allocator.GetBlock
::Fusion::Allocator::Block* Fusion::Allocator::GetBlock(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::GetBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Allocator::Block*, false>(this, ___internal__method, index);
}
// Autogenerated method: Fusion.Allocator.GetBlock
::Fusion::Allocator::Block* Fusion::Allocator::GetBlock(int64_t index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::GetBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Allocator::Block*, false>(this, ___internal__method, index);
}
// Autogenerated method: Fusion.Allocator.GetBlockBucket
int Fusion::Allocator::GetBlockBucket(int64_t index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::GetBlockBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBlockBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, index);
}
// Autogenerated method: Fusion.Allocator.GetBlockForPointer
::Fusion::Allocator::Block* Fusion::Allocator::GetBlockForPointer(void* ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::GetBlockForPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBlockForPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Allocator::Block*, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Fusion.Allocator.GetBlockIndexForPointer
int Fusion::Allocator::GetBlockIndexForPointer(void* ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::GetBlockIndexForPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBlockIndexForPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Fusion.Allocator.GetBlockMemory
uint8_t* Fusion::Allocator::GetBlockMemory(::Fusion::Allocator::Block* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::GetBlockMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBlockMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(this, ___internal__method, block);
}
// Autogenerated method: Fusion.Allocator.GetBlockMemory
uint8_t* Fusion::Allocator::GetBlockMemory(int64_t blockIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::GetBlockMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBlockMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blockIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(this, ___internal__method, blockIndex);
}
// Autogenerated method: Fusion.Allocator.TryGetSegmentRoot
bool Fusion::Allocator::TryGetSegmentRoot(void* ptr, ByRef<void*> root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::TryGetSegmentRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetSegmentRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractIndependentType<void*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ptr, byref(root));
}
// Autogenerated method: Fusion.Allocator.GetSegmentRoot
void* Fusion::Allocator::GetSegmentRoot(void* ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::GetSegmentRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSegmentRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<void*, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Fusion.Allocator.AllocAndClear
void* Fusion::Allocator::AllocAndClear(::Fusion::Allocator* a, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::AllocAndClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator", "AllocAndClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<void*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, size);
}
// Autogenerated method: Fusion.Allocator.GetWordLengthForReplication
int Fusion::Allocator::GetWordLengthForReplication(::Fusion::Allocator* allocator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::GetWordLengthForReplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator", "GetWordLengthForReplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allocator)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, allocator);
}
// Autogenerated method: Fusion.Allocator.GetByteLengthForReplication
int Fusion::Allocator::GetByteLengthForReplication(::Fusion::Allocator* allocator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::GetByteLengthForReplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator", "GetByteLengthForReplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allocator)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, allocator);
}
// Autogenerated method: Fusion.Allocator.PrintDebugInfo
::StringW Fusion::Allocator::PrintDebugInfo(::Fusion::Allocator* allocator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::PrintDebugInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator", "PrintDebugInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allocator)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, allocator);
}
// Autogenerated method: Fusion.Allocator.DeltaPack
void Fusion::Allocator::DeltaPack(::Fusion::Simulation::IDeltaCompressor* compressor, ::Fusion::Allocator* current, ::Fusion::Allocator* shared, ::Fusion::Sockets::NetBitBuffer* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::DeltaPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator", "DeltaPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compressor), ::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(shared), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, compressor, current, shared, b);
}
// Autogenerated method: Fusion.Allocator.DeltaUnpack
void Fusion::Allocator::DeltaUnpack(::Fusion::Allocator* target, ::Fusion::Allocator* shared, ::Fusion::Sockets::NetBitBuffer* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::DeltaUnpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator", "DeltaUnpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(shared), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, shared, b);
}
// Autogenerated method: Fusion.Allocator.CanAllocSize
bool Fusion::Allocator::CanAllocSize(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::CanAllocSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CanAllocSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, size);
}
// Autogenerated method: Fusion.Allocator.CanAllocSizeAssert_Temp
bool Fusion::Allocator::CanAllocSizeAssert_Temp(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::CanAllocSizeAssert_Temp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CanAllocSizeAssert_Temp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, size);
}
// Autogenerated method: Fusion.Allocator.Alloc
void* Fusion::Allocator::Alloc(::Fusion::Allocator* a, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Alloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator", "Alloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<void*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, size);
}
// Autogenerated method: Fusion.Allocator.TryAllocateSegmentFromBlock
void* Fusion::Allocator::TryAllocateSegmentFromBlock(::Fusion::Allocator* a, ::Fusion::Allocator::Bucket* bucket, ::Fusion::Allocator::Block* block, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::TryAllocateSegmentFromBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator", "TryAllocateSegmentFromBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<void*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, bucket, block, size);
}
// Autogenerated method: Fusion.Allocator.Free
void Fusion::Allocator::Free(::Fusion::Allocator* a, void* ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator", "Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, ptr);
}
// Autogenerated method: Fusion.Allocator.DebugVerifyBucketIntegrity
void Fusion::Allocator::DebugVerifyBucketIntegrity(::Fusion::Allocator* a, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::DebugVerifyBucketIntegrity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator", "DebugVerifyBucketIntegrity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, index);
}
// Autogenerated method: Fusion.Allocator.Dispose
void Fusion::Allocator::Dispose(::Fusion::Allocator* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator", "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a);
}
// Autogenerated method: Fusion.Allocator.Copy
void Fusion::Allocator::Copy(::Fusion::Allocator* from, ::Fusion::Allocator* to, bool onlyUsed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(onlyUsed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, to, onlyUsed);
}
// Autogenerated method: Fusion.Allocator.Create
::Fusion::Allocator* Fusion::Allocator::Create(::Fusion::Allocator::Config config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Allocator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, config);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Allocator/Block
#include "Fusion/Allocator_Block.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 SIZE
int Fusion::Allocator::Block::_get_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Block::_get_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Allocator/Block", "SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SIZE
void Fusion::Allocator::Block::_set_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Block::_set_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator/Block", "SIZE", value));
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Ptr Prev
[[deprecated("Use field access instead!")]] ::Fusion::Ptr& Fusion::Allocator::Block::dyn_Prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Block::dyn_Prev");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Prev"))->offset;
  return *reinterpret_cast<::Fusion::Ptr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Ptr Next
[[deprecated("Use field access instead!")]] ::Fusion::Ptr& Fusion::Allocator::Block::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Block::dyn_Next");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Fusion::Ptr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Bucket
[[deprecated("Use field access instead!")]] int& Fusion::Allocator::Block::dyn_Bucket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Block::dyn_Bucket");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Bucket"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Ptr SegmentsFree
[[deprecated("Use field access instead!")]] ::Fusion::Ptr& Fusion::Allocator::Block::dyn_SegmentsFree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Block::dyn_SegmentsFree");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SegmentsFree"))->offset;
  return *reinterpret_cast<::Fusion::Ptr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SegmentsUsed
[[deprecated("Use field access instead!")]] int& Fusion::Allocator::Block::dyn_SegmentsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Block::dyn_SegmentsUsed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SegmentsUsed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SegmentsAllocated
[[deprecated("Use field access instead!")]] int& Fusion::Allocator::Block::dyn_SegmentsAllocated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Block::dyn_SegmentsAllocated");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SegmentsAllocated"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Index
[[deprecated("Use field access instead!")]] int& Fusion::Allocator::Block::dyn_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Block::dyn_Index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Allocator/Block.SegmentsFreeCount
int Fusion::Allocator::Block::SegmentsFreeCount(::Fusion::Allocator* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Block::SegmentsFreeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SegmentsFreeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a);
}
// Autogenerated method: Fusion.Allocator/Block.SegmentsFreeContains
bool Fusion::Allocator::Block::SegmentsFreeContains(::Fusion::Allocator* a, void* ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Block::SegmentsFreeContains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SegmentsFreeContains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a, ptr);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Allocator/BlockList
#include "Fusion/Allocator_BlockList.hpp"
// Including type: Fusion.Allocator/Block
#include "Fusion/Allocator_Block.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 SIZE
int Fusion::Allocator::BlockList::_get_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::BlockList::_get_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Allocator/BlockList", "SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SIZE
void Fusion::Allocator::BlockList::_set_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::BlockList::_set_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator/BlockList", "SIZE", value));
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Ptr Head
[[deprecated("Use field access instead!")]] ::Fusion::Ptr& Fusion::Allocator::BlockList::dyn_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::BlockList::dyn_Head");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Head"))->offset;
  return *reinterpret_cast<::Fusion::Ptr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Ptr Tail
[[deprecated("Use field access instead!")]] ::Fusion::Ptr& Fusion::Allocator::BlockList::dyn_Tail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::BlockList::dyn_Tail");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tail"))->offset;
  return *reinterpret_cast<::Fusion::Ptr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Allocator/BlockList.get_IsEmpty
bool Fusion::Allocator::BlockList::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::BlockList::get_IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Allocator/BlockList.AddFirst
void Fusion::Allocator::BlockList::AddFirst(::Fusion::Allocator* a, ::Fusion::Allocator::Block* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::BlockList::AddFirst");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddFirst", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, item);
}
// Autogenerated method: Fusion.Allocator/BlockList.AddLast
void Fusion::Allocator::BlockList::AddLast(::Fusion::Allocator* a, ::Fusion::Allocator::Block* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::BlockList::AddLast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddLast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, item);
}
// Autogenerated method: Fusion.Allocator/BlockList.MoveFirst
void Fusion::Allocator::BlockList::MoveFirst(::Fusion::Allocator* a, ::Fusion::Allocator::Block* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::BlockList::MoveFirst");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveFirst", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, item);
}
// Autogenerated method: Fusion.Allocator/BlockList.MoveLast
void Fusion::Allocator::BlockList::MoveLast(::Fusion::Allocator* a, ::Fusion::Allocator::Block* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::BlockList::MoveLast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveLast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, item);
}
// Autogenerated method: Fusion.Allocator/BlockList.RemoveHead
::Fusion::Allocator::Block* Fusion::Allocator::BlockList::RemoveHead(::Fusion::Allocator* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::BlockList::RemoveHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RemoveHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Allocator::Block*, false>(this, ___internal__method, a);
}
// Autogenerated method: Fusion.Allocator/BlockList.Remove
void Fusion::Allocator::BlockList::Remove(::Fusion::Allocator* a, ::Fusion::Allocator::Block* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::BlockList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, item);
}
// Autogenerated method: Fusion.Allocator/BlockList.Contains
bool Fusion::Allocator::BlockList::Contains(::Fusion::Allocator* a, ::Fusion::Allocator::Block* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::BlockList::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a, item);
}
// Autogenerated method: Fusion.Allocator/BlockList.DebugVerifyListIntegrity
void Fusion::Allocator::BlockList::DebugVerifyListIntegrity(::Fusion::Allocator* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::BlockList::DebugVerifyListIntegrity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "DebugVerifyListIntegrity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Allocator/Bucket
#include "Fusion/Allocator_Bucket.hpp"
// Including type: Fusion.Allocator/Config
#include "Fusion/Allocator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 SIZE
int Fusion::Allocator::Bucket::_get_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Bucket::_get_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Allocator/Bucket", "SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SIZE
void Fusion::Allocator::Bucket::_set_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Bucket::_set_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator/Bucket", "SIZE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Index
[[deprecated("Use field access instead!")]] int& Fusion::Allocator::Bucket::dyn_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Bucket::dyn_Index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SegmentStride
[[deprecated("Use field access instead!")]] int& Fusion::Allocator::Bucket::dyn_SegmentStride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Bucket::dyn_SegmentStride");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SegmentStride"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SegmentWordCount
[[deprecated("Use field access instead!")]] int& Fusion::Allocator::Bucket::dyn_SegmentWordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Bucket::dyn_SegmentWordCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SegmentWordCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SegmentCapacity
[[deprecated("Use field access instead!")]] int& Fusion::Allocator::Bucket::dyn_SegmentCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Bucket::dyn_SegmentCapacity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SegmentCapacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Allocator/Bucket.Create
::Fusion::Allocator::Bucket Fusion::Allocator::Bucket::Create(int index, int wordCount, ::Fusion::Allocator::Config config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Bucket::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator/Bucket", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(wordCount), ::il2cpp_utils::ExtractType(config)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Allocator::Bucket, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index, wordCount, config);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Allocator/AllocatorBucketSize
#include "Fusion/Allocator_AllocatorBucketSize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32[] Sizes
::ArrayW<int> Fusion::Allocator::AllocatorBucketSize::_get_Sizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::AllocatorBucketSize::_get_Sizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Fusion", "Allocator/AllocatorBucketSize", "Sizes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32[] Sizes
void Fusion::Allocator::AllocatorBucketSize::_set_Sizes(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::AllocatorBucketSize::_set_Sizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator/AllocatorBucketSize", "Sizes", value));
}
// Autogenerated method: Fusion.Allocator/AllocatorBucketSize..cctor
void Fusion::Allocator::AllocatorBucketSize::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::AllocatorBucketSize::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Allocator/AllocatorBucketSize", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.Allocator/Config
#include "Fusion/Allocator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 SIZE
int Fusion::Allocator::Config::_get_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::_get_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Allocator/Config", "SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SIZE
void Fusion::Allocator::Config::_set_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::_set_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator/Config", "SIZE", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.PageSizes DEFAULT_BLOCK_SHIFT
::Fusion::PageSizes Fusion::Allocator::Config::_get_DEFAULT_BLOCK_SHIFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::_get_DEFAULT_BLOCK_SHIFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::PageSizes>("Fusion", "Allocator/Config", "DEFAULT_BLOCK_SHIFT"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.PageSizes DEFAULT_BLOCK_SHIFT
void Fusion::Allocator::Config::_set_DEFAULT_BLOCK_SHIFT(::Fusion::PageSizes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::_set_DEFAULT_BLOCK_SHIFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator/Config", "DEFAULT_BLOCK_SHIFT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DEFAULT_BLOCK_COUNT
int Fusion::Allocator::Config::_get_DEFAULT_BLOCK_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::_get_DEFAULT_BLOCK_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Allocator/Config", "DEFAULT_BLOCK_COUNT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DEFAULT_BLOCK_COUNT
void Fusion::Allocator::Config::_set_DEFAULT_BLOCK_COUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::_set_DEFAULT_BLOCK_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator/Config", "DEFAULT_BLOCK_COUNT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 BlockShift
[[deprecated("Use field access instead!")]] int& Fusion::Allocator::Config::dyn_BlockShift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::dyn_BlockShift");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlockShift"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 BlockCount
[[deprecated("Use field access instead!")]] int& Fusion::Allocator::Config::dyn_BlockCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::dyn_BlockCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlockCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 GlobalsSize
[[deprecated("Use field access instead!")]] int& Fusion::Allocator::Config::dyn_GlobalsSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::dyn_GlobalsSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GlobalsSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Allocator/Config.get_BlockByteSize
int Fusion::Allocator::Config::get_BlockByteSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::get_BlockByteSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_BlockByteSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Allocator/Config.get_BlockWordCount
int Fusion::Allocator::Config::get_BlockWordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::get_BlockWordCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_BlockWordCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Allocator/Config.get_HeapSizeUsable
int Fusion::Allocator::Config::get_HeapSizeUsable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::get_HeapSizeUsable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HeapSizeUsable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Allocator/Config.get_HeapSizeAllocated
int Fusion::Allocator::Config::get_HeapSizeAllocated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::get_HeapSizeAllocated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HeapSizeAllocated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Allocator/Config..ctor
Fusion::Allocator::Config::Config(::Fusion::PageSizes shift, int count, int globalsSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(globalsSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift, count, globalsSize);
}
// Autogenerated method: Fusion.Allocator/Config.Equals
bool Fusion::Allocator::Config::Equals(::Fusion::Allocator::Config other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Fusion.Allocator/Config.Equals
bool Fusion::Allocator::Config::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Fusion.Allocator/Config.GetHashCode
int Fusion::Allocator::Config::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Allocator/Config.ToString
::StringW Fusion::Allocator::Config::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Config::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Allocator/Segment
#include "Fusion/Allocator_Segment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 SIZE
int Fusion::Allocator::Segment::_get_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Segment::_get_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Allocator/Segment", "SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SIZE
void Fusion::Allocator::Segment::_set_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Segment::_set_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Allocator/Segment", "SIZE", value));
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Ptr Next
[[deprecated("Use field access instead!")]] ::Fusion::Ptr& Fusion::Allocator::Segment::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Allocator::Segment::dyn_Next");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Fusion::Ptr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.PageSizes
#include "Fusion/PageSizes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.PageSizes _1Kb
::Fusion::PageSizes Fusion::PageSizes::_get__1Kb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_get__1Kb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::PageSizes>("Fusion", "PageSizes", "_1Kb"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.PageSizes _1Kb
void Fusion::PageSizes::_set__1Kb(::Fusion::PageSizes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_set__1Kb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "PageSizes", "_1Kb", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.PageSizes _2Kb
::Fusion::PageSizes Fusion::PageSizes::_get__2Kb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_get__2Kb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::PageSizes>("Fusion", "PageSizes", "_2Kb"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.PageSizes _2Kb
void Fusion::PageSizes::_set__2Kb(::Fusion::PageSizes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_set__2Kb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "PageSizes", "_2Kb", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.PageSizes _4Kb
::Fusion::PageSizes Fusion::PageSizes::_get__4Kb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_get__4Kb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::PageSizes>("Fusion", "PageSizes", "_4Kb"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.PageSizes _4Kb
void Fusion::PageSizes::_set__4Kb(::Fusion::PageSizes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_set__4Kb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "PageSizes", "_4Kb", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.PageSizes _8Kb
::Fusion::PageSizes Fusion::PageSizes::_get__8Kb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_get__8Kb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::PageSizes>("Fusion", "PageSizes", "_8Kb"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.PageSizes _8Kb
void Fusion::PageSizes::_set__8Kb(::Fusion::PageSizes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_set__8Kb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "PageSizes", "_8Kb", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.PageSizes _16Kb
::Fusion::PageSizes Fusion::PageSizes::_get__16Kb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_get__16Kb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::PageSizes>("Fusion", "PageSizes", "_16Kb"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.PageSizes _16Kb
void Fusion::PageSizes::_set__16Kb(::Fusion::PageSizes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_set__16Kb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "PageSizes", "_16Kb", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.PageSizes _32Kb
::Fusion::PageSizes Fusion::PageSizes::_get__32Kb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_get__32Kb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::PageSizes>("Fusion", "PageSizes", "_32Kb"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.PageSizes _32Kb
void Fusion::PageSizes::_set__32Kb(::Fusion::PageSizes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_set__32Kb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "PageSizes", "_32Kb", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.PageSizes _64Kb
::Fusion::PageSizes Fusion::PageSizes::_get__64Kb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_get__64Kb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::PageSizes>("Fusion", "PageSizes", "_64Kb"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.PageSizes _64Kb
void Fusion::PageSizes::_set__64Kb(::Fusion::PageSizes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_set__64Kb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "PageSizes", "_64Kb", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.PageSizes _128Kb
::Fusion::PageSizes Fusion::PageSizes::_get__128Kb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_get__128Kb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::PageSizes>("Fusion", "PageSizes", "_128Kb"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.PageSizes _128Kb
void Fusion::PageSizes::_set__128Kb(::Fusion::PageSizes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_set__128Kb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "PageSizes", "_128Kb", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.PageSizes _256Kb
::Fusion::PageSizes Fusion::PageSizes::_get__256Kb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_get__256Kb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::PageSizes>("Fusion", "PageSizes", "_256Kb"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.PageSizes _256Kb
void Fusion::PageSizes::_set__256Kb(::Fusion::PageSizes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::_set__256Kb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "PageSizes", "_256Kb", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Fusion::PageSizes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::PageSizes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.Ptr
#include "Fusion/Ptr.hpp"
// Including type: Fusion.Ptr/EqualityComparer
#include "Fusion/Ptr_EqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 SIZE
int Fusion::Ptr::_get_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Ptr::_get_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "Ptr", "SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SIZE
void Fusion::Ptr::_set_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Ptr::_set_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Ptr", "SIZE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Address
[[deprecated("Use field access instead!")]] int& Fusion::Ptr::dyn_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Ptr::dyn_Address");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Address"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Ptr.get_Null
::Fusion::Ptr Fusion::Ptr::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Ptr::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Ptr", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Ptr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Fusion.Ptr.Equals
bool Fusion::Ptr::Equals(::Fusion::Ptr other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Ptr::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Ptr), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Fusion.Ptr.Equals
bool Fusion::Ptr::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Ptr::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Fusion.Ptr.GetHashCode
int Fusion::Ptr::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Ptr::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Ptr.ToString
::StringW Fusion::Ptr::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Ptr::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Ptr.op_Equality
bool Fusion::operator ==(const ::Fusion::Ptr& a, const ::Fusion::Ptr& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Ptr::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Ptr", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Fusion.Ptr.op_Inequality
bool Fusion::operator !=(const ::Fusion::Ptr& a, const ::Fusion::Ptr& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Ptr::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Ptr", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Fusion.Ptr.op_Addition
::Fusion::Ptr Fusion::operator+(const ::Fusion::Ptr& p, const int& v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Ptr::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Ptr", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Ptr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, v);
}
// Autogenerated method: Fusion.Ptr.op_Subtraction
::Fusion::Ptr Fusion::operator-(const ::Fusion::Ptr& p, const int& v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Ptr::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "Ptr", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Ptr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, v);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Ptr/EqualityComparer
#include "Fusion/Ptr_EqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Fusion.Ptr/EqualityComparer.Equals
bool Fusion::Ptr::EqualityComparer::Equals(::Fusion::Ptr x, ::Fusion::Ptr y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Ptr::EqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Ptr::EqualityComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Fusion.Ptr/EqualityComparer.GetHashCode
int Fusion::Ptr::EqualityComparer::GetHashCode(::Fusion::Ptr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Ptr::EqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Ptr::EqualityComparer*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.AccuracyAttribute
#include "Fusion/AccuracyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _accuracy
[[deprecated("Use field access instead!")]] float& Fusion::AccuracyAttribute::dyn__accuracy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyAttribute::dyn__accuracy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accuracy"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <CustomHash>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::AccuracyAttribute::dyn_$CustomHash$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyAttribute::dyn_$CustomHash$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CustomHash>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.AccuracyAttribute.get_CustomHash
int Fusion::AccuracyAttribute::get_CustomHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyAttribute::get_CustomHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.AccuracyAttribute.get_Accuracy
float Fusion::AccuracyAttribute::get_Accuracy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyAttribute::get_Accuracy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Accuracy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.AccuracyRangePreset
#include "Fusion/AccuracyRangePreset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.AccuracyRangePreset Defaults
::Fusion::AccuracyRangePreset Fusion::AccuracyRangePreset::_get_Defaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyRangePreset::_get_Defaults");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::AccuracyRangePreset>("Fusion", "AccuracyRangePreset", "Defaults"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.AccuracyRangePreset Defaults
void Fusion::AccuracyRangePreset::_set_Defaults(::Fusion::AccuracyRangePreset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyRangePreset::_set_Defaults");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "AccuracyRangePreset", "Defaults", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.AccuracyRangePreset Position
::Fusion::AccuracyRangePreset Fusion::AccuracyRangePreset::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyRangePreset::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::AccuracyRangePreset>("Fusion", "AccuracyRangePreset", "Position"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.AccuracyRangePreset Position
void Fusion::AccuracyRangePreset::_set_Position(::Fusion::AccuracyRangePreset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyRangePreset::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "AccuracyRangePreset", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.AccuracyRangePreset Rotation
::Fusion::AccuracyRangePreset Fusion::AccuracyRangePreset::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyRangePreset::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::AccuracyRangePreset>("Fusion", "AccuracyRangePreset", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.AccuracyRangePreset Rotation
void Fusion::AccuracyRangePreset::_set_Rotation(::Fusion::AccuracyRangePreset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyRangePreset::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "AccuracyRangePreset", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.AccuracyRangePreset Velocity
::Fusion::AccuracyRangePreset Fusion::AccuracyRangePreset::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyRangePreset::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::AccuracyRangePreset>("Fusion", "AccuracyRangePreset", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.AccuracyRangePreset Velocity
void Fusion::AccuracyRangePreset::_set_Velocity(::Fusion::AccuracyRangePreset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyRangePreset::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "AccuracyRangePreset", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.AccuracyRangePreset AngularVelocity
::Fusion::AccuracyRangePreset Fusion::AccuracyRangePreset::_get_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyRangePreset::_get_AngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::AccuracyRangePreset>("Fusion", "AccuracyRangePreset", "AngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.AccuracyRangePreset AngularVelocity
void Fusion::AccuracyRangePreset::_set_AngularVelocity(::Fusion::AccuracyRangePreset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyRangePreset::_set_AngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "AccuracyRangePreset", "AngularVelocity", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Fusion::AccuracyRangePreset::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyRangePreset::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.AccuracyRangeAttribute
#include "Fusion/AccuracyRangeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single min
[[deprecated("Use field access instead!")]] float& Fusion::AccuracyRangeAttribute::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyRangeAttribute::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single max
[[deprecated("Use field access instead!")]] float& Fusion::AccuracyRangeAttribute::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyRangeAttribute::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 places
[[deprecated("Use field access instead!")]] int& Fusion::AccuracyRangeAttribute::dyn_places() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyRangeAttribute::dyn_places");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "places"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean logarithmic
[[deprecated("Use field access instead!")]] bool& Fusion::AccuracyRangeAttribute::dyn_logarithmic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::AccuracyRangeAttribute::dyn_logarithmic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logarithmic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.AssemblyNameAttribute
#include "Fusion/AssemblyNameAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.BehaviourActionAttribute
#include "Fusion/BehaviourActionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.BehaviourActionAttribute/ActionFlags ConditionFlags
[[deprecated("Use field access instead!")]] ::Fusion::BehaviourActionAttribute::ActionFlags& Fusion::BehaviourActionAttribute::dyn_ConditionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourActionAttribute::dyn_ConditionFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConditionFlags"))->offset;
  return *reinterpret_cast<::Fusion::BehaviourActionAttribute::ActionFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ExecuteMethod
[[deprecated("Use field access instead!")]] ::StringW& Fusion::BehaviourActionAttribute::dyn_ExecuteMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourActionAttribute::dyn_ExecuteMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExecuteMethod"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ConditionMember
[[deprecated("Use field access instead!")]] ::StringW& Fusion::BehaviourActionAttribute::dyn_ConditionMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourActionAttribute::dyn_ConditionMember");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConditionMember"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.BehaviourActionAttribute/ActionFlags
#include "Fusion/BehaviourActionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.BehaviourActionAttribute/ActionFlags ShowAtRuntime
::Fusion::BehaviourActionAttribute::ActionFlags Fusion::BehaviourActionAttribute::ActionFlags::_get_ShowAtRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourActionAttribute::ActionFlags::_get_ShowAtRuntime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::BehaviourActionAttribute::ActionFlags>("Fusion", "BehaviourActionAttribute/ActionFlags", "ShowAtRuntime"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.BehaviourActionAttribute/ActionFlags ShowAtRuntime
void Fusion::BehaviourActionAttribute::ActionFlags::_set_ShowAtRuntime(::Fusion::BehaviourActionAttribute::ActionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourActionAttribute::ActionFlags::_set_ShowAtRuntime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "BehaviourActionAttribute/ActionFlags", "ShowAtRuntime", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.BehaviourActionAttribute/ActionFlags ShowAtNotRuntime
::Fusion::BehaviourActionAttribute::ActionFlags Fusion::BehaviourActionAttribute::ActionFlags::_get_ShowAtNotRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourActionAttribute::ActionFlags::_get_ShowAtNotRuntime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::BehaviourActionAttribute::ActionFlags>("Fusion", "BehaviourActionAttribute/ActionFlags", "ShowAtNotRuntime"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.BehaviourActionAttribute/ActionFlags ShowAtNotRuntime
void Fusion::BehaviourActionAttribute::ActionFlags::_set_ShowAtNotRuntime(::Fusion::BehaviourActionAttribute::ActionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourActionAttribute::ActionFlags::_set_ShowAtNotRuntime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "BehaviourActionAttribute/ActionFlags", "ShowAtNotRuntime", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.BehaviourActionAttribute/ActionFlags AlwaysShow
::Fusion::BehaviourActionAttribute::ActionFlags Fusion::BehaviourActionAttribute::ActionFlags::_get_AlwaysShow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourActionAttribute::ActionFlags::_get_AlwaysShow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::BehaviourActionAttribute::ActionFlags>("Fusion", "BehaviourActionAttribute/ActionFlags", "AlwaysShow"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.BehaviourActionAttribute/ActionFlags AlwaysShow
void Fusion::BehaviourActionAttribute::ActionFlags::_set_AlwaysShow(::Fusion::BehaviourActionAttribute::ActionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourActionAttribute::ActionFlags::_set_AlwaysShow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "BehaviourActionAttribute/ActionFlags", "AlwaysShow", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.BehaviourActionAttribute/ActionFlags DirtyAfterButton
::Fusion::BehaviourActionAttribute::ActionFlags Fusion::BehaviourActionAttribute::ActionFlags::_get_DirtyAfterButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourActionAttribute::ActionFlags::_get_DirtyAfterButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::BehaviourActionAttribute::ActionFlags>("Fusion", "BehaviourActionAttribute/ActionFlags", "DirtyAfterButton"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.BehaviourActionAttribute/ActionFlags DirtyAfterButton
void Fusion::BehaviourActionAttribute::ActionFlags::_set_DirtyAfterButton(::Fusion::BehaviourActionAttribute::ActionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourActionAttribute::ActionFlags::_set_DirtyAfterButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "BehaviourActionAttribute/ActionFlags", "DirtyAfterButton", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Fusion::BehaviourActionAttribute::ActionFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourActionAttribute::ActionFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.BehaviourButtonActionAttribute
#include "Fusion/BehaviourButtonActionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.String ButtonName
[[deprecated("Use field access instead!")]] ::StringW& Fusion::BehaviourButtonActionAttribute::dyn_ButtonName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourButtonActionAttribute::dyn_ButtonName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ButtonName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.BehaviourToggleAttribute
#include "Fusion/BehaviourToggleAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.BehaviourWarnAttribute
#include "Fusion/BehaviourWarnAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.String WarnText
[[deprecated("Use field access instead!")]] ::StringW& Fusion::BehaviourWarnAttribute::dyn_WarnText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::BehaviourWarnAttribute::dyn_WarnText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WarnText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.CapacityAttribute
#include "Fusion/CapacityAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <Length>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::CapacityAttribute::dyn_$Length$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CapacityAttribute::dyn_$Length$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Length>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.CapacityAttribute.get_Length
int Fusion::CapacityAttribute::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CapacityAttribute::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.CastEnumAttribute
#include "Fusion/CastEnumAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String GetTypeMethodName
[[deprecated("Use field access instead!")]] ::StringW& Fusion::CastEnumAttribute::dyn_GetTypeMethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CastEnumAttribute::dyn_GetTypeMethodName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GetTypeMethodName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type CastToType
[[deprecated("Use field access instead!")]] ::System::Type*& Fusion::CastEnumAttribute::dyn_CastToType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CastEnumAttribute::dyn_CastToType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CastToType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.DecoratingPropertyAttribute
#include "Fusion/DecoratingPropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultOrder
int Fusion::DecoratingPropertyAttribute::_get_DefaultOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::DecoratingPropertyAttribute::_get_DefaultOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "DecoratingPropertyAttribute", "DefaultOrder"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultOrder
void Fusion::DecoratingPropertyAttribute::_set_DefaultOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::DecoratingPropertyAttribute::_set_DefaultOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "DecoratingPropertyAttribute", "DefaultOrder", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.DefaultForPropertyAttribute
#include "Fusion/DefaultForPropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <PropertyName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Fusion::DefaultForPropertyAttribute::dyn_$PropertyName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::DefaultForPropertyAttribute::dyn_$PropertyName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PropertyName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <WordOffset>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::DefaultForPropertyAttribute::dyn_$WordOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::DefaultForPropertyAttribute::dyn_$WordOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WordOffset>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <WordCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::DefaultForPropertyAttribute::dyn_$WordCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::DefaultForPropertyAttribute::dyn_$WordCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WordCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.DefaultForPropertyAttribute.get_PropertyName
::StringW Fusion::DefaultForPropertyAttribute::get_PropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::DefaultForPropertyAttribute::get_PropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.DefaultForPropertyAttribute.get_WordOffset
int Fusion::DefaultForPropertyAttribute::get_WordOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::DefaultForPropertyAttribute::get_WordOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WordOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.DefaultForPropertyAttribute.get_WordCount
int Fusion::DefaultForPropertyAttribute::get_WordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::DefaultForPropertyAttribute::get_WordCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WordCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.DrawIfAttribute
#include "Fusion/DrawIfAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 DefaultOrder
int Fusion::DrawIfAttribute::_get_DefaultOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::DrawIfAttribute::_get_DefaultOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "DrawIfAttribute", "DefaultOrder"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DefaultOrder
void Fusion::DrawIfAttribute::_set_DefaultOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::DrawIfAttribute::_set_DefaultOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "DrawIfAttribute", "DefaultOrder", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Hide
[[deprecated("Use field access instead!")]] bool& Fusion::DrawIfAttribute::dyn_Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::DrawIfAttribute::dyn_Hide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hide"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.EditorDisabledAttribute
#include "Fusion/EditorDisabledAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Boolean HideInRelease
[[deprecated("Use field access instead!")]] bool& Fusion::EditorDisabledAttribute::dyn_HideInRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::EditorDisabledAttribute::dyn_HideInRelease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HideInRelease"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.EditorDisabledGroupAttribute
#include "Fusion/EditorDisabledGroupAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <Begin>k__BackingField
[[deprecated("Use field access instead!")]] bool& Fusion::EditorDisabledGroupAttribute::dyn_$Begin$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::EditorDisabledGroupAttribute::dyn_$Begin$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Begin>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.EditorDisabledGroupAttribute.get_Begin
bool Fusion::EditorDisabledGroupAttribute::get_Begin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::EditorDisabledGroupAttribute::get_Begin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Begin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.EnumMaskAttribute
#include "Fusion/EnumMaskAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean definesZero
[[deprecated("Use field access instead!")]] bool& Fusion::EnumMaskAttribute::dyn_definesZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::EnumMaskAttribute::dyn_definesZero");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "definesZero"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type castTo
[[deprecated("Use field access instead!")]] ::System::Type*& Fusion::EnumMaskAttribute::dyn_castTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::EnumMaskAttribute::dyn_castTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "castTo"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.FixedBufferPropertyAttribute
#include "Fusion/FixedBufferPropertyAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <Type>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Fusion::FixedBufferPropertyAttribute::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FixedBufferPropertyAttribute::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <SurrogateType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Fusion::FixedBufferPropertyAttribute::dyn_$SurrogateType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FixedBufferPropertyAttribute::dyn_$SurrogateType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SurrogateType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <Capacity>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::FixedBufferPropertyAttribute::dyn_$Capacity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FixedBufferPropertyAttribute::dyn_$Capacity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Capacity>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.FixedBufferPropertyAttribute.get_Type
::System::Type* Fusion::FixedBufferPropertyAttribute::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FixedBufferPropertyAttribute::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.FixedBufferPropertyAttribute.get_SurrogateType
::System::Type* Fusion::FixedBufferPropertyAttribute::get_SurrogateType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FixedBufferPropertyAttribute::get_SurrogateType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SurrogateType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.FixedBufferPropertyAttribute.get_Capacity
int Fusion::FixedBufferPropertyAttribute::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::FixedBufferPropertyAttribute::get_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.InlineEditorAttribute
#include "Fusion/InlineEditorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.InlineHelpButtonPlacement
#include "Fusion/InlineHelpButtonPlacement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.InlineHelpButtonPlacement BeforeValue
::Fusion::InlineHelpButtonPlacement Fusion::InlineHelpButtonPlacement::_get_BeforeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::InlineHelpButtonPlacement::_get_BeforeValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::InlineHelpButtonPlacement>("Fusion", "InlineHelpButtonPlacement", "BeforeValue"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.InlineHelpButtonPlacement BeforeValue
void Fusion::InlineHelpButtonPlacement::_set_BeforeValue(::Fusion::InlineHelpButtonPlacement value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::InlineHelpButtonPlacement::_set_BeforeValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "InlineHelpButtonPlacement", "BeforeValue", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.InlineHelpButtonPlacement BeforeLabel
::Fusion::InlineHelpButtonPlacement Fusion::InlineHelpButtonPlacement::_get_BeforeLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::InlineHelpButtonPlacement::_get_BeforeLabel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::InlineHelpButtonPlacement>("Fusion", "InlineHelpButtonPlacement", "BeforeLabel"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.InlineHelpButtonPlacement BeforeLabel
void Fusion::InlineHelpButtonPlacement::_set_BeforeLabel(::Fusion::InlineHelpButtonPlacement value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::InlineHelpButtonPlacement::_set_BeforeLabel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "InlineHelpButtonPlacement", "BeforeLabel", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.InlineHelpButtonPlacement AfterLabel
::Fusion::InlineHelpButtonPlacement Fusion::InlineHelpButtonPlacement::_get_AfterLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::InlineHelpButtonPlacement::_get_AfterLabel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::InlineHelpButtonPlacement>("Fusion", "InlineHelpButtonPlacement", "AfterLabel"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.InlineHelpButtonPlacement AfterLabel
void Fusion::InlineHelpButtonPlacement::_set_AfterLabel(::Fusion::InlineHelpButtonPlacement value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::InlineHelpButtonPlacement::_set_AfterLabel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "InlineHelpButtonPlacement", "AfterLabel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Fusion::InlineHelpButtonPlacement::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::InlineHelpButtonPlacement::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.InlineHelpAttribute
#include "Fusion/InlineHelpAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 DefaultOrder
int Fusion::InlineHelpAttribute::_get_DefaultOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::InlineHelpAttribute::_get_DefaultOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion", "InlineHelpAttribute", "DefaultOrder"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DefaultOrder
void Fusion::InlineHelpAttribute::_set_DefaultOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::InlineHelpAttribute::_set_DefaultOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "InlineHelpAttribute", "DefaultOrder", value));
}
// Autogenerated instance field getter
// Get instance field: public Fusion.InlineHelpButtonPlacement ButtonPlacement
[[deprecated("Use field access instead!")]] ::Fusion::InlineHelpButtonPlacement& Fusion::InlineHelpAttribute::dyn_ButtonPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::InlineHelpAttribute::dyn_ButtonPlacement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ButtonPlacement"))->offset;
  return *reinterpret_cast<::Fusion::InlineHelpButtonPlacement*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.KeyValuePairAttribute
#include "Fusion/KeyValuePairAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.MultiPropertyDrawersFixAttribute
#include "Fusion/MultiPropertyDrawersFixAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkAssemblyIgnoreAttribute
#include "Fusion/NetworkAssemblyIgnoreAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkAssemblyWeavedAttribute
#include "Fusion/NetworkAssemblyWeavedAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkBehaviourWeavedAttribute
#include "Fusion/NetworkBehaviourWeavedAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <WordCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::NetworkBehaviourWeavedAttribute::dyn_$WordCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviourWeavedAttribute::dyn_$WordCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WordCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkBehaviourWeavedAttribute.get_WordCount
int Fusion::NetworkBehaviourWeavedAttribute::get_WordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkBehaviourWeavedAttribute::get_WordCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WordCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkDeserializeMethodAttribute
#include "Fusion/NetworkDeserializeMethodAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.OnChangedTargets
#include "Fusion/OnChangedTargets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.OnChangedTargets StateAuthority
::Fusion::OnChangedTargets Fusion::OnChangedTargets::_get_StateAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::OnChangedTargets::_get_StateAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::OnChangedTargets>("Fusion", "OnChangedTargets", "StateAuthority"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.OnChangedTargets StateAuthority
void Fusion::OnChangedTargets::_set_StateAuthority(::Fusion::OnChangedTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::OnChangedTargets::_set_StateAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "OnChangedTargets", "StateAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.OnChangedTargets InputAuthority
::Fusion::OnChangedTargets Fusion::OnChangedTargets::_get_InputAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::OnChangedTargets::_get_InputAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::OnChangedTargets>("Fusion", "OnChangedTargets", "InputAuthority"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.OnChangedTargets InputAuthority
void Fusion::OnChangedTargets::_set_InputAuthority(::Fusion::OnChangedTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::OnChangedTargets::_set_InputAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "OnChangedTargets", "InputAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.OnChangedTargets Proxies
::Fusion::OnChangedTargets Fusion::OnChangedTargets::_get_Proxies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::OnChangedTargets::_get_Proxies");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::OnChangedTargets>("Fusion", "OnChangedTargets", "Proxies"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.OnChangedTargets Proxies
void Fusion::OnChangedTargets::_set_Proxies(::Fusion::OnChangedTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::OnChangedTargets::_set_Proxies");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "OnChangedTargets", "Proxies", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.OnChangedTargets All
::Fusion::OnChangedTargets Fusion::OnChangedTargets::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::OnChangedTargets::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::OnChangedTargets>("Fusion", "OnChangedTargets", "All"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.OnChangedTargets All
void Fusion::OnChangedTargets::_set_All(::Fusion::OnChangedTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::OnChangedTargets::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "OnChangedTargets", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Fusion::OnChangedTargets::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::OnChangedTargets::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkedAttribute
#include "Fusion/NetworkedAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <OnChanged>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Fusion::NetworkedAttribute::dyn_$OnChanged$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedAttribute::dyn_$OnChanged$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OnChanged>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.OnChangedTargets <OnChangedTargets>k__BackingField
[[deprecated("Use field access instead!")]] ::Fusion::OnChangedTargets& Fusion::NetworkedAttribute::dyn_$OnChangedTargets$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedAttribute::dyn_$OnChangedTargets$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OnChangedTargets>k__BackingField"))->offset;
  return *reinterpret_cast<::Fusion::OnChangedTargets*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Default>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Fusion::NetworkedAttribute::dyn_$Default$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedAttribute::dyn_$Default$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Default>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Group>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Fusion::NetworkedAttribute::dyn_$Group$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedAttribute::dyn_$Group$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Group>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkedAttribute.get_OnChanged
::StringW Fusion::NetworkedAttribute::get_OnChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedAttribute::get_OnChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkedAttribute.set_OnChanged
void Fusion::NetworkedAttribute::set_OnChanged(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedAttribute::set_OnChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OnChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.NetworkedAttribute.get_OnChangedTargets
::Fusion::OnChangedTargets Fusion::NetworkedAttribute::get_OnChangedTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedAttribute::get_OnChangedTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnChangedTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::OnChangedTargets, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkedAttribute.set_OnChangedTargets
void Fusion::NetworkedAttribute::set_OnChangedTargets(::Fusion::OnChangedTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedAttribute::set_OnChangedTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OnChangedTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.NetworkedAttribute.get_Default
::StringW Fusion::NetworkedAttribute::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedAttribute::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkedAttribute.set_Default
void Fusion::NetworkedAttribute::set_Default(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedAttribute::set_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.NetworkedAttribute.get_Group
::StringW Fusion::NetworkedAttribute::get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedAttribute::get_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkedAttribute.set_Group
void Fusion::NetworkedAttribute::set_Group(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedAttribute::set_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkedWeavedAttribute
#include "Fusion/NetworkedWeavedAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <WordOffset>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::NetworkedWeavedAttribute::dyn_$WordOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedWeavedAttribute::dyn_$WordOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WordOffset>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <WordCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::NetworkedWeavedAttribute::dyn_$WordCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedWeavedAttribute::dyn_$WordCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WordCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkedWeavedAttribute.get_WordOffset
int Fusion::NetworkedWeavedAttribute::get_WordOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedWeavedAttribute::get_WordOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WordOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkedWeavedAttribute.get_WordCount
int Fusion::NetworkedWeavedAttribute::get_WordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkedWeavedAttribute::get_WordCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WordCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkInputWeavedAttribute
#include "Fusion/NetworkInputWeavedAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <WordCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::NetworkInputWeavedAttribute::dyn_$WordCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkInputWeavedAttribute::dyn_$WordCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WordCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkInputWeavedAttribute.get_WordCount
int Fusion::NetworkInputWeavedAttribute::get_WordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkInputWeavedAttribute::get_WordCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WordCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkPrefabAttribute
#include "Fusion/NetworkPrefabAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkRpcStaticWeavedInvokerAttribute
#include "Fusion/NetworkRpcStaticWeavedInvokerAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Key>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Fusion::NetworkRpcStaticWeavedInvokerAttribute::dyn_$Key$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkRpcStaticWeavedInvokerAttribute::dyn_$Key$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Key>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkRpcStaticWeavedInvokerAttribute.get_Key
::StringW Fusion::NetworkRpcStaticWeavedInvokerAttribute::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkRpcStaticWeavedInvokerAttribute::get_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkRpcWeavedInvokerAttribute
#include "Fusion/NetworkRpcWeavedInvokerAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <Key>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::NetworkRpcWeavedInvokerAttribute::dyn_$Key$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkRpcWeavedInvokerAttribute::dyn_$Key$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Key>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <Sources>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::NetworkRpcWeavedInvokerAttribute::dyn_$Sources$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkRpcWeavedInvokerAttribute::dyn_$Sources$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Sources>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <Targets>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::NetworkRpcWeavedInvokerAttribute::dyn_$Targets$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkRpcWeavedInvokerAttribute::dyn_$Targets$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Targets>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkRpcWeavedInvokerAttribute.get_Key
int Fusion::NetworkRpcWeavedInvokerAttribute::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkRpcWeavedInvokerAttribute::get_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkRpcWeavedInvokerAttribute.get_Sources
int Fusion::NetworkRpcWeavedInvokerAttribute::get_Sources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkRpcWeavedInvokerAttribute::get_Sources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Sources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkRpcWeavedInvokerAttribute.get_Targets
int Fusion::NetworkRpcWeavedInvokerAttribute::get_Targets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkRpcWeavedInvokerAttribute::get_Targets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Targets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkSerializeMethodAttribute
#include "Fusion/NetworkSerializeMethodAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <MaxSize>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::NetworkSerializeMethodAttribute::dyn_$MaxSize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSerializeMethodAttribute::dyn_$MaxSize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxSize>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkSerializeMethodAttribute.get_MaxSize
int Fusion::NetworkSerializeMethodAttribute::get_MaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSerializeMethodAttribute::get_MaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkSerializeMethodAttribute.set_MaxSize
void Fusion::NetworkSerializeMethodAttribute::set_MaxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkSerializeMethodAttribute::set_MaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkStructWeavedAttribute
#include "Fusion/NetworkStructWeavedAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <WordCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::NetworkStructWeavedAttribute::dyn_$WordCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkStructWeavedAttribute::dyn_$WordCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WordCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <IsGenericComposite>k__BackingField
[[deprecated("Use field access instead!")]] bool& Fusion::NetworkStructWeavedAttribute::dyn_$IsGenericComposite$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkStructWeavedAttribute::dyn_$IsGenericComposite$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsGenericComposite>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.NetworkStructWeavedAttribute.get_WordCount
int Fusion::NetworkStructWeavedAttribute::get_WordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkStructWeavedAttribute::get_WordCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WordCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.NetworkStructWeavedAttribute.get_IsGenericComposite
bool Fusion::NetworkStructWeavedAttribute::get_IsGenericComposite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkStructWeavedAttribute::get_IsGenericComposite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericComposite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NormalizedRectAttribute
#include "Fusion/NormalizedRectAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean InvertY
[[deprecated("Use field access instead!")]] bool& Fusion::NormalizedRectAttribute::dyn_InvertY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NormalizedRectAttribute::dyn_InvertY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvertY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AspectRatio
[[deprecated("Use field access instead!")]] float& Fusion::NormalizedRectAttribute::dyn_AspectRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NormalizedRectAttribute::dyn_AspectRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AspectRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Pow2SliderAttribute
#include "Fusion/Pow2SliderAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.Units Unit
[[deprecated("Use field access instead!")]] ::Fusion::Units& Fusion::Pow2SliderAttribute::dyn_Unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Pow2SliderAttribute::dyn_Unit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Unit"))->offset;
  return *reinterpret_cast<::Fusion::Units*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MinPower
[[deprecated("Use field access instead!")]] int& Fusion::Pow2SliderAttribute::dyn_MinPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Pow2SliderAttribute::dyn_MinPower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinPower"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxPower
[[deprecated("Use field access instead!")]] int& Fusion::Pow2SliderAttribute::dyn_MaxPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Pow2SliderAttribute::dyn_MaxPower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxPower"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowZero
[[deprecated("Use field access instead!")]] bool& Fusion::Pow2SliderAttribute::dyn_AllowZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Pow2SliderAttribute::dyn_AllowZero");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowZero"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.PropertyAttribute
#include "Fusion/PropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.ResolveNetworkPrefabSourceUnityAttribute
#include "Fusion/ResolveNetworkPrefabSourceUnityAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.ScenePathAttribute
#include "Fusion/ScenePathAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.ScriptHelpAttribute
#include "Fusion/ScriptHelpAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Url>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Fusion::ScriptHelpAttribute::dyn_$Url$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::ScriptHelpAttribute::dyn_$Url$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Url>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.EditorHeaderBackColor <BackColor>k__BackingField
[[deprecated("Use field access instead!")]] ::Fusion::EditorHeaderBackColor& Fusion::ScriptHelpAttribute::dyn_$BackColor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::ScriptHelpAttribute::dyn_$BackColor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BackColor>k__BackingField"))->offset;
  return *reinterpret_cast<::Fusion::EditorHeaderBackColor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.EditorHeaderIcon <Icon>k__BackingField
[[deprecated("Use field access instead!")]] ::Fusion::EditorHeaderIcon& Fusion::ScriptHelpAttribute::dyn_$Icon$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::ScriptHelpAttribute::dyn_$Icon$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Icon>k__BackingField"))->offset;
  return *reinterpret_cast<::Fusion::EditorHeaderIcon*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Title>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Fusion::ScriptHelpAttribute::dyn_$Title$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::ScriptHelpAttribute::dyn_$Title$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Title>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.ScriptHelpAttribute.get_Url
::StringW Fusion::ScriptHelpAttribute::get_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::ScriptHelpAttribute::get_Url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.ScriptHelpAttribute.set_Url
void Fusion::ScriptHelpAttribute::set_Url(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::ScriptHelpAttribute::set_Url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.ScriptHelpAttribute.get_BackColor
::Fusion::EditorHeaderBackColor Fusion::ScriptHelpAttribute::get_BackColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::ScriptHelpAttribute::get_BackColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BackColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::EditorHeaderBackColor, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.ScriptHelpAttribute.set_BackColor
void Fusion::ScriptHelpAttribute::set_BackColor(::Fusion::EditorHeaderBackColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::ScriptHelpAttribute::set_BackColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BackColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.ScriptHelpAttribute.get_Icon
::Fusion::EditorHeaderIcon Fusion::ScriptHelpAttribute::get_Icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::ScriptHelpAttribute::get_Icon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Icon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::EditorHeaderIcon, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.ScriptHelpAttribute.set_Icon
void Fusion::ScriptHelpAttribute::set_Icon(::Fusion::EditorHeaderIcon value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::ScriptHelpAttribute::set_Icon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Icon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.ScriptHelpAttribute.get_Title
::StringW Fusion::ScriptHelpAttribute::get_Title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::ScriptHelpAttribute::get_Title");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Title", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.ScriptHelpAttribute.set_Title
void Fusion::ScriptHelpAttribute::set_Title(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::ScriptHelpAttribute::set_Title");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Title", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.ToggleLeftAttribute
#include "Fusion/ToggleLeftAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Units
#include "Fusion/Units.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Units None
::Fusion::Units Fusion::Units::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "None"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units None
void Fusion::Units::_set_None(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units Ticks
::Fusion::Units Fusion::Units::_get_Ticks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_Ticks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "Ticks"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units Ticks
void Fusion::Units::_set_Ticks(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_Ticks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "Ticks", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units Seconds
::Fusion::Units Fusion::Units::_get_Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_Seconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "Seconds"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units Seconds
void Fusion::Units::_set_Seconds(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_Seconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "Seconds", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units MilliSecs
::Fusion::Units Fusion::Units::_get_MilliSecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_MilliSecs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "MilliSecs"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units MilliSecs
void Fusion::Units::_set_MilliSecs(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_MilliSecs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "MilliSecs", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units Kilobytes
::Fusion::Units Fusion::Units::_get_Kilobytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_Kilobytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "Kilobytes"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units Kilobytes
void Fusion::Units::_set_Kilobytes(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_Kilobytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "Kilobytes", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units Megabytes
::Fusion::Units Fusion::Units::_get_Megabytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_Megabytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "Megabytes"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units Megabytes
void Fusion::Units::_set_Megabytes(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_Megabytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "Megabytes", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units Normalized
::Fusion::Units Fusion::Units::_get_Normalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_Normalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "Normalized"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units Normalized
void Fusion::Units::_set_Normalized(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_Normalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "Normalized", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units Multiplier
::Fusion::Units Fusion::Units::_get_Multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_Multiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "Multiplier"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units Multiplier
void Fusion::Units::_set_Multiplier(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_Multiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "Multiplier", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units Percentage
::Fusion::Units Fusion::Units::_get_Percentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_Percentage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "Percentage"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units Percentage
void Fusion::Units::_set_Percentage(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_Percentage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "Percentage", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units NormalizedPercentage
::Fusion::Units Fusion::Units::_get_NormalizedPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_NormalizedPercentage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "NormalizedPercentage"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units NormalizedPercentage
void Fusion::Units::_set_NormalizedPercentage(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_NormalizedPercentage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "NormalizedPercentage", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units Degrees
::Fusion::Units Fusion::Units::_get_Degrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_Degrees");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "Degrees"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units Degrees
void Fusion::Units::_set_Degrees(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_Degrees");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "Degrees", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units PerSecond
::Fusion::Units Fusion::Units::_get_PerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_PerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "PerSecond"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units PerSecond
void Fusion::Units::_set_PerSecond(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_PerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "PerSecond", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units DegreesPerSecond
::Fusion::Units Fusion::Units::_get_DegreesPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_DegreesPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "DegreesPerSecond"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units DegreesPerSecond
void Fusion::Units::_set_DegreesPerSecond(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_DegreesPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "DegreesPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units Radians
::Fusion::Units Fusion::Units::_get_Radians() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_Radians");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "Radians"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units Radians
void Fusion::Units::_set_Radians(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_Radians");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "Radians", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units RadiansPerSecond
::Fusion::Units Fusion::Units::_get_RadiansPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_RadiansPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "RadiansPerSecond"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units RadiansPerSecond
void Fusion::Units::_set_RadiansPerSecond(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_RadiansPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "RadiansPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units TicksPerSecond
::Fusion::Units Fusion::Units::_get_TicksPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_TicksPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "TicksPerSecond"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units TicksPerSecond
void Fusion::Units::_set_TicksPerSecond(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_TicksPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "TicksPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units Units
::Fusion::Units Fusion::Units::_get_Units() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_Units");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "Units"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units Units
void Fusion::Units::_set_Units(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_Units");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "Units", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units Bytes
::Fusion::Units Fusion::Units::_get_Bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_Bytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "Bytes"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units Bytes
void Fusion::Units::_set_Bytes(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_Bytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "Bytes", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Units Count
::Fusion::Units Fusion::Units::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Units>("Fusion", "Units", "Count"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Units Count
void Fusion::Units::_set_Count(::Fusion::Units value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "Units", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Fusion::Units::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Units::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnitAttribute
#include "Fusion/UnitAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Fusion.Units <Unit>k__BackingField
[[deprecated("Use field access instead!")]] ::Fusion::Units& Fusion::UnitAttribute::dyn_$Unit$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitAttribute::dyn_$Unit$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Unit>k__BackingField"))->offset;
  return *reinterpret_cast<::Fusion::Units*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Double <Min>k__BackingField
[[deprecated("Use field access instead!")]] double& Fusion::UnitAttribute::dyn_$Min$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitAttribute::dyn_$Min$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Min>k__BackingField"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Double <Max>k__BackingField
[[deprecated("Use field access instead!")]] double& Fusion::UnitAttribute::dyn_$Max$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitAttribute::dyn_$Max$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Max>k__BackingField"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 DecimalPlaces
[[deprecated("Use field access instead!")]] int& Fusion::UnitAttribute::dyn_DecimalPlaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitAttribute::dyn_DecimalPlaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DecimalPlaces"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ClampMin
[[deprecated("Use field access instead!")]] bool& Fusion::UnitAttribute::dyn_ClampMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitAttribute::dyn_ClampMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClampMin"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ClampMax
[[deprecated("Use field access instead!")]] bool& Fusion::UnitAttribute::dyn_ClampMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitAttribute::dyn_ClampMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClampMax"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseInverse
[[deprecated("Use field access instead!")]] bool& Fusion::UnitAttribute::dyn_UseInverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitAttribute::dyn_UseInverse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseInverse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String InverseName
[[deprecated("Use field access instead!")]] ::StringW& Fusion::UnitAttribute::dyn_InverseName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitAttribute::dyn_InverseName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InverseName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Units InverseUnit
[[deprecated("Use field access instead!")]] ::Fusion::Units& Fusion::UnitAttribute::dyn_InverseUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitAttribute::dyn_InverseUnit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InverseUnit"))->offset;
  return *reinterpret_cast<::Fusion::Units*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 InverseDecimalPlaces
[[deprecated("Use field access instead!")]] int& Fusion::UnitAttribute::dyn_InverseDecimalPlaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitAttribute::dyn_InverseDecimalPlaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InverseDecimalPlaces"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseSlider
[[deprecated("Use field access instead!")]] bool& Fusion::UnitAttribute::dyn_UseSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitAttribute::dyn_UseSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseSlider"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.UnitAttribute.get_Unit
::Fusion::Units Fusion::UnitAttribute::get_Unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitAttribute::get_Unit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Unit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Units, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.UnitAttribute.get_Min
double Fusion::UnitAttribute::get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitAttribute::get_Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.UnitAttribute.get_Max
double Fusion::UnitAttribute::get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitAttribute::get_Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnityAssetGuidAttribute
#include "Fusion/UnityAssetGuidAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnityDummyAttribute
#include "Fusion/UnityDummyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnityPropertyAttributeProxyAttribute
#include "Fusion/UnityPropertyAttributeProxyAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnityContextMenuItemAttribute
#include "Fusion/UnityContextMenuItemAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <order>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::UnityContextMenuItemAttribute::dyn_$order$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityContextMenuItemAttribute::dyn_$order$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<order>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.UnityContextMenuItemAttribute.get_order
int Fusion::UnityContextMenuItemAttribute::get_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityContextMenuItemAttribute::get_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.UnityContextMenuItemAttribute.set_order
void Fusion::UnityContextMenuItemAttribute::set_order(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityContextMenuItemAttribute::set_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnityDelayedAttribute
#include "Fusion/UnityDelayedAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <order>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::UnityDelayedAttribute::dyn_$order$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityDelayedAttribute::dyn_$order$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<order>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.UnityDelayedAttribute.get_order
int Fusion::UnityDelayedAttribute::get_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityDelayedAttribute::get_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.UnityDelayedAttribute.set_order
void Fusion::UnityDelayedAttribute::set_order(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityDelayedAttribute::set_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnityHeaderAttribute
#include "Fusion/UnityHeaderAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <order>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::UnityHeaderAttribute::dyn_$order$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityHeaderAttribute::dyn_$order$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<order>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.UnityHeaderAttribute.get_order
int Fusion::UnityHeaderAttribute::get_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityHeaderAttribute::get_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.UnityHeaderAttribute.set_order
void Fusion::UnityHeaderAttribute::set_order(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityHeaderAttribute::set_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnityMinAttribute
#include "Fusion/UnityMinAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <order>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::UnityMinAttribute::dyn_$order$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityMinAttribute::dyn_$order$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<order>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.UnityMinAttribute.get_order
int Fusion::UnityMinAttribute::get_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityMinAttribute::get_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.UnityMinAttribute.set_order
void Fusion::UnityMinAttribute::set_order(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityMinAttribute::set_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnityMultilineAttribute
#include "Fusion/UnityMultilineAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <order>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::UnityMultilineAttribute::dyn_$order$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityMultilineAttribute::dyn_$order$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<order>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.UnityMultilineAttribute.get_order
int Fusion::UnityMultilineAttribute::get_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityMultilineAttribute::get_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.UnityMultilineAttribute.set_order
void Fusion::UnityMultilineAttribute::set_order(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityMultilineAttribute::set_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnityNonReorderableAttribute
#include "Fusion/UnityNonReorderableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <order>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::UnityNonReorderableAttribute::dyn_$order$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityNonReorderableAttribute::dyn_$order$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<order>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.UnityNonReorderableAttribute.get_order
int Fusion::UnityNonReorderableAttribute::get_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityNonReorderableAttribute::get_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.UnityNonReorderableAttribute.set_order
void Fusion::UnityNonReorderableAttribute::set_order(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityNonReorderableAttribute::set_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnityRangeAttribute
#include "Fusion/UnityRangeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <order>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::UnityRangeAttribute::dyn_$order$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityRangeAttribute::dyn_$order$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<order>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.UnityRangeAttribute.get_order
int Fusion::UnityRangeAttribute::get_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityRangeAttribute::get_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.UnityRangeAttribute.set_order
void Fusion::UnityRangeAttribute::set_order(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityRangeAttribute::set_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnitySerializeField
#include "Fusion/UnitySerializeField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnitySerializeReference
#include "Fusion/UnitySerializeReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnitySpaceAttribute
#include "Fusion/UnitySpaceAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <order>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::UnitySpaceAttribute::dyn_$order$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitySpaceAttribute::dyn_$order$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<order>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.UnitySpaceAttribute.get_order
int Fusion::UnitySpaceAttribute::get_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitySpaceAttribute::get_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.UnitySpaceAttribute.set_order
void Fusion::UnitySpaceAttribute::set_order(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnitySpaceAttribute::set_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnityTooltipAttribute
#include "Fusion/UnityTooltipAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <order>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::UnityTooltipAttribute::dyn_$order$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityTooltipAttribute::dyn_$order$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<order>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.UnityTooltipAttribute.get_order
int Fusion::UnityTooltipAttribute::get_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityTooltipAttribute::get_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.UnityTooltipAttribute.set_order
void Fusion::UnityTooltipAttribute::set_order(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityTooltipAttribute::set_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnityNonSerializedAttribute
#include "Fusion/UnityNonSerializedAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnityFormerlySerializedAsAttribute
#include "Fusion/UnityFormerlySerializedAsAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.UnityResourcePathAttribute
#include "Fusion/UnityResourcePathAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <ResourceType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Fusion::UnityResourcePathAttribute::dyn_$ResourceType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityResourcePathAttribute::dyn_$ResourceType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ResourceType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.UnityResourcePathAttribute.get_ResourceType
::System::Type* Fusion::UnityResourcePathAttribute::get_ResourceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::UnityResourcePathAttribute::get_ResourceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResourceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
