// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.OneGrabPhysicsJointTransformer
#include "Oculus/Interaction/OneGrabPhysicsJointTransformer.hpp"
// Including type: Oculus.Interaction.OneGrabPhysicsJointTransformer/<>c
#include "Oculus/Interaction/OneGrabPhysicsJointTransformer_--c.hpp"
// Including type: UnityEngine.ConfigurableJoint
#include "UnityEngine/ConfigurableJoint.hpp"
// Including type: UnityEngine.Joint
#include "UnityEngine/Joint.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Oculus.Interaction.IGrabbable
#include "Oculus/Interaction/IGrabbable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.Rigidbody> _cachedGrabbingRigidbodies
::System::Collections::Generic::List_1<::UnityEngine::Rigidbody*>* Oculus::Interaction::OneGrabPhysicsJointTransformer::_get__cachedGrabbingRigidbodies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::_get__cachedGrabbingRigidbodies");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Rigidbody*>*>("Oculus.Interaction", "OneGrabPhysicsJointTransformer", "_cachedGrabbingRigidbodies"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.Rigidbody> _cachedGrabbingRigidbodies
void Oculus::Interaction::OneGrabPhysicsJointTransformer::_set__cachedGrabbingRigidbodies(::System::Collections::Generic::List_1<::UnityEngine::Rigidbody*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::_set__cachedGrabbingRigidbodies");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "OneGrabPhysicsJointTransformer", "_cachedGrabbingRigidbodies", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ConfigurableJoint _customJoint
[[deprecated("Use field access instead!")]] ::UnityEngine::ConfigurableJoint*& Oculus::Interaction::OneGrabPhysicsJointTransformer::dyn__customJoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::dyn__customJoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customJoint"))->offset;
  return *reinterpret_cast<::UnityEngine::ConfigurableJoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isKinematicGrab
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::OneGrabPhysicsJointTransformer::dyn__isKinematicGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::dyn__isKinematicGrab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isKinematicGrab"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Joint _joint
[[deprecated("Use field access instead!")]] ::UnityEngine::Joint*& Oculus::Interaction::OneGrabPhysicsJointTransformer::dyn__joint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::dyn__joint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joint"))->offset;
  return *reinterpret_cast<::UnityEngine::Joint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _grabbingRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Oculus::Interaction::OneGrabPhysicsJointTransformer::dyn__grabbingRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::dyn__grabbingRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabbingRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IGrabbable _grabbable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IGrabbable*& Oculus::Interaction::OneGrabPhysicsJointTransformer::dyn__grabbable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::dyn__grabbable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabbable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _targetPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::OneGrabPhysicsJointTransformer::dyn__targetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::dyn__targetPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _targetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Oculus::Interaction::OneGrabPhysicsJointTransformer::dyn__targetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::dyn__targetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.get_IsKinematicGrab
bool Oculus::Interaction::OneGrabPhysicsJointTransformer::get_IsKinematicGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::get_IsKinematicGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsKinematicGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.set_IsKinematicGrab
void Oculus::Interaction::OneGrabPhysicsJointTransformer::set_IsKinematicGrab(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::set_IsKinematicGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsKinematicGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.OnValidate
void Oculus::Interaction::OneGrabPhysicsJointTransformer::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.Initialize
void Oculus::Interaction::OneGrabPhysicsJointTransformer::Initialize(::Oculus::Interaction::IGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabPhysicsJointTransformer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.BeginTransform
void Oculus::Interaction::OneGrabPhysicsJointTransformer::BeginTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::BeginTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabPhysicsJointTransformer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.UpdateTransform
void Oculus::Interaction::OneGrabPhysicsJointTransformer::UpdateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::UpdateTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabPhysicsJointTransformer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.FixedUpdate
void Oculus::Interaction::OneGrabPhysicsJointTransformer::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.EndTransform
void Oculus::Interaction::OneGrabPhysicsJointTransformer::EndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::EndTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabPhysicsJointTransformer*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.AddJoint
::UnityEngine::Joint* Oculus::Interaction::OneGrabPhysicsJointTransformer::AddJoint(::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::AddJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rigidbody)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Joint*, false>(this, ___internal__method, rigidbody);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.RemoveCurrentJoint
void Oculus::Interaction::OneGrabPhysicsJointTransformer::RemoveCurrentJoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::RemoveCurrentJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCurrentJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.GetGrabRigidbody
::UnityEngine::Rigidbody* Oculus::Interaction::OneGrabPhysicsJointTransformer::GetGrabRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::GetGrabRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGrabRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.RemoveCurrentGrabRigidbody
void Oculus::Interaction::OneGrabPhysicsJointTransformer::RemoveCurrentGrabRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::RemoveCurrentGrabRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCurrentGrabRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.CreateRigidBody
::UnityEngine::Rigidbody* Oculus::Interaction::OneGrabPhysicsJointTransformer::CreateRigidBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::CreateRigidBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRigidBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.CreateDefaultJoint
::UnityEngine::Joint* Oculus::Interaction::OneGrabPhysicsJointTransformer::CreateDefaultJoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::CreateDefaultJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDefaultJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Joint*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.CreateJointHolder
::UnityEngine::GameObject* Oculus::Interaction::OneGrabPhysicsJointTransformer::CreateJointHolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::CreateJointHolder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateJointHolder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.CloneJoint
::UnityEngine::ConfigurableJoint* Oculus::Interaction::OneGrabPhysicsJointTransformer::CloneJoint(::UnityEngine::ConfigurableJoint* joint, ::UnityEngine::GameObject* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::CloneJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "OneGrabPhysicsJointTransformer", "CloneJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joint), ::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ConfigurableJoint*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, joint, destination);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer.InjectOptionalCustomJoint
void Oculus::Interaction::OneGrabPhysicsJointTransformer::InjectOptionalCustomJoint(::UnityEngine::ConfigurableJoint* customJoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::InjectOptionalCustomJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalCustomJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(customJoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, customJoint);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer..cctor
void Oculus::Interaction::OneGrabPhysicsJointTransformer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "OneGrabPhysicsJointTransformer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.OneGrabPhysicsJointTransformer/<>c
#include "Oculus/Interaction/OneGrabPhysicsJointTransformer_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.OneGrabPhysicsJointTransformer/<>c <>9
::Oculus::Interaction::OneGrabPhysicsJointTransformer::$$c* Oculus::Interaction::OneGrabPhysicsJointTransformer::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::OneGrabPhysicsJointTransformer::$$c*>("Oculus.Interaction", "OneGrabPhysicsJointTransformer/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.OneGrabPhysicsJointTransformer/<>c <>9
void Oculus::Interaction::OneGrabPhysicsJointTransformer::$$c::_set_$$9(::Oculus::Interaction::OneGrabPhysicsJointTransformer::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "OneGrabPhysicsJointTransformer/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<UnityEngine.Rigidbody> <>9__19_0
::System::Predicate_1<::UnityEngine::Rigidbody*>* Oculus::Interaction::OneGrabPhysicsJointTransformer::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::UnityEngine::Rigidbody*>*>("Oculus.Interaction", "OneGrabPhysicsJointTransformer/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<UnityEngine.Rigidbody> <>9__19_0
void Oculus::Interaction::OneGrabPhysicsJointTransformer::$$c::_set_$$9__19_0(::System::Predicate_1<::UnityEngine::Rigidbody*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "OneGrabPhysicsJointTransformer/<>c", "<>9__19_0", value)));
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer/<>c..cctor
void Oculus::Interaction::OneGrabPhysicsJointTransformer::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "OneGrabPhysicsJointTransformer/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabPhysicsJointTransformer/<>c.<GetGrabRigidbody>b__19_0
bool Oculus::Interaction::OneGrabPhysicsJointTransformer::$$c::$GetGrabRigidbody$b__19_0(::UnityEngine::Rigidbody* rb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabPhysicsJointTransformer::$$c::<GetGrabRigidbody>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetGrabRigidbody>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rb)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rb);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.OneGrabRotateTransformer
#include "Oculus/Interaction/OneGrabRotateTransformer.hpp"
// Including type: Oculus.Interaction.IGrabbable
#include "Oculus/Interaction/IGrabbable.hpp"
// Including type: Oculus.Interaction.OneGrabRotateTransformer/OneGrabRotateConstraints
#include "Oculus/Interaction/OneGrabRotateTransformer_OneGrabRotateConstraints.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _pivotTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::OneGrabRotateTransformer::dyn__pivotTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::dyn__pivotTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pivotTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.OneGrabRotateTransformer/Axis _rotationAxis
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::OneGrabRotateTransformer::Axis& Oculus::Interaction::OneGrabRotateTransformer::dyn__rotationAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::dyn__rotationAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationAxis"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::OneGrabRotateTransformer::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.OneGrabRotateTransformer/OneGrabRotateConstraints _constraints
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::OneGrabRotateTransformer::OneGrabRotateConstraints*& Oculus::Interaction::OneGrabRotateTransformer::dyn__constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::dyn__constraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constraints"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::OneGrabRotateTransformer::OneGrabRotateConstraints**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _relativeAngle
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::OneGrabRotateTransformer::dyn__relativeAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::dyn__relativeAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _constrainedRelativeAngle
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::OneGrabRotateTransformer::dyn__constrainedRelativeAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::dyn__constrainedRelativeAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constrainedRelativeAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IGrabbable _grabbable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IGrabbable*& Oculus::Interaction::OneGrabRotateTransformer::dyn__grabbable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::dyn__grabbable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabbable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _grabPositionInPivotSpace
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::OneGrabRotateTransformer::dyn__grabPositionInPivotSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::dyn__grabPositionInPivotSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabPositionInPivotSpace"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _transformPoseInPivotSpace
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::OneGrabRotateTransformer::dyn__transformPoseInPivotSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::dyn__transformPoseInPivotSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformPoseInPivotSpace"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _worldPivotPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::OneGrabRotateTransformer::dyn__worldPivotPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::dyn__worldPivotPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_worldPivotPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _previousVectorInPivotSpace
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::OneGrabRotateTransformer::dyn__previousVectorInPivotSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::dyn__previousVectorInPivotSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousVectorInPivotSpace"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _localRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Oculus::Interaction::OneGrabRotateTransformer::dyn__localRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::dyn__localRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startAngle
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::OneGrabRotateTransformer::dyn__startAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::dyn__startAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.OneGrabRotateTransformer.get_Pivot
::UnityEngine::Transform* Oculus::Interaction::OneGrabRotateTransformer::get_Pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::get_Pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabRotateTransformer.get_RotationAxis
::Oculus::Interaction::OneGrabRotateTransformer::Axis Oculus::Interaction::OneGrabRotateTransformer::get_RotationAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::get_RotationAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RotationAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::OneGrabRotateTransformer::Axis, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabRotateTransformer.get_Constraints
::Oculus::Interaction::OneGrabRotateTransformer::OneGrabRotateConstraints* Oculus::Interaction::OneGrabRotateTransformer::get_Constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::get_Constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::OneGrabRotateTransformer::OneGrabRotateConstraints*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabRotateTransformer.set_Constraints
void Oculus::Interaction::OneGrabRotateTransformer::set_Constraints(::Oculus::Interaction::OneGrabRotateTransformer::OneGrabRotateConstraints* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::set_Constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.OneGrabRotateTransformer.Initialize
void Oculus::Interaction::OneGrabRotateTransformer::Initialize(::Oculus::Interaction::IGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabRotateTransformer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: Oculus.Interaction.OneGrabRotateTransformer.ComputeWorldPivotPose
::UnityEngine::Pose Oculus::Interaction::OneGrabRotateTransformer::ComputeWorldPivotPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::ComputeWorldPivotPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeWorldPivotPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabRotateTransformer.BeginTransform
void Oculus::Interaction::OneGrabRotateTransformer::BeginTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::BeginTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabRotateTransformer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabRotateTransformer.UpdateTransform
void Oculus::Interaction::OneGrabRotateTransformer::UpdateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::UpdateTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabRotateTransformer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabRotateTransformer.EndTransform
void Oculus::Interaction::OneGrabRotateTransformer::EndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::EndTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabRotateTransformer*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabRotateTransformer.InjectOptionalPivotTransform
void Oculus::Interaction::OneGrabRotateTransformer::InjectOptionalPivotTransform(::UnityEngine::Transform* pivotTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::InjectOptionalPivotTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalPivotTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pivotTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pivotTransform);
}
// Autogenerated method: Oculus.Interaction.OneGrabRotateTransformer.InjectOptionalRotationAxis
void Oculus::Interaction::OneGrabRotateTransformer::InjectOptionalRotationAxis(::Oculus::Interaction::OneGrabRotateTransformer::Axis rotationAxis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::InjectOptionalRotationAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalRotationAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotationAxis)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotationAxis);
}
// Autogenerated method: Oculus.Interaction.OneGrabRotateTransformer.InjectOptionalConstraints
void Oculus::Interaction::OneGrabRotateTransformer::InjectOptionalConstraints(::Oculus::Interaction::OneGrabRotateTransformer::OneGrabRotateConstraints* constraints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::InjectOptionalConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraints)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, constraints);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.OneGrabRotateTransformer/Axis
#include "Oculus/Interaction/OneGrabRotateTransformer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.OneGrabRotateTransformer/Axis Right
::Oculus::Interaction::OneGrabRotateTransformer::Axis Oculus::Interaction::OneGrabRotateTransformer::Axis::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::Axis::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::OneGrabRotateTransformer::Axis>("Oculus.Interaction", "OneGrabRotateTransformer/Axis", "Right"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.OneGrabRotateTransformer/Axis Right
void Oculus::Interaction::OneGrabRotateTransformer::Axis::_set_Right(::Oculus::Interaction::OneGrabRotateTransformer::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::Axis::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "OneGrabRotateTransformer/Axis", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.OneGrabRotateTransformer/Axis Up
::Oculus::Interaction::OneGrabRotateTransformer::Axis Oculus::Interaction::OneGrabRotateTransformer::Axis::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::Axis::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::OneGrabRotateTransformer::Axis>("Oculus.Interaction", "OneGrabRotateTransformer/Axis", "Up"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.OneGrabRotateTransformer/Axis Up
void Oculus::Interaction::OneGrabRotateTransformer::Axis::_set_Up(::Oculus::Interaction::OneGrabRotateTransformer::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::Axis::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "OneGrabRotateTransformer/Axis", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.OneGrabRotateTransformer/Axis Forward
::Oculus::Interaction::OneGrabRotateTransformer::Axis Oculus::Interaction::OneGrabRotateTransformer::Axis::_get_Forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::Axis::_get_Forward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::OneGrabRotateTransformer::Axis>("Oculus.Interaction", "OneGrabRotateTransformer/Axis", "Forward"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.OneGrabRotateTransformer/Axis Forward
void Oculus::Interaction::OneGrabRotateTransformer::Axis::_set_Forward(::Oculus::Interaction::OneGrabRotateTransformer::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::Axis::_set_Forward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "OneGrabRotateTransformer/Axis", "Forward", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::OneGrabRotateTransformer::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.OneGrabRotateTransformer/OneGrabRotateConstraints
#include "Oculus/Interaction/OneGrabRotateTransformer_OneGrabRotateConstraints.hpp"
// Including type: Oculus.Interaction.FloatConstraint
#include "Oculus/Interaction/FloatConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MinAngle
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::OneGrabRotateTransformer::OneGrabRotateConstraints::dyn_MinAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::OneGrabRotateConstraints::dyn_MinAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinAngle"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MaxAngle
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::OneGrabRotateTransformer::OneGrabRotateConstraints::dyn_MaxAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabRotateTransformer::OneGrabRotateConstraints::dyn_MaxAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxAngle"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.OneGrabTranslateTransformer
#include "Oculus/Interaction/OneGrabTranslateTransformer.hpp"
// Including type: Oculus.Interaction.OneGrabTranslateTransformer/OneGrabTranslateConstraints
#include "Oculus/Interaction/OneGrabTranslateTransformer_OneGrabTranslateConstraints.hpp"
// Including type: Oculus.Interaction.IGrabbable
#include "Oculus/Interaction/IGrabbable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.OneGrabTranslateTransformer/OneGrabTranslateConstraints _constraints
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints*& Oculus::Interaction::OneGrabTranslateTransformer::dyn__constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::dyn__constraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constraints"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.OneGrabTranslateTransformer/OneGrabTranslateConstraints _parentConstraints
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints*& Oculus::Interaction::OneGrabTranslateTransformer::dyn__parentConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::dyn__parentConstraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentConstraints"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _initialPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::OneGrabTranslateTransformer::dyn__initialPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::dyn__initialPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _grabOffsetInLocalSpace
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::OneGrabTranslateTransformer::dyn__grabOffsetInLocalSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::dyn__grabOffsetInLocalSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabOffsetInLocalSpace"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IGrabbable _grabbable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IGrabbable*& Oculus::Interaction::OneGrabTranslateTransformer::dyn__grabbable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::dyn__grabbable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabbable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.OneGrabTranslateTransformer.get_Constraints
::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints* Oculus::Interaction::OneGrabTranslateTransformer::get_Constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::get_Constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabTranslateTransformer.set_Constraints
void Oculus::Interaction::OneGrabTranslateTransformer::set_Constraints(::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::set_Constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.OneGrabTranslateTransformer.Initialize
void Oculus::Interaction::OneGrabTranslateTransformer::Initialize(::Oculus::Interaction::IGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabTranslateTransformer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: Oculus.Interaction.OneGrabTranslateTransformer.GenerateParentConstraints
void Oculus::Interaction::OneGrabTranslateTransformer::GenerateParentConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::GenerateParentConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateParentConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabTranslateTransformer.BeginTransform
void Oculus::Interaction::OneGrabTranslateTransformer::BeginTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::BeginTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabTranslateTransformer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabTranslateTransformer.UpdateTransform
void Oculus::Interaction::OneGrabTranslateTransformer::UpdateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::UpdateTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabTranslateTransformer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabTranslateTransformer.EndTransform
void Oculus::Interaction::OneGrabTranslateTransformer::EndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::EndTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabTranslateTransformer*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabTranslateTransformer.InjectOptionalConstraints
void Oculus::Interaction::OneGrabTranslateTransformer::InjectOptionalConstraints(::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints* constraints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::InjectOptionalConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraints)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, constraints);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.OneGrabTranslateTransformer/OneGrabTranslateConstraints
#include "Oculus/Interaction/OneGrabTranslateTransformer_OneGrabTranslateConstraints.hpp"
// Including type: Oculus.Interaction.FloatConstraint
#include "Oculus/Interaction/FloatConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean ConstraintsAreRelative
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints::dyn_ConstraintsAreRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints::dyn_ConstraintsAreRelative");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConstraintsAreRelative"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MinX
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints::dyn_MinX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints::dyn_MinX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinX"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MaxX
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints::dyn_MaxX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints::dyn_MaxX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxX"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MinY
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints::dyn_MinY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints::dyn_MinY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinY"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MaxY
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints::dyn_MaxY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints::dyn_MaxY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxY"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MinZ
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints::dyn_MinZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints::dyn_MinZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinZ"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MaxZ
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints::dyn_MaxZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabTranslateTransformer::OneGrabTranslateConstraints::dyn_MaxZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxZ"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TwoGrabFreeTransformer
#include "Oculus/Interaction/TwoGrabFreeTransformer.hpp"
// Including type: Oculus.Interaction.TwoGrabFreeTransformer/TwoGrabFreeConstraints
#include "Oculus/Interaction/TwoGrabFreeTransformer_TwoGrabFreeConstraints.hpp"
// Including type: Oculus.Interaction.IGrabbable
#include "Oculus/Interaction/IGrabbable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _activeRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Oculus::Interaction::TwoGrabFreeTransformer::dyn__activeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::dyn__activeRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _initialLocalScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::TwoGrabFreeTransformer::dyn__initialLocalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::dyn__initialLocalScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialLocalScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _initialDistance
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TwoGrabFreeTransformer::dyn__initialDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::dyn__initialDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _initialScale
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TwoGrabFreeTransformer::dyn__initialScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::dyn__initialScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _activeScale
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TwoGrabFreeTransformer::dyn__activeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::dyn__activeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _previousGrabPointA
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::TwoGrabFreeTransformer::dyn__previousGrabPointA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::dyn__previousGrabPointA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousGrabPointA"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _previousGrabPointB
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::TwoGrabFreeTransformer::dyn__previousGrabPointB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::dyn__previousGrabPointB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousGrabPointB"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TwoGrabFreeTransformer/TwoGrabFreeConstraints _constraints
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::TwoGrabFreeTransformer::TwoGrabFreeConstraints*& Oculus::Interaction::TwoGrabFreeTransformer::dyn__constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::dyn__constraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constraints"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::TwoGrabFreeTransformer::TwoGrabFreeConstraints**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IGrabbable _grabbable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IGrabbable*& Oculus::Interaction::TwoGrabFreeTransformer::dyn__grabbable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::dyn__grabbable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabbable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.TwoGrabFreeTransformer.get_Constraints
::Oculus::Interaction::TwoGrabFreeTransformer::TwoGrabFreeConstraints* Oculus::Interaction::TwoGrabFreeTransformer::get_Constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::get_Constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::TwoGrabFreeTransformer::TwoGrabFreeConstraints*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TwoGrabFreeTransformer.set_Constraints
void Oculus::Interaction::TwoGrabFreeTransformer::set_Constraints(::Oculus::Interaction::TwoGrabFreeTransformer::TwoGrabFreeConstraints* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::set_Constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TwoGrabFreeTransformer.Initialize
void Oculus::Interaction::TwoGrabFreeTransformer::Initialize(::Oculus::Interaction::IGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TwoGrabFreeTransformer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: Oculus.Interaction.TwoGrabFreeTransformer.BeginTransform
void Oculus::Interaction::TwoGrabFreeTransformer::BeginTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::BeginTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TwoGrabFreeTransformer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TwoGrabFreeTransformer.UpdateTransform
void Oculus::Interaction::TwoGrabFreeTransformer::UpdateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::UpdateTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TwoGrabFreeTransformer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TwoGrabFreeTransformer.MarkAsBaseScale
void Oculus::Interaction::TwoGrabFreeTransformer::MarkAsBaseScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::MarkAsBaseScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkAsBaseScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TwoGrabFreeTransformer.EndTransform
void Oculus::Interaction::TwoGrabFreeTransformer::EndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::EndTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TwoGrabFreeTransformer*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TwoGrabFreeTransformer.InjectOptionalConstraints
void Oculus::Interaction::TwoGrabFreeTransformer::InjectOptionalConstraints(::Oculus::Interaction::TwoGrabFreeTransformer::TwoGrabFreeConstraints* constraints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::InjectOptionalConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraints)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, constraints);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TwoGrabFreeTransformer/TwoGrabFreeConstraints
#include "Oculus/Interaction/TwoGrabFreeTransformer_TwoGrabFreeConstraints.hpp"
// Including type: Oculus.Interaction.FloatConstraint
#include "Oculus/Interaction/FloatConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean ConstraintsAreRelative
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::TwoGrabFreeTransformer::TwoGrabFreeConstraints::dyn_ConstraintsAreRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::TwoGrabFreeConstraints::dyn_ConstraintsAreRelative");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConstraintsAreRelative"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MinScale
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::TwoGrabFreeTransformer::TwoGrabFreeConstraints::dyn_MinScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::TwoGrabFreeConstraints::dyn_MinScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinScale"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MaxScale
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::TwoGrabFreeTransformer::TwoGrabFreeConstraints::dyn_MaxScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabFreeTransformer::TwoGrabFreeConstraints::dyn_MaxScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxScale"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TwoGrabPlaneTransformer
#include "Oculus/Interaction/TwoGrabPlaneTransformer.hpp"
// Including type: Oculus.Interaction.TwoGrabPlaneTransformer/TwoGrabPlaneConstraints
#include "Oculus/Interaction/TwoGrabPlaneTransformer_TwoGrabPlaneConstraints.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.IGrabbable
#include "Oculus/Interaction/IGrabbable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _planeTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::TwoGrabPlaneTransformer::dyn__planeTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::dyn__planeTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_planeTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _capturePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::TwoGrabPlaneTransformer::dyn__capturePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::dyn__capturePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capturePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _initialLocalScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::TwoGrabPlaneTransformer::dyn__initialLocalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::dyn__initialLocalScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialLocalScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _initialDistance
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TwoGrabPlaneTransformer::dyn__initialDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::dyn__initialDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _initialScale
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TwoGrabPlaneTransformer::dyn__initialScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::dyn__initialScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _activeScale
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TwoGrabPlaneTransformer::dyn__activeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::dyn__activeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _previousGrabA
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::TwoGrabPlaneTransformer::dyn__previousGrabA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::dyn__previousGrabA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousGrabA"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _previousGrabB
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::TwoGrabPlaneTransformer::dyn__previousGrabB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::dyn__previousGrabB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousGrabB"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TwoGrabPlaneTransformer/TwoGrabPlaneConstraints _constraints
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints*& Oculus::Interaction::TwoGrabPlaneTransformer::dyn__constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::dyn__constraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constraints"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IGrabbable _grabbable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IGrabbable*& Oculus::Interaction::TwoGrabPlaneTransformer::dyn__grabbable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::dyn__grabbable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabbable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.TwoGrabPlaneTransformer.get_Constraints
::Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints* Oculus::Interaction::TwoGrabPlaneTransformer::get_Constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::get_Constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TwoGrabPlaneTransformer.set_Constraints
void Oculus::Interaction::TwoGrabPlaneTransformer::set_Constraints(::Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::set_Constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TwoGrabPlaneTransformer.Initialize
void Oculus::Interaction::TwoGrabPlaneTransformer::Initialize(::Oculus::Interaction::IGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TwoGrabPlaneTransformer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: Oculus.Interaction.TwoGrabPlaneTransformer.BeginTransform
void Oculus::Interaction::TwoGrabPlaneTransformer::BeginTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::BeginTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TwoGrabPlaneTransformer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TwoGrabPlaneTransformer.UpdateTransform
void Oculus::Interaction::TwoGrabPlaneTransformer::UpdateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::UpdateTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TwoGrabPlaneTransformer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TwoGrabPlaneTransformer.EndTransform
void Oculus::Interaction::TwoGrabPlaneTransformer::EndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::EndTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TwoGrabPlaneTransformer*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TwoGrabPlaneTransformer.InjectOptionalPlaneTransform
void Oculus::Interaction::TwoGrabPlaneTransformer::InjectOptionalPlaneTransform(::UnityEngine::Transform* planeTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::InjectOptionalPlaneTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalPlaneTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(planeTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, planeTransform);
}
// Autogenerated method: Oculus.Interaction.TwoGrabPlaneTransformer.InjectOptionalConstraints
void Oculus::Interaction::TwoGrabPlaneTransformer::InjectOptionalConstraints(::Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints* constraints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::InjectOptionalConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraints)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, constraints);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TwoGrabPlaneTransformer/TwoGrabPlaneConstraints
#include "Oculus/Interaction/TwoGrabPlaneTransformer_TwoGrabPlaneConstraints.hpp"
// Including type: Oculus.Interaction.FloatConstraint
#include "Oculus/Interaction/FloatConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MinScale
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints::dyn_MinScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints::dyn_MinScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinScale"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MaxScale
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints::dyn_MaxScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints::dyn_MaxScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxScale"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MinY
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints::dyn_MinY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints::dyn_MinY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinY"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MaxY
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints::dyn_MaxY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabPlaneTransformer::TwoGrabPlaneConstraints::dyn_MaxY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxY"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TwoGrabRotateTransformer
#include "Oculus/Interaction/TwoGrabRotateTransformer.hpp"
// Including type: Oculus.Interaction.IGrabbable
#include "Oculus/Interaction/IGrabbable.hpp"
// Including type: Oculus.Interaction.TwoGrabRotateTransformer/TwoGrabRotateConstraints
#include "Oculus/Interaction/TwoGrabRotateTransformer_TwoGrabRotateConstraints.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _pivotTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::TwoGrabRotateTransformer::dyn__pivotTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::dyn__pivotTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pivotTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TwoGrabRotateTransformer/Axis _rotationAxis
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::TwoGrabRotateTransformer::Axis& Oculus::Interaction::TwoGrabRotateTransformer::dyn__rotationAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::dyn__rotationAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationAxis"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::TwoGrabRotateTransformer::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TwoGrabRotateTransformer/TwoGrabRotateConstraints _constraints
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::TwoGrabRotateTransformer::TwoGrabRotateConstraints*& Oculus::Interaction::TwoGrabRotateTransformer::dyn__constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::dyn__constraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constraints"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::TwoGrabRotateTransformer::TwoGrabRotateConstraints**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _relativeAngle
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TwoGrabRotateTransformer::dyn__relativeAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::dyn__relativeAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _constrainedRelativeAngle
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TwoGrabRotateTransformer::dyn__constrainedRelativeAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::dyn__constrainedRelativeAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constrainedRelativeAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IGrabbable _grabbable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IGrabbable*& Oculus::Interaction::TwoGrabRotateTransformer::dyn__grabbable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::dyn__grabbable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabbable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _previousHandsVectorOnPlane
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::TwoGrabRotateTransformer::dyn__previousHandsVectorOnPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::dyn__previousHandsVectorOnPlane");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousHandsVectorOnPlane"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.TwoGrabRotateTransformer.get_PivotTransform
::UnityEngine::Transform* Oculus::Interaction::TwoGrabRotateTransformer::get_PivotTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::get_PivotTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PivotTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TwoGrabRotateTransformer.Initialize
void Oculus::Interaction::TwoGrabRotateTransformer::Initialize(::Oculus::Interaction::IGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TwoGrabRotateTransformer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: Oculus.Interaction.TwoGrabRotateTransformer.BeginTransform
void Oculus::Interaction::TwoGrabRotateTransformer::BeginTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::BeginTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TwoGrabRotateTransformer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TwoGrabRotateTransformer.UpdateTransform
void Oculus::Interaction::TwoGrabRotateTransformer::UpdateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::UpdateTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TwoGrabRotateTransformer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TwoGrabRotateTransformer.EndTransform
void Oculus::Interaction::TwoGrabRotateTransformer::EndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::EndTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TwoGrabRotateTransformer*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TwoGrabRotateTransformer.CalculateRotationAxisInWorldSpace
::UnityEngine::Vector3 Oculus::Interaction::TwoGrabRotateTransformer::CalculateRotationAxisInWorldSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::CalculateRotationAxisInWorldSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateRotationAxisInWorldSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TwoGrabRotateTransformer.CalculateHandsVectorOnPlane
::UnityEngine::Vector3 Oculus::Interaction::TwoGrabRotateTransformer::CalculateHandsVectorOnPlane(::UnityEngine::Vector3 planeNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::CalculateHandsVectorOnPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateHandsVectorOnPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(planeNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, planeNormal);
}
// Autogenerated method: Oculus.Interaction.TwoGrabRotateTransformer.InjectOptionalPivotTransform
void Oculus::Interaction::TwoGrabRotateTransformer::InjectOptionalPivotTransform(::UnityEngine::Transform* pivotTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::InjectOptionalPivotTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalPivotTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pivotTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pivotTransform);
}
// Autogenerated method: Oculus.Interaction.TwoGrabRotateTransformer.InjectOptionalRotationAxis
void Oculus::Interaction::TwoGrabRotateTransformer::InjectOptionalRotationAxis(::Oculus::Interaction::TwoGrabRotateTransformer::Axis rotationAxis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::InjectOptionalRotationAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalRotationAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotationAxis)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotationAxis);
}
// Autogenerated method: Oculus.Interaction.TwoGrabRotateTransformer.InjectOptionalConstraints
void Oculus::Interaction::TwoGrabRotateTransformer::InjectOptionalConstraints(::Oculus::Interaction::TwoGrabRotateTransformer::TwoGrabRotateConstraints* constraints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::InjectOptionalConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraints)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, constraints);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TwoGrabRotateTransformer/Axis
#include "Oculus/Interaction/TwoGrabRotateTransformer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.TwoGrabRotateTransformer/Axis Right
::Oculus::Interaction::TwoGrabRotateTransformer::Axis Oculus::Interaction::TwoGrabRotateTransformer::Axis::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::Axis::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::TwoGrabRotateTransformer::Axis>("Oculus.Interaction", "TwoGrabRotateTransformer/Axis", "Right"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.TwoGrabRotateTransformer/Axis Right
void Oculus::Interaction::TwoGrabRotateTransformer::Axis::_set_Right(::Oculus::Interaction::TwoGrabRotateTransformer::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::Axis::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "TwoGrabRotateTransformer/Axis", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.TwoGrabRotateTransformer/Axis Up
::Oculus::Interaction::TwoGrabRotateTransformer::Axis Oculus::Interaction::TwoGrabRotateTransformer::Axis::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::Axis::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::TwoGrabRotateTransformer::Axis>("Oculus.Interaction", "TwoGrabRotateTransformer/Axis", "Up"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.TwoGrabRotateTransformer/Axis Up
void Oculus::Interaction::TwoGrabRotateTransformer::Axis::_set_Up(::Oculus::Interaction::TwoGrabRotateTransformer::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::Axis::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "TwoGrabRotateTransformer/Axis", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.TwoGrabRotateTransformer/Axis Forward
::Oculus::Interaction::TwoGrabRotateTransformer::Axis Oculus::Interaction::TwoGrabRotateTransformer::Axis::_get_Forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::Axis::_get_Forward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::TwoGrabRotateTransformer::Axis>("Oculus.Interaction", "TwoGrabRotateTransformer/Axis", "Forward"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.TwoGrabRotateTransformer/Axis Forward
void Oculus::Interaction::TwoGrabRotateTransformer::Axis::_set_Forward(::Oculus::Interaction::TwoGrabRotateTransformer::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::Axis::_set_Forward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "TwoGrabRotateTransformer/Axis", "Forward", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::TwoGrabRotateTransformer::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TwoGrabRotateTransformer/TwoGrabRotateConstraints
#include "Oculus/Interaction/TwoGrabRotateTransformer_TwoGrabRotateConstraints.hpp"
// Including type: Oculus.Interaction.FloatConstraint
#include "Oculus/Interaction/FloatConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MinAngle
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::TwoGrabRotateTransformer::TwoGrabRotateConstraints::dyn_MinAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::TwoGrabRotateConstraints::dyn_MinAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinAngle"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.FloatConstraint MaxAngle
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::FloatConstraint*& Oculus::Interaction::TwoGrabRotateTransformer::TwoGrabRotateConstraints::dyn_MaxAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TwoGrabRotateTransformer::TwoGrabRotateConstraints::dyn_MaxAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxAngle"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::FloatConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.DistanceGrabInteractable
#include "Oculus/Interaction/DistanceGrabInteractable.hpp"
// Including type: Oculus.Interaction.DistanceGrabInteractor
#include "Oculus/Interaction/DistanceGrabInteractor.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.PhysicsGrabbable
#include "Oculus/Interaction/PhysicsGrabbable.hpp"
// Including type: Oculus.Interaction.IMovementProvider
#include "Oculus/Interaction/IMovementProvider.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _colliders
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& Oculus::Interaction::DistanceGrabInteractable::dyn__colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::dyn__colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Oculus::Interaction::DistanceGrabInteractable::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _grabSource
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::DistanceGrabInteractable::dyn__grabSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::dyn__grabSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabSource"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _resetGrabOnGrabsUpdated
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::DistanceGrabInteractable::dyn__resetGrabOnGrabsUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::dyn__resetGrabOnGrabsUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resetGrabOnGrabsUpdated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PhysicsGrabbable _physicsGrabbable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PhysicsGrabbable*& Oculus::Interaction::DistanceGrabInteractable::dyn__physicsGrabbable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::dyn__physicsGrabbable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsGrabbable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PhysicsGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _movementProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::DistanceGrabInteractable::dyn__movementProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::dyn__movementProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IMovementProvider <MovementProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovementProvider*& Oculus::Interaction::DistanceGrabInteractable::dyn_$MovementProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::dyn_$MovementProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MovementProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IMovementProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.get_Colliders
::ArrayW<::UnityEngine::Collider*> Oculus::Interaction::DistanceGrabInteractable::get_Colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::get_Colliders");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceGrabInteractable*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.get_Rigidbody
::UnityEngine::Rigidbody* Oculus::Interaction::DistanceGrabInteractable::get_Rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::get_Rigidbody");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceGrabInteractable*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.get_MovementProvider
::Oculus::Interaction::IMovementProvider* Oculus::Interaction::DistanceGrabInteractable::get_MovementProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::get_MovementProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MovementProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovementProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.set_MovementProvider
void Oculus::Interaction::DistanceGrabInteractable::set_MovementProvider(::Oculus::Interaction::IMovementProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::set_MovementProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MovementProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.get_ResetGrabOnGrabsUpdated
bool Oculus::Interaction::DistanceGrabInteractable::get_ResetGrabOnGrabsUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::get_ResetGrabOnGrabsUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResetGrabOnGrabsUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.set_ResetGrabOnGrabsUpdated
void Oculus::Interaction::DistanceGrabInteractable::set_ResetGrabOnGrabsUpdated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::set_ResetGrabOnGrabsUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResetGrabOnGrabsUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.get_RelativeTo
::UnityEngine::Transform* Oculus::Interaction::DistanceGrabInteractable::get_RelativeTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::get_RelativeTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceGrabInteractable*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.Reset
void Oculus::Interaction::DistanceGrabInteractable::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceGrabInteractable*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.GenerateMovement
::Oculus::Interaction::IMovement* Oculus::Interaction::DistanceGrabInteractable::GenerateMovement(ByRef<::UnityEngine::Pose> to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::GenerateMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovement*, false>(this, ___internal__method, byref(to));
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.ApplyVelocities
void Oculus::Interaction::DistanceGrabInteractable::ApplyVelocities(::UnityEngine::Vector3 linearVelocity, ::UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::ApplyVelocities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyVelocities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, linearVelocity, angularVelocity);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.InjectAllGrabInteractable
void Oculus::Interaction::DistanceGrabInteractable::InjectAllGrabInteractable(::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::InjectAllGrabInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllGrabInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigidbody);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.InjectRigidbody
void Oculus::Interaction::DistanceGrabInteractable::InjectRigidbody(::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::InjectRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigidbody);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.InjectOptionalGrabSource
void Oculus::Interaction::DistanceGrabInteractable::InjectOptionalGrabSource(::UnityEngine::Transform* grabSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::InjectOptionalGrabSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalGrabSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabSource);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.InjectOptionalPhysicsGrabbable
void Oculus::Interaction::DistanceGrabInteractable::InjectOptionalPhysicsGrabbable(::Oculus::Interaction::PhysicsGrabbable* physicsGrabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::InjectOptionalPhysicsGrabbable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalPhysicsGrabbable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsGrabbable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, physicsGrabbable);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.InjectOptionalMovementProvider
void Oculus::Interaction::DistanceGrabInteractable::InjectOptionalMovementProvider(::Oculus::Interaction::IMovementProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::InjectOptionalMovementProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalMovementProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, provider);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.<Start>b__21_0
void Oculus::Interaction::DistanceGrabInteractable::$Start$b__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::<Start>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.Awake
void Oculus::Interaction::DistanceGrabInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractable_2<TInteractor, TInteractable>*), 31)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractable.Start
void Oculus::Interaction::DistanceGrabInteractable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractable::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractable_2<TInteractor, TInteractable>*), 32)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.DistanceGrabInteractor
#include "Oculus/Interaction/DistanceGrabInteractor.hpp"
// Including type: Oculus.Interaction.DistanceGrabInteractable
#include "Oculus/Interaction/DistanceGrabInteractable.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.Throw.IVelocityCalculator
#include "Oculus/Interaction/Throw/IVelocityCalculator.hpp"
// Including type: Oculus.Interaction.DistantCandidateComputer`2
#include "Oculus/Interaction/DistantCandidateComputer_2.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.IRelativeToRef
#include "Oculus/Interaction/IRelativeToRef.hpp"
// Including type: Oculus.Interaction.PointerEvent
#include "Oculus/Interaction/PointerEvent.hpp"
// Including type: Oculus.Interaction.ISelector
#include "Oculus/Interaction/ISelector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _selector
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::DistanceGrabInteractor::dyn__selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::dyn__selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selector"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _grabCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::DistanceGrabInteractor::dyn__grabCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::dyn__grabCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _grabTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::DistanceGrabInteractor::dyn__grabTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::dyn__grabTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _velocityCalculator
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::DistanceGrabInteractor::dyn__velocityCalculator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::dyn__velocityCalculator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocityCalculator"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Throw.IVelocityCalculator <VelocityCalculator>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Throw::IVelocityCalculator*& Oculus::Interaction::DistanceGrabInteractor::dyn_$VelocityCalculator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::dyn_$VelocityCalculator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<VelocityCalculator>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Throw::IVelocityCalculator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.DistantCandidateComputer`2<Oculus.Interaction.DistanceGrabInteractor,Oculus.Interaction.DistanceGrabInteractable> _distantCandidateComputer
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::DistanceGrabInteractor*, ::Oculus::Interaction::DistanceGrabInteractable*>*& Oculus::Interaction::DistanceGrabInteractor::dyn__distantCandidateComputer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::dyn__distantCandidateComputer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distantCandidateComputer"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::DistanceGrabInteractor*, ::Oculus::Interaction::DistanceGrabInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IMovement _movement
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovement*& Oculus::Interaction::DistanceGrabInteractor::dyn__movement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::dyn__movement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movement"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <HitPoint>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::DistanceGrabInteractor::dyn_$HitPoint$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::dyn_$HitPoint$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HitPoint>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <BestInteractableWeight>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::DistanceGrabInteractor::dyn_$BestInteractableWeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::dyn_$BestInteractableWeight$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BestInteractableWeight>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.get_VelocityCalculator
::Oculus::Interaction::Throw::IVelocityCalculator* Oculus::Interaction::DistanceGrabInteractor::get_VelocityCalculator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::get_VelocityCalculator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VelocityCalculator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Throw::IVelocityCalculator*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.set_VelocityCalculator
void Oculus::Interaction::DistanceGrabInteractor::set_VelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::set_VelocityCalculator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VelocityCalculator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.get_Origin
::UnityEngine::Pose Oculus::Interaction::DistanceGrabInteractor::get_Origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::get_Origin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceGrabInteractor*), 75));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.get_HitPoint
::UnityEngine::Vector3 Oculus::Interaction::DistanceGrabInteractor::get_HitPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::get_HitPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceGrabInteractor*), 76));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.set_HitPoint
void Oculus::Interaction::DistanceGrabInteractor::set_HitPoint(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::set_HitPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HitPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.get_DistanceInteractable
::Oculus::Interaction::IRelativeToRef* Oculus::Interaction::DistanceGrabInteractor::get_DistanceInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::get_DistanceInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceGrabInteractor*), 77));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IRelativeToRef*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.get_BestInteractableWeight
float Oculus::Interaction::DistanceGrabInteractor::get_BestInteractableWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::get_BestInteractableWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BestInteractableWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.set_BestInteractableWeight
void Oculus::Interaction::DistanceGrabInteractor::set_BestInteractableWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::set_BestInteractableWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BestInteractableWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.ComputeCandidate
::Oculus::Interaction::DistanceGrabInteractable* Oculus::Interaction::DistanceGrabInteractor::ComputeCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::ComputeCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceGrabInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::DistanceGrabInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.InteractableSelected
void Oculus::Interaction::DistanceGrabInteractor::InteractableSelected(::Oculus::Interaction::DistanceGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::InteractableSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceGrabInteractor*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.InteractableUnselected
void Oculus::Interaction::DistanceGrabInteractor::InteractableUnselected(::Oculus::Interaction::DistanceGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::InteractableUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DistanceGrabInteractor*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.HandleOtherPointerEventRaised
void Oculus::Interaction::DistanceGrabInteractor::HandleOtherPointerEventRaised(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::HandleOtherPointerEventRaised");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOtherPointerEventRaised", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.InjectAllDistanceGrabInteractor
void Oculus::Interaction::DistanceGrabInteractor::InjectAllDistanceGrabInteractor(::Oculus::Interaction::ISelector* selector, ::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::DistanceGrabInteractor*, ::Oculus::Interaction::DistanceGrabInteractable*>* distantCandidateComputer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::InjectAllDistanceGrabInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllDistanceGrabInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector), ::il2cpp_utils::ExtractType(distantCandidateComputer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selector, distantCandidateComputer);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.InjectSelector
void Oculus::Interaction::DistanceGrabInteractor::InjectSelector(::Oculus::Interaction::ISelector* selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::InjectSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selector);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.InjectDistantCandidateComputer
void Oculus::Interaction::DistanceGrabInteractor::InjectDistantCandidateComputer(::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::DistanceGrabInteractor*, ::Oculus::Interaction::DistanceGrabInteractable*>* distantCandidateComputer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::InjectDistantCandidateComputer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectDistantCandidateComputer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distantCandidateComputer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distantCandidateComputer);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.InjectOptionalGrabCenter
void Oculus::Interaction::DistanceGrabInteractor::InjectOptionalGrabCenter(::UnityEngine::Transform* grabCenter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::InjectOptionalGrabCenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalGrabCenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabCenter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabCenter);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.InjectOptionalGrabTarget
void Oculus::Interaction::DistanceGrabInteractor::InjectOptionalGrabTarget(::UnityEngine::Transform* grabTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::InjectOptionalGrabTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalGrabTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabTarget)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabTarget);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.InjectOptionalVelocityCalculator
void Oculus::Interaction::DistanceGrabInteractor::InjectOptionalVelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* velocityCalculator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::InjectOptionalVelocityCalculator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalVelocityCalculator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(velocityCalculator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, velocityCalculator);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.<Start>b__23_0
void Oculus::Interaction::DistanceGrabInteractor::$Start$b__23_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::<Start>b__23_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__23_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.Awake
void Oculus::Interaction::DistanceGrabInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 50)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.Start
void Oculus::Interaction::DistanceGrabInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 51)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.DoPreprocess
void Oculus::Interaction::DistanceGrabInteractor::DoPreprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::DoPreprocess");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 36)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.ComputePointerPose
::UnityEngine::Pose Oculus::Interaction::DistanceGrabInteractor::ComputePointerPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::ComputePointerPose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractor_2<TInteractor, TInteractable>*), 74)));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistanceGrabInteractor.DoSelectUpdate
void Oculus::Interaction::DistanceGrabInteractor::DoSelectUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistanceGrabInteractor::DoSelectUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 39)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.GrabInteractable
#include "Oculus/Interaction/GrabInteractable.hpp"
// Including type: Oculus.Interaction.GrabInteractor
#include "Oculus/Interaction/GrabInteractor.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.PhysicsGrabbable
#include "Oculus/Interaction/PhysicsGrabbable.hpp"
// Including type: Oculus.Interaction.CollisionInteractionRegistry`2
#include "Oculus/Interaction/CollisionInteractionRegistry_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Oculus.Interaction.CollisionInteractionRegistry`2<Oculus.Interaction.GrabInteractor,Oculus.Interaction.GrabInteractable> _grabRegistry
::Oculus::Interaction::CollisionInteractionRegistry_2<::Oculus::Interaction::GrabInteractor*, ::Oculus::Interaction::GrabInteractable*>* Oculus::Interaction::GrabInteractable::_get__grabRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::_get__grabRegistry");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::CollisionInteractionRegistry_2<::Oculus::Interaction::GrabInteractor*, ::Oculus::Interaction::GrabInteractable*>*>("Oculus.Interaction", "GrabInteractable", "_grabRegistry")));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Interaction.CollisionInteractionRegistry`2<Oculus.Interaction.GrabInteractor,Oculus.Interaction.GrabInteractable> _grabRegistry
void Oculus::Interaction::GrabInteractable::_set__grabRegistry(::Oculus::Interaction::CollisionInteractionRegistry_2<::Oculus::Interaction::GrabInteractor*, ::Oculus::Interaction::GrabInteractable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::_set__grabRegistry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "GrabInteractable", "_grabRegistry", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _colliders
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& Oculus::Interaction::GrabInteractable::dyn__colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::dyn__colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Oculus::Interaction::GrabInteractable::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _grabSource
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::GrabInteractable::dyn__grabSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::dyn__grabSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabSource"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useClosestPointAsGrabSource
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::GrabInteractable::dyn__useClosestPointAsGrabSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::dyn__useClosestPointAsGrabSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useClosestPointAsGrabSource"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _releaseDistance
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::GrabInteractable::dyn__releaseDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::dyn__releaseDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_releaseDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _resetGrabOnGrabsUpdated
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::GrabInteractable::dyn__resetGrabOnGrabsUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::dyn__resetGrabOnGrabsUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resetGrabOnGrabsUpdated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PhysicsGrabbable _physicsGrabbable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PhysicsGrabbable*& Oculus::Interaction::GrabInteractable::dyn__physicsGrabbable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::dyn__physicsGrabbable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsGrabbable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PhysicsGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.get_Colliders
::ArrayW<::UnityEngine::Collider*> Oculus::Interaction::GrabInteractable::get_Colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::get_Colliders");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::GrabInteractable*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.get_Rigidbody
::UnityEngine::Rigidbody* Oculus::Interaction::GrabInteractable::get_Rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::get_Rigidbody");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::GrabInteractable*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.get_UseClosestPointAsGrabSource
bool Oculus::Interaction::GrabInteractable::get_UseClosestPointAsGrabSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::get_UseClosestPointAsGrabSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseClosestPointAsGrabSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.set_UseClosestPointAsGrabSource
void Oculus::Interaction::GrabInteractable::set_UseClosestPointAsGrabSource(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::set_UseClosestPointAsGrabSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseClosestPointAsGrabSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.get_ReleaseDistance
float Oculus::Interaction::GrabInteractable::get_ReleaseDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::get_ReleaseDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReleaseDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.set_ReleaseDistance
void Oculus::Interaction::GrabInteractable::set_ReleaseDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::set_ReleaseDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReleaseDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.get_ResetGrabOnGrabsUpdated
bool Oculus::Interaction::GrabInteractable::get_ResetGrabOnGrabsUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::get_ResetGrabOnGrabsUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResetGrabOnGrabsUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.set_ResetGrabOnGrabsUpdated
void Oculus::Interaction::GrabInteractable::set_ResetGrabOnGrabsUpdated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::set_ResetGrabOnGrabsUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResetGrabOnGrabsUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.GetGrabSourceForTarget
::UnityEngine::Pose Oculus::Interaction::GrabInteractable::GetGrabSourceForTarget(::UnityEngine::Pose target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::GetGrabSourceForTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGrabSourceForTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, target);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.ApplyVelocities
void Oculus::Interaction::GrabInteractable::ApplyVelocities(::UnityEngine::Vector3 linearVelocity, ::UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::ApplyVelocities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyVelocities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, linearVelocity, angularVelocity);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.InjectAllGrabInteractable
void Oculus::Interaction::GrabInteractable::InjectAllGrabInteractable(::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::InjectAllGrabInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllGrabInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigidbody);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.InjectRigidbody
void Oculus::Interaction::GrabInteractable::InjectRigidbody(::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::InjectRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigidbody);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.InjectOptionalGrabSource
void Oculus::Interaction::GrabInteractable::InjectOptionalGrabSource(::UnityEngine::Transform* grabSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::InjectOptionalGrabSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalGrabSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabSource);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.InjectOptionalReleaseDistance
void Oculus::Interaction::GrabInteractable::InjectOptionalReleaseDistance(float releaseDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::InjectOptionalReleaseDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalReleaseDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(releaseDistance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, releaseDistance);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.InjectOptionalPhysicsGrabbable
void Oculus::Interaction::GrabInteractable::InjectOptionalPhysicsGrabbable(::Oculus::Interaction::PhysicsGrabbable* physicsGrabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::InjectOptionalPhysicsGrabbable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalPhysicsGrabbable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsGrabbable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, physicsGrabbable);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.<Start>b__22_0
void Oculus::Interaction::GrabInteractable::$Start$b__22_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::<Start>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.Awake
void Oculus::Interaction::GrabInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractable_2<TInteractor, TInteractable>*), 31)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractable.Start
void Oculus::Interaction::GrabInteractable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractable::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractable_2<TInteractor, TInteractable>*), 32)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.GrabInteractor
#include "Oculus/Interaction/GrabInteractor.hpp"
// Including type: Oculus.Interaction.GrabInteractor/<>c
#include "Oculus/Interaction/GrabInteractor_--c.hpp"
// Including type: Oculus.Interaction.GrabInteractor/<>c__DisplayClass20_0
#include "Oculus/Interaction/GrabInteractor_--c__DisplayClass20_0.hpp"
// Including type: Oculus.Interaction.GrabInteractable
#include "Oculus/Interaction/GrabInteractable.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: Oculus.Interaction.Tween
#include "Oculus/Interaction/Tween.hpp"
// Including type: Oculus.Interaction.Throw.IVelocityCalculator
#include "Oculus/Interaction/Throw/IVelocityCalculator.hpp"
// Including type: Oculus.Interaction.ISelector
#include "Oculus/Interaction/ISelector.hpp"
// Including type: Oculus.Interaction.PointerEvent
#include "Oculus/Interaction/PointerEvent.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _selector
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::GrabInteractor::dyn__selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::dyn__selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selector"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Oculus::Interaction::GrabInteractor::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _grabCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::GrabInteractor::dyn__grabCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::dyn__grabCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _grabTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::GrabInteractor::dyn__grabTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::dyn__grabTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _colliders
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& Oculus::Interaction::GrabInteractor::dyn__colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::dyn__colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Tween _tween
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Tween*& Oculus::Interaction::GrabInteractor::dyn__tween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::dyn__tween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tween"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Tween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _outsideReleaseDist
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::GrabInteractor::dyn__outsideReleaseDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::dyn__outsideReleaseDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outsideReleaseDist"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _velocityCalculator
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::GrabInteractor::dyn__velocityCalculator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::dyn__velocityCalculator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocityCalculator"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Throw.IVelocityCalculator <VelocityCalculator>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Throw::IVelocityCalculator*& Oculus::Interaction::GrabInteractor::dyn_$VelocityCalculator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::dyn_$VelocityCalculator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<VelocityCalculator>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Throw::IVelocityCalculator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.GrabInteractable _selectedInteractableOverride
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabInteractable*& Oculus::Interaction::GrabInteractor::dyn__selectedInteractableOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::dyn__selectedInteractableOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedInteractableOverride"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::GrabInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isSelectionOverriden
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::GrabInteractor::dyn__isSelectionOverriden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::dyn__isSelectionOverriden");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isSelectionOverriden"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.get_Rigidbody
::UnityEngine::Rigidbody* Oculus::Interaction::GrabInteractor::get_Rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::get_Rigidbody");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::GrabInteractor*), 75));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.get_VelocityCalculator
::Oculus::Interaction::Throw::IVelocityCalculator* Oculus::Interaction::GrabInteractor::get_VelocityCalculator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::get_VelocityCalculator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VelocityCalculator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Throw::IVelocityCalculator*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.set_VelocityCalculator
void Oculus::Interaction::GrabInteractor::set_VelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::set_VelocityCalculator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VelocityCalculator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.ComputeCandidate
::Oculus::Interaction::GrabInteractable* Oculus::Interaction::GrabInteractor::ComputeCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::ComputeCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::GrabInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::GrabInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.ForceSelect
void Oculus::Interaction::GrabInteractor::ForceSelect(::Oculus::Interaction::GrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::ForceSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.ForceRelease
void Oculus::Interaction::GrabInteractor::ForceRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::ForceRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.InteractableSelected
void Oculus::Interaction::GrabInteractor::InteractableSelected(::Oculus::Interaction::GrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::InteractableSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::GrabInteractor*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.InteractableUnselected
void Oculus::Interaction::GrabInteractor::InteractableUnselected(::Oculus::Interaction::GrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::InteractableUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::GrabInteractor*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.InjectAllGrabInteractor
void Oculus::Interaction::GrabInteractor::InjectAllGrabInteractor(::Oculus::Interaction::ISelector* selector, ::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::InjectAllGrabInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllGrabInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector), ::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selector, rigidbody);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.InjectSelector
void Oculus::Interaction::GrabInteractor::InjectSelector(::Oculus::Interaction::ISelector* selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::InjectSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selector);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.InjectRigidbody
void Oculus::Interaction::GrabInteractor::InjectRigidbody(::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::InjectRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigidbody);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.InjectOptionalGrabCenter
void Oculus::Interaction::GrabInteractor::InjectOptionalGrabCenter(::UnityEngine::Transform* grabCenter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::InjectOptionalGrabCenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalGrabCenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabCenter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabCenter);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.InjectOptionalGrabTarget
void Oculus::Interaction::GrabInteractor::InjectOptionalGrabTarget(::UnityEngine::Transform* grabTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::InjectOptionalGrabTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalGrabTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabTarget)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabTarget);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.InjectOptionalVelocityCalculator
void Oculus::Interaction::GrabInteractor::InjectOptionalVelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* velocityCalculator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::InjectOptionalVelocityCalculator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalVelocityCalculator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(velocityCalculator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, velocityCalculator);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.<Start>b__17_0
void Oculus::Interaction::GrabInteractor::$Start$b__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::<Start>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.Awake
void Oculus::Interaction::GrabInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 50)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.Start
void Oculus::Interaction::GrabInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 51)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.DoPreprocess
void Oculus::Interaction::GrabInteractor::DoPreprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::DoPreprocess");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 36)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.Unselect
void Oculus::Interaction::GrabInteractor::Unselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::Unselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 63)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.HandlePointerEventRaised
void Oculus::Interaction::GrabInteractor::HandlePointerEventRaised(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::HandlePointerEventRaised");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractor_2<TInteractor, TInteractable>*), 73)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.ComputePointerPose
::UnityEngine::Pose Oculus::Interaction::GrabInteractor::ComputePointerPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::ComputePointerPose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractor_2<TInteractor, TInteractable>*), 74)));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.DoSelectUpdate
void Oculus::Interaction::GrabInteractor::DoSelectUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::DoSelectUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 39)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor.ComputeShouldUnselect
bool Oculus::Interaction::GrabInteractor::ComputeShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::ComputeShouldUnselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 44)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.GrabInteractor/<>c
#include "Oculus/Interaction/GrabInteractor_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.GrabInteractor/<>c <>9
::Oculus::Interaction::GrabInteractor::$$c* Oculus::Interaction::GrabInteractor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::GrabInteractor::$$c*>("Oculus.Interaction", "GrabInteractor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.GrabInteractor/<>c <>9
void Oculus::Interaction::GrabInteractor::$$c::_set_$$9(::Oculus::Interaction::GrabInteractor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "GrabInteractor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Boolean> <>9__21_0
::System::Func_1<bool>* Oculus::Interaction::GrabInteractor::$$c::_get_$$9__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::$$c::_get_$$9__21_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<bool>*>("Oculus.Interaction", "GrabInteractor/<>c", "<>9__21_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Boolean> <>9__21_0
void Oculus::Interaction::GrabInteractor::$$c::_set_$$9__21_0(::System::Func_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::$$c::_set_$$9__21_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "GrabInteractor/<>c", "<>9__21_0", value)));
}
// Autogenerated method: Oculus.Interaction.GrabInteractor/<>c..cctor
void Oculus::Interaction::GrabInteractor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "GrabInteractor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor/<>c.<ForceRelease>b__21_0
bool Oculus::Interaction::GrabInteractor::$$c::$ForceRelease$b__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::$$c::<ForceRelease>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ForceRelease>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.GrabInteractor/<>c__DisplayClass20_0
#include "Oculus/Interaction/GrabInteractor_--c__DisplayClass20_0.hpp"
// Including type: Oculus.Interaction.GrabInteractable
#include "Oculus/Interaction/GrabInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.GrabInteractable interactable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabInteractable*& Oculus::Interaction::GrabInteractor::$$c__DisplayClass20_0::dyn_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::$$c__DisplayClass20_0::dyn_interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::GrabInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.GrabInteractor <>4__this
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabInteractor*& Oculus::Interaction::GrabInteractor::$$c__DisplayClass20_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::$$c__DisplayClass20_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::GrabInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor/<>c__DisplayClass20_0.<ForceSelect>b__0
::Oculus::Interaction::GrabInteractable* Oculus::Interaction::GrabInteractor::$$c__DisplayClass20_0::$ForceSelect$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::$$c__DisplayClass20_0::<ForceSelect>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ForceSelect>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::GrabInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor/<>c__DisplayClass20_0.<ForceSelect>b__1
bool Oculus::Interaction::GrabInteractor::$$c__DisplayClass20_0::$ForceSelect$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::$$c__DisplayClass20_0::<ForceSelect>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ForceSelect>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabInteractor/<>c__DisplayClass20_0.<ForceSelect>b__2
bool Oculus::Interaction::GrabInteractor::$$c__DisplayClass20_0::$ForceSelect$b__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabInteractor::$$c__DisplayClass20_0::<ForceSelect>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ForceSelect>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Tween
#include "Oculus/Interaction/Tween.hpp"
// Including type: Oculus.Interaction.Tween/TweenCurve
#include "Oculus/Interaction/Tween_TweenCurve.hpp"
// Including type: Oculus.Interaction.Tween/<>c
#include "Oculus/Interaction/Tween_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.Tween/TweenCurve> _tweenCurves
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::Tween::TweenCurve*>*& Oculus::Interaction::Tween::dyn__tweenCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::dyn__tweenCurves");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweenCurves"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::Tween::TweenCurve*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _pose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Tween::dyn__pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::dyn__pose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _startPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Tween::dyn__startPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::dyn__startPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxOverlapTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Tween::dyn__maxOverlapTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::dyn__maxOverlapTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxOverlapTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _tweenTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Tween::dyn__tweenTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::dyn__tweenTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweenTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _animationCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::Tween::dyn__animationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::dyn__animationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Tween.get_Pose
::UnityEngine::Pose Oculus::Interaction::Tween::get_Pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::get_Pose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Tween*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Tween.get_StartPose
::UnityEngine::Pose Oculus::Interaction::Tween::get_StartPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::get_StartPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Tween.get_Stopped
bool Oculus::Interaction::Tween::get_Stopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::get_Stopped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Tween*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Tween.TweenToInTime
void Oculus::Interaction::Tween::TweenToInTime(::UnityEngine::Pose target, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::TweenToInTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TweenToInTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, time);
}
// Autogenerated method: Oculus.Interaction.Tween.MoveTo
void Oculus::Interaction::Tween::MoveTo(::UnityEngine::Pose target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::MoveTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Tween*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Oculus.Interaction.Tween.UpdateTarget
void Oculus::Interaction::Tween::UpdateTarget(::UnityEngine::Pose target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::UpdateTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Tween*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Oculus.Interaction.Tween.StopAndSetPose
void Oculus::Interaction::Tween::StopAndSetPose(::UnityEngine::Pose source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::StopAndSetPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Tween*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: Oculus.Interaction.Tween.Tick
void Oculus::Interaction::Tween::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::Tick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Tween*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Tween/TweenCurve
#include "Oculus/Interaction/Tween_TweenCurve.hpp"
// Including type: Oculus.Interaction.ProgressCurve
#include "Oculus/Interaction/ProgressCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.ProgressCurve Curve
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& Oculus::Interaction::Tween::TweenCurve::dyn_Curve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::TweenCurve::dyn_Curve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Curve"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ProgressCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PrevProgress
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Tween::TweenCurve::dyn_PrevProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::TweenCurve::dyn_PrevProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrevProgress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Pose Current
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Tween::TweenCurve::dyn_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::TweenCurve::dyn_Current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Current"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Pose Target
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Tween::TweenCurve::dyn_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::TweenCurve::dyn_Target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Target"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Tween/<>c
#include "Oculus/Interaction/Tween_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: Oculus.Interaction.Tween/TweenCurve
#include "Oculus/Interaction/Tween_TweenCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Tween/<>c <>9
::Oculus::Interaction::Tween::$$c* Oculus::Interaction::Tween::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Tween::$$c*>("Oculus.Interaction", "Tween/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Tween/<>c <>9
void Oculus::Interaction::Tween::$$c::_set_$$9(::Oculus::Interaction::Tween::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "Tween/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<Oculus.Interaction.Tween/TweenCurve> <>9__11_0
::System::Predicate_1<::Oculus::Interaction::Tween::TweenCurve*>* Oculus::Interaction::Tween::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::Oculus::Interaction::Tween::TweenCurve*>*>("Oculus.Interaction", "Tween/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<Oculus.Interaction.Tween/TweenCurve> <>9__11_0
void Oculus::Interaction::Tween::$$c::_set_$$9__11_0(::System::Predicate_1<::Oculus::Interaction::Tween::TweenCurve*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "Tween/<>c", "<>9__11_0", value)));
}
// Autogenerated method: Oculus.Interaction.Tween/<>c..cctor
void Oculus::Interaction::Tween::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "Tween/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Tween/<>c.<get_Stopped>b__11_0
bool Oculus::Interaction::Tween::$$c::$get_Stopped$b__11_0(::Oculus::Interaction::Tween::TweenCurve* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Tween::$$c::<get_Stopped>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Stopped>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ActiveStateFingerVisual
#include "Oculus/Interaction/ActiveStateFingerVisual.hpp"
// Including type: Oculus.Interaction.ActiveStateFingerVisual/<UpdateGlowValue>d__22
#include "Oculus/Interaction/ActiveStateFingerVisual_-UpdateGlowValue-d__22.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
// Including type: Oculus.Interaction.MaterialPropertyBlockEditor
#include "Oculus/Interaction/MaterialPropertyBlockEditor.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _activeState
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::ActiveStateFingerVisual::dyn__activeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::dyn__activeState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeState"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IActiveState ActiveState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& Oculus::Interaction::ActiveStateFingerVisual::dyn_ActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::dyn_ActiveState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandFingerFlags _fingersMask
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandFingerFlags& Oculus::Interaction::ActiveStateFingerVisual::dyn__fingersMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::dyn__fingersMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingersMask"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandFingerFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MaterialPropertyBlockEditor _handMaterialPropertyBlockEditor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MaterialPropertyBlockEditor*& Oculus::Interaction::ActiveStateFingerVisual::dyn__handMaterialPropertyBlockEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::dyn__handMaterialPropertyBlockEditor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handMaterialPropertyBlockEditor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MaterialPropertyBlockEditor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _glowLerpSpeed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ActiveStateFingerVisual::dyn__glowLerpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::dyn__glowLerpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowLerpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _fingerGlowColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::ActiveStateFingerVisual::dyn__fingerGlowColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::dyn__fingerGlowColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerGlowColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32[] _handShaderGlowPropertyIds
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Oculus::Interaction::ActiveStateFingerVisual::dyn__handShaderGlowPropertyIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::dyn__handShaderGlowPropertyIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handShaderGlowPropertyIds"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _fingerGlowColorPropertyId
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::ActiveStateFingerVisual::dyn__fingerGlowColorPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::dyn__fingerGlowColorPropertyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerGlowColorPropertyId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _prevActive
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ActiveStateFingerVisual::dyn__prevActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::dyn__prevActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ActiveStateFingerVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual.get_FingersMask
::Oculus::Interaction::Input::HandFingerFlags Oculus::Interaction::ActiveStateFingerVisual::get_FingersMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::get_FingersMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FingersMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandFingerFlags, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual.set_FingersMask
void Oculus::Interaction::ActiveStateFingerVisual::set_FingersMask(::Oculus::Interaction::Input::HandFingerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::set_FingersMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FingersMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual.get_GlowLerpSpeed
float Oculus::Interaction::ActiveStateFingerVisual::get_GlowLerpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::get_GlowLerpSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlowLerpSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual.set_GlowLerpSpeed
void Oculus::Interaction::ActiveStateFingerVisual::set_GlowLerpSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::set_GlowLerpSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlowLerpSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual.get_FingerGlowColor
::UnityEngine::Color Oculus::Interaction::ActiveStateFingerVisual::get_FingerGlowColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::get_FingerGlowColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FingerGlowColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual.set_FingerGlowColor
void Oculus::Interaction::ActiveStateFingerVisual::set_FingerGlowColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::set_FingerGlowColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FingerGlowColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual.Awake
void Oculus::Interaction::ActiveStateFingerVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateFingerVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual.Start
void Oculus::Interaction::ActiveStateFingerVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateFingerVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual.Update
void Oculus::Interaction::ActiveStateFingerVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual.UpdateGlowValue
::System::Collections::IEnumerator* Oculus::Interaction::ActiveStateFingerVisual::UpdateGlowValue(int fingerIndex, float targetGlow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::UpdateGlowValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGlowValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fingerIndex), ::il2cpp_utils::ExtractType(targetGlow)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, fingerIndex, targetGlow);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual.InjectAllActiveStateFingerVisual
void Oculus::Interaction::ActiveStateFingerVisual::InjectAllActiveStateFingerVisual(::Oculus::Interaction::IActiveState* activeState, ::Oculus::Interaction::MaterialPropertyBlockEditor* handMaterialPropertyBlockEditor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::InjectAllActiveStateFingerVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllActiveStateFingerVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState), ::il2cpp_utils::ExtractType(handMaterialPropertyBlockEditor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState, handMaterialPropertyBlockEditor);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual.InjectActiveState
void Oculus::Interaction::ActiveStateFingerVisual::InjectActiveState(::Oculus::Interaction::IActiveState* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::InjectActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual.InjectHandMaterialPropertyBlockEditor
void Oculus::Interaction::ActiveStateFingerVisual::InjectHandMaterialPropertyBlockEditor(::Oculus::Interaction::MaterialPropertyBlockEditor* handMaterialPropertyBlockEditor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::InjectHandMaterialPropertyBlockEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandMaterialPropertyBlockEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handMaterialPropertyBlockEditor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handMaterialPropertyBlockEditor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.ActiveStateFingerVisual/<UpdateGlowValue>d__22
#include "Oculus/Interaction/ActiveStateFingerVisual_-UpdateGlowValue-d__22.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.ActiveStateFingerVisual <>4__this
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ActiveStateFingerVisual*& Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ActiveStateFingerVisual**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 fingerIndex
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_fingerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_fingerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fingerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single targetGlow
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_targetGlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_targetGlow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetGlow"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startGlow>5__2
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_$startGlow$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_$startGlow$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startGlow>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__3
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_$startTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_$startTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <currentGlow>5__4
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_$currentGlow$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::dyn_$currentGlow$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentGlow>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual/<UpdateGlowValue>d__22.System.IDisposable.Dispose
void Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual/<UpdateGlowValue>d__22.MoveNext
bool Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual/<UpdateGlowValue>d__22.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual/<UpdateGlowValue>d__22.System.Collections.IEnumerator.Reset
void Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateFingerVisual/<UpdateGlowValue>d__22.System.Collections.IEnumerator.get_Current
::Il2CppObject* Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateFingerVisual::$UpdateGlowValue$d__22*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PinchPointerVisual
#include "Oculus/Interaction/PinchPointerVisual.hpp"
// Including type: Oculus.Interaction.IInteractor
#include "Oculus/Interaction/IInteractor.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: Oculus.Interaction.Input.IAxis1D
#include "Oculus/Interaction/Input/IAxis1D.hpp"
// Including type: Oculus.Interaction.InteractorStateChangeArgs
#include "Oculus/Interaction/InteractorStateChangeArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _interactor
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::PinchPointerVisual::dyn__interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::dyn__interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactor"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractor Interactor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractor*& Oculus::Interaction::PinchPointerVisual::dyn_Interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::dyn_Interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Interactor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _skinnedMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& Oculus::Interaction::PinchPointerVisual::dyn__skinnedMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::dyn__skinnedMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skinnedMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PinchPointerVisual::dyn__localOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::dyn__localOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _remapCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::PinchPointerVisual::dyn__remapCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::dyn__remapCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_remapCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _alphaRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Oculus::Interaction::PinchPointerVisual::dyn__alphaRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::dyn__alphaRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alphaRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _tint
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PinchPointerVisual::dyn__tint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::dyn__tint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tint"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _progress
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::PinchPointerVisual::dyn__progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::dyn__progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progress"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IAxis1D Progress
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IAxis1D*& Oculus::Interaction::PinchPointerVisual::dyn_Progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::dyn_Progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Progress"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IAxis1D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PinchPointerVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.get_LocalOffset
::UnityEngine::Vector3 Oculus::Interaction::PinchPointerVisual::get_LocalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::get_LocalOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.set_LocalOffset
void Oculus::Interaction::PinchPointerVisual::set_LocalOffset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::set_LocalOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocalOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.get_RemapCurve
::UnityEngine::AnimationCurve* Oculus::Interaction::PinchPointerVisual::get_RemapCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::get_RemapCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemapCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.set_RemapCurve
void Oculus::Interaction::PinchPointerVisual::set_RemapCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::set_RemapCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RemapCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.get_AlphaRange
::UnityEngine::Vector2 Oculus::Interaction::PinchPointerVisual::get_AlphaRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::get_AlphaRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlphaRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.set_AlphaRange
void Oculus::Interaction::PinchPointerVisual::set_AlphaRange(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::set_AlphaRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AlphaRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.get_Tint
::UnityEngine::Color Oculus::Interaction::PinchPointerVisual::get_Tint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::get_Tint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.set_Tint
void Oculus::Interaction::PinchPointerVisual::set_Tint(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::set_Tint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Tint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.Awake
void Oculus::Interaction::PinchPointerVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PinchPointerVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.Start
void Oculus::Interaction::PinchPointerVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PinchPointerVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.OnEnable
void Oculus::Interaction::PinchPointerVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PinchPointerVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.OnDisable
void Oculus::Interaction::PinchPointerVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PinchPointerVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.SetPositionAndRotation
void Oculus::Interaction::PinchPointerVisual::SetPositionAndRotation(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::SetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.HandleStateChanged
void Oculus::Interaction::PinchPointerVisual::HandleStateChanged(::Oculus::Interaction::InteractorStateChangeArgs stateArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::HandleStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateArgs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateArgs);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.HandlePostprocessed
void Oculus::Interaction::PinchPointerVisual::HandlePostprocessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::HandlePostprocessed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePostprocessed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.UpdateColor
void Oculus::Interaction::PinchPointerVisual::UpdateColor(bool highlight, float mappedPinchStrength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::UpdateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highlight), ::il2cpp_utils::ExtractType(mappedPinchStrength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, highlight, mappedPinchStrength);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.InjectAllPinchPointerVisual
void Oculus::Interaction::PinchPointerVisual::InjectAllPinchPointerVisual(::Oculus::Interaction::IInteractor* interactor, ::UnityEngine::SkinnedMeshRenderer* skinnedMeshRenderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::InjectAllPinchPointerVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllPinchPointerVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(skinnedMeshRenderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, skinnedMeshRenderer);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.InjectInteractor
void Oculus::Interaction::PinchPointerVisual::InjectInteractor(::Oculus::Interaction::IInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::InjectInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.PinchPointerVisual.InjectSkinnedMeshRenderer
void Oculus::Interaction::PinchPointerVisual::InjectSkinnedMeshRenderer(::UnityEngine::SkinnedMeshRenderer* skinnedMeshRenderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PinchPointerVisual::InjectSkinnedMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSkinnedMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skinnedMeshRenderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skinnedMeshRenderer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PokeInteractable
#include "Oculus/Interaction/PokeInteractable.hpp"
// Including type: Oculus.Interaction.PokeInteractable/MinThresholdsConfig
#include "Oculus/Interaction/PokeInteractable_MinThresholdsConfig.hpp"
// Including type: Oculus.Interaction.PokeInteractable/DragThresholdsConfig
#include "Oculus/Interaction/PokeInteractable_DragThresholdsConfig.hpp"
// Including type: Oculus.Interaction.PokeInteractable/PositionPinningConfig
#include "Oculus/Interaction/PokeInteractable_PositionPinningConfig.hpp"
// Including type: Oculus.Interaction.PokeInteractable/RecoilAssistConfig
#include "Oculus/Interaction/PokeInteractable_RecoilAssistConfig.hpp"
// Including type: Oculus.Interaction.PokeInteractor
#include "Oculus/Interaction/PokeInteractor.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.Surfaces.ISurfacePatch
#include "Oculus/Interaction/Surfaces/ISurfacePatch.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Oculus.Interaction.Surfaces.SurfaceHit
#include "Oculus/Interaction/Surfaces/SurfaceHit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _surfacePatch
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::PokeInteractable::dyn__surfacePatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::dyn__surfacePatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_surfacePatch"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Surfaces.ISurfacePatch <SurfacePatch>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Surfaces::ISurfacePatch*& Oculus::Interaction::PokeInteractable::dyn_$SurfacePatch$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::dyn_$SurfacePatch$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SurfacePatch>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Surfaces::ISurfacePatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _enterHoverNormal
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::dyn__enterHoverNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::dyn__enterHoverNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enterHoverNormal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _enterHoverTangent
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::dyn__enterHoverTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::dyn__enterHoverTangent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enterHoverTangent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _exitHoverNormal
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::dyn__exitHoverNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::dyn__exitHoverNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exitHoverNormal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _exitHoverTangent
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::dyn__exitHoverTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::dyn__exitHoverTangent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exitHoverTangent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cancelSelectNormal
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::dyn__cancelSelectNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::dyn__cancelSelectNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelSelectNormal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cancelSelectTangent
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::dyn__cancelSelectTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::dyn__cancelSelectTangent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelSelectTangent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PokeInteractable/MinThresholdsConfig _minThresholds
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PokeInteractable::MinThresholdsConfig*& Oculus::Interaction::PokeInteractable::dyn__minThresholds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::dyn__minThresholds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minThresholds"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PokeInteractable::MinThresholdsConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PokeInteractable/DragThresholdsConfig _dragThresholds
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PokeInteractable::DragThresholdsConfig*& Oculus::Interaction::PokeInteractable::dyn__dragThresholds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::dyn__dragThresholds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dragThresholds"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PokeInteractable::DragThresholdsConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PokeInteractable/PositionPinningConfig _positionPinning
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PokeInteractable::PositionPinningConfig*& Oculus::Interaction::PokeInteractable::dyn__positionPinning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::dyn__positionPinning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionPinning"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PokeInteractable::PositionPinningConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PokeInteractable/RecoilAssistConfig _recoilAssist
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PokeInteractable::RecoilAssistConfig*& Oculus::Interaction::PokeInteractable::dyn__recoilAssist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::dyn__recoilAssist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recoilAssist"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PokeInteractable::RecoilAssistConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _closeDistanceThreshold
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::dyn__closeDistanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::dyn__closeDistanceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeDistanceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _tiebreakerScore
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::PokeInteractable::dyn__tiebreakerScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::dyn__tiebreakerScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tiebreakerScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.get_SurfacePatch
::Oculus::Interaction::Surfaces::ISurfacePatch* Oculus::Interaction::PokeInteractable::get_SurfacePatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::get_SurfacePatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SurfacePatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::ISurfacePatch*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.set_SurfacePatch
void Oculus::Interaction::PokeInteractable::set_SurfacePatch(::Oculus::Interaction::Surfaces::ISurfacePatch* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::set_SurfacePatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SurfacePatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.get_EnterHoverNormal
float Oculus::Interaction::PokeInteractable::get_EnterHoverNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::get_EnterHoverNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnterHoverNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.set_EnterHoverNormal
void Oculus::Interaction::PokeInteractable::set_EnterHoverNormal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::set_EnterHoverNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnterHoverNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.get_EnterHoverTangent
float Oculus::Interaction::PokeInteractable::get_EnterHoverTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::get_EnterHoverTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnterHoverTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.set_EnterHoverTangent
void Oculus::Interaction::PokeInteractable::set_EnterHoverTangent(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::set_EnterHoverTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnterHoverTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.get_ExitHoverNormal
float Oculus::Interaction::PokeInteractable::get_ExitHoverNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::get_ExitHoverNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExitHoverNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.set_ExitHoverNormal
void Oculus::Interaction::PokeInteractable::set_ExitHoverNormal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::set_ExitHoverNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExitHoverNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.get_ExitHoverTangent
float Oculus::Interaction::PokeInteractable::get_ExitHoverTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::get_ExitHoverTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExitHoverTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.set_ExitHoverTangent
void Oculus::Interaction::PokeInteractable::set_ExitHoverTangent(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::set_ExitHoverTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExitHoverTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.get_CancelSelectNormal
float Oculus::Interaction::PokeInteractable::get_CancelSelectNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::get_CancelSelectNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CancelSelectNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.set_CancelSelectNormal
void Oculus::Interaction::PokeInteractable::set_CancelSelectNormal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::set_CancelSelectNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CancelSelectNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.get_CancelSelectTangent
float Oculus::Interaction::PokeInteractable::get_CancelSelectTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::get_CancelSelectTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CancelSelectTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.set_CancelSelectTangent
void Oculus::Interaction::PokeInteractable::set_CancelSelectTangent(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::set_CancelSelectTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CancelSelectTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.get_CloseDistanceThreshold
float Oculus::Interaction::PokeInteractable::get_CloseDistanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::get_CloseDistanceThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CloseDistanceThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.set_CloseDistanceThreshold
void Oculus::Interaction::PokeInteractable::set_CloseDistanceThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::set_CloseDistanceThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CloseDistanceThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.get_TiebreakerScore
int Oculus::Interaction::PokeInteractable::get_TiebreakerScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::get_TiebreakerScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TiebreakerScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.set_TiebreakerScore
void Oculus::Interaction::PokeInteractable::set_TiebreakerScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::set_TiebreakerScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TiebreakerScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.get_MinThresholds
::Oculus::Interaction::PokeInteractable::MinThresholdsConfig* Oculus::Interaction::PokeInteractable::get_MinThresholds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::get_MinThresholds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinThresholds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::PokeInteractable::MinThresholdsConfig*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.set_MinThresholds
void Oculus::Interaction::PokeInteractable::set_MinThresholds(::Oculus::Interaction::PokeInteractable::MinThresholdsConfig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::set_MinThresholds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinThresholds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.get_DragThresholds
::Oculus::Interaction::PokeInteractable::DragThresholdsConfig* Oculus::Interaction::PokeInteractable::get_DragThresholds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::get_DragThresholds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DragThresholds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::PokeInteractable::DragThresholdsConfig*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.set_DragThresholds
void Oculus::Interaction::PokeInteractable::set_DragThresholds(::Oculus::Interaction::PokeInteractable::DragThresholdsConfig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::set_DragThresholds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DragThresholds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.get_PositionPinning
::Oculus::Interaction::PokeInteractable::PositionPinningConfig* Oculus::Interaction::PokeInteractable::get_PositionPinning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::get_PositionPinning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PositionPinning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::PokeInteractable::PositionPinningConfig*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.set_PositionPinning
void Oculus::Interaction::PokeInteractable::set_PositionPinning(::Oculus::Interaction::PokeInteractable::PositionPinningConfig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::set_PositionPinning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PositionPinning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.get_RecoilAssist
::Oculus::Interaction::PokeInteractable::RecoilAssistConfig* Oculus::Interaction::PokeInteractable::get_RecoilAssist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::get_RecoilAssist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecoilAssist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::PokeInteractable::RecoilAssistConfig*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.set_RecoilAssist
void Oculus::Interaction::PokeInteractable::set_RecoilAssist(::Oculus::Interaction::PokeInteractable::RecoilAssistConfig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::set_RecoilAssist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RecoilAssist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.ClosestSurfacePatchHit
bool Oculus::Interaction::PokeInteractable::ClosestSurfacePatchHit(::UnityEngine::Vector3 point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::ClosestSurfacePatchHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestSurfacePatchHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point, byref(hit));
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.ClosestBackingSurfaceHit
bool Oculus::Interaction::PokeInteractable::ClosestBackingSurfaceHit(::UnityEngine::Vector3 point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::ClosestBackingSurfaceHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestBackingSurfaceHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point, byref(hit));
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.InjectAllPokeInteractable
void Oculus::Interaction::PokeInteractable::InjectAllPokeInteractable(::Oculus::Interaction::Surfaces::ISurfacePatch* surfacePatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::InjectAllPokeInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllPokeInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surfacePatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, surfacePatch);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.InjectSurfacePatch
void Oculus::Interaction::PokeInteractable::InjectSurfacePatch(::Oculus::Interaction::Surfaces::ISurfacePatch* surfacePatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::InjectSurfacePatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSurfacePatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surfacePatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, surfacePatch);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.<Start>b__58_0
void Oculus::Interaction::PokeInteractable::$Start$b__58_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::<Start>b__58_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__58_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.Awake
void Oculus::Interaction::PokeInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractable_2<TInteractor, TInteractable>*), 31)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractable.Start
void Oculus::Interaction::PokeInteractable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractable_2<TInteractor, TInteractable>*), 32)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PokeInteractable/MinThresholdsConfig
#include "Oculus/Interaction/PokeInteractable_MinThresholdsConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Enabled
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PokeInteractable::MinThresholdsConfig::dyn_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::MinThresholdsConfig::dyn_Enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MinNormal
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::MinThresholdsConfig::dyn_MinNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::MinThresholdsConfig::dyn_MinNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinNormal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PokeInteractable/DragThresholdsConfig
#include "Oculus/Interaction/PokeInteractable_DragThresholdsConfig.hpp"
// Including type: Oculus.Interaction.ProgressCurve
#include "Oculus/Interaction/ProgressCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Enabled
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PokeInteractable::DragThresholdsConfig::dyn_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::DragThresholdsConfig::dyn_Enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single DragNormal
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::DragThresholdsConfig::dyn_DragNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::DragThresholdsConfig::dyn_DragNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DragNormal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single DragTangent
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::DragThresholdsConfig::dyn_DragTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::DragThresholdsConfig::dyn_DragTangent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DragTangent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.ProgressCurve DragEaseCurve
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& Oculus::Interaction::PokeInteractable::DragThresholdsConfig::dyn_DragEaseCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::DragThresholdsConfig::dyn_DragEaseCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DragEaseCurve"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ProgressCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PokeInteractable/PositionPinningConfig
#include "Oculus/Interaction/PokeInteractable_PositionPinningConfig.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: Oculus.Interaction.ProgressCurve
#include "Oculus/Interaction/ProgressCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Enabled
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PokeInteractable::PositionPinningConfig::dyn_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::PositionPinningConfig::dyn_Enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MaxPinDistance
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::PositionPinningConfig::dyn_MaxPinDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::PositionPinningConfig::dyn_MaxPinDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxPinDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve PinningEaseCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::PokeInteractable::PositionPinningConfig::dyn_PinningEaseCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::PositionPinningConfig::dyn_PinningEaseCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PinningEaseCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.ProgressCurve ResyncCurve
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& Oculus::Interaction::PokeInteractable::PositionPinningConfig::dyn_ResyncCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::PositionPinningConfig::dyn_ResyncCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ResyncCurve"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ProgressCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PokeInteractable/RecoilAssistConfig
#include "Oculus/Interaction/PokeInteractable_RecoilAssistConfig.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Enabled
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_Enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseDynamicDecay
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_UseDynamicDecay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_UseDynamicDecay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseDynamicDecay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve DynamicDecayCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_DynamicDecayCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_DynamicDecayCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DynamicDecayCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseVelocityExpansion
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_UseVelocityExpansion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_UseVelocityExpansion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseVelocityExpansion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single VelocityExpansionMinSpeed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_VelocityExpansionMinSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_VelocityExpansionMinSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VelocityExpansionMinSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single VelocityExpansionMaxSpeed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_VelocityExpansionMaxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_VelocityExpansionMaxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VelocityExpansionMaxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single VelocityExpansionDistance
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_VelocityExpansionDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_VelocityExpansionDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VelocityExpansionDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single VelocityExpansionDecayRate
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_VelocityExpansionDecayRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_VelocityExpansionDecayRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VelocityExpansionDecayRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ExitDistance
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_ExitDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_ExitDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExitDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ReEnterDistance
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_ReEnterDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractable::RecoilAssistConfig::dyn_ReEnterDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReEnterDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PokeInteractor
#include "Oculus/Interaction/PokeInteractor.hpp"
// Including type: Oculus.Interaction.PokeInteractor/SurfaceHitCache
#include "Oculus/Interaction/PokeInteractor_SurfaceHitCache.hpp"
// Including type: Oculus.Interaction.PokeInteractor/<>c
#include "Oculus/Interaction/PokeInteractor_--c.hpp"
// Including type: Oculus.Interaction.PokeInteractable
#include "Oculus/Interaction/PokeInteractable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.ProgressCurve
#include "Oculus/Interaction/ProgressCurve.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Interaction.Surfaces.SurfaceHit
#include "Oculus/Interaction/Surfaces/SurfaceHit.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _pointTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::PokeInteractor::dyn__pointTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__pointTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractor::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _touchReleaseThreshold
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractor::dyn__touchReleaseThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__touchReleaseThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_touchReleaseThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _equalDistanceThreshold
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractor::dyn__equalDistanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__equalDistanceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_equalDistanceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <ClosestPoint>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PokeInteractor::dyn_$ClosestPoint$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn_$ClosestPoint$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ClosestPoint>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <TouchPoint>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PokeInteractor::dyn_$TouchPoint$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn_$TouchPoint$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TouchPoint>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <TouchNormal>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PokeInteractor::dyn_$TouchNormal$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn_$TouchNormal$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TouchNormal>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <Origin>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PokeInteractor::dyn_$Origin$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn_$Origin$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Origin>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _previousPokeOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PokeInteractor::dyn__previousPokeOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__previousPokeOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousPokeOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PokeInteractable _previousCandidate
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PokeInteractable*& Oculus::Interaction::PokeInteractor::dyn__previousCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__previousCandidate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousCandidate"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PokeInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PokeInteractable _hitInteractable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PokeInteractable*& Oculus::Interaction::PokeInteractor::dyn__hitInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__hitInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hitInteractable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PokeInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PokeInteractable _recoilInteractable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PokeInteractable*& Oculus::Interaction::PokeInteractor::dyn__recoilInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__recoilInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recoilInteractable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PokeInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _previousSurfacePointLocal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PokeInteractor::dyn__previousSurfacePointLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__previousSurfacePointLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousSurfacePointLocal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _firstTouchPointLocal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PokeInteractor::dyn__firstTouchPointLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__firstTouchPointLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstTouchPointLocal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _targetTouchPointLocal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PokeInteractor::dyn__targetTouchPointLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__targetTouchPointLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetTouchPointLocal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _easeTouchPointLocal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PokeInteractor::dyn__easeTouchPointLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__easeTouchPointLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeTouchPointLocal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRecoiled
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PokeInteractor::dyn__isRecoiled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__isRecoiled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRecoiled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDragging
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PokeInteractor::dyn__isDragging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__isDragging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDragging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ProgressCurve _dragEaseCurve
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& Oculus::Interaction::PokeInteractor::dyn__dragEaseCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__dragEaseCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dragEaseCurve"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ProgressCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ProgressCurve _pinningResyncCurve
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& Oculus::Interaction::PokeInteractor::dyn__pinningResyncCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__pinningResyncCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinningResyncCurve"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ProgressCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _dragCompareSurfacePointLocal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PokeInteractor::dyn__dragCompareSurfacePointLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__dragCompareSurfacePointLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dragCompareSurfacePointLocal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxDistanceFromFirstTouchPoint
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractor::dyn__maxDistanceFromFirstTouchPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__maxDistanceFromFirstTouchPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxDistanceFromFirstTouchPoint"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _recoilVelocityExpansion
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractor::dyn__recoilVelocityExpansion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__recoilVelocityExpansion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recoilVelocityExpansion"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _selectMaxDepth
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractor::dyn__selectMaxDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__selectMaxDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectMaxDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _reEnterDepth
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractor::dyn__reEnterDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__reEnterDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reEnterDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastUpdateTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractor::dyn__lastUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__lastUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastUpdateTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Single> _timeProvider
[[deprecated("Use field access instead!")]] ::System::Func_1<float>*& Oculus::Interaction::PokeInteractor::dyn__timeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__timeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeProvider"))->offset;
  return *reinterpret_cast<::System::Func_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isPassedSurface
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PokeInteractor::dyn__isPassedSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__isPassedSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isPassedSurface"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> WhenPassedSurfaceChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& Oculus::Interaction::PokeInteractor::dyn_WhenPassedSurfaceChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn_WhenPassedSurfaceChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenPassedSurfaceChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PokeInteractor/SurfaceHitCache _hitCache
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PokeInteractor::SurfaceHitCache*& Oculus::Interaction::PokeInteractor::dyn__hitCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__hitCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hitCache"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PokeInteractor::SurfaceHitCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Oculus.Interaction.PokeInteractable,UnityEngine.Matrix4x4> _previousSurfaceTransformMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::PokeInteractable*, ::UnityEngine::Matrix4x4>*& Oculus::Interaction::PokeInteractor::dyn__previousSurfaceTransformMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__previousSurfaceTransformMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousSurfaceTransformMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::PokeInteractable*, ::UnityEngine::Matrix4x4>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previousDragCurveProgress
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractor::dyn__previousDragCurveProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__previousDragCurveProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousDragCurveProgress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previousPinningCurveProgress
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractor::dyn__previousPinningCurveProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::dyn__previousPinningCurveProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousPinningCurveProgress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.get_ClosestPoint
::UnityEngine::Vector3 Oculus::Interaction::PokeInteractor::get_ClosestPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::get_ClosestPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClosestPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.set_ClosestPoint
void Oculus::Interaction::PokeInteractor::set_ClosestPoint(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::set_ClosestPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClosestPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.get_TouchPoint
::UnityEngine::Vector3 Oculus::Interaction::PokeInteractor::get_TouchPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::get_TouchPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TouchPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.set_TouchPoint
void Oculus::Interaction::PokeInteractor::set_TouchPoint(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::set_TouchPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TouchPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.get_TouchNormal
::UnityEngine::Vector3 Oculus::Interaction::PokeInteractor::get_TouchNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::get_TouchNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TouchNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.set_TouchNormal
void Oculus::Interaction::PokeInteractor::set_TouchNormal(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::set_TouchNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TouchNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.get_Radius
float Oculus::Interaction::PokeInteractor::get_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::get_Radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.get_Origin
::UnityEngine::Vector3 Oculus::Interaction::PokeInteractor::get_Origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::get_Origin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Origin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.set_Origin
void Oculus::Interaction::PokeInteractor::set_Origin(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::set_Origin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Origin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.get_IsPassedSurface
bool Oculus::Interaction::PokeInteractor::get_IsPassedSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::get_IsPassedSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPassedSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.set_IsPassedSurface
void Oculus::Interaction::PokeInteractor::set_IsPassedSurface(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::set_IsPassedSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPassedSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.GetBackingHit
bool Oculus::Interaction::PokeInteractor::GetBackingHit(::Oculus::Interaction::PokeInteractable* interactable, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::GetBackingHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBackingHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable, byref(hit));
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.GetPatchHit
bool Oculus::Interaction::PokeInteractor::GetPatchHit(::Oculus::Interaction::PokeInteractable* interactable, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::GetPatchHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPatchHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable, byref(hit));
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.InteractableInRange
bool Oculus::Interaction::PokeInteractor::InteractableInRange(::Oculus::Interaction::PokeInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::InteractableInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractableInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.ComputeCandidate
::Oculus::Interaction::PokeInteractable* Oculus::Interaction::PokeInteractor::ComputeCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::ComputeCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PokeInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::PokeInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.ComputeCandidateTiebreaker
int Oculus::Interaction::PokeInteractor::ComputeCandidateTiebreaker(::Oculus::Interaction::PokeInteractable* a, ::Oculus::Interaction::PokeInteractable* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::ComputeCandidateTiebreaker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PokeInteractor*), 65));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.ComputeSelectCandidate
::Oculus::Interaction::PokeInteractable* Oculus::Interaction::PokeInteractor::ComputeSelectCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::ComputeSelectCandidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSelectCandidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::PokeInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.PassesEnterHoverDistanceCheck
bool Oculus::Interaction::PokeInteractor::PassesEnterHoverDistanceCheck(::UnityEngine::Vector3 position, ::Oculus::Interaction::PokeInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::PassesEnterHoverDistanceCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PassesEnterHoverDistanceCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position, interactable);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.MinPokeDepth
float Oculus::Interaction::PokeInteractor::MinPokeDepth(::Oculus::Interaction::PokeInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::MinPokeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MinPokeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.ComputeHoverCandidate
::Oculus::Interaction::PokeInteractable* Oculus::Interaction::PokeInteractor::ComputeHoverCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::ComputeHoverCandidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeHoverCandidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::PokeInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.InteractableSelected
void Oculus::Interaction::PokeInteractor::InteractableSelected(::Oculus::Interaction::PokeInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::InteractableSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PokeInteractor*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.ComputeDistanceAbove
float Oculus::Interaction::PokeInteractor::ComputeDistanceAbove(::Oculus::Interaction::PokeInteractable* interactable, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::ComputeDistanceAbove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeDistanceAbove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactable, point);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.ComputeDepth
float Oculus::Interaction::PokeInteractor::ComputeDepth(::Oculus::Interaction::PokeInteractable* interactable, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::ComputeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactable, point);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.ComputePokeDepth
float Oculus::Interaction::PokeInteractor::ComputePokeDepth(::Oculus::Interaction::PokeInteractable* interactable, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::ComputePokeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputePokeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactable, point);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.ComputeDistanceFrom
float Oculus::Interaction::PokeInteractor::ComputeDistanceFrom(::Oculus::Interaction::PokeInteractable* interactable, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::ComputeDistanceFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeDistanceFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactable, point);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.ComputeTangentDistance
float Oculus::Interaction::PokeInteractor::ComputeTangentDistance(::Oculus::Interaction::PokeInteractable* interactable, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::ComputeTangentDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeTangentDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactable, point);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.SurfaceUpdate
bool Oculus::Interaction::PokeInteractor::SurfaceUpdate(::Oculus::Interaction::PokeInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::SurfaceUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PokeInteractor*), 75));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.ShouldCancel
bool Oculus::Interaction::PokeInteractor::ShouldCancel(::Oculus::Interaction::PokeInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::ShouldCancel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PokeInteractor*), 76));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.ShouldRecoil
bool Oculus::Interaction::PokeInteractor::ShouldRecoil(::Oculus::Interaction::PokeInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::ShouldRecoil");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PokeInteractor*), 77));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.InjectAllPokeInteractor
void Oculus::Interaction::PokeInteractor::InjectAllPokeInteractor(::UnityEngine::Transform* pointTransform, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::InjectAllPokeInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllPokeInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointTransform), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointTransform, radius);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.InjectPointTransform
void Oculus::Interaction::PokeInteractor::InjectPointTransform(::UnityEngine::Transform* pointTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::InjectPointTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPointTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointTransform);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.InjectRadius
void Oculus::Interaction::PokeInteractor::InjectRadius(float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::InjectRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, radius);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.InjectOptionalTouchReleaseThreshold
void Oculus::Interaction::PokeInteractor::InjectOptionalTouchReleaseThreshold(float touchReleaseThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::InjectOptionalTouchReleaseThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalTouchReleaseThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchReleaseThreshold)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchReleaseThreshold);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.InjectOptionalEqualDistanceThreshold
void Oculus::Interaction::PokeInteractor::InjectOptionalEqualDistanceThreshold(float equalDistanceThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::InjectOptionalEqualDistanceThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalEqualDistanceThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(equalDistanceThreshold)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, equalDistanceThreshold);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.InjectOptionalTimeProvider
void Oculus::Interaction::PokeInteractor::InjectOptionalTimeProvider(::System::Func_1<float>* timeProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::InjectOptionalTimeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalTimeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeProvider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeProvider);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.Awake
void Oculus::Interaction::PokeInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 50)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.Start
void Oculus::Interaction::PokeInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 51)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.DoPreprocess
void Oculus::Interaction::PokeInteractor::DoPreprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::DoPreprocess");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 36)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.DoPostprocess
void Oculus::Interaction::PokeInteractor::DoPostprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::DoPostprocess");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractor_2<TInteractor, TInteractable>*), 40)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.ComputeShouldSelect
bool Oculus::Interaction::PokeInteractor::ComputeShouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::ComputeShouldSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 43)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.ComputeShouldUnselect
bool Oculus::Interaction::PokeInteractor::ComputeShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::ComputeShouldUnselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 44)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.DoHoverUpdate
void Oculus::Interaction::PokeInteractor::DoHoverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::DoHoverUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 38)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.HandleDisabled
void Oculus::Interaction::PokeInteractor::HandleDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::HandleDisabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 68)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.ComputePointerPose
::UnityEngine::Pose Oculus::Interaction::PokeInteractor::ComputePointerPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::ComputePointerPose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractor_2<TInteractor, TInteractable>*), 74)));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor.DoSelectUpdate
void Oculus::Interaction::PokeInteractor::DoSelectUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::DoSelectUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 39)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PokeInteractor/SurfaceHitCache
#include "Oculus/Interaction/PokeInteractor_SurfaceHitCache.hpp"
// Including type: Oculus.Interaction.Surfaces.SurfaceHit
#include "Oculus/Interaction/Surfaces/SurfaceHit.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Interaction.PokeInteractable
#include "Oculus/Interaction/PokeInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Oculus.Interaction.PokeInteractable,Oculus.Interaction.PokeInteractor/SurfaceHitCache/HitInfo> _surfacePatchHitCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::PokeInteractable*, ::Oculus::Interaction::PokeInteractor::SurfaceHitCache::HitInfo>*& Oculus::Interaction::PokeInteractor::SurfaceHitCache::dyn__surfacePatchHitCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::SurfaceHitCache::dyn__surfacePatchHitCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_surfacePatchHitCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::PokeInteractable*, ::Oculus::Interaction::PokeInteractor::SurfaceHitCache::HitInfo>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Oculus.Interaction.PokeInteractable,Oculus.Interaction.PokeInteractor/SurfaceHitCache/HitInfo> _backingSurfaceHitCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::PokeInteractable*, ::Oculus::Interaction::PokeInteractor::SurfaceHitCache::HitInfo>*& Oculus::Interaction::PokeInteractor::SurfaceHitCache::dyn__backingSurfaceHitCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::SurfaceHitCache::dyn__backingSurfaceHitCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backingSurfaceHitCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::PokeInteractable*, ::Oculus::Interaction::PokeInteractor::SurfaceHitCache::HitInfo>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _origin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PokeInteractor::SurfaceHitCache::dyn__origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::SurfaceHitCache::dyn__origin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_origin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor/SurfaceHitCache.GetPatchHit
bool Oculus::Interaction::PokeInteractor::SurfaceHitCache::GetPatchHit(::Oculus::Interaction::PokeInteractable* interactable, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::SurfaceHitCache::GetPatchHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPatchHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable, byref(hit));
}
// Autogenerated method: Oculus.Interaction.PokeInteractor/SurfaceHitCache.GetBackingHit
bool Oculus::Interaction::PokeInteractor::SurfaceHitCache::GetBackingHit(::Oculus::Interaction::PokeInteractable* interactable, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::SurfaceHitCache::GetBackingHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBackingHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable, byref(hit));
}
// Autogenerated method: Oculus.Interaction.PokeInteractor/SurfaceHitCache.Reset
void Oculus::Interaction::PokeInteractor::SurfaceHitCache::Reset(::UnityEngine::Vector3 origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::SurfaceHitCache::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, origin);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PokeInteractor/SurfaceHitCache/HitInfo
#include "Oculus/Interaction/PokeInteractor_SurfaceHitCache.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsValid
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PokeInteractor::SurfaceHitCache::HitInfo::dyn_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::SurfaceHitCache::HitInfo::dyn_IsValid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Interaction.Surfaces.SurfaceHit Hit
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Surfaces::SurfaceHit& Oculus::Interaction::PokeInteractor::SurfaceHitCache::HitInfo::dyn_Hit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::SurfaceHitCache::HitInfo::dyn_Hit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hit"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Surfaces::SurfaceHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor/SurfaceHitCache/HitInfo..ctor
// ABORTED elsewhere.  Oculus::Interaction::PokeInteractor::SurfaceHitCache::HitInfo::HitInfo(bool isValid, ::Oculus::Interaction::Surfaces::SurfaceHit hit)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PokeInteractor/<>c
#include "Oculus/Interaction/PokeInteractor_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.PokeInteractor/<>c <>9
::Oculus::Interaction::PokeInteractor::$$c* Oculus::Interaction::PokeInteractor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::PokeInteractor::$$c*>("Oculus.Interaction", "PokeInteractor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.PokeInteractor/<>c <>9
void Oculus::Interaction::PokeInteractor::$$c::_set_$$9(::Oculus::Interaction::PokeInteractor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "PokeInteractor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Single> <>9__51_0
::System::Func_1<float>* Oculus::Interaction::PokeInteractor::$$c::_get_$$9__51_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::$$c::_get_$$9__51_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<float>*>("Oculus.Interaction", "PokeInteractor/<>c", "<>9__51_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Single> <>9__51_0
void Oculus::Interaction::PokeInteractor::$$c::_set_$$9__51_0(::System::Func_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::$$c::_set_$$9__51_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "PokeInteractor/<>c", "<>9__51_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Boolean> <>9__85_0
::System::Action_1<bool>* Oculus::Interaction::PokeInteractor::$$c::_get_$$9__85_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::$$c::_get_$$9__85_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<bool>*>("Oculus.Interaction", "PokeInteractor/<>c", "<>9__85_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Boolean> <>9__85_0
void Oculus::Interaction::PokeInteractor::$$c::_set_$$9__85_0(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::$$c::_set_$$9__85_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "PokeInteractor/<>c", "<>9__85_0", value)));
}
// Autogenerated method: Oculus.Interaction.PokeInteractor/<>c..cctor
void Oculus::Interaction::PokeInteractor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PokeInteractor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor/<>c.<Awake>b__51_0
float Oculus::Interaction::PokeInteractor::$$c::$Awake$b__51_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::$$c::<Awake>b__51_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__51_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractor/<>c.<.ctor>b__85_0
void Oculus::Interaction::PokeInteractor::$$c::$_ctor$b__85_0(bool $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractor::$$c::<.ctor>b__85_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__85_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandPokeLimiterVisual
#include "Oculus/Interaction/HandPokeLimiterVisual.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.PokeInteractor
#include "Oculus/Interaction/PokeInteractor.hpp"
// Including type: Oculus.Interaction.Input.SyntheticHand
#include "Oculus/Interaction/Input/SyntheticHand.hpp"
// Including type: Oculus.Interaction.InteractorStateChangeArgs
#include "Oculus/Interaction/InteractorStateChangeArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandPokeLimiterVisual::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand Hand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandPokeLimiterVisual::dyn_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::dyn_Hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PokeInteractor _pokeInteractor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PokeInteractor*& Oculus::Interaction::HandPokeLimiterVisual::dyn__pokeInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::dyn__pokeInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pokeInteractor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PokeInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.SyntheticHand _syntheticHand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::SyntheticHand*& Oculus::Interaction::HandPokeLimiterVisual::dyn__syntheticHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::dyn__syntheticHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syntheticHand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::SyntheticHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isTouching
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandPokeLimiterVisual::dyn__isTouching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::dyn__isTouching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isTouching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandPokeLimiterVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandPokeLimiterVisual.Awake
void Oculus::Interaction::HandPokeLimiterVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPokeLimiterVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPokeLimiterVisual.Start
void Oculus::Interaction::HandPokeLimiterVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPokeLimiterVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPokeLimiterVisual.OnEnable
void Oculus::Interaction::HandPokeLimiterVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPokeLimiterVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPokeLimiterVisual.OnDisable
void Oculus::Interaction::HandPokeLimiterVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPokeLimiterVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPokeLimiterVisual.HandlePassedSurfaceChanged
void Oculus::Interaction::HandPokeLimiterVisual::HandlePassedSurfaceChanged(bool passed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::HandlePassedSurfaceChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePassedSurfaceChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(passed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, passed);
}
// Autogenerated method: Oculus.Interaction.HandPokeLimiterVisual.HandleStateChanged
void Oculus::Interaction::HandPokeLimiterVisual::HandleStateChanged(::Oculus::Interaction::InteractorStateChangeArgs args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::HandleStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.HandPokeLimiterVisual.CheckPassedSurface
void Oculus::Interaction::HandPokeLimiterVisual::CheckPassedSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::CheckPassedSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckPassedSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPokeLimiterVisual.LateUpdate
void Oculus::Interaction::HandPokeLimiterVisual::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPokeLimiterVisual*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPokeLimiterVisual.LockWrist
void Oculus::Interaction::HandPokeLimiterVisual::LockWrist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::LockWrist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LockWrist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPokeLimiterVisual.UnlockWrist
void Oculus::Interaction::HandPokeLimiterVisual::UnlockWrist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::UnlockWrist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlockWrist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPokeLimiterVisual.UpdateWrist
void Oculus::Interaction::HandPokeLimiterVisual::UpdateWrist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::UpdateWrist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateWrist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPokeLimiterVisual.InjectAllHandPokeLimiterVisual
void Oculus::Interaction::HandPokeLimiterVisual::InjectAllHandPokeLimiterVisual(::Oculus::Interaction::Input::IHand* hand, ::Oculus::Interaction::PokeInteractor* pokeInteractor, ::Oculus::Interaction::Input::SyntheticHand* syntheticHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::InjectAllHandPokeLimiterVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandPokeLimiterVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(pokeInteractor), ::il2cpp_utils::ExtractType(syntheticHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, pokeInteractor, syntheticHand);
}
// Autogenerated method: Oculus.Interaction.HandPokeLimiterVisual.InjectHand
void Oculus::Interaction::HandPokeLimiterVisual::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandPokeLimiterVisual.InjectPokeInteractor
void Oculus::Interaction::HandPokeLimiterVisual::InjectPokeInteractor(::Oculus::Interaction::PokeInteractor* pokeInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::InjectPokeInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPokeInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pokeInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pokeInteractor);
}
// Autogenerated method: Oculus.Interaction.HandPokeLimiterVisual.InjectSyntheticHand
void Oculus::Interaction::HandPokeLimiterVisual::InjectSyntheticHand(::Oculus::Interaction::Input::SyntheticHand* syntheticHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeLimiterVisual::InjectSyntheticHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSyntheticHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syntheticHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, syntheticHand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PokeInteractableVisual
#include "Oculus/Interaction/PokeInteractableVisual.hpp"
// Including type: Oculus.Interaction.PokeInteractable
#include "Oculus/Interaction/PokeInteractable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Oculus.Interaction.PokeInteractor
#include "Oculus/Interaction/PokeInteractor.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PokeInteractable _pokeInteractable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PokeInteractable*& Oculus::Interaction::PokeInteractableVisual::dyn__pokeInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::dyn__pokeInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pokeInteractable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PokeInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _buttonBaseTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::PokeInteractableVisual::dyn__buttonBaseTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::dyn__buttonBaseTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBaseTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxOffsetAlongNormal
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PokeInteractableVisual::dyn__maxOffsetAlongNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::dyn__maxOffsetAlongNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxOffsetAlongNormal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _planarOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Oculus::Interaction::PokeInteractableVisual::dyn__planarOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::dyn__planarOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_planarOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<Oculus.Interaction.PokeInteractor> _pokeInteractors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Oculus::Interaction::PokeInteractor*>*& Oculus::Interaction::PokeInteractableVisual::dyn__pokeInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::dyn__pokeInteractors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pokeInteractors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Oculus::Interaction::PokeInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PokeInteractor _postProcessInteractor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PokeInteractor*& Oculus::Interaction::PokeInteractableVisual::dyn__postProcessInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::dyn__postProcessInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_postProcessInteractor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PokeInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PokeInteractableVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PokeInteractableVisual.get__postProcessHandler
::System::Action* Oculus::Interaction::PokeInteractableVisual::get__postProcessHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::get__postProcessHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__postProcessHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractableVisual.Start
void Oculus::Interaction::PokeInteractableVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PokeInteractableVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractableVisual.OnEnable
void Oculus::Interaction::PokeInteractableVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PokeInteractableVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractableVisual.OnDisable
void Oculus::Interaction::PokeInteractableVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PokeInteractableVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractableVisual.HandleInteractorAdded
void Oculus::Interaction::PokeInteractableVisual::HandleInteractorAdded(::Oculus::Interaction::PokeInteractor* pokeInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::HandleInteractorAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInteractorAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pokeInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pokeInteractor);
}
// Autogenerated method: Oculus.Interaction.PokeInteractableVisual.HandleInteractorRemoved
void Oculus::Interaction::PokeInteractableVisual::HandleInteractorRemoved(::Oculus::Interaction::PokeInteractor* pokeInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::HandleInteractorRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInteractorRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pokeInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pokeInteractor);
}
// Autogenerated method: Oculus.Interaction.PokeInteractableVisual.UpdateComponentPosition
void Oculus::Interaction::PokeInteractableVisual::UpdateComponentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::UpdateComponentPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateComponentPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PokeInteractableVisual.InjectAllPokeInteractableVisual
void Oculus::Interaction::PokeInteractableVisual::InjectAllPokeInteractableVisual(::Oculus::Interaction::PokeInteractable* pokeInteractable, ::UnityEngine::Transform* buttonBaseTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::InjectAllPokeInteractableVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllPokeInteractableVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pokeInteractable), ::il2cpp_utils::ExtractType(buttonBaseTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pokeInteractable, buttonBaseTransform);
}
// Autogenerated method: Oculus.Interaction.PokeInteractableVisual.InjectPokeInteractable
void Oculus::Interaction::PokeInteractableVisual::InjectPokeInteractable(::Oculus::Interaction::PokeInteractable* pokeInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::InjectPokeInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPokeInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pokeInteractable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pokeInteractable);
}
// Autogenerated method: Oculus.Interaction.PokeInteractableVisual.InjectButtonBaseTransform
void Oculus::Interaction::PokeInteractableVisual::InjectButtonBaseTransform(::UnityEngine::Transform* buttonBaseTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PokeInteractableVisual::InjectButtonBaseTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectButtonBaseTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonBaseTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonBaseTransform);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.RayInteractable
#include "Oculus/Interaction/RayInteractable.hpp"
// Including type: Oculus.Interaction.RayInteractor
#include "Oculus/Interaction/RayInteractor.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.Surfaces.ISurface
#include "Oculus/Interaction/Surfaces/ISurface.hpp"
// Including type: Oculus.Interaction.IMovementProvider
#include "Oculus/Interaction/IMovementProvider.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: Oculus.Interaction.Surfaces.SurfaceHit
#include "Oculus/Interaction/Surfaces/SurfaceHit.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _surface
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::RayInteractable::dyn__surface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::dyn__surface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_surface"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Surfaces.ISurface <Surface>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Surfaces::ISurface*& Oculus::Interaction::RayInteractable::dyn_$Surface$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::dyn_$Surface$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Surface>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Surfaces::ISurface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _selectSurface
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::RayInteractable::dyn__selectSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::dyn__selectSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectSurface"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Surfaces.ISurface SelectSurface
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Surfaces::ISurface*& Oculus::Interaction::RayInteractable::dyn_SelectSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::dyn_SelectSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SelectSurface"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Surfaces::ISurface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _movementProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::RayInteractable::dyn__movementProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::dyn__movementProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IMovementProvider <MovementProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovementProvider*& Oculus::Interaction::RayInteractable::dyn_$MovementProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::dyn_$MovementProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MovementProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IMovementProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _tiebreakerScore
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::RayInteractable::dyn__tiebreakerScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::dyn__tiebreakerScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tiebreakerScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.RayInteractable.get_Surface
::Oculus::Interaction::Surfaces::ISurface* Oculus::Interaction::RayInteractable::get_Surface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::get_Surface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Surface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::ISurface*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractable.set_Surface
void Oculus::Interaction::RayInteractable::set_Surface(::Oculus::Interaction::Surfaces::ISurface* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::set_Surface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Surface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractable.get_MovementProvider
::Oculus::Interaction::IMovementProvider* Oculus::Interaction::RayInteractable::get_MovementProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::get_MovementProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MovementProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovementProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractable.set_MovementProvider
void Oculus::Interaction::RayInteractable::set_MovementProvider(::Oculus::Interaction::IMovementProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::set_MovementProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MovementProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractable.get_TiebreakerScore
int Oculus::Interaction::RayInteractable::get_TiebreakerScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::get_TiebreakerScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TiebreakerScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractable.set_TiebreakerScore
void Oculus::Interaction::RayInteractable::set_TiebreakerScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::set_TiebreakerScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TiebreakerScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractable.Raycast
bool Oculus::Interaction::RayInteractable::Raycast(::UnityEngine::Ray ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, ByRef<float> maxDistance, bool selectSurface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(selectSurface)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ray, byref(hit), byref(maxDistance), selectSurface);
}
// Autogenerated method: Oculus.Interaction.RayInteractable.GenerateMovement
::Oculus::Interaction::IMovement* Oculus::Interaction::RayInteractable::GenerateMovement(ByRef<::UnityEngine::Pose> to, ByRef<::UnityEngine::Pose> source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::GenerateMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovement*, false>(this, ___internal__method, byref(to), byref(source));
}
// Autogenerated method: Oculus.Interaction.RayInteractable.InjectAllRayInteractable
void Oculus::Interaction::RayInteractable::InjectAllRayInteractable(::Oculus::Interaction::Surfaces::ISurface* surface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::InjectAllRayInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllRayInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surface)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, surface);
}
// Autogenerated method: Oculus.Interaction.RayInteractable.InjectSurface
void Oculus::Interaction::RayInteractable::InjectSurface(::Oculus::Interaction::Surfaces::ISurface* surface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::InjectSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surface)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, surface);
}
// Autogenerated method: Oculus.Interaction.RayInteractable.InjectOptionalSelectSurface
void Oculus::Interaction::RayInteractable::InjectOptionalSelectSurface(::Oculus::Interaction::Surfaces::ISurface* surface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::InjectOptionalSelectSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalSelectSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surface)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, surface);
}
// Autogenerated method: Oculus.Interaction.RayInteractable.InjectOptionalMovementProvider
void Oculus::Interaction::RayInteractable::InjectOptionalMovementProvider(::Oculus::Interaction::IMovementProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::InjectOptionalMovementProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalMovementProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, provider);
}
// Autogenerated method: Oculus.Interaction.RayInteractable.<Start>b__17_0
void Oculus::Interaction::RayInteractable::$Start$b__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::<Start>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractable.Awake
void Oculus::Interaction::RayInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractable_2<TInteractor, TInteractable>*), 31)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractable.Start
void Oculus::Interaction::RayInteractable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractable::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractable_2<TInteractor, TInteractable>*), 32)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.RayInteractor
#include "Oculus/Interaction/RayInteractor.hpp"
// Including type: Oculus.Interaction.RayInteractor/RayCandidateProperties
#include "Oculus/Interaction/RayInteractor_RayCandidateProperties.hpp"
// Including type: Oculus.Interaction.RayInteractable
#include "Oculus/Interaction/RayInteractable.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
// Including type: Oculus.Interaction.ISelector
#include "Oculus/Interaction/ISelector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _selector
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::RayInteractor::dyn__selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::dyn__selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selector"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _rayOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::RayInteractor::dyn__rayOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::dyn__rayOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rayOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxRayLength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::RayInteractor::dyn__maxRayLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::dyn__maxRayLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxRayLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _equalDistanceThreshold
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::RayInteractor::dyn__equalDistanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::dyn__equalDistanceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_equalDistanceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.RayInteractor/RayCandidateProperties _rayCandidateProperties
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::RayInteractor::RayCandidateProperties*& Oculus::Interaction::RayInteractor::dyn__rayCandidateProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::dyn__rayCandidateProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rayCandidateProperties"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::RayInteractor::RayCandidateProperties**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IMovement _movement
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovement*& Oculus::Interaction::RayInteractor::dyn__movement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::dyn__movement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movement"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Surfaces.SurfaceHit _movedHit
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Surfaces::SurfaceHit& Oculus::Interaction::RayInteractor::dyn__movedHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::dyn__movedHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movedHit"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Surfaces::SurfaceHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _movementHitDelta
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::RayInteractor::dyn__movementHitDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::dyn__movementHitDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementHitDelta"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <Origin>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::RayInteractor::dyn_$Origin$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::dyn_$Origin$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Origin>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion <Rotation>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Oculus::Interaction::RayInteractor::dyn_$Rotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::dyn_$Rotation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Rotation>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <Forward>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::RayInteractor::dyn_$Forward$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::dyn_$Forward$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Forward>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <End>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::RayInteractor::dyn_$End$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::dyn_$End$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<End>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Oculus.Interaction.Surfaces.SurfaceHit> <CollisionInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Oculus::Interaction::Surfaces::SurfaceHit>& Oculus::Interaction::RayInteractor::dyn_$CollisionInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::dyn_$CollisionInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CollisionInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Oculus::Interaction::Surfaces::SurfaceHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Ray <Ray>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Ray& Oculus::Interaction::RayInteractor::dyn_$Ray$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::dyn_$Ray$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Ray>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Ray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.get_Origin
::UnityEngine::Vector3 Oculus::Interaction::RayInteractor::get_Origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::get_Origin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Origin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.set_Origin
void Oculus::Interaction::RayInteractor::set_Origin(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::set_Origin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Origin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.get_Rotation
::UnityEngine::Quaternion Oculus::Interaction::RayInteractor::get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::get_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.set_Rotation
void Oculus::Interaction::RayInteractor::set_Rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::set_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.get_Forward
::UnityEngine::Vector3 Oculus::Interaction::RayInteractor::get_Forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::get_Forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.set_Forward
void Oculus::Interaction::RayInteractor::set_Forward(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::set_Forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.get_End
::UnityEngine::Vector3 Oculus::Interaction::RayInteractor::get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::get_End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.set_End
void Oculus::Interaction::RayInteractor::set_End(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::set_End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.get_MaxRayLength
float Oculus::Interaction::RayInteractor::get_MaxRayLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::get_MaxRayLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxRayLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.set_MaxRayLength
void Oculus::Interaction::RayInteractor::set_MaxRayLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::set_MaxRayLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxRayLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.get_CollisionInfo
::System::Nullable_1<::Oculus::Interaction::Surfaces::SurfaceHit> Oculus::Interaction::RayInteractor::get_CollisionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::get_CollisionInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CollisionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Oculus::Interaction::Surfaces::SurfaceHit>, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.set_CollisionInfo
void Oculus::Interaction::RayInteractor::set_CollisionInfo(::System::Nullable_1<::Oculus::Interaction::Surfaces::SurfaceHit> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::set_CollisionInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CollisionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.get_Ray
::UnityEngine::Ray Oculus::Interaction::RayInteractor::get_Ray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::get_Ray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Ray, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.set_Ray
void Oculus::Interaction::RayInteractor::set_Ray(::UnityEngine::Ray value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::set_Ray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Ray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.ComputeCandidate
::Oculus::Interaction::RayInteractable* Oculus::Interaction::RayInteractor::ComputeCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::ComputeCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RayInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::RayInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.ComputeCandidateTiebreaker
int Oculus::Interaction::RayInteractor::ComputeCandidateTiebreaker(::Oculus::Interaction::RayInteractable* a, ::Oculus::Interaction::RayInteractable* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::ComputeCandidateTiebreaker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RayInteractor*), 65));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.InteractableSelected
void Oculus::Interaction::RayInteractor::InteractableSelected(::Oculus::Interaction::RayInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::InteractableSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RayInteractor*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.InteractableUnselected
void Oculus::Interaction::RayInteractor::InteractableUnselected(::Oculus::Interaction::RayInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::InteractableUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RayInteractor*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.InjectAllRayInteractor
void Oculus::Interaction::RayInteractor::InjectAllRayInteractor(::Oculus::Interaction::ISelector* selector, ::UnityEngine::Transform* rayOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::InjectAllRayInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllRayInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector), ::il2cpp_utils::ExtractType(rayOrigin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selector, rayOrigin);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.InjectSelector
void Oculus::Interaction::RayInteractor::InjectSelector(::Oculus::Interaction::ISelector* selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::InjectSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selector);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.InjectRayOrigin
void Oculus::Interaction::RayInteractor::InjectRayOrigin(::UnityEngine::Transform* rayOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::InjectRayOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRayOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayOrigin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rayOrigin);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.InjectOptionalEqualDistanceThreshold
void Oculus::Interaction::RayInteractor::InjectOptionalEqualDistanceThreshold(float equalDistanceThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::InjectOptionalEqualDistanceThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalEqualDistanceThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(equalDistanceThreshold)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, equalDistanceThreshold);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.Awake
void Oculus::Interaction::RayInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 50)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.Start
void Oculus::Interaction::RayInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 51)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.DoPreprocess
void Oculus::Interaction::RayInteractor::DoPreprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::DoPreprocess");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 36)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.get_CandidateProperties
::Il2CppObject* Oculus::Interaction::RayInteractor::get_CandidateProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::get_CandidateProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 45)));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.DoSelectUpdate
void Oculus::Interaction::RayInteractor::DoSelectUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::DoSelectUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 39)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractor.ComputePointerPose
::UnityEngine::Pose Oculus::Interaction::RayInteractor::ComputePointerPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::ComputePointerPose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractor_2<TInteractor, TInteractable>*), 74)));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.RayInteractor/RayCandidateProperties
#include "Oculus/Interaction/RayInteractor_RayCandidateProperties.hpp"
// Including type: Oculus.Interaction.RayInteractable
#include "Oculus/Interaction/RayInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.RayInteractable <ClosestInteractable>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::RayInteractable*& Oculus::Interaction::RayInteractor::RayCandidateProperties::dyn_$ClosestInteractable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::RayCandidateProperties::dyn_$ClosestInteractable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ClosestInteractable>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::RayInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 <CandidatePosition>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::RayInteractor::RayCandidateProperties::dyn_$CandidatePosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::RayCandidateProperties::dyn_$CandidatePosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CandidatePosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.RayInteractor/RayCandidateProperties.get_ClosestInteractable
::Oculus::Interaction::RayInteractable* Oculus::Interaction::RayInteractor::RayCandidateProperties::get_ClosestInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::RayCandidateProperties::get_ClosestInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClosestInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::RayInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractor/RayCandidateProperties.get_CandidatePosition
::UnityEngine::Vector3 Oculus::Interaction::RayInteractor::RayCandidateProperties::get_CandidatePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractor::RayCandidateProperties::get_CandidatePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RayInteractor::RayCandidateProperties*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ControllerRayVisual
#include "Oculus/Interaction/ControllerRayVisual.hpp"
// Including type: Oculus.Interaction.RayInteractor
#include "Oculus/Interaction/RayInteractor.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: Oculus.Interaction.MaterialPropertyBlockEditor
#include "Oculus/Interaction/MaterialPropertyBlockEditor.hpp"
// Including type: Oculus.Interaction.InteractorStateChangeArgs
#include "Oculus/Interaction/InteractorStateChangeArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.RayInteractor _rayInteractor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::RayInteractor*& Oculus::Interaction::ControllerRayVisual::dyn__rayInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::dyn__rayInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rayInteractor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::RayInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::ControllerRayVisual::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MaterialPropertyBlockEditor _materialPropertyBlockEditor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MaterialPropertyBlockEditor*& Oculus::Interaction::ControllerRayVisual::dyn__materialPropertyBlockEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::dyn__materialPropertyBlockEditor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockEditor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MaterialPropertyBlockEditor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxRayVisualLength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ControllerRayVisual::dyn__maxRayVisualLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::dyn__maxRayVisualLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxRayVisualLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _hoverColor0
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::ControllerRayVisual::dyn__hoverColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::dyn__hoverColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverColor0"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _hoverColor1
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::ControllerRayVisual::dyn__hoverColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::dyn__hoverColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverColor1"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectColor0
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::ControllerRayVisual::dyn__selectColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::dyn__selectColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectColor0"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectColor1
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::ControllerRayVisual::dyn__selectColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::dyn__selectColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectColor1"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hideWhenNoInteractable
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ControllerRayVisual::dyn__hideWhenNoInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::dyn__hideWhenNoInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hideWhenNoInteractable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _shaderColor0
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::ControllerRayVisual::dyn__shaderColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::dyn__shaderColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shaderColor0"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _shaderColor1
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::ControllerRayVisual::dyn__shaderColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::dyn__shaderColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shaderColor1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ControllerRayVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.get_MaxRayVisualLength
float Oculus::Interaction::ControllerRayVisual::get_MaxRayVisualLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::get_MaxRayVisualLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxRayVisualLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.set_MaxRayVisualLength
void Oculus::Interaction::ControllerRayVisual::set_MaxRayVisualLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::set_MaxRayVisualLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxRayVisualLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.get_HoverColor0
::UnityEngine::Color Oculus::Interaction::ControllerRayVisual::get_HoverColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::get_HoverColor0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HoverColor0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.set_HoverColor0
void Oculus::Interaction::ControllerRayVisual::set_HoverColor0(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::set_HoverColor0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HoverColor0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.get_HoverColor1
::UnityEngine::Color Oculus::Interaction::ControllerRayVisual::get_HoverColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::get_HoverColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HoverColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.set_HoverColor1
void Oculus::Interaction::ControllerRayVisual::set_HoverColor1(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::set_HoverColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HoverColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.get_SelectColor0
::UnityEngine::Color Oculus::Interaction::ControllerRayVisual::get_SelectColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::get_SelectColor0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectColor0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.set_SelectColor0
void Oculus::Interaction::ControllerRayVisual::set_SelectColor0(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::set_SelectColor0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SelectColor0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.get_SelectColor1
::UnityEngine::Color Oculus::Interaction::ControllerRayVisual::get_SelectColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::get_SelectColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.set_SelectColor1
void Oculus::Interaction::ControllerRayVisual::set_SelectColor1(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::set_SelectColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SelectColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.Start
void Oculus::Interaction::ControllerRayVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerRayVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.OnEnable
void Oculus::Interaction::ControllerRayVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerRayVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.OnDisable
void Oculus::Interaction::ControllerRayVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerRayVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.HandleStateChanged
void Oculus::Interaction::ControllerRayVisual::HandleStateChanged(::Oculus::Interaction::InteractorStateChangeArgs args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::HandleStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.UpdateVisual
void Oculus::Interaction::ControllerRayVisual::UpdateVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::UpdateVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.InjectAllControllerRayVisual
void Oculus::Interaction::ControllerRayVisual::InjectAllControllerRayVisual(::Oculus::Interaction::RayInteractor* rayInteractor, ::UnityEngine::Renderer* renderer, ::Oculus::Interaction::MaterialPropertyBlockEditor* materialPropertyBlockEditor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::InjectAllControllerRayVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllControllerRayVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayInteractor), ::il2cpp_utils::ExtractType(renderer), ::il2cpp_utils::ExtractType(materialPropertyBlockEditor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rayInteractor, renderer, materialPropertyBlockEditor);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.InjectRayInteractor
void Oculus::Interaction::ControllerRayVisual::InjectRayInteractor(::Oculus::Interaction::RayInteractor* rayInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::InjectRayInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRayInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rayInteractor);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.InjectRenderer
void Oculus::Interaction::ControllerRayVisual::InjectRenderer(::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::InjectRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderer);
}
// Autogenerated method: Oculus.Interaction.ControllerRayVisual.InjectMaterialPropertyBlockEditor
void Oculus::Interaction::ControllerRayVisual::InjectMaterialPropertyBlockEditor(::Oculus::Interaction::MaterialPropertyBlockEditor* materialPropertyBlockEditor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerRayVisual::InjectMaterialPropertyBlockEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectMaterialPropertyBlockEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materialPropertyBlockEditor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, materialPropertyBlockEditor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandRayInteractorCursorVisual
#include "Oculus/Interaction/HandRayInteractorCursorVisual.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.RayInteractor
#include "Oculus/Interaction/RayInteractor.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: Oculus.Interaction.InteractorStateChangeArgs
#include "Oculus/Interaction/InteractorStateChangeArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandRayInteractorCursorVisual::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand Hand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandRayInteractorCursorVisual::dyn_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::dyn_Hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.RayInteractor _rayInteractor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::RayInteractor*& Oculus::Interaction::HandRayInteractorCursorVisual::dyn__rayInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::dyn__rayInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rayInteractor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::RayInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _cursor
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::HandRayInteractorCursorVisual::dyn__cursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::dyn__cursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cursor"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::HandRayInteractorCursorVisual::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _outlineColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::HandRayInteractorCursorVisual::dyn__outlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::dyn__outlineColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outlineColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _offsetAlongNormal
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandRayInteractorCursorVisual::dyn__offsetAlongNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::dyn__offsetAlongNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offsetAlongNormal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _shaderRadialGradientScale
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandRayInteractorCursorVisual::dyn__shaderRadialGradientScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::dyn__shaderRadialGradientScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shaderRadialGradientScale"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _shaderRadialGradientIntensity
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandRayInteractorCursorVisual::dyn__shaderRadialGradientIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::dyn__shaderRadialGradientIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shaderRadialGradientIntensity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _shaderRadialGradientBackgroundOpacity
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandRayInteractorCursorVisual::dyn__shaderRadialGradientBackgroundOpacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::dyn__shaderRadialGradientBackgroundOpacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shaderRadialGradientBackgroundOpacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _shaderOutlineColor
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandRayInteractorCursorVisual::dyn__shaderOutlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::dyn__shaderOutlineColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shaderOutlineColor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _selectObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::HandRayInteractorCursorVisual::dyn__selectObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::dyn__selectObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandRayInteractorCursorVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandRayInteractorCursorVisual.get_OutlineColor
::UnityEngine::Color Oculus::Interaction::HandRayInteractorCursorVisual::get_OutlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::get_OutlineColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandRayInteractorCursorVisual.set_OutlineColor
void Oculus::Interaction::HandRayInteractorCursorVisual::set_OutlineColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::set_OutlineColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OutlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandRayInteractorCursorVisual.get_OffsetAlongNormal
float Oculus::Interaction::HandRayInteractorCursorVisual::get_OffsetAlongNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::get_OffsetAlongNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OffsetAlongNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandRayInteractorCursorVisual.set_OffsetAlongNormal
void Oculus::Interaction::HandRayInteractorCursorVisual::set_OffsetAlongNormal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::set_OffsetAlongNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OffsetAlongNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandRayInteractorCursorVisual.Start
void Oculus::Interaction::HandRayInteractorCursorVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandRayInteractorCursorVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandRayInteractorCursorVisual.OnEnable
void Oculus::Interaction::HandRayInteractorCursorVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandRayInteractorCursorVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandRayInteractorCursorVisual.OnDisable
void Oculus::Interaction::HandRayInteractorCursorVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandRayInteractorCursorVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandRayInteractorCursorVisual.UpdateVisual
void Oculus::Interaction::HandRayInteractorCursorVisual::UpdateVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::UpdateVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandRayInteractorCursorVisual.UpdateVisualState
void Oculus::Interaction::HandRayInteractorCursorVisual::UpdateVisualState(::Oculus::Interaction::InteractorStateChangeArgs args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::UpdateVisualState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisualState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.HandRayInteractorCursorVisual.InjectAllHandRayInteractorCursorVisual
void Oculus::Interaction::HandRayInteractorCursorVisual::InjectAllHandRayInteractorCursorVisual(::Oculus::Interaction::Input::IHand* hand, ::Oculus::Interaction::RayInteractor* rayInteractor, ::UnityEngine::GameObject* cursor, ::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::InjectAllHandRayInteractorCursorVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandRayInteractorCursorVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(rayInteractor), ::il2cpp_utils::ExtractType(cursor), ::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, rayInteractor, cursor, renderer);
}
// Autogenerated method: Oculus.Interaction.HandRayInteractorCursorVisual.InjectHand
void Oculus::Interaction::HandRayInteractorCursorVisual::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandRayInteractorCursorVisual.InjectRayInteractor
void Oculus::Interaction::HandRayInteractorCursorVisual::InjectRayInteractor(::Oculus::Interaction::RayInteractor* rayInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::InjectRayInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRayInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rayInteractor);
}
// Autogenerated method: Oculus.Interaction.HandRayInteractorCursorVisual.InjectCursor
void Oculus::Interaction::HandRayInteractorCursorVisual::InjectCursor(::UnityEngine::GameObject* cursor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::InjectCursor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectCursor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cursor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cursor);
}
// Autogenerated method: Oculus.Interaction.HandRayInteractorCursorVisual.InjectRenderer
void Oculus::Interaction::HandRayInteractorCursorVisual::InjectRenderer(::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayInteractorCursorVisual::InjectRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.RayInteractorCursorVisual
#include "Oculus/Interaction/RayInteractorCursorVisual.hpp"
// Including type: Oculus.Interaction.RayInteractor
#include "Oculus/Interaction/RayInteractor.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: Oculus.Interaction.InteractorStateChangeArgs
#include "Oculus/Interaction/InteractorStateChangeArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.RayInteractor _rayInteractor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::RayInteractor*& Oculus::Interaction::RayInteractorCursorVisual::dyn__rayInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::dyn__rayInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rayInteractor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::RayInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::RayInteractorCursorVisual::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _hoverColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::RayInteractorCursorVisual::dyn__hoverColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::dyn__hoverColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::RayInteractorCursorVisual::dyn__selectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::dyn__selectColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _outlineColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::RayInteractorCursorVisual::dyn__outlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::dyn__outlineColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outlineColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _offsetAlongNormal
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::RayInteractorCursorVisual::dyn__offsetAlongNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::dyn__offsetAlongNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offsetAlongNormal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _shaderRadialGradientScale
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::RayInteractorCursorVisual::dyn__shaderRadialGradientScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::dyn__shaderRadialGradientScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shaderRadialGradientScale"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _shaderRadialGradientIntensity
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::RayInteractorCursorVisual::dyn__shaderRadialGradientIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::dyn__shaderRadialGradientIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shaderRadialGradientIntensity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _shaderRadialGradientBackgroundOpacity
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::RayInteractorCursorVisual::dyn__shaderRadialGradientBackgroundOpacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::dyn__shaderRadialGradientBackgroundOpacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shaderRadialGradientBackgroundOpacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _shaderInnerColor
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::RayInteractorCursorVisual::dyn__shaderInnerColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::dyn__shaderInnerColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shaderInnerColor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _shaderOutlineColor
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::RayInteractorCursorVisual::dyn__shaderOutlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::dyn__shaderOutlineColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shaderOutlineColor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::RayInteractorCursorVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.get_HoverColor
::UnityEngine::Color Oculus::Interaction::RayInteractorCursorVisual::get_HoverColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::get_HoverColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HoverColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.set_HoverColor
void Oculus::Interaction::RayInteractorCursorVisual::set_HoverColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::set_HoverColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HoverColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.get_SelectColor
::UnityEngine::Color Oculus::Interaction::RayInteractorCursorVisual::get_SelectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::get_SelectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.set_SelectColor
void Oculus::Interaction::RayInteractorCursorVisual::set_SelectColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::set_SelectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SelectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.get_OutlineColor
::UnityEngine::Color Oculus::Interaction::RayInteractorCursorVisual::get_OutlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::get_OutlineColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.set_OutlineColor
void Oculus::Interaction::RayInteractorCursorVisual::set_OutlineColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::set_OutlineColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OutlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.get_OffsetAlongNormal
float Oculus::Interaction::RayInteractorCursorVisual::get_OffsetAlongNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::get_OffsetAlongNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OffsetAlongNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.set_OffsetAlongNormal
void Oculus::Interaction::RayInteractorCursorVisual::set_OffsetAlongNormal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::set_OffsetAlongNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OffsetAlongNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.Start
void Oculus::Interaction::RayInteractorCursorVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RayInteractorCursorVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.OnEnable
void Oculus::Interaction::RayInteractorCursorVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RayInteractorCursorVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.OnDisable
void Oculus::Interaction::RayInteractorCursorVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RayInteractorCursorVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.UpdateVisual
void Oculus::Interaction::RayInteractorCursorVisual::UpdateVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::UpdateVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.UpdateVisualState
void Oculus::Interaction::RayInteractorCursorVisual::UpdateVisualState(::Oculus::Interaction::InteractorStateChangeArgs args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::UpdateVisualState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisualState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.InjectAllRayInteractorCursorVisual
void Oculus::Interaction::RayInteractorCursorVisual::InjectAllRayInteractorCursorVisual(::Oculus::Interaction::RayInteractor* rayInteractor, ::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::InjectAllRayInteractorCursorVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllRayInteractorCursorVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayInteractor), ::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rayInteractor, renderer);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.InjectRayInteractor
void Oculus::Interaction::RayInteractorCursorVisual::InjectRayInteractor(::Oculus::Interaction::RayInteractor* rayInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::InjectRayInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRayInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rayInteractor);
}
// Autogenerated method: Oculus.Interaction.RayInteractorCursorVisual.InjectRenderer
void Oculus::Interaction::RayInteractorCursorVisual::InjectRenderer(::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorCursorVisual::InjectRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.RayInteractorDebugGizmos
#include "Oculus/Interaction/RayInteractorDebugGizmos.hpp"
// Including type: Oculus.Interaction.RayInteractor
#include "Oculus/Interaction/RayInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.RayInteractor _rayInteractor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::RayInteractor*& Oculus::Interaction::RayInteractorDebugGizmos::dyn__rayInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::dyn__rayInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rayInteractor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::RayInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rayWidth
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::RayInteractorDebugGizmos::dyn__rayWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::dyn__rayWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rayWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::RayInteractorDebugGizmos::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _hoverColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::RayInteractorDebugGizmos::dyn__hoverColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::dyn__hoverColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::RayInteractorDebugGizmos::dyn__selectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::dyn__selectColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.RayInteractorDebugGizmos.get_RayWidth
float Oculus::Interaction::RayInteractorDebugGizmos::get_RayWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::get_RayWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RayWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorDebugGizmos.set_RayWidth
void Oculus::Interaction::RayInteractorDebugGizmos::set_RayWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::set_RayWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RayWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractorDebugGizmos.get_NormalColor
::UnityEngine::Color Oculus::Interaction::RayInteractorDebugGizmos::get_NormalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::get_NormalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NormalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorDebugGizmos.set_NormalColor
void Oculus::Interaction::RayInteractorDebugGizmos::set_NormalColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::set_NormalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NormalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractorDebugGizmos.get_HoverColor
::UnityEngine::Color Oculus::Interaction::RayInteractorDebugGizmos::get_HoverColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::get_HoverColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HoverColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorDebugGizmos.set_HoverColor
void Oculus::Interaction::RayInteractorDebugGizmos::set_HoverColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::set_HoverColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HoverColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractorDebugGizmos.get_SelectColor
::UnityEngine::Color Oculus::Interaction::RayInteractorDebugGizmos::get_SelectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::get_SelectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorDebugGizmos.set_SelectColor
void Oculus::Interaction::RayInteractorDebugGizmos::set_SelectColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::set_SelectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SelectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractorDebugGizmos.Start
void Oculus::Interaction::RayInteractorDebugGizmos::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RayInteractorDebugGizmos*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorDebugGizmos.LateUpdate
void Oculus::Interaction::RayInteractorDebugGizmos::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorDebugGizmos.InjectAllRayInteractorDebugGizmos
void Oculus::Interaction::RayInteractorDebugGizmos::InjectAllRayInteractorDebugGizmos(::Oculus::Interaction::RayInteractor* rayInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::InjectAllRayInteractorDebugGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllRayInteractorDebugGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rayInteractor);
}
// Autogenerated method: Oculus.Interaction.RayInteractorDebugGizmos.InjectRayInteractor
void Oculus::Interaction::RayInteractorDebugGizmos::InjectRayInteractor(::Oculus::Interaction::RayInteractor* rayInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorDebugGizmos::InjectRayInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRayInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rayInteractor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.RayInteractorPinchVisual
#include "Oculus/Interaction/RayInteractorPinchVisual.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.RayInteractor
#include "Oculus/Interaction/RayInteractor.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: Oculus.Interaction.InteractorStateChangeArgs
#include "Oculus/Interaction/InteractorStateChangeArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::RayInteractorPinchVisual::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand Hand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::RayInteractorPinchVisual::dyn_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::dyn_Hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.RayInteractor _rayInteractor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::RayInteractor*& Oculus::Interaction::RayInteractorPinchVisual::dyn__rayInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::dyn__rayInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rayInteractor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::RayInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _skinnedMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& Oculus::Interaction::RayInteractorPinchVisual::dyn__skinnedMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::dyn__skinnedMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skinnedMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _remapCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::RayInteractorPinchVisual::dyn__remapCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::dyn__remapCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_remapCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _alphaRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Oculus::Interaction::RayInteractorPinchVisual::dyn__alphaRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::dyn__alphaRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alphaRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::RayInteractorPinchVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.RayInteractorPinchVisual.get_RemapCurve
::UnityEngine::AnimationCurve* Oculus::Interaction::RayInteractorPinchVisual::get_RemapCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::get_RemapCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemapCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorPinchVisual.set_RemapCurve
void Oculus::Interaction::RayInteractorPinchVisual::set_RemapCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::set_RemapCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RemapCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractorPinchVisual.get_AlphaRange
::UnityEngine::Vector2 Oculus::Interaction::RayInteractorPinchVisual::get_AlphaRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::get_AlphaRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlphaRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorPinchVisual.set_AlphaRange
void Oculus::Interaction::RayInteractorPinchVisual::set_AlphaRange(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::set_AlphaRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AlphaRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RayInteractorPinchVisual.Awake
void Oculus::Interaction::RayInteractorPinchVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RayInteractorPinchVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorPinchVisual.Start
void Oculus::Interaction::RayInteractorPinchVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RayInteractorPinchVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorPinchVisual.OnEnable
void Oculus::Interaction::RayInteractorPinchVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RayInteractorPinchVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorPinchVisual.OnDisable
void Oculus::Interaction::RayInteractorPinchVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RayInteractorPinchVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorPinchVisual.UpdateVisual
void Oculus::Interaction::RayInteractorPinchVisual::UpdateVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::UpdateVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RayInteractorPinchVisual.UpdateVisualState
void Oculus::Interaction::RayInteractorPinchVisual::UpdateVisualState(::Oculus::Interaction::InteractorStateChangeArgs args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::UpdateVisualState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisualState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.RayInteractorPinchVisual.InjectAllRayInteractorPinchVisual
void Oculus::Interaction::RayInteractorPinchVisual::InjectAllRayInteractorPinchVisual(::Oculus::Interaction::Input::IHand* hand, ::Oculus::Interaction::RayInteractor* rayInteractor, ::UnityEngine::SkinnedMeshRenderer* skinnedMeshRenderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::InjectAllRayInteractorPinchVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllRayInteractorPinchVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(rayInteractor), ::il2cpp_utils::ExtractType(skinnedMeshRenderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, rayInteractor, skinnedMeshRenderer);
}
// Autogenerated method: Oculus.Interaction.RayInteractorPinchVisual.InjectHand
void Oculus::Interaction::RayInteractorPinchVisual::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.RayInteractorPinchVisual.InjectRayInteractor
void Oculus::Interaction::RayInteractorPinchVisual::InjectRayInteractor(::Oculus::Interaction::RayInteractor* rayInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::InjectRayInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRayInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rayInteractor);
}
// Autogenerated method: Oculus.Interaction.RayInteractorPinchVisual.InjectSkinnedMeshRenderer
void Oculus::Interaction::RayInteractorPinchVisual::InjectSkinnedMeshRenderer(::UnityEngine::SkinnedMeshRenderer* skinnedMeshRenderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RayInteractorPinchVisual::InjectSkinnedMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSkinnedMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skinnedMeshRenderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skinnedMeshRenderer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ISnapPoseDelegate
#include "Oculus/Interaction/ISnapPoseDelegate.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.ISnapPoseDelegate.TrackElement
void Oculus::Interaction::ISnapPoseDelegate::TrackElement(int id, ::UnityEngine::Pose p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ISnapPoseDelegate::TrackElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ISnapPoseDelegate*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, p);
}
// Autogenerated method: Oculus.Interaction.ISnapPoseDelegate.UntrackElement
void Oculus::Interaction::ISnapPoseDelegate::UntrackElement(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ISnapPoseDelegate::UntrackElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ISnapPoseDelegate*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.ISnapPoseDelegate.SnapElement
void Oculus::Interaction::ISnapPoseDelegate::SnapElement(int id, ::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ISnapPoseDelegate::SnapElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ISnapPoseDelegate*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, pose);
}
// Autogenerated method: Oculus.Interaction.ISnapPoseDelegate.UnsnapElement
void Oculus::Interaction::ISnapPoseDelegate::UnsnapElement(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ISnapPoseDelegate::UnsnapElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ISnapPoseDelegate*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.ISnapPoseDelegate.MoveTrackedElement
void Oculus::Interaction::ISnapPoseDelegate::MoveTrackedElement(int id, ::UnityEngine::Pose p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ISnapPoseDelegate::MoveTrackedElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ISnapPoseDelegate*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, p);
}
// Autogenerated method: Oculus.Interaction.ISnapPoseDelegate.SnapPoseForElement
bool Oculus::Interaction::ISnapPoseDelegate::SnapPoseForElement(int id, ::UnityEngine::Pose pose, ByRef<::UnityEngine::Pose> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ISnapPoseDelegate::SnapPoseForElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ISnapPoseDelegate*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id, pose, byref(result));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ListLayout
#include "Oculus/Interaction/ListLayout.hpp"
// Including type: Oculus.Interaction.ListLayout/ListElement
#include "Oculus/Interaction/ListLayout_ListElement.hpp"
// Including type: Oculus.Interaction.ListLayout/<>c
#include "Oculus/Interaction/ListLayout_--c.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ListLayout/ListElement _root
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ListLayout::ListElement*& Oculus::Interaction::ListLayout::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ListLayout::ListElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,Oculus.Interaction.ListLayout/ListElement> _elements
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::ListLayout::ListElement*>*& Oculus::Interaction::ListLayout::dyn__elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::dyn__elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elements"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::ListLayout::ListElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Int32> WhenElementAdded
[[deprecated("Use field access instead!")]] ::System::Action_1<int>*& Oculus::Interaction::ListLayout::dyn_WhenElementAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::dyn_WhenElementAdded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenElementAdded"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<System.Int32,System.Boolean> WhenElementUpdated
[[deprecated("Use field access instead!")]] ::System::Action_2<int, bool>*& Oculus::Interaction::ListLayout::dyn_WhenElementUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::dyn_WhenElementUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenElementUpdated"))->offset;
  return *reinterpret_cast<::System::Action_2<int, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Int32> WhenElementRemoved
[[deprecated("Use field access instead!")]] ::System::Action_1<int>*& Oculus::Interaction::ListLayout::dyn_WhenElementRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::dyn_WhenElementRemoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenElementRemoved"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sizeUpdate
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ListLayout::dyn__sizeUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::dyn__sizeUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sizeUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _moveElement
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::ListLayout::dyn__moveElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::dyn__moveElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveElement"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _size
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ListLayout::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ListLayout.get_Size
float Oculus::Interaction::ListLayout::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ListLayout.AddElement
void Oculus::Interaction::ListLayout::AddElement(int id, float size, float target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::AddElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, size, target);
}
// Autogenerated method: Oculus.Interaction.ListLayout.RemoveElement
void Oculus::Interaction::ListLayout::RemoveElement(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::RemoveElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.ListLayout.UpdatePos
void Oculus::Interaction::ListLayout::UpdatePos(::Oculus::Interaction::ListLayout::ListElement* element, float pos, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::UpdatePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element, pos, force);
}
// Autogenerated method: Oculus.Interaction.ListLayout.UpdatePositionsFromRoot
void Oculus::Interaction::ListLayout::UpdatePositionsFromRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::UpdatePositionsFromRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePositionsFromRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ListLayout.UpdatePositionsRight
void Oculus::Interaction::ListLayout::UpdatePositionsRight(::Oculus::Interaction::ListLayout::ListElement* current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::UpdatePositionsRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePositionsRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, current);
}
// Autogenerated method: Oculus.Interaction.ListLayout.SwapWithNext
void Oculus::Interaction::ListLayout::SwapWithNext(::Oculus::Interaction::ListLayout::ListElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::SwapWithNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwapWithNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: Oculus.Interaction.ListLayout.SwapWithPrev
void Oculus::Interaction::ListLayout::SwapWithPrev(::Oculus::Interaction::ListLayout::ListElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::SwapWithPrev");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwapWithPrev", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: Oculus.Interaction.ListLayout.MoveElement
void Oculus::Interaction::ListLayout::MoveElement(int id, float target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::MoveElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, target);
}
// Autogenerated method: Oculus.Interaction.ListLayout.UpdateElementSize
void Oculus::Interaction::ListLayout::UpdateElementSize(int id, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::UpdateElementSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateElementSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, size);
}
// Autogenerated method: Oculus.Interaction.ListLayout.GetElementPosition
float Oculus::Interaction::ListLayout::GetElementPosition(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::GetElementPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElementPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.ListLayout.GetElementSize
float Oculus::Interaction::ListLayout::GetElementSize(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::GetElementSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElementSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.ListLayout.GetTargetPosition
float Oculus::Interaction::ListLayout::GetTargetPosition(int id, float target, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::GetTargetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTargetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, id, target, size);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ListLayout/ListElement
#include "Oculus/Interaction/ListLayout_ListElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 id
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::ListLayout::ListElement::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::ListElement::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pos
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ListLayout::ListElement::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::ListElement::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single halfSize
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ListLayout::ListElement::dyn_halfSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::ListElement::dyn_halfSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "halfSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.ListLayout/ListElement prev
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ListLayout::ListElement*& Oculus::Interaction::ListLayout::ListElement::dyn_prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::ListElement::dyn_prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prev"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ListLayout::ListElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.ListLayout/ListElement next
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ListLayout::ListElement*& Oculus::Interaction::ListLayout::ListElement::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::ListElement::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ListLayout::ListElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ListLayout/<>c
#include "Oculus/Interaction/ListLayout_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.ListLayout/<>c <>9
::Oculus::Interaction::ListLayout::$$c* Oculus::Interaction::ListLayout::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::ListLayout::$$c*>("Oculus.Interaction", "ListLayout/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.ListLayout/<>c <>9
void Oculus::Interaction::ListLayout::$$c::_set_$$9(::Oculus::Interaction::ListLayout::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ListLayout/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Int32> <>9__11_0
::System::Action_1<int>* Oculus::Interaction::ListLayout::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<int>*>("Oculus.Interaction", "ListLayout/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Int32> <>9__11_0
void Oculus::Interaction::ListLayout::$$c::_set_$$9__11_0(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ListLayout/<>c", "<>9__11_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<System.Int32,System.Boolean> <>9__11_1
::System::Action_2<int, bool>* Oculus::Interaction::ListLayout::$$c::_get_$$9__11_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::$$c::_get_$$9__11_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<int, bool>*>("Oculus.Interaction", "ListLayout/<>c", "<>9__11_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<System.Int32,System.Boolean> <>9__11_1
void Oculus::Interaction::ListLayout::$$c::_set_$$9__11_1(::System::Action_2<int, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::$$c::_set_$$9__11_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ListLayout/<>c", "<>9__11_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Int32> <>9__11_2
::System::Action_1<int>* Oculus::Interaction::ListLayout::$$c::_get_$$9__11_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::$$c::_get_$$9__11_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<int>*>("Oculus.Interaction", "ListLayout/<>c", "<>9__11_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Int32> <>9__11_2
void Oculus::Interaction::ListLayout::$$c::_set_$$9__11_2(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::$$c::_set_$$9__11_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ListLayout/<>c", "<>9__11_2", value)));
}
// Autogenerated method: Oculus.Interaction.ListLayout/<>c..cctor
void Oculus::Interaction::ListLayout::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "ListLayout/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ListLayout/<>c.<.ctor>b__11_0
void Oculus::Interaction::ListLayout::$$c::$_ctor$b__11_0(int $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::$$c::<.ctor>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated method: Oculus.Interaction.ListLayout/<>c.<.ctor>b__11_1
void Oculus::Interaction::ListLayout::$$c::$_ctor$b__11_1(int $p0$, bool $p1$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::$$c::<.ctor>b__11_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__11_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$), ::il2cpp_utils::ExtractType($p1$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$, $p1$);
}
// Autogenerated method: Oculus.Interaction.ListLayout/<>c.<.ctor>b__11_2
void Oculus::Interaction::ListLayout::$$c::$_ctor$b__11_2(int $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayout::$$c::<.ctor>b__11_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__11_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ListLayoutEase
#include "Oculus/Interaction/ListLayoutEase.hpp"
// Including type: Oculus.Interaction.ListLayoutEase/ListElementEase
#include "Oculus/Interaction/ListLayoutEase_ListElementEase.hpp"
// Including type: Oculus.Interaction.ListLayout
#include "Oculus/Interaction/ListLayout.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ListLayout _listLayout
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ListLayout*& Oculus::Interaction::ListLayoutEase::dyn__listLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::dyn__listLayout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listLayout"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ListLayout**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,Oculus.Interaction.ListLayoutEase/ListElementEase> _elementDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::ListLayoutEase::ListElementEase*>*& Oculus::Interaction::ListLayoutEase::dyn__elementDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::dyn__elementDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::ListLayoutEase::ListElementEase*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _curve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::ListLayoutEase::dyn__curve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::dyn__curve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _curveTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ListLayoutEase::dyn__curveTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::dyn__curveTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curveTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _time
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ListLayoutEase::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ListLayoutEase.HandleElementAdded
void Oculus::Interaction::ListLayoutEase::HandleElementAdded(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::HandleElementAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleElementAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.ListLayoutEase.HandleElementUpdated
void Oculus::Interaction::ListLayoutEase::HandleElementUpdated(int id, bool sizeUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::HandleElementUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleElementUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(sizeUpdate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, sizeUpdate);
}
// Autogenerated method: Oculus.Interaction.ListLayoutEase.HandleElementRemoved
void Oculus::Interaction::ListLayoutEase::HandleElementRemoved(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::HandleElementRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleElementRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.ListLayoutEase.UpdateTime
void Oculus::Interaction::ListLayoutEase::UpdateTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::UpdateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: Oculus.Interaction.ListLayoutEase.GetPosition
float Oculus::Interaction::ListLayoutEase::GetPosition(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, id);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ListLayoutEase/ListElementEase
#include "Oculus/Interaction/ListLayoutEase_ListElementEase.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _curve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::ListLayoutEase::ListElementEase::dyn__curve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::ListElementEase::dyn__curve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _curveTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ListLayoutEase::ListElementEase::dyn__curveTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::ListElementEase::dyn__curveTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curveTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ListLayoutEase::ListElementEase::dyn__startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::ListElementEase::dyn__startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _start
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ListLayoutEase::ListElementEase::dyn__start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::ListElementEase::dyn__start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_start"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _target
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ListLayoutEase::ListElementEase::dyn__target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::ListElementEase::dyn__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single position
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ListLayoutEase::ListElementEase::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::ListElementEase::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ListLayoutEase/ListElementEase.SetTarget
void Oculus::Interaction::ListLayoutEase::ListElementEase::SetTarget(float target, float time, bool skipEase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::ListElementEase::SetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(skipEase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, time, skipEase);
}
// Autogenerated method: Oculus.Interaction.ListLayoutEase/ListElementEase.UpdateTime
void Oculus::Interaction::ListLayoutEase::ListElementEase::UpdateTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListLayoutEase::ListElementEase::UpdateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ListSnapPoseDelegate
#include "Oculus/Interaction/ListSnapPoseDelegate.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Oculus.Interaction.ListLayout
#include "Oculus/Interaction/ListLayout.hpp"
// Including type: Oculus.Interaction.ListLayoutEase
#include "Oculus/Interaction/ListLayoutEase.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> _snappedIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<int>*& Oculus::Interaction::ListSnapPoseDelegate::dyn__snappedIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::dyn__snappedIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snappedIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ListLayout _layout
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ListLayout*& Oculus::Interaction::ListSnapPoseDelegate::dyn__layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::dyn__layout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_layout"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ListLayout**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ListLayoutEase _layoutEase
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ListLayoutEase*& Oculus::Interaction::ListSnapPoseDelegate::dyn__layoutEase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::dyn__layoutEase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_layoutEase"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ListLayoutEase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _defaultSize
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ListSnapPoseDelegate::dyn__defaultSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::dyn__defaultSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ListSnapPoseDelegate.Start
void Oculus::Interaction::ListSnapPoseDelegate::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ListSnapPoseDelegate*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ListSnapPoseDelegate.Update
void Oculus::Interaction::ListSnapPoseDelegate::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ListSnapPoseDelegate*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ListSnapPoseDelegate.SizeForId
float Oculus::Interaction::ListSnapPoseDelegate::SizeForId(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::SizeForId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ListSnapPoseDelegate*), 12));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.ListSnapPoseDelegate.FloatForPose
float Oculus::Interaction::ListSnapPoseDelegate::FloatForPose(::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::FloatForPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ListSnapPoseDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, pose);
}
// Autogenerated method: Oculus.Interaction.ListSnapPoseDelegate.PoseForFloat
::UnityEngine::Pose Oculus::Interaction::ListSnapPoseDelegate::PoseForFloat(float position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::PoseForFloat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ListSnapPoseDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, position);
}
// Autogenerated method: Oculus.Interaction.ListSnapPoseDelegate.TrackElement
void Oculus::Interaction::ListSnapPoseDelegate::TrackElement(int id, ::UnityEngine::Pose p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::TrackElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ListSnapPoseDelegate*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, p);
}
// Autogenerated method: Oculus.Interaction.ListSnapPoseDelegate.UntrackElement
void Oculus::Interaction::ListSnapPoseDelegate::UntrackElement(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::UntrackElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ListSnapPoseDelegate*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.ListSnapPoseDelegate.SnapElement
void Oculus::Interaction::ListSnapPoseDelegate::SnapElement(int id, ::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::SnapElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ListSnapPoseDelegate*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, pose);
}
// Autogenerated method: Oculus.Interaction.ListSnapPoseDelegate.UnsnapElement
void Oculus::Interaction::ListSnapPoseDelegate::UnsnapElement(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::UnsnapElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ListSnapPoseDelegate*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.ListSnapPoseDelegate.MoveTrackedElement
void Oculus::Interaction::ListSnapPoseDelegate::MoveTrackedElement(int id, ::UnityEngine::Pose p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::MoveTrackedElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ListSnapPoseDelegate*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, p);
}
// Autogenerated method: Oculus.Interaction.ListSnapPoseDelegate.SnapPoseForElement
bool Oculus::Interaction::ListSnapPoseDelegate::SnapPoseForElement(int id, ::UnityEngine::Pose pose, ByRef<::UnityEngine::Pose> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::SnapPoseForElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ListSnapPoseDelegate*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id, pose, byref(result));
}
// Autogenerated method: Oculus.Interaction.ListSnapPoseDelegate.get_Size
float Oculus::Interaction::ListSnapPoseDelegate::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ListSnapPoseDelegate::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.SequentialSlotsProvider
#include "Oculus/Interaction/SequentialSlotsProvider.hpp"
// Including type: Oculus.Interaction.SequentialSlotsProvider/<>c__DisplayClass14_0
#include "Oculus/Interaction/SequentialSlotsProvider_--c__DisplayClass14_0.hpp"
// Including type: Oculus.Interaction.SequentialSlotsProvider/<>c__DisplayClass9_0
#include "Oculus/Interaction/SequentialSlotsProvider_--c__DisplayClass9_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Transform> _slots
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& Oculus::Interaction::SequentialSlotsProvider::dyn__slots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::dyn__slots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_slots"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _slotInteractors
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Oculus::Interaction::SequentialSlotsProvider::dyn__slotInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::dyn__slotInteractors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_slotInteractors"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::SequentialSlotsProvider::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.Start
void Oculus::Interaction::SequentialSlotsProvider::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SequentialSlotsProvider*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.TrackElement
void Oculus::Interaction::SequentialSlotsProvider::TrackElement(int id, ::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::TrackElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SequentialSlotsProvider*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, pose);
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.UntrackElement
void Oculus::Interaction::SequentialSlotsProvider::UntrackElement(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::UntrackElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SequentialSlotsProvider*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.SnapElement
void Oculus::Interaction::SequentialSlotsProvider::SnapElement(int id, ::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::SnapElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SequentialSlotsProvider*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, pose);
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.UnsnapElement
void Oculus::Interaction::SequentialSlotsProvider::UnsnapElement(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::UnsnapElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SequentialSlotsProvider*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.MoveTrackedElement
void Oculus::Interaction::SequentialSlotsProvider::MoveTrackedElement(int id, ::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::MoveTrackedElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SequentialSlotsProvider*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, pose);
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.TryFindIndexForInteractor
bool Oculus::Interaction::SequentialSlotsProvider::TryFindIndexForInteractor(int id, ByRef<int> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::TryFindIndexForInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryFindIndexForInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id, byref(index));
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.SnapPoseForElement
bool Oculus::Interaction::SequentialSlotsProvider::SnapPoseForElement(int id, ::UnityEngine::Pose pose, ByRef<::UnityEngine::Pose> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::SnapPoseForElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SequentialSlotsProvider*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id, pose, byref(result));
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.TryOccupySlot
bool Oculus::Interaction::SequentialSlotsProvider::TryOccupySlot(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::TryOccupySlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryOccupySlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.IsSlotFree
bool Oculus::Interaction::SequentialSlotsProvider::IsSlotFree(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::IsSlotFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSlotFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.FindBestSlotIndex
int Oculus::Interaction::SequentialSlotsProvider::FindBestSlotIndex(ByRef<::UnityEngine::Vector3> target, bool freeOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::FindBestSlotIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindBestSlotIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(freeOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(target), freeOnly);
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.PushSlots
void Oculus::Interaction::SequentialSlotsProvider::PushSlots(int index, int freeSlot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::PushSlots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushSlots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(freeSlot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, freeSlot);
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.SwapSlot
void Oculus::Interaction::SequentialSlotsProvider::SwapSlot(int index, int freeSlot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::SwapSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwapSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(freeSlot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, freeSlot);
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.InjectAllSequentialSlotsProvider
void Oculus::Interaction::SequentialSlotsProvider::InjectAllSequentialSlotsProvider(::System::Collections::Generic::List_1<::UnityEngine::Transform*>* slots) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::InjectAllSequentialSlotsProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllSequentialSlotsProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slots)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slots);
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.InjectSlots
void Oculus::Interaction::SequentialSlotsProvider::InjectSlots(::System::Collections::Generic::List_1<::UnityEngine::Transform*>* slots) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::InjectSlots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSlots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slots)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slots);
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider.<PushSlots>g__Next|14_0
int Oculus::Interaction::SequentialSlotsProvider::$PushSlots$g__Next_14_0(int value, ByRef<::Oculus::Interaction::SequentialSlotsProvider::$$c__DisplayClass14_0> param_1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::<PushSlots>g__Next|14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "SequentialSlotsProvider", "<PushSlots>g__Next|14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(param_1)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(param_1));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.SequentialSlotsProvider/<>c__DisplayClass9_0
#include "Oculus/Interaction/SequentialSlotsProvider_--c__DisplayClass9_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 id
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::SequentialSlotsProvider::$$c__DisplayClass9_0::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::$$c__DisplayClass9_0::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.SequentialSlotsProvider/<>c__DisplayClass9_0.<TryFindIndexForInteractor>b__0
bool Oculus::Interaction::SequentialSlotsProvider::$$c__DisplayClass9_0::$TryFindIndexForInteractor$b__0(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SequentialSlotsProvider::$$c__DisplayClass9_0::<TryFindIndexForInteractor>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryFindIndexForInteractor>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.SnapInteractable
#include "Oculus/Interaction/SnapInteractable.hpp"
// Including type: Oculus.Interaction.SnapInteractor
#include "Oculus/Interaction/SnapInteractor.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Oculus.Interaction.ISnapPoseDelegate
#include "Oculus/Interaction/ISnapPoseDelegate.hpp"
// Including type: Oculus.Interaction.IMovementProvider
#include "Oculus/Interaction/IMovementProvider.hpp"
// Including type: Oculus.Interaction.CollisionInteractionRegistry`2
#include "Oculus/Interaction/CollisionInteractionRegistry_2.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Oculus.Interaction.CollisionInteractionRegistry`2<Oculus.Interaction.SnapInteractor,Oculus.Interaction.SnapInteractable> _registry
::Oculus::Interaction::CollisionInteractionRegistry_2<::Oculus::Interaction::SnapInteractor*, ::Oculus::Interaction::SnapInteractable*>* Oculus::Interaction::SnapInteractable::_get__registry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::_get__registry");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::CollisionInteractionRegistry_2<::Oculus::Interaction::SnapInteractor*, ::Oculus::Interaction::SnapInteractable*>*>("Oculus.Interaction", "SnapInteractable", "_registry")));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Interaction.CollisionInteractionRegistry`2<Oculus.Interaction.SnapInteractor,Oculus.Interaction.SnapInteractable> _registry
void Oculus::Interaction::SnapInteractable::_set__registry(::Oculus::Interaction::CollisionInteractionRegistry_2<::Oculus::Interaction::SnapInteractor*, ::Oculus::Interaction::SnapInteractable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::_set__registry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "SnapInteractable", "_registry", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Oculus::Interaction::SnapInteractable::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _snapPoseDelegate
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::SnapInteractable::dyn__snapPoseDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::dyn__snapPoseDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snapPoseDelegate"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ISnapPoseDelegate <SnapPoseDelegate>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ISnapPoseDelegate*& Oculus::Interaction::SnapInteractable::dyn_$SnapPoseDelegate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::dyn_$SnapPoseDelegate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SnapPoseDelegate>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ISnapPoseDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _movementProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::SnapInteractable::dyn__movementProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::dyn__movementProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IMovementProvider <MovementProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovementProvider*& Oculus::Interaction::SnapInteractable::dyn_$MovementProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::dyn_$MovementProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MovementProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IMovementProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.get_Rigidbody
::UnityEngine::Rigidbody* Oculus::Interaction::SnapInteractable::get_Rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::get_Rigidbody");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractable*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.get_SnapPoseDelegate
::Oculus::Interaction::ISnapPoseDelegate* Oculus::Interaction::SnapInteractable::get_SnapPoseDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::get_SnapPoseDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SnapPoseDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::ISnapPoseDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.set_SnapPoseDelegate
void Oculus::Interaction::SnapInteractable::set_SnapPoseDelegate(::Oculus::Interaction::ISnapPoseDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::set_SnapPoseDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SnapPoseDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.get_MovementProvider
::Oculus::Interaction::IMovementProvider* Oculus::Interaction::SnapInteractable::get_MovementProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::get_MovementProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MovementProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovementProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.set_MovementProvider
void Oculus::Interaction::SnapInteractable::set_MovementProvider(::Oculus::Interaction::IMovementProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::set_MovementProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MovementProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.Reset
void Oculus::Interaction::SnapInteractable::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.InteractorAdded
void Oculus::Interaction::SnapInteractable::InteractorAdded(::Oculus::Interaction::SnapInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::InteractorAdded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractable*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.InteractorRemoved
void Oculus::Interaction::SnapInteractable::InteractorRemoved(::Oculus::Interaction::SnapInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::InteractorRemoved");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractable*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.SelectingInteractorAdded
void Oculus::Interaction::SnapInteractable::SelectingInteractorAdded(::Oculus::Interaction::SnapInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::SelectingInteractorAdded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractable*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.SelectingInteractorRemoved
void Oculus::Interaction::SnapInteractable::SelectingInteractorRemoved(::Oculus::Interaction::SnapInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::SelectingInteractorRemoved");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractable*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.InteractorHoverUpdated
void Oculus::Interaction::SnapInteractable::InteractorHoverUpdated(::Oculus::Interaction::SnapInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::InteractorHoverUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractorHoverUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.PoseForInteractor
bool Oculus::Interaction::SnapInteractable::PoseForInteractor(::Oculus::Interaction::SnapInteractor* interactor, ByRef<::UnityEngine::Pose> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::PoseForInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PoseForInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Pose&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, byref(result));
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.GenerateMovement
::Oculus::Interaction::IMovement* Oculus::Interaction::SnapInteractable::GenerateMovement(ByRef<::UnityEngine::Pose> from, ::Oculus::Interaction::SnapInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::GenerateMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovement*, false>(this, ___internal__method, byref(from), interactor);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.InjectAllSnapInteractable
void Oculus::Interaction::SnapInteractable::InjectAllSnapInteractable(::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::InjectAllSnapInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllSnapInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigidbody);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.InjectRigidbody
void Oculus::Interaction::SnapInteractable::InjectRigidbody(::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::InjectRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigidbody);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.InjectOptionalMovementProvider
void Oculus::Interaction::SnapInteractable::InjectOptionalMovementProvider(::Oculus::Interaction::IMovementProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::InjectOptionalMovementProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalMovementProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, provider);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.InjectOptionalSnapPoseDelegate
void Oculus::Interaction::SnapInteractable::InjectOptionalSnapPoseDelegate(::Oculus::Interaction::ISnapPoseDelegate* snapPoseDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::InjectOptionalSnapPoseDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalSnapPoseDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(snapPoseDelegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, snapPoseDelegate);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.<Start>b__16_0
void Oculus::Interaction::SnapInteractable::$Start$b__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::<Start>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.Awake
void Oculus::Interaction::SnapInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), 31)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractable.Start
void Oculus::Interaction::SnapInteractable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractable::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), 32)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.SnapInteractor
#include "Oculus/Interaction/SnapInteractor.hpp"
// Including type: Oculus.Interaction.SnapInteractor/<>c
#include "Oculus/Interaction/SnapInteractor_--c.hpp"
// Including type: Oculus.Interaction.SnapInteractable
#include "Oculus/Interaction/SnapInteractable.hpp"
// Including type: Oculus.Interaction.PointableElement
#include "Oculus/Interaction/PointableElement.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
// Including type: Oculus.Interaction.IPointableElement
#include "Oculus/Interaction/IPointableElement.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.PointerEvent
#include "Oculus/Interaction/PointerEvent.hpp"
// Including type: Oculus.Interaction.PointerEventType
#include "Oculus/Interaction/PointerEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PointableElement _pointableElement
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PointableElement*& Oculus::Interaction::SnapInteractor::dyn__pointableElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::dyn__pointableElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointableElement"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PointableElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Oculus::Interaction::SnapInteractor::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _distanceThreshold
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::SnapInteractor::dyn__distanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::dyn__distanceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distanceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _snapPoseTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::SnapInteractor::dyn__snapPoseTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::dyn__snapPoseTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snapPoseTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.SnapInteractable _defaultInteractable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::SnapInteractable*& Oculus::Interaction::SnapInteractor::dyn__defaultInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::dyn__defaultInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultInteractable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::SnapInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.SnapInteractable _timeOutInteractable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::SnapInteractable*& Oculus::Interaction::SnapInteractor::dyn__timeOutInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::dyn__timeOutInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeOutInteractable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::SnapInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeOut
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::SnapInteractor::dyn__timeOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::dyn__timeOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeOut"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _idleStarted
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::SnapInteractor::dyn__idleStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::dyn__idleStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_idleStarted"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IMovement _movement
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovement*& Oculus::Interaction::SnapInteractor::dyn__movement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::dyn__movement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movement"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _shouldSelect
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::SnapInteractor::dyn__shouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::dyn__shouldSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shouldSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _shouldUnselect
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::SnapInteractor::dyn__shouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::dyn__shouldUnselect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shouldUnselect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.get_PointableElement
::Oculus::Interaction::IPointableElement* Oculus::Interaction::SnapInteractor::get_PointableElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::get_PointableElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PointableElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IPointableElement*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.get_Rigidbody
::UnityEngine::Rigidbody* Oculus::Interaction::SnapInteractor::get_Rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::get_Rigidbody");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractor*), 73));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.get_SnapPose
::UnityEngine::Pose Oculus::Interaction::SnapInteractor::get_SnapPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::get_SnapPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SnapPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.Reset
void Oculus::Interaction::SnapInteractor::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.get_DistanceThreshold
float Oculus::Interaction::SnapInteractor::get_DistanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::get_DistanceThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DistanceThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.set_DistanceThreshold
void Oculus::Interaction::SnapInteractor::set_DistanceThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::set_DistanceThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DistanceThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.InteractableSet
void Oculus::Interaction::SnapInteractor::InteractableSet(::Oculus::Interaction::SnapInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::InteractableSet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractor*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.InteractableUnset
void Oculus::Interaction::SnapInteractor::InteractableUnset(::Oculus::Interaction::SnapInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::InteractableUnset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractor*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.InteractableSelected
void Oculus::Interaction::SnapInteractor::InteractableSelected(::Oculus::Interaction::SnapInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::InteractableSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractor*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.InteractableUnselected
void Oculus::Interaction::SnapInteractor::InteractableUnselected(::Oculus::Interaction::SnapInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::InteractableUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractor*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.HandlePointerEventRaised
void Oculus::Interaction::SnapInteractor::HandlePointerEventRaised(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::HandlePointerEventRaised");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractor*), 74));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.GeneratePointerEvent
void Oculus::Interaction::SnapInteractor::GeneratePointerEvent(::Oculus::Interaction::PointerEventType pointerEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::GeneratePointerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GeneratePointerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerEventType);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.ComputePointerPose
::UnityEngine::Pose Oculus::Interaction::SnapInteractor::ComputePointerPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::ComputePointerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputePointerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.TimedOut
bool Oculus::Interaction::SnapInteractor::TimedOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::TimedOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TimedOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.ComputeCandidate
::Oculus::Interaction::SnapInteractable* Oculus::Interaction::SnapInteractor::ComputeCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::ComputeCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::SnapInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.InjectAllSnapInteractor
void Oculus::Interaction::SnapInteractor::InjectAllSnapInteractor(::Oculus::Interaction::PointableElement* pointableElement, ::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::InjectAllSnapInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllSnapInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointableElement), ::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointableElement, rigidbody);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.InjectPointableElement
void Oculus::Interaction::SnapInteractor::InjectPointableElement(::Oculus::Interaction::PointableElement* pointableElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::InjectPointableElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPointableElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointableElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointableElement);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.InjectRigidbody
void Oculus::Interaction::SnapInteractor::InjectRigidbody(::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::InjectRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigidbody);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.InjectOptionalSnapPoseTransform
void Oculus::Interaction::SnapInteractor::InjectOptionalSnapPoseTransform(::UnityEngine::Transform* snapPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::InjectOptionalSnapPoseTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalSnapPoseTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(snapPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, snapPoint);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.InjectOptionalTimeOutInteractable
void Oculus::Interaction::SnapInteractor::InjectOptionalTimeOutInteractable(::Oculus::Interaction::SnapInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::InjectOptionalTimeOutInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalTimeOutInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.InjectOptionaTimeOut
void Oculus::Interaction::SnapInteractor::InjectOptionaTimeOut(float timeOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::InjectOptionaTimeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionaTimeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeOut)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeOut);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.<Start>b__19_0
void Oculus::Interaction::SnapInteractor::$Start$b__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::<Start>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.<OnEnable>b__20_0
::Oculus::Interaction::SnapInteractable* Oculus::Interaction::SnapInteractor::$OnEnable$b__20_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::<OnEnable>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::SnapInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.Start
void Oculus::Interaction::SnapInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 51)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.OnEnable
void Oculus::Interaction::SnapInteractor::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 52)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.OnDisable
void Oculus::Interaction::SnapInteractor::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 53)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.ComputeShouldSelect
bool Oculus::Interaction::SnapInteractor::ComputeShouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::ComputeShouldSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 43)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.ComputeShouldUnselect
bool Oculus::Interaction::SnapInteractor::ComputeShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::ComputeShouldUnselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 44)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.DoHoverUpdate
void Oculus::Interaction::SnapInteractor::DoHoverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::DoHoverUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 38)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.DoSelectUpdate
void Oculus::Interaction::SnapInteractor::DoSelectUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::DoSelectUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 39)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor.DoPreprocess
void Oculus::Interaction::SnapInteractor::DoPreprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::DoPreprocess");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 36)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.SnapInteractor/<>c
#include "Oculus/Interaction/SnapInteractor_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.SnapInteractor/<>c <>9
::Oculus::Interaction::SnapInteractor::$$c* Oculus::Interaction::SnapInteractor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::SnapInteractor::$$c*>("Oculus.Interaction", "SnapInteractor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.SnapInteractor/<>c <>9
void Oculus::Interaction::SnapInteractor::$$c::_set_$$9(::Oculus::Interaction::SnapInteractor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "SnapInteractor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Boolean> <>9__20_1
::System::Func_1<bool>* Oculus::Interaction::SnapInteractor::$$c::_get_$$9__20_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::$$c::_get_$$9__20_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<bool>*>("Oculus.Interaction", "SnapInteractor/<>c", "<>9__20_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Boolean> <>9__20_1
void Oculus::Interaction::SnapInteractor::$$c::_set_$$9__20_1(::System::Func_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::$$c::_set_$$9__20_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "SnapInteractor/<>c", "<>9__20_1", value)));
}
// Autogenerated method: Oculus.Interaction.SnapInteractor/<>c..cctor
void Oculus::Interaction::SnapInteractor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "SnapInteractor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractor/<>c.<OnEnable>b__20_1
bool Oculus::Interaction::SnapInteractor::$$c::$OnEnable$b__20_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractor::$$c::<OnEnable>b__20_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.SurfaceSnapPoseDelegate
#include "Oculus/Interaction/SurfaceSnapPoseDelegate.hpp"
// Including type: Oculus.Interaction.Surfaces.ISurface
#include "Oculus/Interaction/Surfaces/ISurface.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _surface
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::SurfaceSnapPoseDelegate::dyn__surface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceSnapPoseDelegate::dyn__surface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_surface"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Oculus.Interaction.Surfaces.ISurface Surface
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Surfaces::ISurface*& Oculus::Interaction::SurfaceSnapPoseDelegate::dyn_Surface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceSnapPoseDelegate::dyn_Surface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Surface"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Surfaces::ISurface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.Pose> _snappedPoses
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::Pose>*& Oculus::Interaction::SurfaceSnapPoseDelegate::dyn__snappedPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceSnapPoseDelegate::dyn__snappedPoses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snappedPoses"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::Pose>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.SurfaceSnapPoseDelegate.Awake
void Oculus::Interaction::SurfaceSnapPoseDelegate::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceSnapPoseDelegate::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SurfaceSnapPoseDelegate*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SurfaceSnapPoseDelegate.Start
void Oculus::Interaction::SurfaceSnapPoseDelegate::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceSnapPoseDelegate::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SurfaceSnapPoseDelegate*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SurfaceSnapPoseDelegate.TrackElement
void Oculus::Interaction::SurfaceSnapPoseDelegate::TrackElement(int id, ::UnityEngine::Pose p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceSnapPoseDelegate::TrackElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SurfaceSnapPoseDelegate*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, p);
}
// Autogenerated method: Oculus.Interaction.SurfaceSnapPoseDelegate.UntrackElement
void Oculus::Interaction::SurfaceSnapPoseDelegate::UntrackElement(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceSnapPoseDelegate::UntrackElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SurfaceSnapPoseDelegate*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.SurfaceSnapPoseDelegate.ComputeWorldSurfacePose
bool Oculus::Interaction::SurfaceSnapPoseDelegate::ComputeWorldSurfacePose(::UnityEngine::Pose pose, ByRef<::UnityEngine::Pose> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceSnapPoseDelegate::ComputeWorldSurfacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeWorldSurfacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Pose&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pose, byref(result));
}
// Autogenerated method: Oculus.Interaction.SurfaceSnapPoseDelegate.ComputeLocalSurfacePose
bool Oculus::Interaction::SurfaceSnapPoseDelegate::ComputeLocalSurfacePose(::UnityEngine::Pose pose, ByRef<::UnityEngine::Pose> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceSnapPoseDelegate::ComputeLocalSurfacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeLocalSurfacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Pose&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pose, byref(result));
}
// Autogenerated method: Oculus.Interaction.SurfaceSnapPoseDelegate.SnapElement
void Oculus::Interaction::SurfaceSnapPoseDelegate::SnapElement(int id, ::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceSnapPoseDelegate::SnapElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SurfaceSnapPoseDelegate*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, pose);
}
// Autogenerated method: Oculus.Interaction.SurfaceSnapPoseDelegate.UnsnapElement
void Oculus::Interaction::SurfaceSnapPoseDelegate::UnsnapElement(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceSnapPoseDelegate::UnsnapElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SurfaceSnapPoseDelegate*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.SurfaceSnapPoseDelegate.MoveTrackedElement
void Oculus::Interaction::SurfaceSnapPoseDelegate::MoveTrackedElement(int id, ::UnityEngine::Pose p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceSnapPoseDelegate::MoveTrackedElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SurfaceSnapPoseDelegate*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, p);
}
// Autogenerated method: Oculus.Interaction.SurfaceSnapPoseDelegate.SnapPoseForElement
bool Oculus::Interaction::SurfaceSnapPoseDelegate::SnapPoseForElement(int id, ::UnityEngine::Pose pose, ByRef<::UnityEngine::Pose> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceSnapPoseDelegate::SnapPoseForElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SurfaceSnapPoseDelegate*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id, pose, byref(result));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.SnapInteractorFollowVisual
#include "Oculus/Interaction/SnapInteractorFollowVisual.hpp"
// Including type: Oculus.Interaction.SnapInteractor
#include "Oculus/Interaction/SnapInteractor.hpp"
// Including type: Oculus.Interaction.ProgressCurve
#include "Oculus/Interaction/ProgressCurve.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.InteractorStateChangeArgs
#include "Oculus/Interaction/InteractorStateChangeArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.SnapInteractor _snapInteractor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::SnapInteractor*& Oculus::Interaction::SnapInteractorFollowVisual::dyn__snapInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::dyn__snapInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snapInteractor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::SnapInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _hoverOffset
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::SnapInteractorFollowVisual::dyn__hoverOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::dyn__hoverOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ProgressCurve _easeCurve
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& Oculus::Interaction::SnapInteractorFollowVisual::dyn__easeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::dyn__easeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeCurve"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ProgressCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::SnapInteractorFollowVisual::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::SnapInteractorFollowVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _from
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::SnapInteractorFollowVisual::dyn__from() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::dyn__from");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_from"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _to
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::SnapInteractorFollowVisual::dyn__to() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::dyn__to");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_to"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.SnapInteractorFollowVisual.get_HoverOffset
float Oculus::Interaction::SnapInteractorFollowVisual::get_HoverOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::get_HoverOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HoverOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractorFollowVisual.set_HoverOffset
void Oculus::Interaction::SnapInteractorFollowVisual::set_HoverOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::set_HoverOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HoverOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.SnapInteractorFollowVisual.get_EaseCurve
::Oculus::Interaction::ProgressCurve* Oculus::Interaction::SnapInteractorFollowVisual::get_EaseCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::get_EaseCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EaseCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::ProgressCurve*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractorFollowVisual.set_EaseCurve
void Oculus::Interaction::SnapInteractorFollowVisual::set_EaseCurve(::Oculus::Interaction::ProgressCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::set_EaseCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EaseCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.SnapInteractorFollowVisual.Start
void Oculus::Interaction::SnapInteractorFollowVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractorFollowVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractorFollowVisual.OnEnable
void Oculus::Interaction::SnapInteractorFollowVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractorFollowVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractorFollowVisual.OnDisable
void Oculus::Interaction::SnapInteractorFollowVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractorFollowVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractorFollowVisual.HandleStateChanged
void Oculus::Interaction::SnapInteractorFollowVisual::HandleStateChanged(::Oculus::Interaction::InteractorStateChangeArgs args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::HandleStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.SnapInteractorFollowVisual.ComputeTargetPose
::UnityEngine::Pose Oculus::Interaction::SnapInteractorFollowVisual::ComputeTargetPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::ComputeTargetPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractorFollowVisual*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractorFollowVisual.Update
void Oculus::Interaction::SnapInteractorFollowVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SnapInteractorFollowVisual*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SnapInteractorFollowVisual.InjectAllSnapInteractorFollowVisual
void Oculus::Interaction::SnapInteractorFollowVisual::InjectAllSnapInteractorFollowVisual(::Oculus::Interaction::SnapInteractor* snapInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::InjectAllSnapInteractorFollowVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllSnapInteractorFollowVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(snapInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, snapInteractor);
}
// Autogenerated method: Oculus.Interaction.SnapInteractorFollowVisual.InjectOptionalTransform
void Oculus::Interaction::SnapInteractorFollowVisual::InjectOptionalTransform(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SnapInteractorFollowVisual::InjectOptionalTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandSphereMap
#include "Oculus/Interaction/HandSphereMap.hpp"
// Including type: Oculus.Interaction.Input.FromHandPrefabDataSource
#include "Oculus/Interaction/Input/FromHandPrefabDataSource.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.FromHandPrefabDataSource _handPrefabDataSource
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::FromHandPrefabDataSource*& Oculus::Interaction::HandSphereMap::dyn__handPrefabDataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandSphereMap::dyn__handPrefabDataSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handPrefabDataSource"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::FromHandPrefabDataSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Collections.Generic.List`1<Oculus.Interaction.HandSphere>> _sourceSphereMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::Oculus::Interaction::HandSphere>*>*& Oculus::Interaction::HandSphereMap::dyn__sourceSphereMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandSphereMap::dyn__sourceSphereMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sourceSphereMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::Oculus::Interaction::HandSphere>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandSphereMap.Awake
void Oculus::Interaction::HandSphereMap::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandSphereMap::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandSphereMap*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandSphereMap.Start
void Oculus::Interaction::HandSphereMap::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandSphereMap::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandSphereMap*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandSphereMap.GetSpheres
void Oculus::Interaction::HandSphereMap::GetSpheres(::Oculus::Interaction::Input::Handedness handedness, ::Oculus::Interaction::Input::HandJointId joint, ::UnityEngine::Pose pose, float scale, ::System::Collections::Generic::List_1<::Oculus::Interaction::HandSphere>* spheres) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandSphereMap::GetSpheres");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandSphereMap*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handedness, joint, pose, scale, spheres);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandSphere
#include "Oculus/Interaction/HandSphere.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 <Position>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::HandSphere::dyn_$Position$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandSphere::dyn_$Position$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Position>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <Radius>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandSphere::dyn_$Radius$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandSphere::dyn_$Radius$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Radius>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Input.HandJointId <Joint>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandJointId& Oculus::Interaction::HandSphere::dyn_$Joint$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandSphere::dyn_$Joint$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Joint>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandJointId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandSphere.get_Position
::UnityEngine::Vector3 Oculus::Interaction::HandSphere::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandSphere::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandSphere.get_Radius
float Oculus::Interaction::HandSphere::get_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandSphere::get_Radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandSphere.get_Joint
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::HandSphere::get_Joint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandSphere::get_Joint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Joint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandJointId, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandSphere..ctor
// ABORTED elsewhere.  Oculus::Interaction::HandSphere::HandSphere(::UnityEngine::Vector3 position, float radius, ::Oculus::Interaction::Input::HandJointId joint)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IHandSphereMap
#include "Oculus/Interaction/IHandSphereMap.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IHandSphereMap.GetSpheres
void Oculus::Interaction::IHandSphereMap::GetSpheres(::Oculus::Interaction::Input::Handedness handedness, ::Oculus::Interaction::Input::HandJointId joint, ::UnityEngine::Pose pose, float scale, ::System::Collections::Generic::List_1<::Oculus::Interaction::HandSphere>* spheres) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IHandSphereMap::GetSpheres");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IHandSphereMap*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handedness, joint, pose, scale, spheres);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TouchHandGrabInteractable
#include "Oculus/Interaction/TouchHandGrabInteractable.hpp"
// Including type: Oculus.Interaction.TouchHandGrabInteractor
#include "Oculus/Interaction/TouchHandGrabInteractor.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.ColliderGroup
#include "Oculus/Interaction/ColliderGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider _boundsCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& Oculus::Interaction::TouchHandGrabInteractable::dyn__boundsCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractable::dyn__boundsCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boundsCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Collider> _colliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& Oculus::Interaction::TouchHandGrabInteractable::dyn__colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractable::dyn__colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ColliderGroup _colliderGroup
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ColliderGroup*& Oculus::Interaction::TouchHandGrabInteractable::dyn__colliderGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractable::dyn__colliderGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colliderGroup"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ColliderGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractable.get_ColliderGroup
::Oculus::Interaction::ColliderGroup* Oculus::Interaction::TouchHandGrabInteractable::get_ColliderGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractable::get_ColliderGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ColliderGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::ColliderGroup*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractable.InjectAllTouchHandGrabInteractable
void Oculus::Interaction::TouchHandGrabInteractable::InjectAllTouchHandGrabInteractable(::UnityEngine::Collider* boundsCollider, ::System::Collections::Generic::List_1<::UnityEngine::Collider*>* colliders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractable::InjectAllTouchHandGrabInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllTouchHandGrabInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundsCollider), ::il2cpp_utils::ExtractType(colliders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, boundsCollider, colliders);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractable.InjectBoundsCollider
void Oculus::Interaction::TouchHandGrabInteractable::InjectBoundsCollider(::UnityEngine::Collider* boundsCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractable::InjectBoundsCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectBoundsCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundsCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, boundsCollider);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractable.InjectColliders
void Oculus::Interaction::TouchHandGrabInteractable::InjectColliders(::System::Collections::Generic::List_1<::UnityEngine::Collider*>* colliders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractable::InjectColliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectColliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colliders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colliders);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractable.Start
void Oculus::Interaction::TouchHandGrabInteractable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractable::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractable_2<TInteractor, TInteractable>*), 32)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TouchHandGrabInteractor
#include "Oculus/Interaction/TouchHandGrabInteractor.hpp"
// Including type: Oculus.Interaction.TouchHandGrabInteractor/FingerStatus
#include "Oculus/Interaction/TouchHandGrabInteractor_FingerStatus.hpp"
// Including type: Oculus.Interaction.TouchHandGrabInteractor/<>c
#include "Oculus/Interaction/TouchHandGrabInteractor_--c.hpp"
// Including type: Oculus.Interaction.TouchHandGrabInteractable
#include "Oculus/Interaction/TouchHandGrabInteractable.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.IHandSphereMap
#include "Oculus/Interaction/IHandSphereMap.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
// Including type: Oculus.Interaction.TouchShadowHand
#include "Oculus/Interaction/TouchShadowHand.hpp"
// Including type: Oculus.Interaction.Input.ShadowHand
#include "Oculus/Interaction/Input/ShadowHand.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
// Including type: Oculus.Interaction.ColliderGroup
#include "Oculus/Interaction/ColliderGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::TouchHandGrabInteractor::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::TouchHandGrabInteractor::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _openHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::TouchHandGrabInteractor::dyn__openHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__openHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_openHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <OpenHand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::TouchHandGrabInteractor::dyn_$OpenHand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn_$OpenHand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OpenHand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _handSphereMap
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::TouchHandGrabInteractor::dyn__handSphereMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__handSphereMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handSphereMap"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Oculus.Interaction.IHandSphereMap HandSphereMap
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IHandSphereMap*& Oculus::Interaction::TouchHandGrabInteractor::dyn_HandSphereMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn_HandSphereMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandSphereMap"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IHandSphereMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _hoverLocation
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::TouchHandGrabInteractor::dyn__hoverLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__hoverLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverLocation"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _grabLocation
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::TouchHandGrabInteractor::dyn__grabLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__grabLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabLocation"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minHoverDistance
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TouchHandGrabInteractor::dyn__minHoverDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__minHoverDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minHoverDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _curlDeltaThreshold
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TouchHandGrabInteractor::dyn__curlDeltaThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__curlDeltaThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curlDeltaThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _curlTimeThreshold
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TouchHandGrabInteractor::dyn__curlTimeThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__curlTimeThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curlTimeThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _iterations
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::TouchHandGrabInteractor::dyn__iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _grabPrerequisite
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::TouchHandGrabInteractor::dyn__grabPrerequisite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__grabPrerequisite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabPrerequisite"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenFingerLocked
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::TouchHandGrabInteractor::dyn_WhenFingerLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn_WhenFingerLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenFingerLocked"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _saveOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::TouchHandGrabInteractor::dyn__saveOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__saveOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 GrabOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::TouchHandGrabInteractor::dyn_GrabOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn_GrabOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GrabOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Oculus.Interaction.IActiveState GrabPrerequisite
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& Oculus::Interaction::TouchHandGrabInteractor::dyn_GrabPrerequisite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn_GrabPrerequisite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GrabPrerequisite"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TouchHandGrabInteractor/FingerStatus[] _fingerStatuses
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::TouchHandGrabInteractor::FingerStatus*>& Oculus::Interaction::TouchHandGrabInteractor::dyn__fingerStatuses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__fingerStatuses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerStatuses"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::TouchHandGrabInteractor::FingerStatus*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TouchShadowHand _touchShadowHand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::TouchShadowHand*& Oculus::Interaction::TouchHandGrabInteractor::dyn__touchShadowHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__touchShadowHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_touchShadowHand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::TouchShadowHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ShadowHand _fromShadow
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ShadowHand*& Oculus::Interaction::TouchHandGrabInteractor::dyn__fromShadow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__fromShadow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fromShadow"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ShadowHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ShadowHand _toShadow
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ShadowHand*& Oculus::Interaction::TouchHandGrabInteractor::dyn__toShadow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__toShadow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toShadow"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ShadowHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ShadowHand _openShadow
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ShadowHand*& Oculus::Interaction::TouchHandGrabInteractor::dyn__openShadow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__openShadow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_openShadow"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ShadowHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Single> _timeProvider
[[deprecated("Use field access instead!")]] ::System::Func_1<float>*& Oculus::Interaction::TouchHandGrabInteractor::dyn__timeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__timeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeProvider"))->offset;
  return *reinterpret_cast<::System::Func_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _firstSelect
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::TouchHandGrabInteractor::dyn__firstSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__firstSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previousTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TouchHandGrabInteractor::dyn__previousTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__previousTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _deltaTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TouchHandGrabInteractor::dyn__deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::dyn__deltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::TouchHandGrabInteractor::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.set_Hand
void Oculus::Interaction::TouchHandGrabInteractor::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.get_OpenHand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::TouchHandGrabInteractor::get_OpenHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::get_OpenHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OpenHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.set_OpenHand
void Oculus::Interaction::TouchHandGrabInteractor::set_OpenHand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::set_OpenHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OpenHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.add_WhenFingerLocked
void Oculus::Interaction::TouchHandGrabInteractor::add_WhenFingerLocked(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::add_WhenFingerLocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_WhenFingerLocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.remove_WhenFingerLocked
void Oculus::Interaction::TouchHandGrabInteractor::remove_WhenFingerLocked(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::remove_WhenFingerLocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_WhenFingerLocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.get_GrabPosition
::UnityEngine::Vector3 Oculus::Interaction::TouchHandGrabInteractor::get_GrabPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::get_GrabPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GrabPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.get_GrabRotation
::UnityEngine::Quaternion Oculus::Interaction::TouchHandGrabInteractor::get_GrabRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::get_GrabRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GrabRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.IsFingerLocked
bool Oculus::Interaction::TouchHandGrabInteractor::IsFingerLocked(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::IsFingerLocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsFingerLocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finger)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.GetFingerJoints
::ArrayW<::UnityEngine::Pose> Oculus::Interaction::TouchHandGrabInteractor::GetFingerJoints(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::GetFingerJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFingerJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finger)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Pose>, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.MeetsGrabPrerequisite
bool Oculus::Interaction::TouchHandGrabInteractor::MeetsGrabPrerequisite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::MeetsGrabPrerequisite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MeetsGrabPrerequisite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.HandStatusSelecting
bool Oculus::Interaction::TouchHandGrabInteractor::HandStatusSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::HandStatusSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandStatusSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.ComputeNewTouching
void Oculus::Interaction::TouchHandGrabInteractor::ComputeNewTouching(int idx, ::Oculus::Interaction::ColliderGroup* colliderGroup, ::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::ComputeNewTouching");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeNewTouching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(colliderGroup), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, colliderGroup, offset);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.ComputeNewRelease
void Oculus::Interaction::TouchHandGrabInteractor::ComputeNewRelease(int idx, ::Oculus::Interaction::ColliderGroup* colliderGroup, ::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::ComputeNewRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeNewRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(colliderGroup), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, colliderGroup, offset);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.ClearFingerLockStatuses
void Oculus::Interaction::TouchHandGrabInteractor::ClearFingerLockStatuses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::ClearFingerLockStatuses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearFingerLockStatuses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.ComputeCandidate
::Oculus::Interaction::TouchHandGrabInteractable* Oculus::Interaction::TouchHandGrabInteractor::ComputeCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::ComputeCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TouchHandGrabInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::TouchHandGrabInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.InjectAllTouchHandGrabInteractor
void Oculus::Interaction::TouchHandGrabInteractor::InjectAllTouchHandGrabInteractor(::Oculus::Interaction::Input::IHand* hand, ::Oculus::Interaction::Input::IHand* openHand, ::Oculus::Interaction::IHandSphereMap* handSphereMap, ::UnityEngine::Transform* hoverLocation, ::UnityEngine::Transform* grabLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::InjectAllTouchHandGrabInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllTouchHandGrabInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(openHand), ::il2cpp_utils::ExtractType(handSphereMap), ::il2cpp_utils::ExtractType(hoverLocation), ::il2cpp_utils::ExtractType(grabLocation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, openHand, handSphereMap, hoverLocation, grabLocation);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.InjectHand
void Oculus::Interaction::TouchHandGrabInteractor::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.InjectOpenHand
void Oculus::Interaction::TouchHandGrabInteractor::InjectOpenHand(::Oculus::Interaction::Input::IHand* openHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::InjectOpenHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOpenHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(openHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, openHand);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.InjectHandSphereMap
void Oculus::Interaction::TouchHandGrabInteractor::InjectHandSphereMap(::Oculus::Interaction::IHandSphereMap* handSphereMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::InjectHandSphereMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandSphereMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handSphereMap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handSphereMap);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.InjectHoverLocation
void Oculus::Interaction::TouchHandGrabInteractor::InjectHoverLocation(::UnityEngine::Transform* hoverLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::InjectHoverLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHoverLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hoverLocation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hoverLocation);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.InjectGrabLocation
void Oculus::Interaction::TouchHandGrabInteractor::InjectGrabLocation(::UnityEngine::Transform* grabLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::InjectGrabLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGrabLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabLocation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabLocation);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.InjectOptionalGrabPrerequisite
void Oculus::Interaction::TouchHandGrabInteractor::InjectOptionalGrabPrerequisite(::Oculus::Interaction::IActiveState* grabPrerequisite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::InjectOptionalGrabPrerequisite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalGrabPrerequisite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabPrerequisite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabPrerequisite);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.InjectOptionalMinHoverDistance
void Oculus::Interaction::TouchHandGrabInteractor::InjectOptionalMinHoverDistance(float minHoverDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::InjectOptionalMinHoverDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalMinHoverDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minHoverDistance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, minHoverDistance);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.InjectOptionalCurlDeltaThreshold
void Oculus::Interaction::TouchHandGrabInteractor::InjectOptionalCurlDeltaThreshold(float threshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::InjectOptionalCurlDeltaThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalCurlDeltaThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(threshold)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, threshold);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.InjectOptionalCurlTimeThreshold
void Oculus::Interaction::TouchHandGrabInteractor::InjectOptionalCurlTimeThreshold(float seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::InjectOptionalCurlTimeThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalCurlTimeThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, seconds);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.InjectOptionalIterations
void Oculus::Interaction::TouchHandGrabInteractor::InjectOptionalIterations(int iterations) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::InjectOptionalIterations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalIterations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iterations)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, iterations);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.InjectOptionalTimeProvider
void Oculus::Interaction::TouchHandGrabInteractor::InjectOptionalTimeProvider(::System::Func_1<float>* timeProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::InjectOptionalTimeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalTimeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeProvider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeProvider);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.Awake
void Oculus::Interaction::TouchHandGrabInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 50)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.Start
void Oculus::Interaction::TouchHandGrabInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 51)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.DoPreprocess
void Oculus::Interaction::TouchHandGrabInteractor::DoPreprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::DoPreprocess");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 36)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.DoPostprocess
void Oculus::Interaction::TouchHandGrabInteractor::DoPostprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::DoPostprocess");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractor_2<TInteractor, TInteractable>*), 40)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.ComputeShouldSelect
bool Oculus::Interaction::TouchHandGrabInteractor::ComputeShouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::ComputeShouldSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 43)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.ComputeShouldUnselect
bool Oculus::Interaction::TouchHandGrabInteractor::ComputeShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::ComputeShouldUnselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 44)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.DoHoverUpdate
void Oculus::Interaction::TouchHandGrabInteractor::DoHoverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::DoHoverUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 38)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.DoSelectUpdate
void Oculus::Interaction::TouchHandGrabInteractor::DoSelectUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::DoSelectUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 39)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.Unselect
void Oculus::Interaction::TouchHandGrabInteractor::Unselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::Unselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 63)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor.ComputePointerPose
::UnityEngine::Pose Oculus::Interaction::TouchHandGrabInteractor::ComputePointerPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::ComputePointerPose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractor_2<TInteractor, TInteractable>*), 74)));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TouchHandGrabInteractor/FingerStatus
#include "Oculus/Interaction/TouchHandGrabInteractor_FingerStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Locked
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::TouchHandGrabInteractor::FingerStatus::dyn_Locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::FingerStatus::dyn_Locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Locked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Selecting
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::TouchHandGrabInteractor::FingerStatus::dyn_Selecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::FingerStatus::dyn_Selecting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Selecting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.HandJointId[] Joints
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::Input::HandJointId>& Oculus::Interaction::TouchHandGrabInteractor::FingerStatus::dyn_Joints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::FingerStatus::dyn_Joints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Joints"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::Input::HandJointId>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Pose[] LocalJoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& Oculus::Interaction::TouchHandGrabInteractor::FingerStatus::dyn_LocalJoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::FingerStatus::dyn_LocalJoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocalJoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Pose>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CurlValueAtLock
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TouchHandGrabInteractor::FingerStatus::dyn_CurlValueAtLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::FingerStatus::dyn_CurlValueAtLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurlValueAtLock"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Timer
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TouchHandGrabInteractor::FingerStatus::dyn_Timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::FingerStatus::dyn_Timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Timer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TouchHandGrabInteractor/<>c
#include "Oculus/Interaction/TouchHandGrabInteractor_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.TouchHandGrabInteractor/<>c <>9
::Oculus::Interaction::TouchHandGrabInteractor::$$c* Oculus::Interaction::TouchHandGrabInteractor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::TouchHandGrabInteractor::$$c*>("Oculus.Interaction", "TouchHandGrabInteractor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.TouchHandGrabInteractor/<>c <>9
void Oculus::Interaction::TouchHandGrabInteractor::$$c::_set_$$9(::Oculus::Interaction::TouchHandGrabInteractor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "TouchHandGrabInteractor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Single> <>9__39_0
::System::Func_1<float>* Oculus::Interaction::TouchHandGrabInteractor::$$c::_get_$$9__39_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::$$c::_get_$$9__39_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<float>*>("Oculus.Interaction", "TouchHandGrabInteractor/<>c", "<>9__39_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Single> <>9__39_0
void Oculus::Interaction::TouchHandGrabInteractor::$$c::_set_$$9__39_0(::System::Func_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::$$c::_set_$$9__39_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "TouchHandGrabInteractor/<>c", "<>9__39_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__69_0
::System::Action* Oculus::Interaction::TouchHandGrabInteractor::$$c::_get_$$9__69_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::$$c::_get_$$9__69_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "TouchHandGrabInteractor/<>c", "<>9__69_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__69_0
void Oculus::Interaction::TouchHandGrabInteractor::$$c::_set_$$9__69_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::$$c::_set_$$9__69_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "TouchHandGrabInteractor/<>c", "<>9__69_0", value)));
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor/<>c..cctor
void Oculus::Interaction::TouchHandGrabInteractor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "TouchHandGrabInteractor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor/<>c.<Awake>b__39_0
float Oculus::Interaction::TouchHandGrabInteractor::$$c::$Awake$b__39_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::$$c::<Awake>b__39_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__39_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractor/<>c.<.ctor>b__69_0
void Oculus::Interaction::TouchHandGrabInteractor::$$c::$_ctor$b__69_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractor::$$c::<.ctor>b__69_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__69_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TouchHandGrabInteractorVisual
#include "Oculus/Interaction/TouchHandGrabInteractorVisual.hpp"
// Including type: Oculus.Interaction.TouchHandGrabInteractorVisual/<>c
#include "Oculus/Interaction/TouchHandGrabInteractorVisual_--c.hpp"
// Including type: Oculus.Interaction.TouchHandGrabInteractor
#include "Oculus/Interaction/TouchHandGrabInteractor.hpp"
// Including type: Oculus.Interaction.Input.SyntheticHand
#include "Oculus/Interaction/Input/SyntheticHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TouchHandGrabInteractor _interactor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::TouchHandGrabInteractor*& Oculus::Interaction::TouchHandGrabInteractorVisual::dyn__interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractorVisual::dyn__interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::TouchHandGrabInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.SyntheticHand _syntheticHand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::SyntheticHand*& Oculus::Interaction::TouchHandGrabInteractorVisual::dyn__syntheticHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractorVisual::dyn__syntheticHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syntheticHand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::SyntheticHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::TouchHandGrabInteractorVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractorVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractorVisual.Start
void Oculus::Interaction::TouchHandGrabInteractorVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractorVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TouchHandGrabInteractorVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractorVisual.OnEnable
void Oculus::Interaction::TouchHandGrabInteractorVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractorVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TouchHandGrabInteractorVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractorVisual.OnDisable
void Oculus::Interaction::TouchHandGrabInteractorVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractorVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TouchHandGrabInteractorVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractorVisual.UpdateLocks
void Oculus::Interaction::TouchHandGrabInteractorVisual::UpdateLocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractorVisual::UpdateLocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractorVisual.Update
void Oculus::Interaction::TouchHandGrabInteractorVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractorVisual::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TouchHandGrabInteractorVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TouchHandGrabInteractorVisual/<>c
#include "Oculus/Interaction/TouchHandGrabInteractorVisual_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.TouchHandGrabInteractorVisual/<>c <>9
::Oculus::Interaction::TouchHandGrabInteractorVisual::$$c* Oculus::Interaction::TouchHandGrabInteractorVisual::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractorVisual::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::TouchHandGrabInteractorVisual::$$c*>("Oculus.Interaction", "TouchHandGrabInteractorVisual/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.TouchHandGrabInteractorVisual/<>c <>9
void Oculus::Interaction::TouchHandGrabInteractorVisual::$$c::_set_$$9(::Oculus::Interaction::TouchHandGrabInteractorVisual::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractorVisual::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "TouchHandGrabInteractorVisual/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Pose,UnityEngine.Quaternion> <>9__6_0
::System::Func_2<::UnityEngine::Pose, ::UnityEngine::Quaternion>* Oculus::Interaction::TouchHandGrabInteractorVisual::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractorVisual::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::Pose, ::UnityEngine::Quaternion>*>("Oculus.Interaction", "TouchHandGrabInteractorVisual/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Pose,UnityEngine.Quaternion> <>9__6_0
void Oculus::Interaction::TouchHandGrabInteractorVisual::$$c::_set_$$9__6_0(::System::Func_2<::UnityEngine::Pose, ::UnityEngine::Quaternion>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractorVisual::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "TouchHandGrabInteractorVisual/<>c", "<>9__6_0", value)));
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractorVisual/<>c..cctor
void Oculus::Interaction::TouchHandGrabInteractorVisual::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractorVisual::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "TouchHandGrabInteractorVisual/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchHandGrabInteractorVisual/<>c.<UpdateLocks>b__6_0
::UnityEngine::Quaternion Oculus::Interaction::TouchHandGrabInteractorVisual::$$c::$UpdateLocks$b__6_0(::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchHandGrabInteractorVisual::$$c::<UpdateLocks>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateLocks>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, pose);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TouchShadowHand
#include "Oculus/Interaction/TouchShadowHand.hpp"
// Including type: Oculus.Interaction.TouchShadowHand/GrabTouchInfo
#include "Oculus/Interaction/TouchShadowHand_GrabTouchInfo.hpp"
// Including type: Oculus.Interaction.Input.ShadowHand
#include "Oculus/Interaction/Input/ShadowHand.hpp"
// Including type: Oculus.Interaction.IHandSphereMap
#include "Oculus/Interaction/IHandSphereMap.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.ColliderGroup
#include "Oculus/Interaction/ColliderGroup.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ShadowHand _shadowHand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ShadowHand*& Oculus::Interaction::TouchShadowHand::dyn__shadowHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::dyn__shadowHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shadowHand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ShadowHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IHandSphereMap _handSphereMap
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IHandSphereMap*& Oculus::Interaction::TouchShadowHand::dyn__handSphereMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::dyn__handSphereMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handSphereMap"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IHandSphereMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.Handedness _handedness
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::Handedness& Oculus::Interaction::TouchShadowHand::dyn__handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::dyn__handedness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handedness"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::Handedness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.HandSphere> _spheres
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::HandSphere>*& Oculus::Interaction::TouchShadowHand::dyn__spheres() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::dyn__spheres");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spheres"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::HandSphere>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _totalIterations
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::TouchShadowHand::dyn__totalIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::dyn__totalIterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_totalIterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pushoutIterations
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::TouchShadowHand::dyn__pushoutIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::dyn__pushoutIterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pushoutIterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Iterations
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::TouchShadowHand::dyn_Iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::dyn_Iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> _sphereHit
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Oculus::Interaction::TouchShadowHand::dyn__sphereHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::dyn__sphereHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sphereHit"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.get_ShadowHand
::Oculus::Interaction::Input::ShadowHand* Oculus::Interaction::TouchShadowHand::get_ShadowHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::get_ShadowHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShadowHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::ShadowHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.get_TotalIterations
int Oculus::Interaction::TouchShadowHand::get_TotalIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::get_TotalIterations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TotalIterations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.set_TotalIterations
void Oculus::Interaction::TouchShadowHand::set_TotalIterations(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::set_TotalIterations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TotalIterations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.get_PushoutIterations
int Oculus::Interaction::TouchShadowHand::get_PushoutIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::get_PushoutIterations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PushoutIterations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.set_PushoutIterations
void Oculus::Interaction::TouchShadowHand::set_PushoutIterations(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::set_PushoutIterations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PushoutIterations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.SetShadowRootFromHand
void Oculus::Interaction::TouchShadowHand::SetShadowRootFromHand(::Oculus::Interaction::Input::ShadowHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::SetShadowRootFromHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShadowRootFromHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.SetShadowRootFromHands
void Oculus::Interaction::TouchShadowHand::SetShadowRootFromHands(::Oculus::Interaction::Input::ShadowHand* from, ::Oculus::Interaction::Input::ShadowHand* to, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::SetShadowRootFromHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShadowRootFromHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to, t);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.SetShadowFingerFrom
void Oculus::Interaction::TouchShadowHand::SetShadowFingerFrom(int fingerIdx, ::Oculus::Interaction::Input::ShadowHand* from) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::SetShadowFingerFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShadowFingerFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fingerIdx), ::il2cpp_utils::ExtractType(from)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fingerIdx, from);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.SetShadowFingerFromLerp
void Oculus::Interaction::TouchShadowHand::SetShadowFingerFromLerp(int fingerIdx, ::Oculus::Interaction::Input::ShadowHand* from, ::Oculus::Interaction::Input::ShadowHand* to, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::SetShadowFingerFromLerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShadowFingerFromLerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fingerIdx), ::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fingerIdx, from, to, t);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.SetShadowFingerFromLerps
void Oculus::Interaction::TouchShadowHand::SetShadowFingerFromLerps(int fingerIdx, ::Oculus::Interaction::Input::ShadowHand* from, ::Oculus::Interaction::Input::ShadowHand* to, ::ArrayW<float> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::SetShadowFingerFromLerps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShadowFingerFromLerps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fingerIdx), ::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fingerIdx, from, to, t);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.SetShadowFromLerpHands
void Oculus::Interaction::TouchShadowHand::SetShadowFromLerpHands(::Oculus::Interaction::Input::ShadowHand* from, ::Oculus::Interaction::Input::ShadowHand* to, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::SetShadowFromLerpHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShadowFromLerpHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to, t);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.LoadSpheresForFingerFromShadow
void Oculus::Interaction::TouchShadowHand::LoadSpheresForFingerFromShadow(int fingerIdx, int jointIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::LoadSpheresForFingerFromShadow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSpheresForFingerFromShadow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fingerIdx), ::il2cpp_utils::ExtractType(jointIdx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fingerIdx, jointIdx);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.LoadSpheresForHandFromShadow
void Oculus::Interaction::TouchShadowHand::LoadSpheresForHandFromShadow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::LoadSpheresForHandFromShadow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSpheresForHandFromShadow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.CheckSphereCollision
bool Oculus::Interaction::TouchShadowHand::CheckSphereCollision(::Oculus::Interaction::ColliderGroup* colliderGroup, ::UnityEngine::Vector3 offset, ::System::Collections::Generic::List_1<int>* sphereHit, ::System::Collections::Generic::List_1<int>* sphereIndices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::CheckSphereCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckSphereCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colliderGroup), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(sphereHit), ::il2cpp_utils::ExtractType(sphereIndices)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, colliderGroup, offset, sphereHit, sphereIndices);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.CheckFingerTouch
bool Oculus::Interaction::TouchShadowHand::CheckFingerTouch(int fingerIdx, int jointIdx, ::Oculus::Interaction::ColliderGroup* colliderGroup, ::UnityEngine::Vector3 offset, ::System::Collections::Generic::List_1<int>* sphereHit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::CheckFingerTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckFingerTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fingerIdx), ::il2cpp_utils::ExtractType(jointIdx), ::il2cpp_utils::ExtractType(colliderGroup), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(sphereHit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fingerIdx, jointIdx, colliderGroup, offset, sphereHit);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.CheckTouchFingers
void Oculus::Interaction::TouchShadowHand::CheckTouchFingers(::Oculus::Interaction::Input::ShadowHand* hand, ::Oculus::Interaction::ColliderGroup* colliderGroup, ::Oculus::Interaction::TouchShadowHand::GrabTouchInfo* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::CheckTouchFingers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckTouchFingers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(colliderGroup), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, colliderGroup, result);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.GrabReleaseFinger
bool Oculus::Interaction::TouchShadowHand::GrabReleaseFinger(int fingerIdx, ::Oculus::Interaction::Input::ShadowHand* fromHand, ::Oculus::Interaction::Input::ShadowHand* toHand, ::Oculus::Interaction::ColliderGroup* colliderGroup, ::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::GrabReleaseFinger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabReleaseFinger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fingerIdx), ::il2cpp_utils::ExtractType(fromHand), ::il2cpp_utils::ExtractType(toHand), ::il2cpp_utils::ExtractType(colliderGroup), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fingerIdx, fromHand, toHand, colliderGroup, offset);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.GrabConformFinger
bool Oculus::Interaction::TouchShadowHand::GrabConformFinger(int fingerIdx, ::Oculus::Interaction::Input::ShadowHand* fromHand, ::Oculus::Interaction::Input::ShadowHand* toHand, ::Oculus::Interaction::ColliderGroup* colliderGroup, ::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::GrabConformFinger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabConformFinger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fingerIdx), ::il2cpp_utils::ExtractType(fromHand), ::il2cpp_utils::ExtractType(toHand), ::il2cpp_utils::ExtractType(colliderGroup), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fingerIdx, fromHand, toHand, colliderGroup, offset);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.GrabConformFingers
void Oculus::Interaction::TouchShadowHand::GrabConformFingers(::Oculus::Interaction::Input::ShadowHand* fromHand, ::Oculus::Interaction::Input::ShadowHand* toHand, ::Oculus::Interaction::ColliderGroup* colliderGroup, ::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::GrabConformFingers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabConformFingers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromHand), ::il2cpp_utils::ExtractType(toHand), ::il2cpp_utils::ExtractType(colliderGroup), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fromHand, toHand, colliderGroup, offset);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.PushoutFinger
bool Oculus::Interaction::TouchShadowHand::PushoutFinger(int fingerIdx, ::Oculus::Interaction::Input::ShadowHand* from, ::Oculus::Interaction::Input::ShadowHand* to, ::Oculus::Interaction::ColliderGroup* colliderGroup, ::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::PushoutFinger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushoutFinger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fingerIdx), ::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(colliderGroup), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fingerIdx, from, to, colliderGroup, offset);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.GrabTouchStep
void Oculus::Interaction::TouchShadowHand::GrabTouchStep(::Oculus::Interaction::Input::ShadowHand* from, ::Oculus::Interaction::Input::ShadowHand* to, ::Oculus::Interaction::ColliderGroup* colliderGroup, int iteration, ::UnityEngine::Vector3 colliderOffset, bool pushout, ::Oculus::Interaction::TouchShadowHand::GrabTouchInfo* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::GrabTouchStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabTouchStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(colliderGroup), ::il2cpp_utils::ExtractType(iteration), ::il2cpp_utils::ExtractType(colliderOffset), ::il2cpp_utils::ExtractType(pushout), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to, colliderGroup, iteration, colliderOffset, pushout, result);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.GrabTouch
void Oculus::Interaction::TouchShadowHand::GrabTouch(::Oculus::Interaction::Input::ShadowHand* fromHand, ::Oculus::Interaction::Input::ShadowHand* toHand, ::Oculus::Interaction::ColliderGroup* colliderGroup, bool pushout, ::Oculus::Interaction::TouchShadowHand::GrabTouchInfo* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::GrabTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromHand), ::il2cpp_utils::ExtractType(toHand), ::il2cpp_utils::ExtractType(colliderGroup), ::il2cpp_utils::ExtractType(pushout), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fromHand, toHand, colliderGroup, pushout, result);
}
// Autogenerated method: Oculus.Interaction.TouchShadowHand.GetJointsFromShadow
void Oculus::Interaction::TouchShadowHand::GetJointsFromShadow(::ArrayW<::Oculus::Interaction::Input::HandJointId> jointIds, ::ArrayW<::UnityEngine::Pose> outJoints, bool local) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::GetJointsFromShadow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetJointsFromShadow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointIds), ::il2cpp_utils::ExtractType(outJoints), ::il2cpp_utils::ExtractType(local)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jointIds, outJoints, local);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TouchShadowHand/GrabTouchInfo
#include "Oculus/Interaction/TouchShadowHand_GrabTouchInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::TouchShadowHand::GrabTouchInfo::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::GrabTouchInfo::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean grabbing
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::TouchShadowHand::GrabTouchInfo::dyn_grabbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::GrabTouchInfo::dyn_grabbing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabbing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean[] grabbingFingers
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& Oculus::Interaction::TouchShadowHand::GrabTouchInfo::dyn_grabbingFingers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::GrabTouchInfo::dyn_grabbingFingers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabbingFingers"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single grabT
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TouchShadowHand::GrabTouchInfo::dyn_grabT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TouchShadowHand::GrabTouchInfo::dyn_grabT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabT"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Axis1DFingerUseAPI
#include "Oculus/Interaction/Axis1DFingerUseAPI.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.Input.IAxis1D
#include "Oculus/Interaction/Input/IAxis1D.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Axis1DFingerUseAPI::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DFingerUseAPI::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _axis
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Axis1DFingerUseAPI::dyn__axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DFingerUseAPI::dyn__axis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_axis"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Oculus.Interaction.Input.IHand Hand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::Axis1DFingerUseAPI::dyn_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DFingerUseAPI::dyn_Hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Oculus.Interaction.Input.IAxis1D Axis
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IAxis1D*& Oculus::Interaction::Axis1DFingerUseAPI::dyn_Axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DFingerUseAPI::dyn_Axis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Axis"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IAxis1D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Axis1DFingerUseAPI::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DFingerUseAPI::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Axis1DFingerUseAPI.Awake
void Oculus::Interaction::Axis1DFingerUseAPI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DFingerUseAPI::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Axis1DFingerUseAPI*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis1DFingerUseAPI.Start
void Oculus::Interaction::Axis1DFingerUseAPI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DFingerUseAPI::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Axis1DFingerUseAPI*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis1DFingerUseAPI.GetFingerUseStrength
float Oculus::Interaction::Axis1DFingerUseAPI::GetFingerUseStrength(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DFingerUseAPI::GetFingerUseStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Axis1DFingerUseAPI*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.Axis1DFingerUseAPI.InjectAllUseFingerPinchPressureApi
void Oculus::Interaction::Axis1DFingerUseAPI::InjectAllUseFingerPinchPressureApi(::Oculus::Interaction::Input::IHand* hand, ::Oculus::Interaction::Input::IAxis1D* axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DFingerUseAPI::InjectAllUseFingerPinchPressureApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllUseFingerPinchPressureApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(axis)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, axis);
}
// Autogenerated method: Oculus.Interaction.Axis1DFingerUseAPI.InjectHand
void Oculus::Interaction::Axis1DFingerUseAPI::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DFingerUseAPI::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.Axis1DFingerUseAPI.InjectAxis
void Oculus::Interaction::Axis1DFingerUseAPI::InjectAxis(::Oculus::Interaction::Input::IAxis1D* pinchPressure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DFingerUseAPI::InjectAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pinchPressure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pinchPressure);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IFingerUseAPI
#include "Oculus/Interaction/IFingerUseAPI.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IFingerUseAPI.GetFingerUseStrength
float Oculus::Interaction::IFingerUseAPI::GetFingerUseStrength(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IFingerUseAPI::GetFingerUseStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IFingerUseAPI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, finger);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UseFingerCurlAPI
#include "Oculus/Interaction/UseFingerCurlAPI.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.IFingerAPI
#include "Oculus/Interaction/IFingerAPI.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::UseFingerCurlAPI::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerCurlAPI::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::UseFingerCurlAPI::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerCurlAPI::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IFingerAPI _grabAPI
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IFingerAPI*& Oculus::Interaction::UseFingerCurlAPI::dyn__grabAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerCurlAPI::dyn__grabAPI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabAPI"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IFingerAPI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastDataVersion
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::UseFingerCurlAPI::dyn__lastDataVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerCurlAPI::dyn__lastDataVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastDataVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::UseFingerCurlAPI::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerCurlAPI::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.UseFingerCurlAPI.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::UseFingerCurlAPI::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerCurlAPI::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UseFingerCurlAPI.set_Hand
void Oculus::Interaction::UseFingerCurlAPI::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerCurlAPI::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.UseFingerCurlAPI.Awake
void Oculus::Interaction::UseFingerCurlAPI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerCurlAPI::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UseFingerCurlAPI*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UseFingerCurlAPI.Start
void Oculus::Interaction::UseFingerCurlAPI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerCurlAPI::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UseFingerCurlAPI*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UseFingerCurlAPI.GetFingerUseStrength
float Oculus::Interaction::UseFingerCurlAPI::GetFingerUseStrength(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerCurlAPI::GetFingerUseStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UseFingerCurlAPI*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.UseFingerCurlAPI.InjectAllUseFingerCurlAPI
void Oculus::Interaction::UseFingerCurlAPI::InjectAllUseFingerCurlAPI(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerCurlAPI::InjectAllUseFingerCurlAPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllUseFingerCurlAPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.UseFingerCurlAPI.InjectHand
void Oculus::Interaction::UseFingerCurlAPI::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerCurlAPI::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UseFingerRawPinchAPI
#include "Oculus/Interaction/UseFingerRawPinchAPI.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.IFingerAPI
#include "Oculus/Interaction/IFingerAPI.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::UseFingerRawPinchAPI::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerRawPinchAPI::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::UseFingerRawPinchAPI::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerRawPinchAPI::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IFingerAPI _grabAPI
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IFingerAPI*& Oculus::Interaction::UseFingerRawPinchAPI::dyn__grabAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerRawPinchAPI::dyn__grabAPI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabAPI"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IFingerAPI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastDataVersion
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::UseFingerRawPinchAPI::dyn__lastDataVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerRawPinchAPI::dyn__lastDataVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastDataVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::UseFingerRawPinchAPI::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerRawPinchAPI::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.UseFingerRawPinchAPI.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::UseFingerRawPinchAPI::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerRawPinchAPI::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UseFingerRawPinchAPI.set_Hand
void Oculus::Interaction::UseFingerRawPinchAPI::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerRawPinchAPI::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.UseFingerRawPinchAPI.Awake
void Oculus::Interaction::UseFingerRawPinchAPI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerRawPinchAPI::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UseFingerRawPinchAPI*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UseFingerRawPinchAPI.Start
void Oculus::Interaction::UseFingerRawPinchAPI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerRawPinchAPI::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UseFingerRawPinchAPI*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UseFingerRawPinchAPI.GetFingerUseStrength
float Oculus::Interaction::UseFingerRawPinchAPI::GetFingerUseStrength(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerRawPinchAPI::GetFingerUseStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UseFingerRawPinchAPI*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.UseFingerRawPinchAPI.InjectAllUseFingerRawPinchAPI
void Oculus::Interaction::UseFingerRawPinchAPI::InjectAllUseFingerRawPinchAPI(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerRawPinchAPI::InjectAllUseFingerRawPinchAPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllUseFingerRawPinchAPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.UseFingerRawPinchAPI.InjectHand
void Oculus::Interaction::UseFingerRawPinchAPI::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UseFingerRawPinchAPI::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PointerEventType
#include "Oculus/Interaction/PointerEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.PointerEventType Hover
::Oculus::Interaction::PointerEventType Oculus::Interaction::PointerEventType::_get_Hover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEventType::_get_Hover");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::PointerEventType>("Oculus.Interaction", "PointerEventType", "Hover"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.PointerEventType Hover
void Oculus::Interaction::PointerEventType::_set_Hover(::Oculus::Interaction::PointerEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEventType::_set_Hover");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "PointerEventType", "Hover", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.PointerEventType Unhover
::Oculus::Interaction::PointerEventType Oculus::Interaction::PointerEventType::_get_Unhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEventType::_get_Unhover");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::PointerEventType>("Oculus.Interaction", "PointerEventType", "Unhover"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.PointerEventType Unhover
void Oculus::Interaction::PointerEventType::_set_Unhover(::Oculus::Interaction::PointerEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEventType::_set_Unhover");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "PointerEventType", "Unhover", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.PointerEventType Select
::Oculus::Interaction::PointerEventType Oculus::Interaction::PointerEventType::_get_Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEventType::_get_Select");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::PointerEventType>("Oculus.Interaction", "PointerEventType", "Select"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.PointerEventType Select
void Oculus::Interaction::PointerEventType::_set_Select(::Oculus::Interaction::PointerEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEventType::_set_Select");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "PointerEventType", "Select", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.PointerEventType Unselect
::Oculus::Interaction::PointerEventType Oculus::Interaction::PointerEventType::_get_Unselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEventType::_get_Unselect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::PointerEventType>("Oculus.Interaction", "PointerEventType", "Unselect"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.PointerEventType Unselect
void Oculus::Interaction::PointerEventType::_set_Unselect(::Oculus::Interaction::PointerEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEventType::_set_Unselect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "PointerEventType", "Unselect", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.PointerEventType Move
::Oculus::Interaction::PointerEventType Oculus::Interaction::PointerEventType::_get_Move() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEventType::_get_Move");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::PointerEventType>("Oculus.Interaction", "PointerEventType", "Move"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.PointerEventType Move
void Oculus::Interaction::PointerEventType::_set_Move(::Oculus::Interaction::PointerEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEventType::_set_Move");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "PointerEventType", "Move", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.PointerEventType Cancel
::Oculus::Interaction::PointerEventType Oculus::Interaction::PointerEventType::_get_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEventType::_get_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::PointerEventType>("Oculus.Interaction", "PointerEventType", "Cancel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.PointerEventType Cancel
void Oculus::Interaction::PointerEventType::_set_Cancel(::Oculus::Interaction::PointerEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEventType::_set_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "PointerEventType", "Cancel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::PointerEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.PointerEvent
#include "Oculus/Interaction/PointerEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <Identifier>k__BackingField
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::PointerEvent::dyn_$Identifier$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEvent::dyn_$Identifier$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Identifier>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.PointerEventType <Type>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PointerEventType& Oculus::Interaction::PointerEvent::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEvent::dyn_$Type$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PointerEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Pose <Pose>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::PointerEvent::dyn_$Pose$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEvent::dyn_$Pose$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Pose>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object <Data>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Oculus::Interaction::PointerEvent::dyn_$Data$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEvent::dyn_$Data$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Data>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PointerEvent.get_Identifier
int Oculus::Interaction::PointerEvent::get_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEvent::get_Identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointerEvent.get_Type
::Oculus::Interaction::PointerEventType Oculus::Interaction::PointerEvent::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEvent::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::PointerEventType, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointerEvent.get_Pose
::UnityEngine::Pose Oculus::Interaction::PointerEvent::get_Pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEvent::get_Pose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Pose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointerEvent.get_Data
::Il2CppObject* Oculus::Interaction::PointerEvent::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointerEvent::get_Data");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Oculus::Interaction::PointerEvent), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointerEvent..ctor
// ABORTED elsewhere.  Oculus::Interaction::PointerEvent::PointerEvent(int identifier, ::Oculus::Interaction::PointerEventType type, ::UnityEngine::Pose pose, ::Il2CppObject* data)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IPointable
#include "Oculus/Interaction/IPointable.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IPointable.add_WhenPointerEventRaised
void Oculus::Interaction::IPointable::add_WhenPointerEventRaised(::System::Action_1<::Oculus::Interaction::PointerEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IPointable::add_WhenPointerEventRaised");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IPointable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IPointable.remove_WhenPointerEventRaised
void Oculus::Interaction::IPointable::remove_WhenPointerEventRaised(::System::Action_1<::Oculus::Interaction::PointerEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IPointable::remove_WhenPointerEventRaised");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IPointable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IPointableElement
#include "Oculus/Interaction/IPointableElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IPointableElement.ProcessPointerEvent
void Oculus::Interaction::IPointableElement::ProcessPointerEvent(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IPointableElement::ProcessPointerEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IPointableElement*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IPointableCanvas
#include "Oculus/Interaction/IPointableCanvas.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IPointableCanvas.get_Canvas
::UnityEngine::Canvas* Oculus::Interaction::IPointableCanvas::get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IPointableCanvas::get_Canvas");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IPointableCanvas*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Canvas*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PointableDebugGizmos
#include "Oculus/Interaction/PointableDebugGizmos.hpp"
// Including type: Oculus.Interaction.PointableDebugGizmos/PointData
#include "Oculus/Interaction/PointableDebugGizmos_PointData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Interaction.IPointable
#include "Oculus/Interaction/IPointable.hpp"
// Including type: Oculus.Interaction.PointerEvent
#include "Oculus/Interaction/PointerEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _pointable
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::PointableDebugGizmos::dyn__pointable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::dyn__pointable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointable"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PointableDebugGizmos::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _hoverColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PointableDebugGizmos::dyn__hoverColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::dyn__hoverColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PointableDebugGizmos::dyn__selectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::dyn__selectColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _drawAxes
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableDebugGizmos::dyn__drawAxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::dyn__drawAxes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_drawAxes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,Oculus.Interaction.PointableDebugGizmos/PointData> _points
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::PointableDebugGizmos::PointData*>*& Oculus::Interaction::PointableDebugGizmos::dyn__points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::dyn__points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_points"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::PointableDebugGizmos::PointData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IPointable Pointable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IPointable*& Oculus::Interaction::PointableDebugGizmos::dyn_Pointable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::dyn_Pointable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pointable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IPointable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableDebugGizmos::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.get_Radius
float Oculus::Interaction::PointableDebugGizmos::get_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::get_Radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.set_Radius
void Oculus::Interaction::PointableDebugGizmos::set_Radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::set_Radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.get_HoverColor
::UnityEngine::Color Oculus::Interaction::PointableDebugGizmos::get_HoverColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::get_HoverColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HoverColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.set_HoverColor
void Oculus::Interaction::PointableDebugGizmos::set_HoverColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::set_HoverColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HoverColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.get_SelectColor
::UnityEngine::Color Oculus::Interaction::PointableDebugGizmos::get_SelectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::get_SelectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.set_SelectColor
void Oculus::Interaction::PointableDebugGizmos::set_SelectColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::set_SelectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SelectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.get_DrawAxes
bool Oculus::Interaction::PointableDebugGizmos::get_DrawAxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::get_DrawAxes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DrawAxes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.set_DrawAxes
void Oculus::Interaction::PointableDebugGizmos::set_DrawAxes(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::set_DrawAxes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DrawAxes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.Reset
void Oculus::Interaction::PointableDebugGizmos::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.Awake
void Oculus::Interaction::PointableDebugGizmos::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableDebugGizmos*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.Start
void Oculus::Interaction::PointableDebugGizmos::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableDebugGizmos*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.OnEnable
void Oculus::Interaction::PointableDebugGizmos::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableDebugGizmos*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.OnDisable
void Oculus::Interaction::PointableDebugGizmos::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableDebugGizmos*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.HandlePointerEventRaised
void Oculus::Interaction::PointableDebugGizmos::HandlePointerEventRaised(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::HandlePointerEventRaised");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePointerEventRaised", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.LateUpdate
void Oculus::Interaction::PointableDebugGizmos::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableDebugGizmos*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.InjectAllPointableDebugGizmos
void Oculus::Interaction::PointableDebugGizmos::InjectAllPointableDebugGizmos(::Oculus::Interaction::IPointable* pointable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::InjectAllPointableDebugGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllPointableDebugGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointable);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos.InjectPointable
void Oculus::Interaction::PointableDebugGizmos::InjectPointable(::Oculus::Interaction::IPointable* pointable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::InjectPointable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPointable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointable);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PointableDebugGizmos/PointData
#include "Oculus/Interaction/PointableDebugGizmos_PointData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose <Pose>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::PointableDebugGizmos::PointData::dyn_$Pose$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::PointData::dyn_$Pose$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Pose>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Selecting>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableDebugGizmos::PointData::dyn_$Selecting$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::PointData::dyn_$Selecting$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Selecting>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos/PointData.get_Pose
::UnityEngine::Pose Oculus::Interaction::PointableDebugGizmos::PointData::get_Pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::PointData::get_Pose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos/PointData.set_Pose
void Oculus::Interaction::PointableDebugGizmos::PointData::set_Pose(::UnityEngine::Pose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::PointData::set_Pose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos/PointData.get_Selecting
bool Oculus::Interaction::PointableDebugGizmos::PointData::get_Selecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::PointData::get_Selecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Selecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugGizmos/PointData.set_Selecting
void Oculus::Interaction::PointableDebugGizmos::PointData::set_Selecting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugGizmos::PointData::set_Selecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Selecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PointableDebugVisual
#include "Oculus/Interaction/PointableDebugVisual.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: Oculus.Interaction.IPointable
#include "Oculus/Interaction/IPointable.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: Oculus.Interaction.PointerEvent
#include "Oculus/Interaction/PointerEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _pointable
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::PointableDebugVisual::dyn__pointable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::dyn__pointable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointable"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::PointableDebugVisual::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PointableDebugVisual::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _hoverColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PointableDebugVisual::dyn__hoverColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::dyn__hoverColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PointableDebugVisual::dyn__selectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::dyn__selectColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IPointable Pointable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IPointable*& Oculus::Interaction::PointableDebugVisual::dyn_Pointable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::dyn_Pointable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pointable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IPointable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Oculus::Interaction::PointableDebugVisual::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hover
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableDebugVisual::dyn__hover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::dyn__hover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _select
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableDebugVisual::dyn__select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::dyn__select");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_select"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableDebugVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.get_NormalColor
::UnityEngine::Color Oculus::Interaction::PointableDebugVisual::get_NormalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::get_NormalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NormalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.set_NormalColor
void Oculus::Interaction::PointableDebugVisual::set_NormalColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::set_NormalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NormalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.get_HoverColor
::UnityEngine::Color Oculus::Interaction::PointableDebugVisual::get_HoverColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::get_HoverColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HoverColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.set_HoverColor
void Oculus::Interaction::PointableDebugVisual::set_HoverColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::set_HoverColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HoverColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.get_SelectColor
::UnityEngine::Color Oculus::Interaction::PointableDebugVisual::get_SelectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::get_SelectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.set_SelectColor
void Oculus::Interaction::PointableDebugVisual::set_SelectColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::set_SelectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SelectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.Awake
void Oculus::Interaction::PointableDebugVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableDebugVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.Start
void Oculus::Interaction::PointableDebugVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableDebugVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.OnEnable
void Oculus::Interaction::PointableDebugVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableDebugVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.OnDisable
void Oculus::Interaction::PointableDebugVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableDebugVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.OnDestroy
void Oculus::Interaction::PointableDebugVisual::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.HandlePointerEventRaised
void Oculus::Interaction::PointableDebugVisual::HandlePointerEventRaised(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::HandlePointerEventRaised");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePointerEventRaised", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.UpdateMaterialColor
void Oculus::Interaction::PointableDebugVisual::UpdateMaterialColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::UpdateMaterialColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterialColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.InjectAllPointableDebugVisual
void Oculus::Interaction::PointableDebugVisual::InjectAllPointableDebugVisual(::Oculus::Interaction::IPointable* pointable, ::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::InjectAllPointableDebugVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllPointableDebugVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointable), ::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointable, renderer);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.InjectPointable
void Oculus::Interaction::PointableDebugVisual::InjectPointable(::Oculus::Interaction::IPointable* pointable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::InjectPointable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPointable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointable);
}
// Autogenerated method: Oculus.Interaction.PointableDebugVisual.InjectRenderer
void Oculus::Interaction::PointableDebugVisual::InjectRenderer(::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableDebugVisual::InjectRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PointableElement
#include "Oculus/Interaction/PointableElement.hpp"
// Including type: Oculus.Interaction.PointableElement/<>c
#include "Oculus/Interaction/PointableElement_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _transferOnSecondSelection
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableElement::dyn__transferOnSecondSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::dyn__transferOnSecondSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transferOnSecondSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _addNewPointsToFront
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableElement::dyn__addNewPointsToFront() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::dyn__addNewPointsToFront");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_addNewPointsToFront"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _forwardElement
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::PointableElement::dyn__forwardElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::dyn__forwardElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forwardElement"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IPointableElement <ForwardElement>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IPointableElement*& Oculus::Interaction::PointableElement::dyn_$ForwardElement$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::dyn_$ForwardElement$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ForwardElement>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IPointableElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Oculus.Interaction.PointerEvent> WhenPointerEventRaised
[[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::PointerEvent>*& Oculus::Interaction::PointableElement::dyn_WhenPointerEventRaised() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::dyn_WhenPointerEventRaised");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenPointerEventRaised"))->offset;
  return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::PointerEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<UnityEngine.Pose> _points
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Pose>*& Oculus::Interaction::PointableElement::dyn__points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::dyn__points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_points"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Pose>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.Int32> _pointIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Oculus::Interaction::PointableElement::dyn__pointIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::dyn__pointIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<UnityEngine.Pose> _selectingPoints
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Pose>*& Oculus::Interaction::PointableElement::dyn__selectingPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::dyn__selectingPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectingPoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Pose>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.Int32> _selectingPointIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Oculus::Interaction::PointableElement::dyn__selectingPointIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::dyn__selectingPointIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectingPointIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableElement::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PointableElement.get_ForwardElement
::Oculus::Interaction::IPointableElement* Oculus::Interaction::PointableElement::get_ForwardElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::get_ForwardElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ForwardElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IPointableElement*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableElement.set_ForwardElement
void Oculus::Interaction::PointableElement::set_ForwardElement(::Oculus::Interaction::IPointableElement* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::set_ForwardElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ForwardElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableElement.get_TransferOnSecondSelection
bool Oculus::Interaction::PointableElement::get_TransferOnSecondSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::get_TransferOnSecondSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransferOnSecondSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableElement.set_TransferOnSecondSelection
void Oculus::Interaction::PointableElement::set_TransferOnSecondSelection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::set_TransferOnSecondSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TransferOnSecondSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableElement.get_AddNewPointsToFront
bool Oculus::Interaction::PointableElement::get_AddNewPointsToFront() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::get_AddNewPointsToFront");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AddNewPointsToFront", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableElement.set_AddNewPointsToFront
void Oculus::Interaction::PointableElement::set_AddNewPointsToFront(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::set_AddNewPointsToFront");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AddNewPointsToFront", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableElement.add_WhenPointerEventRaised
void Oculus::Interaction::PointableElement::add_WhenPointerEventRaised(::System::Action_1<::Oculus::Interaction::PointerEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::add_WhenPointerEventRaised");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableElement.remove_WhenPointerEventRaised
void Oculus::Interaction::PointableElement::remove_WhenPointerEventRaised(::System::Action_1<::Oculus::Interaction::PointerEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::remove_WhenPointerEventRaised");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableElement.get_Points
::System::Collections::Generic::List_1<::UnityEngine::Pose>* Oculus::Interaction::PointableElement::get_Points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::get_Points");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Points", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Pose>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableElement.get_PointsCount
int Oculus::Interaction::PointableElement::get_PointsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::get_PointsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PointsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableElement.get_SelectingPoints
::System::Collections::Generic::List_1<::UnityEngine::Pose>* Oculus::Interaction::PointableElement::get_SelectingPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::get_SelectingPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectingPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Pose>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableElement.get_SelectingPointsCount
int Oculus::Interaction::PointableElement::get_SelectingPointsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::get_SelectingPointsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectingPointsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableElement.Awake
void Oculus::Interaction::PointableElement::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableElement.Start
void Oculus::Interaction::PointableElement::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableElement.OnEnable
void Oculus::Interaction::PointableElement::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableElement.OnDisable
void Oculus::Interaction::PointableElement::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableElement.HandlePointerEventRaised
void Oculus::Interaction::PointableElement::HandlePointerEventRaised(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::HandlePointerEventRaised");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePointerEventRaised", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.PointableElement.ProcessPointerEvent
void Oculus::Interaction::PointableElement::ProcessPointerEvent(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::ProcessPointerEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.PointableElement.Hover
void Oculus::Interaction::PointableElement::Hover(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::Hover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.PointableElement.Move
void Oculus::Interaction::PointableElement::Move(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::Move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.PointableElement.Unhover
void Oculus::Interaction::PointableElement::Unhover(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::Unhover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unhover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.PointableElement.Select
void Oculus::Interaction::PointableElement::Select(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::Select");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Select", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.PointableElement.Unselect
void Oculus::Interaction::PointableElement::Unselect(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::Unselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.PointableElement.Cancel
void Oculus::Interaction::PointableElement::Cancel(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.PointableElement.PointableElementUpdated
void Oculus::Interaction::PointableElement::PointableElementUpdated(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::PointableElementUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.PointableElement.InjectOptionalForwardElement
void Oculus::Interaction::PointableElement::InjectOptionalForwardElement(::Oculus::Interaction::IPointableElement* forwardElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::InjectOptionalForwardElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalForwardElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forwardElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, forwardElement);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PointableElement/<>c
#include "Oculus/Interaction/PointableElement_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.PointableElement/<>c <>9
::Oculus::Interaction::PointableElement::$$c* Oculus::Interaction::PointableElement::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::PointableElement::$$c*>("Oculus.Interaction", "PointableElement/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.PointableElement/<>c <>9
void Oculus::Interaction::PointableElement::$$c::_set_$$9(::Oculus::Interaction::PointableElement::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "PointableElement/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.PointerEvent> <>9__43_0
::System::Action_1<::Oculus::Interaction::PointerEvent>* Oculus::Interaction::PointableElement::$$c::_get_$$9__43_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::$$c::_get_$$9__43_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::PointerEvent>*>("Oculus.Interaction", "PointableElement/<>c", "<>9__43_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.PointerEvent> <>9__43_0
void Oculus::Interaction::PointableElement::$$c::_set_$$9__43_0(::System::Action_1<::Oculus::Interaction::PointerEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::$$c::_set_$$9__43_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "PointableElement/<>c", "<>9__43_0", value)));
}
// Autogenerated method: Oculus.Interaction.PointableElement/<>c..cctor
void Oculus::Interaction::PointableElement::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PointableElement/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableElement/<>c.<.ctor>b__43_0
void Oculus::Interaction::PointableElement::$$c::$_ctor$b__43_0(::Oculus::Interaction::PointerEvent $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableElement::$$c::<.ctor>b__43_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__43_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.VirtualPointable
#include "Oculus/Interaction/VirtualPointable.hpp"
// Including type: Oculus.Interaction.VirtualPointable/<>c
#include "Oculus/Interaction/VirtualPointable_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Oculus.Interaction.UniqueIdentifier
#include "Oculus/Interaction/UniqueIdentifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _grabFlag
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::VirtualPointable::dyn__grabFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::dyn__grabFlag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabFlag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Oculus.Interaction.PointerEvent> WhenPointerEventRaised
[[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::PointerEvent>*& Oculus::Interaction::VirtualPointable::dyn_WhenPointerEventRaised() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::dyn_WhenPointerEventRaised");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenPointerEventRaised"))->offset;
  return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::PointerEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.UniqueIdentifier _id
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::UniqueIdentifier*& Oculus::Interaction::VirtualPointable::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::UniqueIdentifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _currentlyGrabbing
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::VirtualPointable::dyn__currentlyGrabbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::dyn__currentlyGrabbing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentlyGrabbing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.VirtualPointable.add_WhenPointerEventRaised
void Oculus::Interaction::VirtualPointable::add_WhenPointerEventRaised(::System::Action_1<::Oculus::Interaction::PointerEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::add_WhenPointerEventRaised");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::VirtualPointable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.VirtualPointable.remove_WhenPointerEventRaised
void Oculus::Interaction::VirtualPointable::remove_WhenPointerEventRaised(::System::Action_1<::Oculus::Interaction::PointerEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::remove_WhenPointerEventRaised");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::VirtualPointable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.VirtualPointable.Awake
void Oculus::Interaction::VirtualPointable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::VirtualPointable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.VirtualPointable.Update
void Oculus::Interaction::VirtualPointable::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::VirtualPointable*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.VirtualPointable.SetGrabFlag
void Oculus::Interaction::VirtualPointable::SetGrabFlag(bool grabFlag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::SetGrabFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGrabFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabFlag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabFlag);
}
// Autogenerated method: Oculus.Interaction.VirtualPointable.OnDestroy
void Oculus::Interaction::VirtualPointable::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::VirtualPointable*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.VirtualPointable/<>c
#include "Oculus/Interaction/VirtualPointable_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.VirtualPointable/<>c <>9
::Oculus::Interaction::VirtualPointable::$$c* Oculus::Interaction::VirtualPointable::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::VirtualPointable::$$c*>("Oculus.Interaction", "VirtualPointable/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.VirtualPointable/<>c <>9
void Oculus::Interaction::VirtualPointable::$$c::_set_$$9(::Oculus::Interaction::VirtualPointable::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "VirtualPointable/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.PointerEvent> <>9__10_0
::System::Action_1<::Oculus::Interaction::PointerEvent>* Oculus::Interaction::VirtualPointable::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::PointerEvent>*>("Oculus.Interaction", "VirtualPointable/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.PointerEvent> <>9__10_0
void Oculus::Interaction::VirtualPointable::$$c::_set_$$9__10_0(::System::Action_1<::Oculus::Interaction::PointerEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "VirtualPointable/<>c", "<>9__10_0", value)));
}
// Autogenerated method: Oculus.Interaction.VirtualPointable/<>c..cctor
void Oculus::Interaction::VirtualPointable::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "VirtualPointable/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.VirtualPointable/<>c.<.ctor>b__10_0
void Oculus::Interaction::VirtualPointable::$$c::$_ctor$b__10_0(::Oculus::Interaction::PointerEvent $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualPointable::$$c::<.ctor>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IPolyline
#include "Oculus/Interaction/IPolyline.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IPolyline.get_PointsCount
int Oculus::Interaction::IPolyline::get_PointsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IPolyline::get_PointsCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IPolyline*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IPolyline.PointAtIndex
::UnityEngine::Vector3 Oculus::Interaction::IPolyline::PointAtIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IPolyline::PointAtIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IPolyline*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.BecomeChildOfTargetOnStart
#include "Oculus/Interaction/BecomeChildOfTargetOnStart.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::BecomeChildOfTargetOnStart::dyn__target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BecomeChildOfTargetOnStart::dyn__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _keepWorldPosition
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::BecomeChildOfTargetOnStart::dyn__keepWorldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BecomeChildOfTargetOnStart::dyn__keepWorldPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keepWorldPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.BecomeChildOfTargetOnStart.Start
void Oculus::Interaction::BecomeChildOfTargetOnStart::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BecomeChildOfTargetOnStart::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::BecomeChildOfTargetOnStart*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BecomeChildOfTargetOnStart.InjectAllChildToTransform
void Oculus::Interaction::BecomeChildOfTargetOnStart::InjectAllChildToTransform(::UnityEngine::Transform* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BecomeChildOfTargetOnStart::InjectAllChildToTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllChildToTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Oculus.Interaction.BecomeChildOfTargetOnStart.InjectTarget
void Oculus::Interaction::BecomeChildOfTargetOnStart::InjectTarget(::UnityEngine::Transform* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BecomeChildOfTargetOnStart::InjectTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Oculus.Interaction.BecomeChildOfTargetOnStart.InjectOptionalKeepWorldPosition
void Oculus::Interaction::BecomeChildOfTargetOnStart::InjectOptionalKeepWorldPosition(bool keepWorldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BecomeChildOfTargetOnStart::InjectOptionalKeepWorldPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalKeepWorldPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keepWorldPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keepWorldPosition);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandConfidenceVisual
#include "Oculus/Interaction/HandConfidenceVisual.hpp"
// Including type: Oculus.Interaction.HandConfidenceVisual/<>c__DisplayClass18_0
#include "Oculus/Interaction/HandConfidenceVisual_--c__DisplayClass18_0.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.MaterialPropertyBlockEditor
#include "Oculus/Interaction/MaterialPropertyBlockEditor.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandConfidenceVisual::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandConfidenceVisual::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MaterialPropertyBlockEditor _handMaterialPropertyBlockEditor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MaterialPropertyBlockEditor*& Oculus::Interaction::HandConfidenceVisual::dyn__handMaterialPropertyBlockEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::dyn__handMaterialPropertyBlockEditor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handMaterialPropertyBlockEditor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MaterialPropertyBlockEditor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _speed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandConfidenceVisual::dyn__speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::dyn__speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _handConfidenceId
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandConfidenceVisual::dyn__handConfidenceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::dyn__handConfidenceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handConfidenceId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _jointsConfidence
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Oculus::Interaction::HandConfidenceVisual::dyn__jointsConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::dyn__jointsConfidence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointsConfidence"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandConfidenceVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandConfidenceVisual::dyn__lastTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::dyn__lastTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandConfidenceVisual.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::HandConfidenceVisual::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandConfidenceVisual.set_Hand
void Oculus::Interaction::HandConfidenceVisual::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandConfidenceVisual.get_Speed
float Oculus::Interaction::HandConfidenceVisual::get_Speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::get_Speed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Speed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandConfidenceVisual.set_Speed
void Oculus::Interaction::HandConfidenceVisual::set_Speed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::set_Speed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Speed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandConfidenceVisual.Awake
void Oculus::Interaction::HandConfidenceVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandConfidenceVisual.Start
void Oculus::Interaction::HandConfidenceVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandConfidenceVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandConfidenceVisual.OnEnable
void Oculus::Interaction::HandConfidenceVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandConfidenceVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandConfidenceVisual.OnDisable
void Oculus::Interaction::HandConfidenceVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandConfidenceVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandConfidenceVisual.UpdateVisual
void Oculus::Interaction::HandConfidenceVisual::UpdateVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::UpdateVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandConfidenceVisual.InjectAllHandConfidenceVisual
void Oculus::Interaction::HandConfidenceVisual::InjectAllHandConfidenceVisual(::Oculus::Interaction::Input::IHand* hand, ::Oculus::Interaction::MaterialPropertyBlockEditor* handMaterialPropertyBlockEditor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::InjectAllHandConfidenceVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandConfidenceVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(handMaterialPropertyBlockEditor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, handMaterialPropertyBlockEditor);
}
// Autogenerated method: Oculus.Interaction.HandConfidenceVisual.InjectHand
void Oculus::Interaction::HandConfidenceVisual::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandConfidenceVisual.InjectHandMaterialPropertyBlockEditor
void Oculus::Interaction::HandConfidenceVisual::InjectHandMaterialPropertyBlockEditor(::Oculus::Interaction::MaterialPropertyBlockEditor* handMaterialPropertyBlockEditor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::InjectHandMaterialPropertyBlockEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandMaterialPropertyBlockEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handMaterialPropertyBlockEditor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handMaterialPropertyBlockEditor);
}
// Autogenerated method: Oculus.Interaction.HandConfidenceVisual.<UpdateVisual>g__FillConfidence|18_0
void Oculus::Interaction::HandConfidenceVisual::$UpdateVisual$g__FillConfidence_18_0(::Oculus::Interaction::Input::HandFinger finger, int offset, int lenght, ByRef<::Oculus::Interaction::HandConfidenceVisual::$$c__DisplayClass18_0> param_3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandConfidenceVisual::<UpdateVisual>g__FillConfidence|18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateVisual>g__FillConfidence|18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finger), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(lenght), ::il2cpp_utils::ExtractType(param_3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finger, offset, lenght, byref(param_3));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandDebugVisual
#include "Oculus/Interaction/HandDebugVisual.hpp"
// Including type: Oculus.Interaction.HandDebugVisual/<>c
#include "Oculus/Interaction/HandDebugVisual_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
// Including type: UnityEngine.Space
#include "UnityEngine/Space.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandDebugVisual::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ForceOffVisibility>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandDebugVisual::dyn_$ForceOffVisibility$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::dyn_$ForceOffVisibility$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ForceOffVisibility>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenHandVisualUpdated
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::HandDebugVisual::dyn_WhenHandVisualUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::dyn_WhenHandVisualUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenHandVisualUpdated"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isVisible
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandDebugVisual::dyn__isVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::dyn__isVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandDebugVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::HandDebugVisual::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::get_Hand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandDebugVisual*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual.get_ForceOffVisibility
bool Oculus::Interaction::HandDebugVisual::get_ForceOffVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::get_ForceOffVisibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandDebugVisual*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual.set_ForceOffVisibility
void Oculus::Interaction::HandDebugVisual::set_ForceOffVisibility(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::set_ForceOffVisibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandDebugVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual.get_IsVisible
bool Oculus::Interaction::HandDebugVisual::get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::get_IsVisible");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandDebugVisual*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual.add_WhenHandVisualUpdated
void Oculus::Interaction::HandDebugVisual::add_WhenHandVisualUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::add_WhenHandVisualUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandDebugVisual*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual.remove_WhenHandVisualUpdated
void Oculus::Interaction::HandDebugVisual::remove_WhenHandVisualUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::remove_WhenHandVisualUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandDebugVisual*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual.Start
void Oculus::Interaction::HandDebugVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandDebugVisual*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual.OnEnable
void Oculus::Interaction::HandDebugVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandDebugVisual*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual.OnDisable
void Oculus::Interaction::HandDebugVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandDebugVisual*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual.LateUpdate
void Oculus::Interaction::HandDebugVisual::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandDebugVisual*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual.OnDrawGizmos
void Oculus::Interaction::HandDebugVisual::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual.Draw
void Oculus::Interaction::HandDebugVisual::Draw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::Draw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Draw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual.UpdateSkeleton
void Oculus::Interaction::HandDebugVisual::UpdateSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::UpdateSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual.GetJointPose
::UnityEngine::Pose Oculus::Interaction::HandDebugVisual::GetJointPose(::Oculus::Interaction::Input::HandJointId jointId, ::UnityEngine::Space space) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::GetJointPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandDebugVisual*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, jointId, space);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandDebugVisual/<>c
#include "Oculus/Interaction/HandDebugVisual_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.HandDebugVisual/<>c <>9
::Oculus::Interaction::HandDebugVisual::$$c* Oculus::Interaction::HandDebugVisual::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandDebugVisual::$$c*>("Oculus.Interaction", "HandDebugVisual/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.HandDebugVisual/<>c <>9
void Oculus::Interaction::HandDebugVisual::$$c::_set_$$9(::Oculus::Interaction::HandDebugVisual::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandDebugVisual/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__22_0
::System::Action* Oculus::Interaction::HandDebugVisual::$$c::_get_$$9__22_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::$$c::_get_$$9__22_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "HandDebugVisual/<>c", "<>9__22_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__22_0
void Oculus::Interaction::HandDebugVisual::$$c::_set_$$9__22_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::$$c::_set_$$9__22_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandDebugVisual/<>c", "<>9__22_0", value)));
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual/<>c..cctor
void Oculus::Interaction::HandDebugVisual::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "HandDebugVisual/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandDebugVisual/<>c.<.ctor>b__22_0
void Oculus::Interaction::HandDebugVisual::$$c::$_ctor$b__22_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandDebugVisual::$$c::<.ctor>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandVisual
#include "Oculus/Interaction/HandVisual.hpp"
// Including type: Oculus.Interaction.HandVisual/<>c
#include "Oculus/Interaction/HandVisual_--c.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.MaterialPropertyBlockEditor
#include "Oculus/Interaction/MaterialPropertyBlockEditor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: UnityEngine.Space
#include "UnityEngine/Space.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandVisual::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandVisual::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _skinnedMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& Oculus::Interaction::HandVisual::dyn__skinnedMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::dyn__skinnedMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skinnedMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _updateRootPose
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandVisual::dyn__updateRootPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::dyn__updateRootPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateRootPose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _updateRootScale
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandVisual::dyn__updateRootScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::dyn__updateRootScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateRootScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _root
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::HandVisual::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MaterialPropertyBlockEditor _handMaterialPropertyBlockEditor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MaterialPropertyBlockEditor*& Oculus::Interaction::HandVisual::dyn__handMaterialPropertyBlockEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::dyn__handMaterialPropertyBlockEditor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handMaterialPropertyBlockEditor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MaterialPropertyBlockEditor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Transform> _jointTransforms
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& Oculus::Interaction::HandVisual::dyn__jointTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::dyn__jointTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointTransforms"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenHandVisualUpdated
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::HandVisual::dyn_WhenHandVisualUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::dyn_WhenHandVisualUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenHandVisualUpdated"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _wristScalePropertyId
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandVisual::dyn__wristScalePropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::dyn__wristScalePropertyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wristScalePropertyId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ForceOffVisibility>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandVisual::dyn_$ForceOffVisibility$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::dyn_$ForceOffVisibility$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ForceOffVisibility>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandVisual.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::HandVisual::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::get_Hand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandVisual*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandVisual.set_Hand
void Oculus::Interaction::HandVisual::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandVisual.add_WhenHandVisualUpdated
void Oculus::Interaction::HandVisual::add_WhenHandVisualUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::add_WhenHandVisualUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandVisual*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandVisual.remove_WhenHandVisualUpdated
void Oculus::Interaction::HandVisual::remove_WhenHandVisualUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::remove_WhenHandVisualUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandVisual*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandVisual.get_IsVisible
bool Oculus::Interaction::HandVisual::get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::get_IsVisible");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandVisual*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandVisual.get_Joints
::System::Collections::Generic::IList_1<::UnityEngine::Transform*>* Oculus::Interaction::HandVisual::get_Joints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::get_Joints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Joints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::UnityEngine::Transform*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandVisual.get_ForceOffVisibility
bool Oculus::Interaction::HandVisual::get_ForceOffVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::get_ForceOffVisibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandVisual*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandVisual.set_ForceOffVisibility
void Oculus::Interaction::HandVisual::set_ForceOffVisibility(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::set_ForceOffVisibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandVisual.Awake
void Oculus::Interaction::HandVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandVisual*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandVisual.Start
void Oculus::Interaction::HandVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandVisual*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandVisual.OnEnable
void Oculus::Interaction::HandVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandVisual*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandVisual.OnDisable
void Oculus::Interaction::HandVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandVisual*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandVisual.UpdateSkeleton
void Oculus::Interaction::HandVisual::UpdateSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::UpdateSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandVisual.GetTransformByHandJointId
::UnityEngine::Transform* Oculus::Interaction::HandVisual::GetTransformByHandJointId(::Oculus::Interaction::Input::HandJointId handJointId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::GetTransformByHandJointId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransformByHandJointId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handJointId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, handJointId);
}
// Autogenerated method: Oculus.Interaction.HandVisual.GetJointPose
::UnityEngine::Pose Oculus::Interaction::HandVisual::GetJointPose(::Oculus::Interaction::Input::HandJointId jointId, ::UnityEngine::Space space) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::GetJointPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandVisual*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, jointId, space);
}
// Autogenerated method: Oculus.Interaction.HandVisual.InjectAllHandSkeletonVisual
void Oculus::Interaction::HandVisual::InjectAllHandSkeletonVisual(::Oculus::Interaction::Input::IHand* hand, ::UnityEngine::SkinnedMeshRenderer* skinnedMeshRenderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::InjectAllHandSkeletonVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandSkeletonVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(skinnedMeshRenderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, skinnedMeshRenderer);
}
// Autogenerated method: Oculus.Interaction.HandVisual.InjectHand
void Oculus::Interaction::HandVisual::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandVisual.InjectSkinnedMeshRenderer
void Oculus::Interaction::HandVisual::InjectSkinnedMeshRenderer(::UnityEngine::SkinnedMeshRenderer* skinnedMeshRenderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::InjectSkinnedMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSkinnedMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skinnedMeshRenderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skinnedMeshRenderer);
}
// Autogenerated method: Oculus.Interaction.HandVisual.InjectOptionalUpdateRootPose
void Oculus::Interaction::HandVisual::InjectOptionalUpdateRootPose(bool updateRootPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::InjectOptionalUpdateRootPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalUpdateRootPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateRootPose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateRootPose);
}
// Autogenerated method: Oculus.Interaction.HandVisual.InjectOptionalUpdateRootScale
void Oculus::Interaction::HandVisual::InjectOptionalUpdateRootScale(bool updateRootScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::InjectOptionalUpdateRootScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalUpdateRootScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateRootScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateRootScale);
}
// Autogenerated method: Oculus.Interaction.HandVisual.InjectOptionalRoot
void Oculus::Interaction::HandVisual::InjectOptionalRoot(::UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::InjectOptionalRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, root);
}
// Autogenerated method: Oculus.Interaction.HandVisual.InjectOptionalMaterialPropertyBlockEditor
void Oculus::Interaction::HandVisual::InjectOptionalMaterialPropertyBlockEditor(::Oculus::Interaction::MaterialPropertyBlockEditor* editor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::InjectOptionalMaterialPropertyBlockEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalMaterialPropertyBlockEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(editor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, editor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandVisual/<>c
#include "Oculus/Interaction/HandVisual_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.HandVisual/<>c <>9
::Oculus::Interaction::HandVisual::$$c* Oculus::Interaction::HandVisual::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandVisual::$$c*>("Oculus.Interaction", "HandVisual/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.HandVisual/<>c <>9
void Oculus::Interaction::HandVisual::$$c::_set_$$9(::Oculus::Interaction::HandVisual::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandVisual/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__38_0
::System::Action* Oculus::Interaction::HandVisual::$$c::_get_$$9__38_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::$$c::_get_$$9__38_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "HandVisual/<>c", "<>9__38_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__38_0
void Oculus::Interaction::HandVisual::$$c::_set_$$9__38_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::$$c::_set_$$9__38_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandVisual/<>c", "<>9__38_0", value)));
}
// Autogenerated method: Oculus.Interaction.HandVisual/<>c..cctor
void Oculus::Interaction::HandVisual::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "HandVisual/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandVisual/<>c.<.ctor>b__38_0
void Oculus::Interaction::HandVisual::$$c::$_ctor$b__38_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandVisual::$$c::<.ctor>b__38_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__38_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IHandVisual
#include "Oculus/Interaction/IHandVisual.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
// Including type: UnityEngine.Space
#include "UnityEngine/Space.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IHandVisual.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::IHandVisual::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IHandVisual::get_Hand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IHandVisual*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IHandVisual.get_IsVisible
bool Oculus::Interaction::IHandVisual::get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IHandVisual::get_IsVisible");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IHandVisual*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IHandVisual.get_ForceOffVisibility
bool Oculus::Interaction::IHandVisual::get_ForceOffVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IHandVisual::get_ForceOffVisibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IHandVisual*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IHandVisual.set_ForceOffVisibility
void Oculus::Interaction::IHandVisual::set_ForceOffVisibility(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IHandVisual::set_ForceOffVisibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IHandVisual*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IHandVisual.GetJointPose
::UnityEngine::Pose Oculus::Interaction::IHandVisual::GetJointPose(::Oculus::Interaction::Input::HandJointId jointId, ::UnityEngine::Space space) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IHandVisual::GetJointPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IHandVisual*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, jointId, space);
}
// Autogenerated method: Oculus.Interaction.IHandVisual.add_WhenHandVisualUpdated
void Oculus::Interaction::IHandVisual::add_WhenHandVisualUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IHandVisual::add_WhenHandVisualUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IHandVisual*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IHandVisual.remove_WhenHandVisualUpdated
void Oculus::Interaction::IHandVisual::remove_WhenHandVisualUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IHandVisual::remove_WhenHandVisualUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IHandVisual*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
