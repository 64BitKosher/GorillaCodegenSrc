// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Swimming.PlayerSwimmingParameters
#include "GorillaLocomotion/Swimming/PlayerSwimmingParameters.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single floatingWaterLevelBelowHead
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_floatingWaterLevelBelowHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_floatingWaterLevelBelowHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floatingWaterLevelBelowHead"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single buoyancyFadeDist
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_buoyancyFadeDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_buoyancyFadeDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buoyancyFadeDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean extendBouyancyFromSpeed
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_extendBouyancyFromSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_extendBouyancyFromSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extendBouyancyFromSpeed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single buoyancyExtensionDecayHalflife
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_buoyancyExtensionDecayHalflife() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_buoyancyExtensionDecayHalflife");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buoyancyExtensionDecayHalflife"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single baseUnderWaterDampingHalfLife
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_baseUnderWaterDampingHalfLife() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_baseUnderWaterDampingHalfLife");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseUnderWaterDampingHalfLife"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single swimUnderWaterDampingHalfLife
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_swimUnderWaterDampingHalfLife() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_swimUnderWaterDampingHalfLife");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swimUnderWaterDampingHalfLife"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve speedToBouyancyExtension
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_speedToBouyancyExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_speedToBouyancyExtension");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speedToBouyancyExtension"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 speedToBouyancyExtensionMinMax
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_speedToBouyancyExtensionMinMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_speedToBouyancyExtensionMinMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speedToBouyancyExtensionMinMax"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single swimmingVelocityOutOfWaterDrainRate
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_swimmingVelocityOutOfWaterDrainRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_swimmingVelocityOutOfWaterDrainRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swimmingVelocityOutOfWaterDrainRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single underwaterJumpsAsSwimVelocityFactor
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_underwaterJumpsAsSwimVelocityFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_underwaterJumpsAsSwimVelocityFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "underwaterJumpsAsSwimVelocityFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single swimmingHapticsStrength
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_swimmingHapticsStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_swimmingHapticsStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swimmingHapticsStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean allowWaterSurfaceJumps
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_allowWaterSurfaceJumps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_allowWaterSurfaceJumps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowWaterSurfaceJumps"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single waterSurfaceJumpHandSpeedThreshold
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_waterSurfaceJumpHandSpeedThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_waterSurfaceJumpHandSpeedThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waterSurfaceJumpHandSpeedThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single waterSurfaceJumpAmount
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_waterSurfaceJumpAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_waterSurfaceJumpAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waterSurfaceJumpAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single waterSurfaceJumpMaxSpeed
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_waterSurfaceJumpMaxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_waterSurfaceJumpMaxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waterSurfaceJumpMaxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve waterSurfaceJumpPalmFacingCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_waterSurfaceJumpPalmFacingCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_waterSurfaceJumpPalmFacingCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waterSurfaceJumpPalmFacingCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve waterSurfaceJumpHandVelocityFacingCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_waterSurfaceJumpHandVelocityFacingCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_waterSurfaceJumpHandVelocityFacingCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waterSurfaceJumpHandVelocityFacingCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean applyDiveSteering
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_applyDiveSteering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_applyDiveSteering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyDiveSteering"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean applyDiveDampingMultiplier
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_applyDiveDampingMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_applyDiveDampingMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyDiveDampingMultiplier"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single diveDampingMultiplier
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_diveDampingMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_diveDampingMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "diveDampingMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDiveSteerAnglePerStep
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_maxDiveSteerAnglePerStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_maxDiveSteerAnglePerStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDiveSteerAnglePerStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single diveVelocityAveragingWindow
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_diveVelocityAveragingWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_diveVelocityAveragingWindow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "diveVelocityAveragingWindow"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean applyDiveSwimVelocityConversion
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_applyDiveSwimVelocityConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_applyDiveSwimVelocityConversion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyDiveSwimVelocityConversion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single diveSwimVelocityConversionRate
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_diveSwimVelocityConversionRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_diveSwimVelocityConversionRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "diveSwimVelocityConversionRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single diveMaxSwimVelocityConversion
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_diveMaxSwimVelocityConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_diveMaxSwimVelocityConversion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "diveMaxSwimVelocityConversion"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean reduceDiveSteeringBelowVelocityPlane
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_reduceDiveSteeringBelowVelocityPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_reduceDiveSteeringBelowVelocityPlane");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reduceDiveSteeringBelowVelocityPlane"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single reduceDiveSteeringBelowPlaneFadeStartDist
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_reduceDiveSteeringBelowPlaneFadeStartDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_reduceDiveSteeringBelowPlaneFadeStartDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reduceDiveSteeringBelowPlaneFadeStartDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single reduceDiveSteeringBelowPlaneFadeEndDist
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_reduceDiveSteeringBelowPlaneFadeEndDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_reduceDiveSteeringBelowPlaneFadeEndDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reduceDiveSteeringBelowPlaneFadeEndDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve palmFacingToRedirectAmount
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_palmFacingToRedirectAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_palmFacingToRedirectAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "palmFacingToRedirectAmount"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 palmFacingToRedirectAmountMinMax
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_palmFacingToRedirectAmountMinMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_palmFacingToRedirectAmountMinMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "palmFacingToRedirectAmountMinMax"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve swimSpeedToRedirectAmount
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_swimSpeedToRedirectAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_swimSpeedToRedirectAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swimSpeedToRedirectAmount"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 swimSpeedToRedirectAmountMinMax
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_swimSpeedToRedirectAmountMinMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_swimSpeedToRedirectAmountMinMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swimSpeedToRedirectAmountMinMax"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve swimSpeedToMaxRedirectAngle
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_swimSpeedToMaxRedirectAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_swimSpeedToMaxRedirectAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swimSpeedToMaxRedirectAngle"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 swimSpeedToMaxRedirectAngleMinMax
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_swimSpeedToMaxRedirectAngleMinMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_swimSpeedToMaxRedirectAngleMinMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swimSpeedToMaxRedirectAngleMinMax"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve handSpeedToRedirectAmount
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_handSpeedToRedirectAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_handSpeedToRedirectAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handSpeedToRedirectAmount"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 handSpeedToRedirectAmountMinMax
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_handSpeedToRedirectAmountMinMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_handSpeedToRedirectAmountMinMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handSpeedToRedirectAmountMinMax"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve handAccelToRedirectAmount
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_handAccelToRedirectAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_handAccelToRedirectAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handAccelToRedirectAmount"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 handAccelToRedirectAmountMinMax
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_handAccelToRedirectAmountMinMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_handAccelToRedirectAmountMinMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handAccelToRedirectAmountMinMax"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve nonDiveDampingHapticsAmount
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_nonDiveDampingHapticsAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_nonDiveDampingHapticsAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nonDiveDampingHapticsAmount"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 nonDiveDampingHapticsAmountMinMax
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_nonDiveDampingHapticsAmountMinMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::PlayerSwimmingParameters::dyn_nonDiveDampingHapticsAmountMinMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nonDiveDampingHapticsAmountMinMax"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Swimming.RigidbodyWaterInteraction
#include "GorillaLocomotion/Swimming/RigidbodyWaterInteraction.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaLocomotion.Swimming.WaterVolume
#include "GorillaLocomotion/Swimming/WaterVolume.hpp"
// Including type: GorillaLocomotion.Swimming.WaterCurrent
#include "GorillaLocomotion/Swimming/WaterCurrent.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean applyDamping
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_applyDamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_applyDamping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyDamping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean applyBuoyancyForce
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_applyBuoyancyForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_applyBuoyancyForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyBuoyancyForce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean applyAngularDrag
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_applyAngularDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_applyAngularDrag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyAngularDrag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean applyWaterCurrents
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_applyWaterCurrents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_applyWaterCurrents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyWaterCurrents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean applySurfaceTorque
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_applySurfaceTorque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_applySurfaceTorque");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applySurfaceTorque"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single underWaterDampingHalfLife
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_underWaterDampingHalfLife() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_underWaterDampingHalfLife");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "underWaterDampingHalfLife"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single waterSurfaceDampingHalfLife
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_waterSurfaceDampingHalfLife() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_waterSurfaceDampingHalfLife");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waterSurfaceDampingHalfLife"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single underWaterBuoyancyFactor
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_underWaterBuoyancyFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_underWaterBuoyancyFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "underWaterBuoyancyFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angularDrag
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_angularDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_angularDrag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angularDrag"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single surfaceTorqueAmount
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_surfaceTorqueAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_surfaceTorqueAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "surfaceTorqueAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enablePreciseWaterCollision
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_enablePreciseWaterCollision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_enablePreciseWaterCollision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enablePreciseWaterCollision"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single objectRadiusForWaterCollision
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_objectRadiusForWaterCollision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_objectRadiusForWaterCollision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectRadiusForWaterCollision"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single buoyancyEquilibrium
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_buoyancyEquilibrium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_buoyancyEquilibrium");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buoyancyEquilibrium"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody rb
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_rb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_rb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rb"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<GorillaLocomotion.Swimming.WaterVolume> overlappingWaterVolumes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaLocomotion::Swimming::WaterVolume*>*& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_overlappingWaterVolumes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_overlappingWaterVolumes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overlappingWaterVolumes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaLocomotion::Swimming::WaterVolume*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<GorillaLocomotion.Swimming.WaterCurrent> activeWaterCurrents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaLocomotion::Swimming::WaterCurrent*>*& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_activeWaterCurrents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_activeWaterCurrents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeWaterCurrents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaLocomotion::Swimming::WaterCurrent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single baseAngularDrag
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_baseAngularDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::dyn_baseAngularDrag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseAngularDrag"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Swimming.RigidbodyWaterInteraction.Awake
void GorillaLocomotion::Swimming::RigidbodyWaterInteraction::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.RigidbodyWaterInteraction.OnEnable
void GorillaLocomotion::Swimming::RigidbodyWaterInteraction::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.RigidbodyWaterInteraction.OnDisable
void GorillaLocomotion::Swimming::RigidbodyWaterInteraction::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.RigidbodyWaterInteraction.OnDestroy
void GorillaLocomotion::Swimming::RigidbodyWaterInteraction::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.RigidbodyWaterInteraction.InvokeFixedUpdate
void GorillaLocomotion::Swimming::RigidbodyWaterInteraction::InvokeFixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::InvokeFixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeFixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.RigidbodyWaterInteraction.OnTriggerEnter
void GorillaLocomotion::Swimming::RigidbodyWaterInteraction::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaLocomotion.Swimming.RigidbodyWaterInteraction.OnTriggerExit
void GorillaLocomotion::Swimming::RigidbodyWaterInteraction::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteraction::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Swimming.RigidbodyWaterInteractionManager
#include "GorillaLocomotion/Swimming/RigidbodyWaterInteractionManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaLocomotion.Swimming.RigidbodyWaterInteraction
#include "GorillaLocomotion/Swimming/RigidbodyWaterInteraction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaLocomotion.Swimming.RigidbodyWaterInteractionManager instance
::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager* GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager*>("GorillaLocomotion.Swimming", "RigidbodyWaterInteractionManager", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaLocomotion.Swimming.RigidbodyWaterInteractionManager instance
void GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::_set_instance(::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Swimming", "RigidbodyWaterInteractionManager", "instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean hasInstance
bool GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::_get_hasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::_get_hasInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("GorillaLocomotion.Swimming", "RigidbodyWaterInteractionManager", "hasInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean hasInstance
void GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::_set_hasInstance(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::_set_hasInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Swimming", "RigidbodyWaterInteractionManager", "hasInstance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<GorillaLocomotion.Swimming.RigidbodyWaterInteraction> allrBWI
::System::Collections::Generic::List_1<::GorillaLocomotion::Swimming::RigidbodyWaterInteraction*>* GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::_get_allrBWI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::_get_allrBWI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GorillaLocomotion::Swimming::RigidbodyWaterInteraction*>*>("GorillaLocomotion.Swimming", "RigidbodyWaterInteractionManager", "allrBWI"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<GorillaLocomotion.Swimming.RigidbodyWaterInteraction> allrBWI
void GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::_set_allrBWI(::System::Collections::Generic::List_1<::GorillaLocomotion::Swimming::RigidbodyWaterInteraction*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::_set_allrBWI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Swimming", "RigidbodyWaterInteractionManager", "allrBWI", value));
}
// Autogenerated method: GorillaLocomotion.Swimming.RigidbodyWaterInteractionManager.Awake
void GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.RigidbodyWaterInteractionManager.CreateManager
void GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::CreateManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::CreateManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Swimming", "RigidbodyWaterInteractionManager", "CreateManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.RigidbodyWaterInteractionManager.SetInstance
void GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::SetInstance(::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::SetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Swimming", "RigidbodyWaterInteractionManager", "SetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, manager);
}
// Autogenerated method: GorillaLocomotion.Swimming.RigidbodyWaterInteractionManager.RegisterRBWI
void GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::RegisterRBWI(::GorillaLocomotion::Swimming::RigidbodyWaterInteraction* rbWI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::RegisterRBWI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Swimming", "RigidbodyWaterInteractionManager", "RegisterRBWI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rbWI)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rbWI);
}
// Autogenerated method: GorillaLocomotion.Swimming.RigidbodyWaterInteractionManager.UnregisterRBWI
void GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::UnregisterRBWI(::GorillaLocomotion::Swimming::RigidbodyWaterInteraction* rbWI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::UnregisterRBWI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Swimming", "RigidbodyWaterInteractionManager", "UnregisterRBWI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rbWI)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rbWI);
}
// Autogenerated method: GorillaLocomotion.Swimming.RigidbodyWaterInteractionManager.FixedUpdate
void GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.RigidbodyWaterInteractionManager..cctor
void GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::RigidbodyWaterInteractionManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Swimming", "RigidbodyWaterInteractionManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Swimming.UnderwaterCameraEffect
#include "GorillaLocomotion/Swimming/UnderwaterCameraEffect.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: GorillaLocomotion.Swimming.UnderwaterParticleEffects
#include "GorillaLocomotion/Swimming/UnderwaterParticleEffects.hpp"
// Including type: UnityEngine.Plane
#include "UnityEngine/Plane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single edgeBuffer
float GorillaLocomotion::Swimming::UnderwaterCameraEffect::_get_edgeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::_get_edgeBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaLocomotion.Swimming", "UnderwaterCameraEffect", "edgeBuffer"));
}
// Autogenerated static field setter
// Set static field: static private System.Single edgeBuffer
void GorillaLocomotion::Swimming::UnderwaterCameraEffect::_set_edgeBuffer(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::_set_edgeBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Swimming", "UnderwaterCameraEffect", "edgeBuffer", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kShaderKeyword_GlobalCameraTouchingWater
::StringW GorillaLocomotion::Swimming::UnderwaterCameraEffect::_get_kShaderKeyword_GlobalCameraTouchingWater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::_get_kShaderKeyword_GlobalCameraTouchingWater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("GorillaLocomotion.Swimming", "UnderwaterCameraEffect", "kShaderKeyword_GlobalCameraTouchingWater"));
}
// Autogenerated static field setter
// Set static field: static private System.String kShaderKeyword_GlobalCameraTouchingWater
void GorillaLocomotion::Swimming::UnderwaterCameraEffect::_set_kShaderKeyword_GlobalCameraTouchingWater(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::_set_kShaderKeyword_GlobalCameraTouchingWater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Swimming", "UnderwaterCameraEffect", "kShaderKeyword_GlobalCameraTouchingWater", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kShaderKeyword_GlobalCameraFullyUnderwater
::StringW GorillaLocomotion::Swimming::UnderwaterCameraEffect::_get_kShaderKeyword_GlobalCameraFullyUnderwater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::_get_kShaderKeyword_GlobalCameraFullyUnderwater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("GorillaLocomotion.Swimming", "UnderwaterCameraEffect", "kShaderKeyword_GlobalCameraFullyUnderwater"));
}
// Autogenerated static field setter
// Set static field: static private System.String kShaderKeyword_GlobalCameraFullyUnderwater
void GorillaLocomotion::Swimming::UnderwaterCameraEffect::_set_kShaderKeyword_GlobalCameraFullyUnderwater(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::_set_kShaderKeyword_GlobalCameraFullyUnderwater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Swimming", "UnderwaterCameraEffect", "kShaderKeyword_GlobalCameraFullyUnderwater", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera targetCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_targetCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_targetCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer planeRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_planeRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_planeRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "planeRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Swimming.UnderwaterParticleEffects underwaterParticleEffect
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Swimming::UnderwaterParticleEffects*& GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_underwaterParticleEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_underwaterParticleEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "underwaterParticleEffect"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Swimming::UnderwaterParticleEffects**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single distanceFromCamera
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_distanceFromCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_distanceFromCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distanceFromCamera"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean debugDraw
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_debugDraw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_debugDraw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugDraw"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single cachedAspectRatio
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_cachedAspectRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_cachedAspectRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedAspectRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single cachedFov
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_cachedFov() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_cachedFov");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedFov"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] frustumPlaneCornersLocal
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_frustumPlaneCornersLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_frustumPlaneCornersLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frustumPlaneCornersLocal"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 frustumPlaneExtents
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_frustumPlaneExtents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_frustumPlaneExtents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frustumPlaneExtents"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Player player
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Player*& GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Swimming.WaterVolume/SurfaceQuery waterSurface
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Swimming::WaterVolume::SurfaceQuery& GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_waterSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_waterSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waterSurface"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Swimming::WaterVolume::SurfaceQuery*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 shaderParam_GlobalCameraOverlapWaterSurfacePlane
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_shaderParam_GlobalCameraOverlapWaterSurfacePlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_shaderParam_GlobalCameraOverlapWaterSurfacePlane");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shaderParam_GlobalCameraOverlapWaterSurfacePlane"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasTargetCamera
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_hasTargetCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_hasTargetCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasTargetCamera"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Swimming.UnderwaterCameraEffect/CameraOverlapWaterState cameraOverlapWaterState
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState& GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_cameraOverlapWaterState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::dyn_cameraOverlapWaterState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraOverlapWaterState"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Swimming.UnderwaterCameraEffect.SetOffScreenPosition
void GorillaLocomotion::Swimming::UnderwaterCameraEffect::SetOffScreenPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::SetOffScreenPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOffScreenPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.UnderwaterCameraEffect.SetFullScreenPosition
void GorillaLocomotion::Swimming::UnderwaterCameraEffect::SetFullScreenPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::SetFullScreenPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFullScreenPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.UnderwaterCameraEffect.OnEnable
void GorillaLocomotion::Swimming::UnderwaterCameraEffect::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.UnderwaterCameraEffect.Start
void GorillaLocomotion::Swimming::UnderwaterCameraEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.UnderwaterCameraEffect.LateUpdate
void GorillaLocomotion::Swimming::UnderwaterCameraEffect::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.UnderwaterCameraEffect.InitializeShaderProperties
void GorillaLocomotion::Swimming::UnderwaterCameraEffect::InitializeShaderProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::InitializeShaderProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeShaderProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.UnderwaterCameraEffect.SetCameraOverlapState
void GorillaLocomotion::Swimming::UnderwaterCameraEffect::SetCameraOverlapState(::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::SetCameraOverlapState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCameraOverlapState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: GorillaLocomotion.Swimming.UnderwaterCameraEffect.CalculateFrustumPlaneBounds
void GorillaLocomotion::Swimming::UnderwaterCameraEffect::CalculateFrustumPlaneBounds(float fieldOfView, float aspectRatio) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CalculateFrustumPlaneBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateFrustumPlaneBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldOfView), ::il2cpp_utils::ExtractType(aspectRatio)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fieldOfView, aspectRatio);
}
// Autogenerated method: GorillaLocomotion.Swimming.UnderwaterCameraEffect.IntersectPlanes
bool GorillaLocomotion::Swimming::UnderwaterCameraEffect::IntersectPlanes(::UnityEngine::Plane p1, ::UnityEngine::Plane p2, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::IntersectPlanes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IntersectPlanes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p1, p2, byref(point), byref(direction));
}
// Autogenerated method: GorillaLocomotion.Swimming.UnderwaterCameraEffect.GetFrustumCoverageDistance
float GorillaLocomotion::Swimming::UnderwaterCameraEffect::GetFrustumCoverageDistance(::UnityEngine::Vector3 localDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::GetFrustumCoverageDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrustumCoverageDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, localDirection);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Swimming.UnderwaterCameraEffect/CameraOverlapWaterState
#include "GorillaLocomotion/Swimming/UnderwaterCameraEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaLocomotion.Swimming.UnderwaterCameraEffect/CameraOverlapWaterState Uninitialized
::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_get_Uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_get_Uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState>("GorillaLocomotion.Swimming", "UnderwaterCameraEffect/CameraOverlapWaterState", "Uninitialized"));
}
// Autogenerated static field setter
// Set static field: static public GorillaLocomotion.Swimming.UnderwaterCameraEffect/CameraOverlapWaterState Uninitialized
void GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_set_Uninitialized(::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_set_Uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Swimming", "UnderwaterCameraEffect/CameraOverlapWaterState", "Uninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaLocomotion.Swimming.UnderwaterCameraEffect/CameraOverlapWaterState OutOfWater
::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_get_OutOfWater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_get_OutOfWater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState>("GorillaLocomotion.Swimming", "UnderwaterCameraEffect/CameraOverlapWaterState", "OutOfWater"));
}
// Autogenerated static field setter
// Set static field: static public GorillaLocomotion.Swimming.UnderwaterCameraEffect/CameraOverlapWaterState OutOfWater
void GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_set_OutOfWater(::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_set_OutOfWater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Swimming", "UnderwaterCameraEffect/CameraOverlapWaterState", "OutOfWater", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaLocomotion.Swimming.UnderwaterCameraEffect/CameraOverlapWaterState PartiallySubmerged
::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_get_PartiallySubmerged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_get_PartiallySubmerged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState>("GorillaLocomotion.Swimming", "UnderwaterCameraEffect/CameraOverlapWaterState", "PartiallySubmerged"));
}
// Autogenerated static field setter
// Set static field: static public GorillaLocomotion.Swimming.UnderwaterCameraEffect/CameraOverlapWaterState PartiallySubmerged
void GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_set_PartiallySubmerged(::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_set_PartiallySubmerged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Swimming", "UnderwaterCameraEffect/CameraOverlapWaterState", "PartiallySubmerged", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaLocomotion.Swimming.UnderwaterCameraEffect/CameraOverlapWaterState FullySubmerged
::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_get_FullySubmerged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_get_FullySubmerged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState>("GorillaLocomotion.Swimming", "UnderwaterCameraEffect/CameraOverlapWaterState", "FullySubmerged"));
}
// Autogenerated static field setter
// Set static field: static public GorillaLocomotion.Swimming.UnderwaterCameraEffect/CameraOverlapWaterState FullySubmerged
void GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_set_FullySubmerged(::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::_set_FullySubmerged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Swimming", "UnderwaterCameraEffect/CameraOverlapWaterState", "FullySubmerged", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterCameraEffect::CameraOverlapWaterState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Swimming.UnderwaterParticleEffects
#include "GorillaLocomotion/Swimming/UnderwaterParticleEffects.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: GorillaLocomotion.Swimming.WaterVolume/SurfaceQuery
#include "GorillaLocomotion/Swimming/WaterVolume_SurfaceQuery.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem underwaterFloaterParticles
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_underwaterFloaterParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_underwaterFloaterParticles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "underwaterFloaterParticles"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem underwaterBubbleParticles
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_underwaterBubbleParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_underwaterBubbleParticles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "underwaterBubbleParticles"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera playerCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_playerCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_playerCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 floaterParticleBoxExtents
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_floaterParticleBoxExtents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_floaterParticleBoxExtents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floaterParticleBoxExtents"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 floaterParticleBaseOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_floaterParticleBaseOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_floaterParticleBaseOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floaterParticleBaseOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve floaterSpeedVsOffsetDist
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_floaterSpeedVsOffsetDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_floaterSpeedVsOffsetDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floaterSpeedVsOffsetDist"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 floaterSpeedVsOffsetDistMinMax
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_floaterSpeedVsOffsetDistMinMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_floaterSpeedVsOffsetDistMinMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floaterSpeedVsOffsetDistMinMax"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean debugDraw
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_debugDraw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterParticleEffects::dyn_debugDraw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugDraw"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Swimming.UnderwaterParticleEffects.UpdateParticleEffect
void GorillaLocomotion::Swimming::UnderwaterParticleEffects::UpdateParticleEffect(bool waterSurfaceDetected, ByRef<::GorillaLocomotion::Swimming::WaterVolume::SurfaceQuery> waterSurface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterParticleEffects::UpdateParticleEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParticleEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waterSurfaceDetected), ::il2cpp_utils::ExtractType(waterSurface)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, waterSurfaceDetected, byref(waterSurface));
}
// Autogenerated method: GorillaLocomotion.Swimming.UnderwaterParticleEffects.IsValid
bool GorillaLocomotion::Swimming::UnderwaterParticleEffects::IsValid(::UnityEngine::Vector3 vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::UnderwaterParticleEffects::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, vector);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Swimming.WaterCurrent
#include "GorillaLocomotion/Swimming/WaterCurrent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: CatmullRomSpline
#include "GlobalNamespace/CatmullRomSpline.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<CatmullRomSpline> splines
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::CatmullRomSpline*>*& GorillaLocomotion::Swimming::WaterCurrent::dyn_splines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::dyn_splines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "splines"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::CatmullRomSpline*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single fullEffectDistance
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterCurrent::dyn_fullEffectDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::dyn_fullEffectDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullEffectDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single fadeDistance
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterCurrent::dyn_fadeDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::dyn_fadeDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentSpeed
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterCurrent::dyn_currentSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::dyn_currentSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentAccel
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterCurrent::dyn_currentAccel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::dyn_currentAccel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAccel"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single velocityAnticipationAdjustment
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterCurrent::dyn_velocityAnticipationAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::dyn_velocityAnticipationAdjustment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityAnticipationAdjustment"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single inwardCurrentFullEffectRadius
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterCurrent::dyn_inwardCurrentFullEffectRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::dyn_inwardCurrentFullEffectRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inwardCurrentFullEffectRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single inwardCurrentNoEffectRadius
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterCurrent::dyn_inwardCurrentNoEffectRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::dyn_inwardCurrentNoEffectRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inwardCurrentNoEffectRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single inwardCurrentSpeed
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterCurrent::dyn_inwardCurrentSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::dyn_inwardCurrentSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inwardCurrentSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single inwardCurrentAccel
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterCurrent::dyn_inwardCurrentAccel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::dyn_inwardCurrentAccel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inwardCurrentAccel"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single dampingHalfLife
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterCurrent::dyn_dampingHalfLife() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::dyn_dampingHalfLife");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dampingHalfLife"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean debugDrawCurrentQueries
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterCurrent::dyn_debugDrawCurrentQueries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::dyn_debugDrawCurrentQueries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugDrawCurrentQueries"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 debugCurrentVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Swimming::WaterCurrent::dyn_debugCurrentVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::dyn_debugCurrentVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCurrentVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 debugSplinePoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Swimming::WaterCurrent::dyn_debugSplinePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::dyn_debugSplinePoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugSplinePoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterCurrent.get_Speed
float GorillaLocomotion::Swimming::WaterCurrent::get_Speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::get_Speed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Speed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterCurrent.get_Accel
float GorillaLocomotion::Swimming::WaterCurrent::get_Accel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::get_Accel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Accel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterCurrent.get_InwardSpeed
float GorillaLocomotion::Swimming::WaterCurrent::get_InwardSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::get_InwardSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InwardSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterCurrent.get_InwardAccel
float GorillaLocomotion::Swimming::WaterCurrent::get_InwardAccel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::get_InwardAccel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InwardAccel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterCurrent.GetCurrentAtPoint
bool GorillaLocomotion::Swimming::WaterCurrent::GetCurrentAtPoint(::UnityEngine::Vector3 worldPoint, ::UnityEngine::Vector3 startingVelocity, float dt, ByRef<::UnityEngine::Vector3> currentVelocity, ByRef<::UnityEngine::Vector3> velocityChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::GetCurrentAtPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentAtPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPoint), ::il2cpp_utils::ExtractType(startingVelocity), ::il2cpp_utils::ExtractType(dt), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, worldPoint, startingVelocity, dt, byref(currentVelocity), byref(velocityChange));
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterCurrent.Update
void GorillaLocomotion::Swimming::WaterCurrent::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterCurrent.OnDrawGizmosSelected
void GorillaLocomotion::Swimming::WaterCurrent::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterCurrent.DrawGizmoCircle
void GorillaLocomotion::Swimming::WaterCurrent::DrawGizmoCircle(::UnityEngine::Vector3 center, ::UnityEngine::Quaternion rotation, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterCurrent::DrawGizmoCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawGizmoCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, center, rotation, radius);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Swimming.WaterOverlappingCollider
#include "GorillaLocomotion/Swimming/WaterOverlappingCollider.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: GorillaLocomotion.Climbing.GorillaVelocityTracker
#include "GorillaLocomotion/Climbing/GorillaVelocityTracker.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaLocomotion.Swimming.WaterVolume
#include "GorillaLocomotion/Swimming/WaterVolume.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean playBigSplash
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_playBigSplash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_playBigSplash");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playBigSplash"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean playDripEffect
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_playDripEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_playDripEffect");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playDripEffect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideBoundingRadius
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_overrideBoundingRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_overrideBoundingRadius");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideBoundingRadius"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single boundingRadiusOverride
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_boundingRadiusOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_boundingRadiusOverride");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boundingRadiusOverride"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single scaleMultiplier
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_scaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_scaleMultiplier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scaleMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider collider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_collider");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaLocomotion.Climbing.GorillaVelocityTracker velocityTracker
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Climbing::GorillaVelocityTracker*& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_velocityTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_velocityTracker");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityTracker"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Climbing::GorillaVelocityTracker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaLocomotion.Swimming.WaterVolume/SurfaceQuery lastSurfaceQuery
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Swimming::WaterVolume::SurfaceQuery& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_lastSurfaceQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_lastSurfaceQuery");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastSurfaceQuery"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Swimming::WaterVolume::SurfaceQuery*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonView photonViewForRPC
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_photonViewForRPC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_photonViewForRPC");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonViewForRPC"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean surfaceDetected
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_surfaceDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_surfaceDetected");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "surfaceDetected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean inWater
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_inWater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_inWater");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inWater"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean inVolume
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_inVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_inVolume");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inVolume"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastBoundingRadius
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_lastBoundingRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_lastBoundingRadius");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastBoundingRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 lastRipplePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_lastRipplePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_lastRipplePosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRipplePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastRippleScale
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_lastRippleScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_lastRippleScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRippleScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastRippleTime
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_lastRippleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_lastRippleTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRippleTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastInWaterTime
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_lastInWaterTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_lastInWaterTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastInWaterTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single nextDripTime
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_nextDripTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::dyn_nextDripTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextDripTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterOverlappingCollider.PlayRippleEffect
void GorillaLocomotion::Swimming::WaterOverlappingCollider::PlayRippleEffect(::UnityEngine::GameObject* rippleEffectPrefab, ::UnityEngine::Vector3 surfacePoint, ::UnityEngine::Vector3 surfaceNormal, float defaultRippleScale, float currentTime, ::GorillaLocomotion::Swimming::WaterVolume* volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::PlayRippleEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PlayRippleEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rippleEffectPrefab), ::il2cpp_utils::ExtractType(surfacePoint), ::il2cpp_utils::ExtractType(surfaceNormal), ::il2cpp_utils::ExtractType(defaultRippleScale), ::il2cpp_utils::ExtractType(currentTime), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rippleEffectPrefab, surfacePoint, surfaceNormal, defaultRippleScale, currentTime, volume);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterOverlappingCollider.PlaySplashEffect
void GorillaLocomotion::Swimming::WaterOverlappingCollider::PlaySplashEffect(::UnityEngine::GameObject* splashEffectPrefab, ::UnityEngine::Vector3 splashPosition, float splashScale, bool bigSplash, bool enteringWater, ::GorillaLocomotion::Swimming::WaterVolume* volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::PlaySplashEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PlaySplashEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(splashEffectPrefab), ::il2cpp_utils::ExtractType(splashPosition), ::il2cpp_utils::ExtractType(splashScale), ::il2cpp_utils::ExtractType(bigSplash), ::il2cpp_utils::ExtractType(enteringWater), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, splashEffectPrefab, splashPosition, splashScale, bigSplash, enteringWater, volume);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterOverlappingCollider.PlayDripEffect
void GorillaLocomotion::Swimming::WaterOverlappingCollider::PlayDripEffect(::UnityEngine::GameObject* rippleEffectPrefab, ::UnityEngine::Vector3 surfacePoint, ::UnityEngine::Vector3 surfaceNormal, float dripScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::PlayDripEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PlayDripEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rippleEffectPrefab), ::il2cpp_utils::ExtractType(surfacePoint), ::il2cpp_utils::ExtractType(surfaceNormal), ::il2cpp_utils::ExtractType(dripScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rippleEffectPrefab, surfacePoint, surfaceNormal, dripScale);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterOverlappingCollider.GetClosestPositionOnSurface
::UnityEngine::Vector3 GorillaLocomotion::Swimming::WaterOverlappingCollider::GetClosestPositionOnSurface(::UnityEngine::Vector3 surfacePoint, ::UnityEngine::Vector3 surfaceNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::GetClosestPositionOnSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetClosestPositionOnSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surfacePoint), ::il2cpp_utils::ExtractType(surfaceNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, surfacePoint, surfaceNormal);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterOverlappingCollider.GetBoundingRadiusOnSurface
float GorillaLocomotion::Swimming::WaterOverlappingCollider::GetBoundingRadiusOnSurface(::UnityEngine::Vector3 surfaceNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterOverlappingCollider::GetBoundingRadiusOnSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBoundingRadiusOnSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surfaceNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, surfaceNormal);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Swimming.WaterParameters
#include "GorillaLocomotion/Swimming/WaterParameters.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean playSplashEffect
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterParameters::dyn_playSplashEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_playSplashEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playSplashEffect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject splashEffect
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaLocomotion::Swimming::WaterParameters::dyn_splashEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_splashEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "splashEffect"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single splashEffectScale
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterParameters::dyn_splashEffectScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_splashEffectScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "splashEffectScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sendSplashEffectRPCs
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterParameters::dyn_sendSplashEffectRPCs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_sendSplashEffectRPCs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sendSplashEffectRPCs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single splashSpeedRequirement
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterParameters::dyn_splashSpeedRequirement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_splashSpeedRequirement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "splashSpeedRequirement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bigSplashSpeedRequirement
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterParameters::dyn_bigSplashSpeedRequirement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_bigSplashSpeedRequirement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bigSplashSpeedRequirement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Gradient splashColorBySpeedGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& GorillaLocomotion::Swimming::WaterParameters::dyn_splashColorBySpeedGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_splashColorBySpeedGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "splashColorBySpeedGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean playRippleEffect
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterParameters::dyn_playRippleEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_playRippleEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playRippleEffect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject rippleEffect
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaLocomotion::Swimming::WaterParameters::dyn_rippleEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_rippleEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rippleEffect"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rippleEffectScale
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterParameters::dyn_rippleEffectScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_rippleEffectScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rippleEffectScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultDistanceBetweenRipples
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterParameters::dyn_defaultDistanceBetweenRipples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_defaultDistanceBetweenRipples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultDistanceBetweenRipples"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minDistanceBetweenRipples
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterParameters::dyn_minDistanceBetweenRipples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_minDistanceBetweenRipples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDistanceBetweenRipples"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minTimeBetweenRipples
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterParameters::dyn_minTimeBetweenRipples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_minTimeBetweenRipples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minTimeBetweenRipples"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color rippleSpriteColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GorillaLocomotion::Swimming::WaterParameters::dyn_rippleSpriteColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_rippleSpriteColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rippleSpriteColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean playDripEffect
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterParameters::dyn_playDripEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_playDripEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playDripEffect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single postExitDripDuration
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterParameters::dyn_postExitDripDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_postExitDripDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "postExitDripDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perDripTimeDelay
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterParameters::dyn_perDripTimeDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_perDripTimeDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perDripTimeDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perDripTimeRandRange
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterParameters::dyn_perDripTimeRandRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_perDripTimeRandRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perDripTimeRandRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perDripDefaultRadius
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterParameters::dyn_perDripDefaultRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_perDripDefaultRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perDripDefaultRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perDripRadiusRandRange
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterParameters::dyn_perDripRadiusRandRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_perDripRadiusRandRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perDripRadiusRandRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single recomputeSurfaceForColliderDist
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterParameters::dyn_recomputeSurfaceForColliderDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_recomputeSurfaceForColliderDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recomputeSurfaceForColliderDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean allowBubblesInVolume
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterParameters::dyn_allowBubblesInVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterParameters::dyn_allowBubblesInVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowBubblesInVolume"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Swimming.WaterSplashOverride
#include "GorillaLocomotion/Swimming/WaterSplashOverride.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean suppressWaterEffects
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterSplashOverride::dyn_suppressWaterEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterSplashOverride::dyn_suppressWaterEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "suppressWaterEffects"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean playBigSplash
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterSplashOverride::dyn_playBigSplash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterSplashOverride::dyn_playBigSplash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playBigSplash"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean playDrippingEffect
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterSplashOverride::dyn_playDrippingEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterSplashOverride::dyn_playDrippingEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playDrippingEffect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean scaleByPlayersScale
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterSplashOverride::dyn_scaleByPlayersScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterSplashOverride::dyn_scaleByPlayersScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scaleByPlayersScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideBoundingRadius
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterSplashOverride::dyn_overrideBoundingRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterSplashOverride::dyn_overrideBoundingRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideBoundingRadius"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single boundingRadiusOverride
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterSplashOverride::dyn_boundingRadiusOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterSplashOverride::dyn_boundingRadiusOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boundingRadiusOverride"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Swimming.WaterVolume
#include "GorillaLocomotion/Swimming/WaterVolume.hpp"
// Including type: GorillaLocomotion.Swimming.WaterVolume/SurfaceQuery
#include "GorillaLocomotion/Swimming/WaterVolume_SurfaceQuery.hpp"
// Including type: GorillaLocomotion.Swimming.WaterVolume/WaterVolumeEvent
#include "GorillaLocomotion/Swimming/WaterVolume_WaterVolumeEvent.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: GorillaLocomotion.Swimming.WaterCurrent
#include "GorillaLocomotion/Swimming/WaterCurrent.hpp"
// Including type: GorillaLocomotion.Swimming.WaterParameters
#include "GorillaLocomotion/Swimming/WaterParameters.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: GorillaTag.GuidedRefs.GuidedRefTargetIdSO
#include "GorillaTag/GuidedRefs/GuidedRefTargetIdSO.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String WaterSplashRPC
::StringW GorillaLocomotion::Swimming::WaterVolume::_get_WaterSplashRPC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::_get_WaterSplashRPC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("GorillaLocomotion.Swimming", "WaterVolume", "WaterSplashRPC"));
}
// Autogenerated static field setter
// Set static field: static public System.String WaterSplashRPC
void GorillaLocomotion::Swimming::WaterVolume::_set_WaterSplashRPC(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::_set_WaterSplashRPC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Swimming", "WaterVolume", "WaterSplashRPC", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single[] splashRPCSendTimes
::ArrayW<float> GorillaLocomotion::Swimming::WaterVolume::_get_splashRPCSendTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::_get_splashRPCSendTimes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("GorillaLocomotion.Swimming", "WaterVolume", "splashRPCSendTimes"));
}
// Autogenerated static field setter
// Set static field: static public System.Single[] splashRPCSendTimes
void GorillaLocomotion::Swimming::WaterVolume::_set_splashRPCSendTimes(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::_set_splashRPCSendTimes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Swimming", "WaterVolume", "splashRPCSendTimes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Collider,GorillaLocomotion.Swimming.WaterVolume> sharedColliderRegistry
::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::GorillaLocomotion::Swimming::WaterVolume*>* GorillaLocomotion::Swimming::WaterVolume::_get_sharedColliderRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::_get_sharedColliderRegistry");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::GorillaLocomotion::Swimming::WaterVolume*>*>("GorillaLocomotion.Swimming", "WaterVolume", "sharedColliderRegistry")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Collider,GorillaLocomotion.Swimming.WaterVolume> sharedColliderRegistry
void GorillaLocomotion::Swimming::WaterVolume::_set_sharedColliderRegistry(::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, ::GorillaLocomotion::Swimming::WaterVolume*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::_set_sharedColliderRegistry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Swimming", "WaterVolume", "sharedColliderRegistry", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,System.Int32[]> meshTrianglesDict
::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::ArrayW<int>>* GorillaLocomotion::Swimming::WaterVolume::_get_meshTrianglesDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::_get_meshTrianglesDict");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::ArrayW<int>>*>("GorillaLocomotion.Swimming", "WaterVolume", "meshTrianglesDict")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,System.Int32[]> meshTrianglesDict
void GorillaLocomotion::Swimming::WaterVolume::_set_meshTrianglesDict(::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::ArrayW<int>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::_set_meshTrianglesDict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Swimming", "WaterVolume", "meshTrianglesDict", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,UnityEngine.Vector3[]> meshVertsDict
::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::ArrayW<::UnityEngine::Vector3>>* GorillaLocomotion::Swimming::WaterVolume::_get_meshVertsDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::_get_meshVertsDict");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::ArrayW<::UnityEngine::Vector3>>*>("GorillaLocomotion.Swimming", "WaterVolume", "meshVertsDict")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,UnityEngine.Vector3[]> meshVertsDict
void GorillaLocomotion::Swimming::WaterVolume::_set_meshVertsDict(::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::ArrayW<::UnityEngine::Vector3>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::_set_meshVertsDict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Swimming", "WaterVolume", "meshVertsDict", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform surfacePlane
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaLocomotion::Swimming::WaterVolume::dyn_surfacePlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_surfacePlane");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "surfacePlane"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.MeshCollider> surfaceColliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::MeshCollider*>*& GorillaLocomotion::Swimming::WaterVolume::dyn_surfaceColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_surfaceColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "surfaceColliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::MeshCollider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Collider> volumeColliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& GorillaLocomotion::Swimming::WaterVolume::dyn_volumeColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_volumeColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeColliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Player/LiquidType liquidType
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Player::LiquidType& GorillaLocomotion::Swimming::WaterVolume::dyn_liquidType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_liquidType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "liquidType"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Player::LiquidType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Swimming.WaterCurrent waterCurrent
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Swimming::WaterCurrent*& GorillaLocomotion::Swimming::WaterVolume::dyn_waterCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_waterCurrent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waterCurrent"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Swimming::WaterCurrent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Swimming.WaterParameters waterParams
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Swimming::WaterParameters*& GorillaLocomotion::Swimming::WaterVolume::dyn_waterParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_waterParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waterParams"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Swimming::WaterParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isStationary
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterVolume::dyn_isStationary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_isStationary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isStationary"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] sharedMeshTris
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GorillaLocomotion::Swimming::WaterVolume::dyn_sharedMeshTris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_sharedMeshTris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharedMeshTris"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] sharedMeshVerts
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GorillaLocomotion::Swimming::WaterVolume::dyn_sharedMeshVerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_sharedMeshVerts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharedMeshVerts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Swimming.WaterVolume/WaterVolumeEvent ColliderEnteredVolume
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent*& GorillaLocomotion::Swimming::WaterVolume::dyn_ColliderEnteredVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_ColliderEnteredVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColliderEnteredVolume"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Swimming.WaterVolume/WaterVolumeEvent ColliderExitedVolume
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent*& GorillaLocomotion::Swimming::WaterVolume::dyn_ColliderExitedVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_ColliderExitedVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColliderExitedVolume"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Swimming.WaterVolume/WaterVolumeEvent ColliderEnteredWater
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent*& GorillaLocomotion::Swimming::WaterVolume::dyn_ColliderEnteredWater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_ColliderEnteredWater");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColliderEnteredWater"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Swimming.WaterVolume/WaterVolumeEvent ColliderExitedWater
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent*& GorillaLocomotion::Swimming::WaterVolume::dyn_ColliderExitedWater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_ColliderExitedWater");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColliderExitedWater"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig playerVRRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GorillaLocomotion::Swimming::WaterVolume::dyn_playerVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_playerVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerVRRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single volumeMaxHeight
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterVolume::dyn_volumeMaxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_volumeMaxHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeMaxHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single volumeMinHeight
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterVolume::dyn_volumeMinHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_volumeMinHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeMinHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean debugDrawSurfaceCast
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Swimming::WaterVolume::dyn_debugDrawSurfaceCast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_debugDrawSurfaceCast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugDrawSurfaceCast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider triggerCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GorillaLocomotion::Swimming::WaterVolume::dyn_triggerCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_triggerCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triggerCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<GorillaLocomotion.Swimming.WaterOverlappingCollider> persistentColliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaLocomotion::Swimming::WaterOverlappingCollider>*& GorillaLocomotion::Swimming::WaterVolume::dyn_persistentColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn_persistentColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "persistentColliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaLocomotion::Swimming::WaterOverlappingCollider>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTag.GuidedRefs.GuidedRefTargetIdSO _guidedRefTargetId
[[deprecated("Use field access instead!")]] ::GorillaTag::GuidedRefs::GuidedRefTargetIdSO*& GorillaLocomotion::Swimming::WaterVolume::dyn__guidedRefTargetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn__guidedRefTargetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_guidedRefTargetId"))->offset;
  return *reinterpret_cast<::GorillaTag::GuidedRefs::GuidedRefTargetIdSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _guidedRefTargetObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& GorillaLocomotion::Swimming::WaterVolume::dyn__guidedRefTargetObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::dyn__guidedRefTargetObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_guidedRefTargetObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.add_ColliderEnteredVolume
void GorillaLocomotion::Swimming::WaterVolume::add_ColliderEnteredVolume(::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::add_ColliderEnteredVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ColliderEnteredVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.remove_ColliderEnteredVolume
void GorillaLocomotion::Swimming::WaterVolume::remove_ColliderEnteredVolume(::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::remove_ColliderEnteredVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ColliderEnteredVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.add_ColliderExitedVolume
void GorillaLocomotion::Swimming::WaterVolume::add_ColliderExitedVolume(::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::add_ColliderExitedVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ColliderExitedVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.remove_ColliderExitedVolume
void GorillaLocomotion::Swimming::WaterVolume::remove_ColliderExitedVolume(::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::remove_ColliderExitedVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ColliderExitedVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.add_ColliderEnteredWater
void GorillaLocomotion::Swimming::WaterVolume::add_ColliderEnteredWater(::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::add_ColliderEnteredWater");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ColliderEnteredWater", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.remove_ColliderEnteredWater
void GorillaLocomotion::Swimming::WaterVolume::remove_ColliderEnteredWater(::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::remove_ColliderEnteredWater");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ColliderEnteredWater", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.add_ColliderExitedWater
void GorillaLocomotion::Swimming::WaterVolume::add_ColliderExitedWater(::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::add_ColliderExitedWater");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ColliderExitedWater", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.remove_ColliderExitedWater
void GorillaLocomotion::Swimming::WaterVolume::remove_ColliderExitedWater(::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::remove_ColliderExitedWater");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ColliderExitedWater", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.get_LiquidType
::GorillaLocomotion::Player::LiquidType GorillaLocomotion::Swimming::WaterVolume::get_LiquidType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::get_LiquidType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LiquidType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaLocomotion::Player::LiquidType, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.get_Current
::GorillaLocomotion::Swimming::WaterCurrent* GorillaLocomotion::Swimming::WaterVolume::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaLocomotion::Swimming::WaterCurrent*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.get_Parameters
::GorillaLocomotion::Swimming::WaterParameters* GorillaLocomotion::Swimming::WaterVolume::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaLocomotion::Swimming::WaterParameters*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.get_PlayerVRRig
::GlobalNamespace::VRRig* GorillaLocomotion::Swimming::WaterVolume::get_PlayerVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::get_PlayerVRRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayerVRRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRRig*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.GetSurfaceQueryForPoint
bool GorillaLocomotion::Swimming::WaterVolume::GetSurfaceQueryForPoint(::UnityEngine::Vector3 point, ByRef<::GorillaLocomotion::Swimming::WaterVolume::SurfaceQuery> result, bool debugDraw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::GetSurfaceQueryForPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSurfaceQueryForPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractIndependentType<::GorillaLocomotion::Swimming::WaterVolume::SurfaceQuery&>(), ::il2cpp_utils::ExtractType(debugDraw)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point, byref(result), debugDraw);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.HitOutsideSurfaceOfMesh
bool GorillaLocomotion::Swimming::WaterVolume::HitOutsideSurfaceOfMesh(::UnityEngine::Vector3 castDir, ::UnityEngine::MeshCollider* meshCollider, ::UnityEngine::RaycastHit hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::HitOutsideSurfaceOfMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HitOutsideSurfaceOfMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(castDir), ::il2cpp_utils::ExtractType(meshCollider), ::il2cpp_utils::ExtractType(hit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, castDir, meshCollider, hit);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.DebugDrawMeshColliderHitTriangle
void GorillaLocomotion::Swimming::WaterVolume::DebugDrawMeshColliderHitTriangle(::UnityEngine::RaycastHit hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::DebugDrawMeshColliderHitTriangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugDrawMeshColliderHitTriangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hit);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.RaycastWater
bool GorillaLocomotion::Swimming::WaterVolume::RaycastWater(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hit, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::RaycastWater");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaycastWater", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, direction, byref(hit), distance, layerMask);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.CheckColliderInVolume
bool GorillaLocomotion::Swimming::WaterVolume::CheckColliderInVolume(::UnityEngine::Collider* collider, ByRef<bool> inWater, ByRef<bool> surfaceDetected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::CheckColliderInVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckColliderInVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collider, byref(inWater), byref(surfaceDetected));
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.OnDisable
void GorillaLocomotion::Swimming::WaterVolume::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.Update
void GorillaLocomotion::Swimming::WaterVolume::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.RemoveCollidersOutsideVolume
void GorillaLocomotion::Swimming::WaterVolume::RemoveCollidersOutsideVolume(float currentTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::RemoveCollidersOutsideVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCollidersOutsideVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentTime);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.CheckColliderAgainstWater
void GorillaLocomotion::Swimming::WaterVolume::CheckColliderAgainstWater(ByRef<::GorillaLocomotion::Swimming::WaterOverlappingCollider> persistentCollider, float currentTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::CheckColliderAgainstWater");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckColliderAgainstWater", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(persistentCollider), ::il2cpp_utils::ExtractType(currentTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(persistentCollider), currentTime);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.GetColliderVelocity
::UnityEngine::Vector3 GorillaLocomotion::Swimming::WaterVolume::GetColliderVelocity(ByRef<::GorillaLocomotion::Swimming::WaterOverlappingCollider> persistentCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::GetColliderVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColliderVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(persistentCollider)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, byref(persistentCollider));
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.OnWaterSurfaceEnter
void GorillaLocomotion::Swimming::WaterVolume::OnWaterSurfaceEnter(ByRef<::GorillaLocomotion::Swimming::WaterOverlappingCollider> persistentCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::OnWaterSurfaceEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWaterSurfaceEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(persistentCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(persistentCollider));
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.OnWaterSurfaceExit
void GorillaLocomotion::Swimming::WaterVolume::OnWaterSurfaceExit(ByRef<::GorillaLocomotion::Swimming::WaterOverlappingCollider> persistentCollider, float currentTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::OnWaterSurfaceExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWaterSurfaceExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(persistentCollider), ::il2cpp_utils::ExtractType(currentTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(persistentCollider), currentTime);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.ColliderOutOfWaterUpdate
void GorillaLocomotion::Swimming::WaterVolume::ColliderOutOfWaterUpdate(ByRef<::GorillaLocomotion::Swimming::WaterOverlappingCollider> persistentCollider, float currentTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::ColliderOutOfWaterUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColliderOutOfWaterUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(persistentCollider), ::il2cpp_utils::ExtractType(currentTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(persistentCollider), currentTime);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.ColliderInWaterUpdate
void GorillaLocomotion::Swimming::WaterVolume::ColliderInWaterUpdate(ByRef<::GorillaLocomotion::Swimming::WaterOverlappingCollider> persistentCollider, float currentTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::ColliderInWaterUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColliderInWaterUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(persistentCollider), ::il2cpp_utils::ExtractType(currentTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(persistentCollider), currentTime);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.TryRegisterOwnershipOfCollider
void GorillaLocomotion::Swimming::WaterVolume::TryRegisterOwnershipOfCollider(::UnityEngine::Collider* collider, bool isInWater, bool isSurfaceDetected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::TryRegisterOwnershipOfCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryRegisterOwnershipOfCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider), ::il2cpp_utils::ExtractType(isInWater), ::il2cpp_utils::ExtractType(isSurfaceDetected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider, isInWater, isSurfaceDetected);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.UnregisterOwnershipOfCollider
void GorillaLocomotion::Swimming::WaterVolume::UnregisterOwnershipOfCollider(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::UnregisterOwnershipOfCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterOwnershipOfCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.HasOwnershipOfCollider
bool GorillaLocomotion::Swimming::WaterVolume::HasOwnershipOfCollider(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::HasOwnershipOfCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasOwnershipOfCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collider);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.OnTriggerEnter
void GorillaLocomotion::Swimming::WaterVolume::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.OnTriggerExit
void GorillaLocomotion::Swimming::WaterVolume::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume..cctor
void GorillaLocomotion::Swimming::WaterVolume::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Swimming", "WaterVolume", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume.Awake
void GorillaLocomotion::Swimming::WaterVolume::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTag::GuidedRefs::BaseGuidedRefTargetMono*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Swimming.WaterVolume/SurfaceQuery
#include "GorillaLocomotion/Swimming/WaterVolume_SurfaceQuery.hpp"
// Including type: UnityEngine.Plane
#include "UnityEngine/Plane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 surfacePoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Swimming::WaterVolume::SurfaceQuery::dyn_surfacePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::SurfaceQuery::dyn_surfacePoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "surfacePoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 surfaceNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Swimming::WaterVolume::SurfaceQuery::dyn_surfaceNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::SurfaceQuery::dyn_surfaceNormal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "surfaceNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDepth
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Swimming::WaterVolume::SurfaceQuery::dyn_maxDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::SurfaceQuery::dyn_maxDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume/SurfaceQuery.get_surfacePlane
::UnityEngine::Plane GorillaLocomotion::Swimming::WaterVolume::SurfaceQuery::get_surfacePlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::SurfaceQuery::get_surfacePlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_surfacePlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Plane, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaLocomotion.Swimming.WaterVolume/WaterVolumeEvent
#include "GorillaLocomotion/Swimming/WaterVolume_WaterVolumeEvent.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume/WaterVolumeEvent.Invoke
void GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent::Invoke(::GorillaLocomotion::Swimming::WaterVolume* volume, ::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume, collider);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume/WaterVolumeEvent.BeginInvoke
::System::IAsyncResult* GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent::BeginInvoke(::GorillaLocomotion::Swimming::WaterVolume* volume, ::UnityEngine::Collider* collider, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, volume, collider, callback, object);
}
// Autogenerated method: GorillaLocomotion.Swimming.WaterVolume/WaterVolumeEvent.EndInvoke
void GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Swimming::WaterVolume::WaterVolumeEvent*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.CustomRopeNode
#include "GorillaLocomotion/Gameplay/CustomRopeNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 previousPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Gameplay::CustomRopeNode::dyn_previousPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::CustomRopeNode::dyn_previousPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.CustomRopeSimulation
#include "GorillaLocomotion/Gameplay/CustomRopeSimulation.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Transform> nodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject ropeNodePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_ropeNodePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_ropeNodePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ropeNodePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nodeCount
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_nodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_nodeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nodeDistance
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_nodeDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_nodeDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 applyConstraintIterations
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_applyConstraintIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_applyConstraintIterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyConstraintIterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 gravity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_gravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gravity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single friction
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_friction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_friction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "friction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Collections.NativeArray`1<GorillaLocomotion.Gameplay.BurstRopeNode> burstNodes
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::GorillaLocomotion::Gameplay::BurstRopeNode>& GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_burstNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::CustomRopeSimulation::dyn_burstNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "burstNodes"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::GorillaLocomotion::Gameplay::BurstRopeNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Gameplay.CustomRopeSimulation.Start
void GorillaLocomotion::Gameplay::CustomRopeSimulation::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::CustomRopeSimulation::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.CustomRopeSimulation.OnDestroy
void GorillaLocomotion::Gameplay::CustomRopeSimulation::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::CustomRopeSimulation::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.CustomRopeSimulation.Update
void GorillaLocomotion::Gameplay::CustomRopeSimulation::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::CustomRopeSimulation::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.SolveRopeJob
#include "GorillaLocomotion/Gameplay/SolveRopeJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single fixedDeltaTime
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::SolveRopeJob::dyn_fixedDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::SolveRopeJob::dyn_fixedDeltaTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixedDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<GorillaLocomotion.Gameplay.BurstRopeNode> nodes
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::GorillaLocomotion::Gameplay::BurstRopeNode>& GorillaLocomotion::Gameplay::SolveRopeJob::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::SolveRopeJob::dyn_nodes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::GorillaLocomotion::Gameplay::BurstRopeNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 gravity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Gameplay::SolveRopeJob::dyn_gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::SolveRopeJob::dyn_gravity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gravity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rootPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Gameplay::SolveRopeJob::dyn_rootPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::SolveRopeJob::dyn_rootPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single nodeDistance
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::SolveRopeJob::dyn_nodeDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::SolveRopeJob::dyn_nodeDistance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Gameplay.SolveRopeJob.Execute
void GorillaLocomotion::Gameplay::SolveRopeJob::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::SolveRopeJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GorillaLocomotion::Gameplay::SolveRopeJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.SolveRopeJob.Simulate
void GorillaLocomotion::Gameplay::SolveRopeJob::Simulate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::SolveRopeJob::Simulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Simulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.SolveRopeJob.ApplyConstraint
void GorillaLocomotion::Gameplay::SolveRopeJob::ApplyConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::SolveRopeJob::ApplyConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.GorillaRopeSegment
#include "GorillaLocomotion/Gameplay/GorillaRopeSegment.hpp"
// Including type: GorillaLocomotion.Gameplay.GorillaRopeSwing
#include "GorillaLocomotion/Gameplay/GorillaRopeSwing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaLocomotion.Gameplay.GorillaRopeSwing swing
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Gameplay::GorillaRopeSwing*& GorillaLocomotion::Gameplay::GorillaRopeSegment::dyn_swing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSegment::dyn_swing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swing"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Gameplay::GorillaRopeSwing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 boneIndex
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::GorillaRopeSegment::dyn_boneIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSegment::dyn_boneIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boneIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.GorillaRopeSwing
#include "GorillaLocomotion/Gameplay/GorillaRopeSwing.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: GorillaLocomotion.Climbing.GorillaVelocityTracker
#include "GorillaLocomotion/Climbing/GorillaVelocityTracker.hpp"
// Including type: GorillaLocomotion.Gameplay.GorillaRopeSwingSettings
#include "GorillaLocomotion/Gameplay/GorillaRopeSwingSettings.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single ropeBitGenOffset
float GorillaLocomotion::Gameplay::GorillaRopeSwing::_get_ropeBitGenOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::_get_ropeBitGenOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaLocomotion.Gameplay", "GorillaRopeSwing", "ropeBitGenOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Single ropeBitGenOffset
void GorillaLocomotion::Gameplay::GorillaRopeSwing::_set_ropeBitGenOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::_set_ropeBitGenOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "GorillaRopeSwing", "ropeBitGenOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MAX_VELOCITY_FOR_IDLE
float GorillaLocomotion::Gameplay::GorillaRopeSwing::_get_MAX_VELOCITY_FOR_IDLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::_get_MAX_VELOCITY_FOR_IDLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaLocomotion.Gameplay", "GorillaRopeSwing", "MAX_VELOCITY_FOR_IDLE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MAX_VELOCITY_FOR_IDLE
void GorillaLocomotion::Gameplay::GorillaRopeSwing::_set_MAX_VELOCITY_FOR_IDLE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::_set_MAX_VELOCITY_FOR_IDLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "GorillaRopeSwing", "MAX_VELOCITY_FOR_IDLE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single TIME_FOR_IDLE
float GorillaLocomotion::Gameplay::GorillaRopeSwing::_get_TIME_FOR_IDLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::_get_TIME_FOR_IDLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaLocomotion.Gameplay", "GorillaRopeSwing", "TIME_FOR_IDLE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single TIME_FOR_IDLE
void GorillaLocomotion::Gameplay::GorillaRopeSwing::_set_TIME_FOR_IDLE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::_set_TIME_FOR_IDLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "GorillaRopeSwing", "TIME_FOR_IDLE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ropeId
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_ropeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_ropeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ropeId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String staticId
[[deprecated("Use field access instead!")]] ::StringW& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_staticId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_staticId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "staticId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useStaticId
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_useStaticId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_useStaticId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useStaticId"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject prefabRopeBit
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_prefabRopeBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_prefabRopeBit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabRopeBit"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean supportMovingAtRuntime
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_supportMovingAtRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_supportMovingAtRuntime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportMovingAtRuntime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] nodes
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> remotePlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, int>*& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_remotePlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_remotePlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remotePlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastGrabTime
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_lastGrabTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_lastGrabTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastGrabTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource ropeCreakSFX
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_ropeCreakSFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_ropeCreakSFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ropeCreakSFX"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaLocomotion.Climbing.GorillaVelocityTracker velocityTracker
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Climbing::GorillaVelocityTracker*& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_velocityTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_velocityTracker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityTracker"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Climbing::GorillaVelocityTracker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean localPlayerOn
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_localPlayerOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_localPlayerOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPlayerOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 localPlayerBoneIndex
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_localPlayerBoneIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_localPlayerBoneIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPlayerBoneIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode localPlayerXRNode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_localPlayerXRNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_localPlayerXRNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPlayerXRNode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isIdle>k__BackingField
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_$isIdle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_$isIdle$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isIdle>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isFullyIdle>k__BackingField
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_$isFullyIdle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_$isFullyIdle$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isFullyIdle>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single potentialIdleTimer
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_potentialIdleTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_potentialIdleTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "potentialIdleTimer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 ropeLength
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_ropeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_ropeLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ropeLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Gameplay.GorillaRopeSwingSettings settings
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Gameplay::GorillaRopeSwingSettings*& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Gameplay::GorillaRopeSwingSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ropeDataStartIndex
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_ropeDataStartIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_ropeDataStartIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ropeDataStartIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ropeDataIndexOffset
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_ropeDataIndexOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_ropeDataIndexOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ropeDataIndexOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask wallLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_wallLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_wallLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] nodeHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_nodeHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_nodeHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single scaleFactor
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_scaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_scaleFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scaleFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastNodeCheckIndex
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_lastNodeCheckIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::dyn_lastNodeCheckIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastNodeCheckIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.EdRecalculateId
void GorillaLocomotion::Gameplay::GorillaRopeSwing::EdRecalculateId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::EdRecalculateId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EdRecalculateId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.get_isIdle
bool GorillaLocomotion::Gameplay::GorillaRopeSwing::get_isIdle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::get_isIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.set_isIdle
void GorillaLocomotion::Gameplay::GorillaRopeSwing::set_isIdle(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::set_isIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.get_isFullyIdle
bool GorillaLocomotion::Gameplay::GorillaRopeSwing::get_isFullyIdle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::get_isFullyIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isFullyIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.set_isFullyIdle
void GorillaLocomotion::Gameplay::GorillaRopeSwing::set_isFullyIdle(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::set_isFullyIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isFullyIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.get_SupportsMovingAtRuntime
bool GorillaLocomotion::Gameplay::GorillaRopeSwing::get_SupportsMovingAtRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::get_SupportsMovingAtRuntime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsMovingAtRuntime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.get_hasPlayers
bool GorillaLocomotion::Gameplay::GorillaRopeSwing::get_hasPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::get_hasPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.Awake
void GorillaLocomotion::Gameplay::GorillaRopeSwing::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.Start
void GorillaLocomotion::Gameplay::GorillaRopeSwing::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.OnDestroy
void GorillaLocomotion::Gameplay::GorillaRopeSwing::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.OnEnable
void GorillaLocomotion::Gameplay::GorillaRopeSwing::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.OnDisable
void GorillaLocomotion::Gameplay::GorillaRopeSwing::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.CalculateId
void GorillaLocomotion::Gameplay::GorillaRopeSwing::CalculateId(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::CalculateId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.InvokeUpdate
void GorillaLocomotion::Gameplay::GorillaRopeSwing::InvokeUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::InvokeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.SetIsIdle
void GorillaLocomotion::Gameplay::GorillaRopeSwing::SetIsIdle(bool idle, bool resetPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::SetIsIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idle), ::il2cpp_utils::ExtractType(resetPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idle, resetPos);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.GetBone
::UnityEngine::Transform* GorillaLocomotion::Gameplay::GorillaRopeSwing::GetBone(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::GetBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, index);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.GetBoneIndex
int GorillaLocomotion::Gameplay::GorillaRopeSwing::GetBoneIndex(::UnityEngine::Transform* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::GetBoneIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoneIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.AttachLocalPlayer
void GorillaLocomotion::Gameplay::GorillaRopeSwing::AttachLocalPlayer(::UnityEngine::XR::XRNode xrNode, ::UnityEngine::Transform* grabbedBone, ::UnityEngine::Vector3 offset, ::UnityEngine::Vector3 velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::AttachLocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachLocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrNode), ::il2cpp_utils::ExtractType(grabbedBone), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(velocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xrNode, grabbedBone, offset, velocity);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.DetachLocalPlayer
void GorillaLocomotion::Gameplay::GorillaRopeSwing::DetachLocalPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::DetachLocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachLocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.ToggleVelocityTracker
void GorillaLocomotion::Gameplay::GorillaRopeSwing::ToggleVelocityTracker(bool enable, int boneIndex, ::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::ToggleVelocityTracker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleVelocityTracker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable), ::il2cpp_utils::ExtractType(boneIndex), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable, boneIndex, offset);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.RefreshAllBonesMass
void GorillaLocomotion::Gameplay::GorillaRopeSwing::RefreshAllBonesMass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::RefreshAllBonesMass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAllBonesMass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.AttachRemotePlayer
bool GorillaLocomotion::Gameplay::GorillaRopeSwing::AttachRemotePlayer(int playerId, int boneIndex, ::UnityEngine::Transform* offsetTransform, ::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::AttachRemotePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachRemotePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerId), ::il2cpp_utils::ExtractType(boneIndex), ::il2cpp_utils::ExtractType(offsetTransform), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, playerId, boneIndex, offsetTransform, offset);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.DetachRemotePlayer
void GorillaLocomotion::Gameplay::GorillaRopeSwing::DetachRemotePlayer(int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::DetachRemotePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachRemotePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerId);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.SetVelocity
void GorillaLocomotion::Gameplay::GorillaRopeSwing::SetVelocity(int boneIndex, ::UnityEngine::Vector3 velocity, bool wholeRope, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::SetVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneIndex), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(wholeRope), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, boneIndex, velocity, wholeRope, info);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.OnPieceCreate
void GorillaLocomotion::Gameplay::GorillaRopeSwing::OnPieceCreate(int pieceType, int pieceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::OnPieceCreate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::GorillaRopeSwing*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceType, pieceId);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.OnPieceDestroy
void GorillaLocomotion::Gameplay::GorillaRopeSwing::OnPieceDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::OnPieceDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::GorillaRopeSwing*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.OnPieceActivate
void GorillaLocomotion::Gameplay::GorillaRopeSwing::OnPieceActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::OnPieceActivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::GorillaRopeSwing*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwing.OnPieceDeactivate
void GorillaLocomotion::Gameplay::GorillaRopeSwing::OnPieceDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwing::OnPieceDeactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::GorillaRopeSwing*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.GorillaRopeSwingUpdateManager
#include "GorillaLocomotion/Gameplay/GorillaRopeSwingUpdateManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaLocomotion.Gameplay.GorillaRopeSwing
#include "GorillaLocomotion/Gameplay/GorillaRopeSwing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaLocomotion.Gameplay.GorillaRopeSwingUpdateManager instance
::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager* GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager*>("GorillaLocomotion.Gameplay", "GorillaRopeSwingUpdateManager", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaLocomotion.Gameplay.GorillaRopeSwingUpdateManager instance
void GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::_set_instance(::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "GorillaRopeSwingUpdateManager", "instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean hasInstance
bool GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::_get_hasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::_get_hasInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("GorillaLocomotion.Gameplay", "GorillaRopeSwingUpdateManager", "hasInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean hasInstance
void GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::_set_hasInstance(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::_set_hasInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "GorillaRopeSwingUpdateManager", "hasInstance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<GorillaLocomotion.Gameplay.GorillaRopeSwing> allGorillaRopeSwings
::System::Collections::Generic::List_1<::GorillaLocomotion::Gameplay::GorillaRopeSwing*>* GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::_get_allGorillaRopeSwings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::_get_allGorillaRopeSwings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GorillaLocomotion::Gameplay::GorillaRopeSwing*>*>("GorillaLocomotion.Gameplay", "GorillaRopeSwingUpdateManager", "allGorillaRopeSwings"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<GorillaLocomotion.Gameplay.GorillaRopeSwing> allGorillaRopeSwings
void GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::_set_allGorillaRopeSwings(::System::Collections::Generic::List_1<::GorillaLocomotion::Gameplay::GorillaRopeSwing*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::_set_allGorillaRopeSwings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "GorillaRopeSwingUpdateManager", "allGorillaRopeSwings", value));
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwingUpdateManager.Awake
void GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwingUpdateManager.CreateManager
void GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::CreateManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::CreateManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Gameplay", "GorillaRopeSwingUpdateManager", "CreateManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwingUpdateManager.SetInstance
void GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::SetInstance(::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::SetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Gameplay", "GorillaRopeSwingUpdateManager", "SetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, manager);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwingUpdateManager.RegisterRopeSwing
void GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::RegisterRopeSwing(::GorillaLocomotion::Gameplay::GorillaRopeSwing* ropeSwing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::RegisterRopeSwing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Gameplay", "GorillaRopeSwingUpdateManager", "RegisterRopeSwing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ropeSwing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ropeSwing);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwingUpdateManager.UnregisterRopeSwing
void GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::UnregisterRopeSwing(::GorillaLocomotion::Gameplay::GorillaRopeSwing* ropeSwing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::UnregisterRopeSwing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Gameplay", "GorillaRopeSwingUpdateManager", "UnregisterRopeSwing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ropeSwing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ropeSwing);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwingUpdateManager.Update
void GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaRopeSwingUpdateManager..cctor
void GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwingUpdateManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Gameplay", "GorillaRopeSwingUpdateManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.GorillaRopeSwingSettings
#include "GorillaLocomotion/Gameplay/GorillaRopeSwingSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single inheritVelocityMultiplier
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaRopeSwingSettings::dyn_inheritVelocityMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwingSettings::dyn_inheritVelocityMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inheritVelocityMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single frictionWhenNotHeld
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaRopeSwingSettings::dyn_frictionWhenNotHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaRopeSwingSettings::dyn_frictionWhenNotHeld");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frictionWhenNotHeld"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.GorillaZipline
#include "GorillaLocomotion/Gameplay/GorillaZipline.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaLocomotion.Climbing.GorillaClimbable
#include "GorillaLocomotion/Climbing/GorillaClimbable.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: BezierSpline
#include "GlobalNamespace/BezierSpline.hpp"
// Including type: GorillaLocomotion.Gameplay.GorillaZiplineSettings
#include "GorillaLocomotion/Gameplay/GorillaZiplineSettings.hpp"
// Including type: GorillaLocomotion.Climbing.GorillaHandClimber
#include "GorillaLocomotion/Climbing/GorillaHandClimber.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: GorillaLocomotion.Climbing.GorillaClimbableRef
#include "GorillaLocomotion/Climbing/GorillaClimbableRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single inheritVelocityRechargeRate
float GorillaLocomotion::Gameplay::GorillaZipline::_get_inheritVelocityRechargeRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::_get_inheritVelocityRechargeRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaLocomotion.Gameplay", "GorillaZipline", "inheritVelocityRechargeRate"));
}
// Autogenerated static field setter
// Set static field: static private System.Single inheritVelocityRechargeRate
void GorillaLocomotion::Gameplay::GorillaZipline::_set_inheritVelocityRechargeRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::_set_inheritVelocityRechargeRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "GorillaZipline", "inheritVelocityRechargeRate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single inheritVelocityValueOnRelease
float GorillaLocomotion::Gameplay::GorillaZipline::_get_inheritVelocityValueOnRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::_get_inheritVelocityValueOnRelease");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaLocomotion.Gameplay", "GorillaZipline", "inheritVelocityValueOnRelease"));
}
// Autogenerated static field setter
// Set static field: static private System.Single inheritVelocityValueOnRelease
void GorillaLocomotion::Gameplay::GorillaZipline::_set_inheritVelocityValueOnRelease(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::_set_inheritVelocityValueOnRelease");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "GorillaZipline", "inheritVelocityValueOnRelease", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform segmentsRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaLocomotion::Gameplay::GorillaZipline::dyn_segmentsRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::dyn_segmentsRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "segmentsRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject segmentPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaLocomotion::Gameplay::GorillaZipline::dyn_segmentPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::dyn_segmentPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "segmentPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Climbing.GorillaClimbable slideHelper
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Climbing::GorillaClimbable*& GorillaLocomotion::Gameplay::GorillaZipline::dyn_slideHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::dyn_slideHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slideHelper"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Climbing::GorillaClimbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSlide
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GorillaLocomotion::Gameplay::GorillaZipline::dyn_audioSlide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::dyn_audioSlide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSlide"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BezierSpline spline
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BezierSpline*& GorillaLocomotion::Gameplay::GorillaZipline::dyn_spline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::dyn_spline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spline"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BezierSpline**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform climbOffsetHelper
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaLocomotion::Gameplay::GorillaZipline::dyn_climbOffsetHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::dyn_climbOffsetHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "climbOffsetHelper"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Gameplay.GorillaZiplineSettings settings
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Gameplay::GorillaZiplineSettings*& GorillaLocomotion::Gameplay::GorillaZipline::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Gameplay::GorillaZiplineSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <currentSpeed>k__BackingField
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaZipline::dyn_$currentSpeed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::dyn_$currentSpeed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentSpeed>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single ziplineDistance
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaZipline::dyn_ziplineDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::dyn_ziplineDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ziplineDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single segmentDistance
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaZipline::dyn_segmentDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::dyn_segmentDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "segmentDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Climbing.GorillaHandClimber currentClimber
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Climbing::GorillaHandClimber*& GorillaLocomotion::Gameplay::GorillaZipline::dyn_currentClimber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::dyn_currentClimber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentClimber"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Climbing::GorillaHandClimber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentT
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaZipline::dyn_currentT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::dyn_currentT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentT"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentInheritVelocityMulti
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaZipline::dyn_currentInheritVelocityMulti() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::dyn_currentInheritVelocityMulti");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentInheritVelocityMulti"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaZipline.get_currentSpeed
float GorillaLocomotion::Gameplay::GorillaZipline::get_currentSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::get_currentSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaZipline.set_currentSpeed
void GorillaLocomotion::Gameplay::GorillaZipline::set_currentSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::set_currentSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaZipline.FindTFromDistance
void GorillaLocomotion::Gameplay::GorillaZipline::FindTFromDistance(ByRef<float> t, float distance, int steps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::FindTFromDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTFromDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(steps)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(t), distance, steps);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaZipline.FindSlideHelperSpot
float GorillaLocomotion::Gameplay::GorillaZipline::FindSlideHelperSpot(::UnityEngine::Vector3 grabPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::FindSlideHelperSpot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSlideHelperSpot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabPoint)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, grabPoint);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaZipline.Start
void GorillaLocomotion::Gameplay::GorillaZipline::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaZipline.OnDestroy
void GorillaLocomotion::Gameplay::GorillaZipline::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaZipline.GetCurrentDirection
::UnityEngine::Vector3 GorillaLocomotion::Gameplay::GorillaZipline::GetCurrentDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::GetCurrentDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaZipline.OnBeforeClimb
void GorillaLocomotion::Gameplay::GorillaZipline::OnBeforeClimb(::GorillaLocomotion::Climbing::GorillaHandClimber* hand, ::GorillaLocomotion::Climbing::GorillaClimbableRef* climbRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::OnBeforeClimb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeClimb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(climbRef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, climbRef);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaZipline.Update
void GorillaLocomotion::Gameplay::GorillaZipline::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.GorillaZipline.Stop
void GorillaLocomotion::Gameplay::GorillaZipline::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZipline::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.GorillaZiplineSegment
#include "GorillaLocomotion/Gameplay/GorillaZiplineSegment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single startT
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaZiplineSegment::dyn_startT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZiplineSegment::dyn_startT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startT"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.GorillaZiplineSettings
#include "GorillaLocomotion/Gameplay/GorillaZiplineSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single minSlidePitch
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_minSlidePitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_minSlidePitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minSlidePitch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSlidePitch
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_maxSlidePitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_maxSlidePitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSlidePitch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minSlideVolume
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_minSlideVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_minSlideVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minSlideVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSlideVolume
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_maxSlideVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_maxSlideVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSlideVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSpeed
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_maxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gravityMulti
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_gravityMulti() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_gravityMulti");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gravityMulti"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single friction
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_friction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_friction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "friction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxFriction
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_maxFriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_maxFriction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxFriction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxFrictionSpeed
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_maxFrictionSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::GorillaZiplineSettings::dyn_maxFrictionSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxFrictionSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.IGorillaGrabable
#include "GorillaLocomotion/Gameplay/IGorillaGrabable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: GorillaGrabber
#include "GlobalNamespace/GorillaGrabber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabbed
::UnityEngine::Transform* GorillaLocomotion::Gameplay::IGorillaGrabable::OnGrabbed(::GlobalNamespace::GorillaGrabber* grabber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::IGorillaGrabable::OnGrabbed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::IGorillaGrabable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, grabber);
}
// Autogenerated method: GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabReleased
::UnityEngine::Transform* GorillaLocomotion::Gameplay::IGorillaGrabable::OnGrabReleased(::GlobalNamespace::GorillaGrabber* grabber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::IGorillaGrabable::OnGrabReleased");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::IGorillaGrabable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, grabber);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.NoncontrollableBroomstick
#include "GorillaLocomotion/Gameplay/NoncontrollableBroomstick.hpp"
// Including type: BezierSpline
#include "GlobalNamespace/BezierSpline.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: GorillaGrabber
#include "GlobalNamespace/GorillaGrabber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single progressLerpDuration
float GorillaLocomotion::Gameplay::NoncontrollableBroomstick::_get_progressLerpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::_get_progressLerpDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaLocomotion.Gameplay", "NoncontrollableBroomstick", "progressLerpDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single progressLerpDuration
void GorillaLocomotion::Gameplay::NoncontrollableBroomstick::_set_progressLerpDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::_set_progressLerpDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "NoncontrollableBroomstick", "progressLerpDuration", value));
}
// Autogenerated instance field getter
// Get instance field: public BezierSpline spline
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BezierSpline*& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_spline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_spline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spline"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BezierSpline**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single speedMultiplierWhileHeld
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_speedMultiplierWhileHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_speedMultiplierWhileHeld");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speedMultiplierWhileHeld"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentSpeedMultiplier
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_currentSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_currentSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single acceleration
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_acceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "acceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single deceleration
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_deceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_deceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isHeldByLocalPlayer
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_isHeldByLocalPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_isHeldByLocalPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isHeldByLocalPlayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean lookForward
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_lookForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_lookForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookForward"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SplineWalkerMode mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SplineWalkerMode& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SplineWalkerMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single SplineProgressOffet
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_SplineProgressOffet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_SplineProgressOffet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SplineProgressOffet"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single progress
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single progressLerpStart
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_progressLerpStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_progressLerpStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressLerpStart"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single progressLerpEnd
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_progressLerpEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_progressLerpEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressLerpEnd"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single progressLerpStartTime
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_progressLerpStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_progressLerpStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressLerpStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean goingForward
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_goingForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_goingForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goingForward"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonView _view
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn__view() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn__view");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_view"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean constantVelocity
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_constantVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::dyn_constantVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constantVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Gameplay.NoncontrollableBroomstick.Awake
void GorillaLocomotion::Gameplay::NoncontrollableBroomstick::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::NoncontrollableBroomstick*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.NoncontrollableBroomstick.Update
void GorillaLocomotion::Gameplay::NoncontrollableBroomstick::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::NoncontrollableBroomstick*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.NoncontrollableBroomstick.OnPhotonSerializeView
void GorillaLocomotion::Gameplay::NoncontrollableBroomstick::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::NoncontrollableBroomstick*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaLocomotion.Gameplay.NoncontrollableBroomstick.GetProgress
float GorillaLocomotion::Gameplay::NoncontrollableBroomstick::GetProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::GetProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.NoncontrollableBroomstick.GetCurrentSpeed
float GorillaLocomotion::Gameplay::NoncontrollableBroomstick::GetCurrentSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::GetCurrentSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.NoncontrollableBroomstick.GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabbed
::UnityEngine::Transform* GorillaLocomotion::Gameplay::NoncontrollableBroomstick::GorillaLocomotion_Gameplay_IGorillaGrabable_OnGrabbed(::GlobalNamespace::GorillaGrabber* g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabbed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::NoncontrollableBroomstick*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, g);
}
// Autogenerated method: GorillaLocomotion.Gameplay.NoncontrollableBroomstick.GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabReleased
::UnityEngine::Transform* GorillaLocomotion::Gameplay::NoncontrollableBroomstick::GorillaLocomotion_Gameplay_IGorillaGrabable_OnGrabReleased(::GlobalNamespace::GorillaGrabber* g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::NoncontrollableBroomstick::GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabReleased");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::NoncontrollableBroomstick*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, g);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.OldGorillaRopeSwing
#include "GorillaLocomotion/Gameplay/OldGorillaRopeSwing.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: GorillaLocomotion.Gameplay.GorillaRopeSwingSettings
#include "GorillaLocomotion/Gameplay/GorillaRopeSwingSettings.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kPlayerMass
float GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_get_kPlayerMass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_get_kPlayerMass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaLocomotion.Gameplay", "OldGorillaRopeSwing", "kPlayerMass"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kPlayerMass
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_set_kPlayerMass(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_set_kPlayerMass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "OldGorillaRopeSwing", "kPlayerMass", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single ropeBitGenOffset
float GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_get_ropeBitGenOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_get_ropeBitGenOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaLocomotion.Gameplay", "OldGorillaRopeSwing", "ropeBitGenOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Single ropeBitGenOffset
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_set_ropeBitGenOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_set_ropeBitGenOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "OldGorillaRopeSwing", "ropeBitGenOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single MAX_ROPE_SPEED
float GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_get_MAX_ROPE_SPEED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_get_MAX_ROPE_SPEED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaLocomotion.Gameplay", "OldGorillaRopeSwing", "MAX_ROPE_SPEED"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MAX_ROPE_SPEED
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_set_MAX_ROPE_SPEED(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_set_MAX_ROPE_SPEED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "OldGorillaRopeSwing", "MAX_ROPE_SPEED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MAX_VELOCITY_FOR_IDLE
float GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_get_MAX_VELOCITY_FOR_IDLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_get_MAX_VELOCITY_FOR_IDLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaLocomotion.Gameplay", "OldGorillaRopeSwing", "MAX_VELOCITY_FOR_IDLE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MAX_VELOCITY_FOR_IDLE
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_set_MAX_VELOCITY_FOR_IDLE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_set_MAX_VELOCITY_FOR_IDLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "OldGorillaRopeSwing", "MAX_VELOCITY_FOR_IDLE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single TIME_FOR_IDLE
float GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_get_TIME_FOR_IDLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_get_TIME_FOR_IDLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaLocomotion.Gameplay", "OldGorillaRopeSwing", "TIME_FOR_IDLE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single TIME_FOR_IDLE
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_set_TIME_FOR_IDLE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::_set_TIME_FOR_IDLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "OldGorillaRopeSwing", "TIME_FOR_IDLE", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject prefabRopeBit
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_prefabRopeBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_prefabRopeBit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabRopeBit"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rigidbody[] bones
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Rigidbody*>& GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_bones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_bones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bones"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Rigidbody*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> remotePlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, int>*& GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_remotePlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_remotePlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remotePlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastGrabTime
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_lastGrabTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_lastGrabTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastGrabTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource ropeCreakSFX
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_ropeCreakSFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_ropeCreakSFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ropeCreakSFX"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean localPlayerOn
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_localPlayerOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_localPlayerOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPlayerOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode localPlayerXRNode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_localPlayerXRNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_localPlayerXRNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPlayerXRNode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody localGrabbedRigid
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_localGrabbedRigid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_localGrabbedRigid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localGrabbedRigid"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isIdle>k__BackingField
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_$isIdle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_$isIdle$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isIdle>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single potentialIdleTimer
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_potentialIdleTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_potentialIdleTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "potentialIdleTimer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 ropeLength
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_ropeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_ropeLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ropeLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Gameplay.GorillaRopeSwingSettings settings
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Gameplay::GorillaRopeSwingSettings*& GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Gameplay::GorillaRopeSwingSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Gameplay.OldGorillaRopeSwing.get_isIdle
bool GorillaLocomotion::Gameplay::OldGorillaRopeSwing::get_isIdle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::get_isIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.OldGorillaRopeSwing.set_isIdle
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::set_isIdle(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::set_isIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaLocomotion.Gameplay.OldGorillaRopeSwing.Awake
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.OldGorillaRopeSwing.OnDisable
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.OldGorillaRopeSwing.Update
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.OldGorillaRopeSwing.SetIsIdle
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::SetIsIdle(bool idle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::SetIsIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idle);
}
// Autogenerated method: GorillaLocomotion.Gameplay.OldGorillaRopeSwing.ToggleIsKinematic
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::ToggleIsKinematic(bool kinematic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::ToggleIsKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleIsKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kinematic)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, kinematic);
}
// Autogenerated method: GorillaLocomotion.Gameplay.OldGorillaRopeSwing.GetBone
::UnityEngine::Rigidbody* GorillaLocomotion::Gameplay::OldGorillaRopeSwing::GetBone(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::GetBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method, index);
}
// Autogenerated method: GorillaLocomotion.Gameplay.OldGorillaRopeSwing.GetBoneIndex
int GorillaLocomotion::Gameplay::OldGorillaRopeSwing::GetBoneIndex(::UnityEngine::Rigidbody* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::GetBoneIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoneIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r);
}
// Autogenerated method: GorillaLocomotion.Gameplay.OldGorillaRopeSwing.AttachLocalPlayer
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::AttachLocalPlayer(::UnityEngine::XR::XRNode xrNode, ::UnityEngine::Rigidbody* rigid, ::UnityEngine::Vector3 offset, ::UnityEngine::Vector3 velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::AttachLocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachLocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrNode), ::il2cpp_utils::ExtractType(rigid), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(velocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xrNode, rigid, offset, velocity);
}
// Autogenerated method: GorillaLocomotion.Gameplay.OldGorillaRopeSwing.DetachLocalPlayer
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::DetachLocalPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::DetachLocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachLocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.OldGorillaRopeSwing.AttachRemotePlayer
bool GorillaLocomotion::Gameplay::OldGorillaRopeSwing::AttachRemotePlayer(int playerId, int boneIndex, ::UnityEngine::Transform* offsetTransform, ::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::AttachRemotePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachRemotePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerId), ::il2cpp_utils::ExtractType(boneIndex), ::il2cpp_utils::ExtractType(offsetTransform), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, playerId, boneIndex, offsetTransform, offset);
}
// Autogenerated method: GorillaLocomotion.Gameplay.OldGorillaRopeSwing.DetachRemotePlayer
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::DetachRemotePlayer(int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::DetachRemotePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachRemotePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerId);
}
// Autogenerated method: GorillaLocomotion.Gameplay.OldGorillaRopeSwing.SetVelocity_RPC
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::SetVelocity_RPC(int boneIndex, ::UnityEngine::Vector3 velocity, bool wholeRope, ::ArrayW<::UnityEngine::Vector3> ropeRotations, ::ArrayW<::UnityEngine::Vector3> ropeVelocities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::SetVelocity_RPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVelocity_RPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneIndex), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(wholeRope), ::il2cpp_utils::ExtractType(ropeRotations), ::il2cpp_utils::ExtractType(ropeVelocities)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, boneIndex, velocity, wholeRope, ropeRotations, ropeVelocities);
}
// Autogenerated method: GorillaLocomotion.Gameplay.OldGorillaRopeSwing.SetVelocity
void GorillaLocomotion::Gameplay::OldGorillaRopeSwing::SetVelocity(int boneIndex, ::UnityEngine::Vector3 velocity, bool wholeRope, ::ArrayW<::UnityEngine::Vector3> ropeRotations, ::ArrayW<::UnityEngine::Vector3> ropeVelocities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::OldGorillaRopeSwing::SetVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneIndex), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(wholeRope), ::il2cpp_utils::ExtractType(ropeRotations), ::il2cpp_utils::ExtractType(ropeVelocities)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, boneIndex, velocity, wholeRope, ropeRotations, ropeVelocities);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.RopeSwingManager
#include "GorillaLocomotion/Gameplay/RopeSwingManager.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: GorillaLocomotion.Gameplay.GorillaRopeSwing
#include "GorillaLocomotion/Gameplay/GorillaRopeSwing.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private GorillaLocomotion.Gameplay.RopeSwingManager <instance>k__BackingField
::GorillaLocomotion::Gameplay::RopeSwingManager* GorillaLocomotion::Gameplay::RopeSwingManager::_get_$instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::RopeSwingManager::_get_$instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GorillaLocomotion::Gameplay::RopeSwingManager*>("GorillaLocomotion.Gameplay", "RopeSwingManager", "<instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private GorillaLocomotion.Gameplay.RopeSwingManager <instance>k__BackingField
void GorillaLocomotion::Gameplay::RopeSwingManager::_set_$instance$k__BackingField(::GorillaLocomotion::Gameplay::RopeSwingManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::RopeSwingManager::_set_$instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "RopeSwingManager", "<instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,GorillaLocomotion.Gameplay.GorillaRopeSwing> ropes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::GorillaLocomotion::Gameplay::GorillaRopeSwing*>*& GorillaLocomotion::Gameplay::RopeSwingManager::dyn_ropes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::RopeSwingManager::dyn_ropes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ropes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::GorillaLocomotion::Gameplay::GorillaRopeSwing*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Gameplay.RopeSwingManager.get_instance
::GorillaLocomotion::Gameplay::RopeSwingManager* GorillaLocomotion::Gameplay::RopeSwingManager::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::RopeSwingManager::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Gameplay", "RopeSwingManager", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaLocomotion::Gameplay::RopeSwingManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.RopeSwingManager.set_instance
void GorillaLocomotion::Gameplay::RopeSwingManager::set_instance(::GorillaLocomotion::Gameplay::RopeSwingManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::RopeSwingManager::set_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Gameplay", "RopeSwingManager", "set_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: GorillaLocomotion.Gameplay.RopeSwingManager.Awake
void GorillaLocomotion::Gameplay::RopeSwingManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::RopeSwingManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.RopeSwingManager.RegisterInstance
void GorillaLocomotion::Gameplay::RopeSwingManager::RegisterInstance(::GorillaLocomotion::Gameplay::GorillaRopeSwing* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::RopeSwingManager::RegisterInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: GorillaLocomotion.Gameplay.RopeSwingManager.UnregisterInstance
void GorillaLocomotion::Gameplay::RopeSwingManager::UnregisterInstance(::GorillaLocomotion::Gameplay::GorillaRopeSwing* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::RopeSwingManager::UnregisterInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: GorillaLocomotion.Gameplay.RopeSwingManager.Register
void GorillaLocomotion::Gameplay::RopeSwingManager::Register(::GorillaLocomotion::Gameplay::GorillaRopeSwing* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::RopeSwingManager::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Gameplay", "RopeSwingManager", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: GorillaLocomotion.Gameplay.RopeSwingManager.Unregister
void GorillaLocomotion::Gameplay::RopeSwingManager::Unregister(::GorillaLocomotion::Gameplay::GorillaRopeSwing* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::RopeSwingManager::Unregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Gameplay", "RopeSwingManager", "Unregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: GorillaLocomotion.Gameplay.RopeSwingManager.SendSetVelocity_RPC
void GorillaLocomotion::Gameplay::RopeSwingManager::SendSetVelocity_RPC(int ropeId, int boneIndex, ::UnityEngine::Vector3 velocity, bool wholeRope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::RopeSwingManager::SendSetVelocity_RPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendSetVelocity_RPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ropeId), ::il2cpp_utils::ExtractType(boneIndex), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(wholeRope)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ropeId, boneIndex, velocity, wholeRope);
}
// Autogenerated method: GorillaLocomotion.Gameplay.RopeSwingManager.GetRope
::GorillaLocomotion::Gameplay::GorillaRopeSwing* GorillaLocomotion::Gameplay::RopeSwingManager::GetRope(int ropeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::RopeSwingManager::GetRope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ropeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaLocomotion::Gameplay::GorillaRopeSwing*, false>(this, ___internal__method, ropeId);
}
// Autogenerated method: GorillaLocomotion.Gameplay.RopeSwingManager.SetVelocity
void GorillaLocomotion::Gameplay::RopeSwingManager::SetVelocity(int ropeId, int boneIndex, ::UnityEngine::Vector3 velocity, bool wholeRope, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::RopeSwingManager::SetVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ropeId), ::il2cpp_utils::ExtractType(boneIndex), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(wholeRope), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ropeId, boneIndex, velocity, wholeRope, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.TestRopePerf
#include "GorillaLocomotion/Gameplay/TestRopePerf.hpp"
// Including type: GorillaLocomotion.Gameplay.TestRopePerf/<Start>d__3
#include "GorillaLocomotion/Gameplay/TestRopePerf_-Start-d__3.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject ropesOld
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaLocomotion::Gameplay::TestRopePerf::dyn_ropesOld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TestRopePerf::dyn_ropesOld");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ropesOld"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject ropesCustom
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaLocomotion::Gameplay::TestRopePerf::dyn_ropesCustom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TestRopePerf::dyn_ropesCustom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ropesCustom"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject ropesCustomVectorized
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaLocomotion::Gameplay::TestRopePerf::dyn_ropesCustomVectorized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TestRopePerf::dyn_ropesCustomVectorized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ropesCustomVectorized"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Gameplay.TestRopePerf.Start
::System::Collections::IEnumerator* GorillaLocomotion::Gameplay::TestRopePerf::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TestRopePerf::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaLocomotion.Gameplay.TestRopePerf/<Start>d__3
#include "GorillaLocomotion/Gameplay/TestRopePerf_-Start-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Gameplay.TestRopePerf/<Start>d__3.System.IDisposable.Dispose
void GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.TestRopePerf/<Start>d__3.MoveNext
bool GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.TestRopePerf/<Start>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.TestRopePerf/<Start>d__3.System.Collections.IEnumerator.Reset
void GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.TestRopePerf/<Start>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::TestRopePerf::$Start$d__3*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.TraverseSpline
#include "GorillaLocomotion/Gameplay/TraverseSpline.hpp"
// Including type: BezierSpline
#include "GlobalNamespace/BezierSpline.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single progressLerpDuration
float GorillaLocomotion::Gameplay::TraverseSpline::_get_progressLerpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::_get_progressLerpDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaLocomotion.Gameplay", "TraverseSpline", "progressLerpDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single progressLerpDuration
void GorillaLocomotion::Gameplay::TraverseSpline::_set_progressLerpDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::_set_progressLerpDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "TraverseSpline", "progressLerpDuration", value));
}
// Autogenerated instance field getter
// Get instance field: public BezierSpline spline
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BezierSpline*& GorillaLocomotion::Gameplay::TraverseSpline::dyn_spline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_spline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spline"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BezierSpline**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::TraverseSpline::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single speedMultiplierWhileHeld
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::TraverseSpline::dyn_speedMultiplierWhileHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_speedMultiplierWhileHeld");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speedMultiplierWhileHeld"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentSpeedMultiplier
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::TraverseSpline::dyn_currentSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_currentSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single acceleration
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::TraverseSpline::dyn_acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_acceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "acceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single deceleration
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::TraverseSpline::dyn_deceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_deceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isHeldByLocalPlayer
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::TraverseSpline::dyn_isHeldByLocalPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_isHeldByLocalPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isHeldByLocalPlayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean lookForward
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::TraverseSpline::dyn_lookForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_lookForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookForward"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SplineWalkerMode mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SplineWalkerMode& GorillaLocomotion::Gameplay::TraverseSpline::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SplineWalkerMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single SplineProgressOffet
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::TraverseSpline::dyn_SplineProgressOffet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_SplineProgressOffet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SplineProgressOffet"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single progress
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::TraverseSpline::dyn_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single progressLerpStart
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::TraverseSpline::dyn_progressLerpStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_progressLerpStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressLerpStart"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single progressLerpEnd
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::TraverseSpline::dyn_progressLerpEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_progressLerpEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressLerpEnd"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single progressLerpStartTime
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::TraverseSpline::dyn_progressLerpStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_progressLerpStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressLerpStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean goingForward
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::TraverseSpline::dyn_goingForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_goingForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goingForward"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonView _view
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& GorillaLocomotion::Gameplay::TraverseSpline::dyn__view() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn__view");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_view"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean constantVelocity
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::TraverseSpline::dyn_constantVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::dyn_constantVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constantVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Gameplay.TraverseSpline.Awake
void GorillaLocomotion::Gameplay::TraverseSpline::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::TraverseSpline*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.TraverseSpline.FixedUpdate
void GorillaLocomotion::Gameplay::TraverseSpline::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::FixedUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::TraverseSpline*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.TraverseSpline.OnPhotonSerializeView
void GorillaLocomotion::Gameplay::TraverseSpline::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaLocomotion::Gameplay::TraverseSpline*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaLocomotion.Gameplay.TraverseSpline.GetProgress
float GorillaLocomotion::Gameplay::TraverseSpline::GetProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::GetProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.TraverseSpline.GetCurrentSpeed
float GorillaLocomotion::Gameplay::TraverseSpline::GetCurrentSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::TraverseSpline::GetCurrentSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.VectorizedCustomRopeSimulation
#include "GorillaLocomotion/Gameplay/VectorizedCustomRopeSimulation.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: GorillaLocomotion.Gameplay.GorillaRopeSwing
#include "GorillaLocomotion/Gameplay/GorillaRopeSwing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaLocomotion.Gameplay.VectorizedCustomRopeSimulation instance
::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation* GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation*>("GorillaLocomotion.Gameplay", "VectorizedCustomRopeSimulation", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaLocomotion.Gameplay.VectorizedCustomRopeSimulation instance
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_set_instance(::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "VectorizedCustomRopeSimulation", "instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MAX_NODE_COUNT
int GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_get_MAX_NODE_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_get_MAX_NODE_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("GorillaLocomotion.Gameplay", "VectorizedCustomRopeSimulation", "MAX_NODE_COUNT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MAX_NODE_COUNT
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_set_MAX_NODE_COUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_set_MAX_NODE_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "VectorizedCustomRopeSimulation", "MAX_NODE_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single MAX_ROPE_SPEED
float GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_get_MAX_ROPE_SPEED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_get_MAX_ROPE_SPEED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaLocomotion.Gameplay", "VectorizedCustomRopeSimulation", "MAX_ROPE_SPEED"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MAX_ROPE_SPEED
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_set_MAX_ROPE_SPEED(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_set_MAX_ROPE_SPEED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "VectorizedCustomRopeSimulation", "MAX_ROPE_SPEED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<GorillaLocomotion.Gameplay.GorillaRopeSwing> registerQueue
::System::Collections::Generic::List_1<::GorillaLocomotion::Gameplay::GorillaRopeSwing*>* GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_get_registerQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_get_registerQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GorillaLocomotion::Gameplay::GorillaRopeSwing*>*>("GorillaLocomotion.Gameplay", "VectorizedCustomRopeSimulation", "registerQueue"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<GorillaLocomotion.Gameplay.GorillaRopeSwing> registerQueue
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_set_registerQueue(::System::Collections::Generic::List_1<::GorillaLocomotion::Gameplay::GorillaRopeSwing*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_set_registerQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "VectorizedCustomRopeSimulation", "registerQueue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<GorillaLocomotion.Gameplay.GorillaRopeSwing> deregisterQueue
::System::Collections::Generic::List_1<::GorillaLocomotion::Gameplay::GorillaRopeSwing*>* GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_get_deregisterQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_get_deregisterQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GorillaLocomotion::Gameplay::GorillaRopeSwing*>*>("GorillaLocomotion.Gameplay", "VectorizedCustomRopeSimulation", "deregisterQueue"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<GorillaLocomotion.Gameplay.GorillaRopeSwing> deregisterQueue
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_set_deregisterQueue(::System::Collections::Generic::List_1<::GorillaLocomotion::Gameplay::GorillaRopeSwing*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_set_deregisterQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Gameplay", "VectorizedCustomRopeSimulation", "deregisterQueue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Transform> nodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nodeDistance
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_nodeDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_nodeDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 applyConstraintIterations
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_applyConstraintIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_applyConstraintIterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyConstraintIterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 finalPassIterations
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_finalPassIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_finalPassIterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finalPassIterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single gravity
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_gravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gravity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single friction
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_friction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_friction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "friction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Gameplay.VectorizedBurstRopeData burstData
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Gameplay::VectorizedBurstRopeData& GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_burstData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_burstData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "burstData"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Gameplay::VectorizedBurstRopeData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastDelta
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_lastDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_lastDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastDelta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<GorillaLocomotion.Gameplay.GorillaRopeSwing> ropes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaLocomotion::Gameplay::GorillaRopeSwing*>*& GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_ropes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_ropes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ropes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaLocomotion::Gameplay::GorillaRopeSwing*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean simulateExtraFrame
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_simulateExtraFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::dyn_simulateExtraFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simulateExtraFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedCustomRopeSimulation.Awake
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedCustomRopeSimulation.Register
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::Register(::GorillaLocomotion::Gameplay::GorillaRopeSwing* rope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Gameplay", "VectorizedCustomRopeSimulation", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rope)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rope);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedCustomRopeSimulation.Unregister
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::Unregister(::GorillaLocomotion::Gameplay::GorillaRopeSwing* rope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::Unregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Gameplay", "VectorizedCustomRopeSimulation", "Unregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rope)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rope);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedCustomRopeSimulation.RegenerateData
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::RegenerateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::RegenerateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegenerateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedCustomRopeSimulation.Dispose
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedCustomRopeSimulation.OnDestroy
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedCustomRopeSimulation.SetRopePos
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::SetRopePos(::GorillaLocomotion::Gameplay::GorillaRopeSwing* ropeTarget, ::ArrayW<::UnityEngine::Vector3> positions, bool setCurPos, bool setLastPos, int onlySetIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::SetRopePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRopePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ropeTarget), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(setCurPos), ::il2cpp_utils::ExtractType(setLastPos), ::il2cpp_utils::ExtractType(onlySetIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ropeTarget, positions, setCurPos, setLastPos, onlySetIndex);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedCustomRopeSimulation.SetVelocity
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::SetVelocity(::GorillaLocomotion::Gameplay::GorillaRopeSwing* ropeTarget, ::UnityEngine::Vector3 velocity, bool wholeRope, int boneIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::SetVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ropeTarget), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(wholeRope), ::il2cpp_utils::ExtractType(boneIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ropeTarget, velocity, wholeRope, boneIndex);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedCustomRopeSimulation.GetNodeVelocity
::UnityEngine::Vector3 GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::GetNodeVelocity(::GorillaLocomotion::Gameplay::GorillaRopeSwing* ropeTarget, int nodeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::GetNodeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ropeTarget), ::il2cpp_utils::ExtractType(nodeIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, ropeTarget, nodeIndex);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedCustomRopeSimulation.SetMassForPlayers
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::SetMassForPlayers(::GorillaLocomotion::Gameplay::GorillaRopeSwing* ropeTarget, bool hasPlayers, int furthestBoneIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::SetMassForPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMassForPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ropeTarget), ::il2cpp_utils::ExtractType(hasPlayers), ::il2cpp_utils::ExtractType(furthestBoneIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ropeTarget, hasPlayers, furthestBoneIndex);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedCustomRopeSimulation.Update
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedCustomRopeSimulation..cctor
void GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedCustomRopeSimulation::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Gameplay", "VectorizedCustomRopeSimulation", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Gameplay.VectorizedSolveRopeJob
#include "GorillaLocomotion/Gameplay/VectorizedSolveRopeJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 applyConstraintIterations
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_applyConstraintIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_applyConstraintIterations");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyConstraintIterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 finalPassIterations
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_finalPassIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_finalPassIterations");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finalPassIterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single deltaTime
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_deltaTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastDeltaTime
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_lastDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_lastDeltaTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ropeCount
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_ropeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_ropeCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ropeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaLocomotion.Gameplay.VectorizedBurstRopeData data
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Gameplay::VectorizedBurstRopeData& GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Gameplay::VectorizedBurstRopeData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gravity
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_gravity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gravity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single nodeDistance
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_nodeDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dyn_nodeDistance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedSolveRopeJob.Execute
void GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedSolveRopeJob.Simulate
void GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::Simulate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::Simulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Simulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedSolveRopeJob.dot4
void GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dot4(ByRef<::Unity::Mathematics::float4> ax, ByRef<::Unity::Mathematics::float4> ay, ByRef<::Unity::Mathematics::float4> az, ByRef<::Unity::Mathematics::float4> bx, ByRef<::Unity::Mathematics::float4> by, ByRef<::Unity::Mathematics::float4> bz, ByRef<::Unity::Mathematics::float4> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::dot4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Gameplay", "VectorizedSolveRopeJob", "dot4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ax), ::il2cpp_utils::ExtractType(ay), ::il2cpp_utils::ExtractType(az), ::il2cpp_utils::ExtractType(bx), ::il2cpp_utils::ExtractType(by), ::il2cpp_utils::ExtractType(bz), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ax), byref(ay), byref(az), byref(bx), byref(by), byref(bz), byref(output));
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedSolveRopeJob.length4
void GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::length4(ByRef<::Unity::Mathematics::float4> xVals, ByRef<::Unity::Mathematics::float4> yVals, ByRef<::Unity::Mathematics::float4> zVals, ByRef<::Unity::Mathematics::float4> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::length4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Gameplay", "VectorizedSolveRopeJob", "length4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xVals), ::il2cpp_utils::ExtractType(yVals), ::il2cpp_utils::ExtractType(zVals), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(xVals), byref(yVals), byref(zVals), byref(output));
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedSolveRopeJob.ConstrainRoots
void GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::ConstrainRoots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::ConstrainRoots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConstrainRoots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedSolveRopeJob.ApplyConstraint
void GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::ApplyConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::ApplyConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Gameplay.VectorizedSolveRopeJob.FinalPass
void GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::FinalPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Gameplay::VectorizedSolveRopeJob::FinalPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FinalPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Climbing.GorillaClimbable
#include "GorillaLocomotion/Climbing/GorillaClimbable.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: GorillaLocomotion.Climbing.GorillaHandClimber
#include "GorillaLocomotion/Climbing/GorillaHandClimber.hpp"
// Including type: GorillaLocomotion.Climbing.GorillaClimbableRef
#include "GorillaLocomotion/Climbing/GorillaClimbableRef.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean snapX
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Climbing::GorillaClimbable::dyn_snapX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaClimbable::dyn_snapX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapX"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean snapY
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Climbing::GorillaClimbable::dyn_snapY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaClimbable::dyn_snapY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean snapZ
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Climbing::GorillaClimbable::dyn_snapZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaClimbable::dyn_snapZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapZ"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDistanceSnap
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Climbing::GorillaClimbable::dyn_maxDistanceSnap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaClimbable::dyn_maxDistanceSnap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistanceSnap"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip clip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GorillaLocomotion::Climbing::GorillaClimbable::dyn_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaClimbable::dyn_clip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip clipOnFullRelease
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GorillaLocomotion::Climbing::GorillaClimbable::dyn_clipOnFullRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaClimbable::dyn_clipOnFullRelease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipOnFullRelease"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<GorillaLocomotion.Climbing.GorillaHandClimber,GorillaLocomotion.Climbing.GorillaClimbableRef> onBeforeClimb
[[deprecated("Use field access instead!")]] ::System::Action_2<::GorillaLocomotion::Climbing::GorillaHandClimber*, ::GorillaLocomotion::Climbing::GorillaClimbableRef*>*& GorillaLocomotion::Climbing::GorillaClimbable::dyn_onBeforeClimb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaClimbable::dyn_onBeforeClimb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onBeforeClimb"))->offset;
  return *reinterpret_cast<::System::Action_2<::GorillaLocomotion::Climbing::GorillaHandClimber*, ::GorillaLocomotion::Climbing::GorillaClimbableRef*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean climbOnlyWhileSmall
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Climbing::GorillaClimbable::dyn_climbOnlyWhileSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaClimbable::dyn_climbOnlyWhileSmall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "climbOnlyWhileSmall"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isBeingClimbed
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Climbing::GorillaClimbable::dyn_isBeingClimbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaClimbable::dyn_isBeingClimbed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isBeingClimbed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider colliderCache
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GorillaLocomotion::Climbing::GorillaClimbable::dyn_colliderCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaClimbable::dyn_colliderCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colliderCache"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaClimbable.Awake
void GorillaLocomotion::Climbing::GorillaClimbable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaClimbable::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Climbing.GorillaClimbableRef
#include "GorillaLocomotion/Climbing/GorillaClimbableRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaLocomotion.Climbing.GorillaClimbable climb
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Climbing::GorillaClimbable*& GorillaLocomotion::Climbing::GorillaClimbableRef::dyn_climb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaClimbableRef::dyn_climb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "climb"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Climbing::GorillaClimbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Climbing.GorillaHandClimber
#include "GorillaLocomotion/Climbing/GorillaHandClimber.hpp"
// Including type: GorillaLocomotion.Player
#include "GorillaLocomotion/Player.hpp"
// Including type: EquipmentInteractor
#include "GlobalNamespace/EquipmentInteractor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaLocomotion.Climbing.GorillaClimbable
#include "GorillaLocomotion/Climbing/GorillaClimbable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single DIST_FOR_CLEAR_RELEASE
float GorillaLocomotion::Climbing::GorillaHandClimber::_get_DIST_FOR_CLEAR_RELEASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::_get_DIST_FOR_CLEAR_RELEASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaLocomotion.Climbing", "GorillaHandClimber", "DIST_FOR_CLEAR_RELEASE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single DIST_FOR_CLEAR_RELEASE
void GorillaLocomotion::Climbing::GorillaHandClimber::_set_DIST_FOR_CLEAR_RELEASE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::_set_DIST_FOR_CLEAR_RELEASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion.Climbing", "GorillaHandClimber", "DIST_FOR_CLEAR_RELEASE", value));
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Player player
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Player*& GorillaLocomotion::Climbing::GorillaHandClimber::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::dyn_player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EquipmentInteractor equipmentInteractor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EquipmentInteractor*& GorillaLocomotion::Climbing::GorillaHandClimber::dyn_equipmentInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::dyn_equipmentInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "equipmentInteractor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EquipmentInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<GorillaLocomotion.Climbing.GorillaClimbable> potentialClimbables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaLocomotion::Climbing::GorillaClimbable*>*& GorillaLocomotion::Climbing::GorillaHandClimber::dyn_potentialClimbables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::dyn_potentialClimbables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "potentialClimbables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaLocomotion::Climbing::GorillaClimbable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.XRNode xrNode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& GorillaLocomotion::Climbing::GorillaHandClimber::dyn_xrNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::dyn_xrNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xrNode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isClimbing
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Climbing::GorillaHandClimber::dyn_isClimbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::dyn_isClimbing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isClimbing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean queuedToBecomeValidToGrabAgain
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Climbing::GorillaHandClimber::dyn_queuedToBecomeValidToGrabAgain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::dyn_queuedToBecomeValidToGrabAgain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queuedToBecomeValidToGrabAgain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaLocomotion.Climbing.GorillaClimbable dontReclimbLast
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Climbing::GorillaClimbable*& GorillaLocomotion::Climbing::GorillaHandClimber::dyn_dontReclimbLast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::dyn_dontReclimbLast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dontReclimbLast"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Climbing::GorillaClimbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 lastAutoReleasePos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Climbing::GorillaHandClimber::dyn_lastAutoReleasePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::dyn_lastAutoReleasePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAutoReleasePos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform handRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaLocomotion::Climbing::GorillaHandClimber::dyn_handRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::dyn_handRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider col
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GorillaLocomotion::Climbing::GorillaHandClimber::dyn_col() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::dyn_col");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "col"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaHandClimber.Awake
void GorillaLocomotion::Climbing::GorillaHandClimber::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaHandClimber.OnEnable
void GorillaLocomotion::Climbing::GorillaHandClimber::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaHandClimber.Update
void GorillaLocomotion::Climbing::GorillaHandClimber::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaHandClimber.GetClosestClimbable
::GorillaLocomotion::Climbing::GorillaClimbable* GorillaLocomotion::Climbing::GorillaHandClimber::GetClosestClimbable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::GetClosestClimbable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClosestClimbable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaLocomotion::Climbing::GorillaClimbable*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaHandClimber.OnTriggerEnter
void GorillaLocomotion::Climbing::GorillaHandClimber::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaHandClimber.OnTriggerExit
void GorillaLocomotion::Climbing::GorillaHandClimber::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaHandClimber.ForceStopClimbing
void GorillaLocomotion::Climbing::GorillaHandClimber::ForceStopClimbing(bool startingNewClimb, bool doDontReclimb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaHandClimber::ForceStopClimbing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceStopClimbing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startingNewClimb), ::il2cpp_utils::ExtractType(doDontReclimb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startingNewClimb, doDontReclimb);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Climbing.GorillaVelocityTracker
#include "GorillaLocomotion/Climbing/GorillaVelocityTracker.hpp"
// Including type: GorillaLocomotion.Climbing.GorillaVelocityTracker/VelocityDataPoint
#include "GorillaLocomotion/Climbing/GorillaVelocityTracker_VelocityDataPoint.hpp"
// Including type: GorillaLocomotion.Climbing.GorillaVelocityTracker/<>c__DisplayClass17_0
#include "GorillaLocomotion/Climbing/GorillaVelocityTracker_--c__DisplayClass17_0.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxDataPoints
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_maxDataPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_maxDataPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDataPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform relativeTo
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_relativeTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_relativeTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "relativeTo"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentDataPointIndex
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_currentDataPointIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_currentDataPointIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentDataPointIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Climbing.GorillaVelocityTracker/VelocityDataPoint[] localSpaceData
[[deprecated("Use field access instead!")]] ::ArrayW<::GorillaLocomotion::Climbing::GorillaVelocityTracker::VelocityDataPoint*>& GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_localSpaceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_localSpaceData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localSpaceData"))->offset;
  return *reinterpret_cast<::ArrayW<::GorillaLocomotion::Climbing::GorillaVelocityTracker::VelocityDataPoint*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Climbing.GorillaVelocityTracker/VelocityDataPoint[] worldSpaceData
[[deprecated("Use field access instead!")]] ::ArrayW<::GorillaLocomotion::Climbing::GorillaVelocityTracker::VelocityDataPoint*>& GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_worldSpaceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_worldSpaceData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldSpaceData"))->offset;
  return *reinterpret_cast<::ArrayW<::GorillaLocomotion::Climbing::GorillaVelocityTracker::VelocityDataPoint*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform trans
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_trans() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_trans");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trans"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastWorldSpacePos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_lastWorldSpacePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_lastWorldSpacePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastWorldSpacePos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastLocalSpacePos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_lastLocalSpacePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_lastLocalSpacePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLocalSpacePos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRelativeTo
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_isRelativeTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_isRelativeTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRelativeTo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastTickedFrame
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_lastTickedFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::dyn_lastTickedFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTickedFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaVelocityTracker.ResetState
void GorillaLocomotion::Climbing::GorillaVelocityTracker::ResetState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::ResetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaVelocityTracker.Awake
void GorillaLocomotion::Climbing::GorillaVelocityTracker::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaVelocityTracker.OnDisable
void GorillaLocomotion::Climbing::GorillaVelocityTracker::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaVelocityTracker.GetPosition
::UnityEngine::Vector3 GorillaLocomotion::Climbing::GorillaVelocityTracker::GetPosition(bool worldSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, worldSpace);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaVelocityTracker.Update
void GorillaLocomotion::Climbing::GorillaVelocityTracker::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaVelocityTracker.Tick
void GorillaLocomotion::Climbing::GorillaVelocityTracker::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::Tick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaVelocityTracker.AddToQueue
void GorillaLocomotion::Climbing::GorillaVelocityTracker::AddToQueue(ByRef<::System::Collections::Generic::List_1<::GorillaLocomotion::Climbing::GorillaVelocityTracker::VelocityDataPoint*>*> dataPoints, ::GorillaLocomotion::Climbing::GorillaVelocityTracker::VelocityDataPoint* newData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::AddToQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataPoints), ::il2cpp_utils::ExtractType(newData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(dataPoints), newData);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaVelocityTracker.GetAverageVelocity
::UnityEngine::Vector3 GorillaLocomotion::Climbing::GorillaVelocityTracker::GetAverageVelocity(bool worldSpace, float maxTimeFromPast, bool doMagnitudeCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::GetAverageVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAverageVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldSpace), ::il2cpp_utils::ExtractType(maxTimeFromPast), ::il2cpp_utils::ExtractType(doMagnitudeCheck)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, worldSpace, maxTimeFromPast, doMagnitudeCheck);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaVelocityTracker.GetLatestVelocity
::UnityEngine::Vector3 GorillaLocomotion::Climbing::GorillaVelocityTracker::GetLatestVelocity(bool worldSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::GetLatestVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLatestVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, worldSpace);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaVelocityTracker.GetAverageSpeedChangeMagnitudeInDirection
float GorillaLocomotion::Climbing::GorillaVelocityTracker::GetAverageSpeedChangeMagnitudeInDirection(::UnityEngine::Vector3 dir, bool worldSpace, float maxTimeFromPast) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::GetAverageSpeedChangeMagnitudeInDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAverageSpeedChangeMagnitudeInDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir), ::il2cpp_utils::ExtractType(worldSpace), ::il2cpp_utils::ExtractType(maxTimeFromPast)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, dir, worldSpace, maxTimeFromPast);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaVelocityTracker.<ResetState>g__PopulateArray|10_0
void GorillaLocomotion::Climbing::GorillaVelocityTracker::$ResetState$g__PopulateArray_10_0(::ArrayW<::GorillaLocomotion::Climbing::GorillaVelocityTracker::VelocityDataPoint*> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::<ResetState>g__PopulateArray|10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ResetState>g__PopulateArray|10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array);
}
// Autogenerated method: GorillaLocomotion.Climbing.GorillaVelocityTracker.<GetAverageVelocity>g__AddPoint|17_0
void GorillaLocomotion::Climbing::GorillaVelocityTracker::$GetAverageVelocity$g__AddPoint_17_0(::GorillaLocomotion::Climbing::GorillaVelocityTracker::VelocityDataPoint* point, ByRef<::GorillaLocomotion::Climbing::GorillaVelocityTracker::$$c__DisplayClass17_0> param_1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::<GetAverageVelocity>g__AddPoint|17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion.Climbing", "GorillaVelocityTracker", "<GetAverageVelocity>g__AddPoint|17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(param_1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, byref(param_1));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Climbing.GorillaVelocityTracker/VelocityDataPoint
#include "GorillaLocomotion/Climbing/GorillaVelocityTracker_VelocityDataPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 delta
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Climbing::GorillaVelocityTracker::VelocityDataPoint::dyn_delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::VelocityDataPoint::dyn_delta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delta"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single time
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Climbing::GorillaVelocityTracker::VelocityDataPoint::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Climbing::GorillaVelocityTracker::VelocityDataPoint::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GTMathUtil.CriticalSpringDamper
#include "GTMathUtil/CriticalSpringDamper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single x
[[deprecated("Use field access instead!")]] float& GTMathUtil::CriticalSpringDamper::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GTMathUtil::CriticalSpringDamper::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single xGoal
[[deprecated("Use field access instead!")]] float& GTMathUtil::CriticalSpringDamper::dyn_xGoal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GTMathUtil::CriticalSpringDamper::dyn_xGoal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xGoal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single halfLife
[[deprecated("Use field access instead!")]] float& GTMathUtil::CriticalSpringDamper::dyn_halfLife() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GTMathUtil::CriticalSpringDamper::dyn_halfLife");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "halfLife"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single curVel
[[deprecated("Use field access instead!")]] float& GTMathUtil::CriticalSpringDamper::dyn_curVel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GTMathUtil::CriticalSpringDamper::dyn_curVel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curVel"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GTMathUtil.CriticalSpringDamper.halflife_to_damping
float GTMathUtil::CriticalSpringDamper::halflife_to_damping(float halflife, float eps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GTMathUtil::CriticalSpringDamper::halflife_to_damping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GTMathUtil", "CriticalSpringDamper", "halflife_to_damping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(halflife), ::il2cpp_utils::ExtractType(eps)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, halflife, eps);
}
// Autogenerated method: GTMathUtil.CriticalSpringDamper.fast_negexp
float GTMathUtil::CriticalSpringDamper::fast_negexp(float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GTMathUtil::CriticalSpringDamper::fast_negexp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GTMathUtil", "CriticalSpringDamper", "fast_negexp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: GTMathUtil.CriticalSpringDamper.Update
float GTMathUtil::CriticalSpringDamper::Update(float dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GTMathUtil::CriticalSpringDamper::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, dt);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.AttachPoint
#include "GorillaTagScripts/AttachPoint.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform attachPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaTagScripts::AttachPoint::dyn_attachPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::AttachPoint::dyn_attachPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityAction onHookedChanged
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction*& GorillaTagScripts::AttachPoint::dyn_onHookedChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::AttachPoint::dyn_onHookedChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onHookedChanged"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isHooked
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::AttachPoint::dyn_isHooked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::AttachPoint::dyn_isHooked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isHooked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean wasHooked
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::AttachPoint::dyn_wasHooked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::AttachPoint::dyn_wasHooked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasHooked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean inForest
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::AttachPoint::dyn_inForest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::AttachPoint::dyn_inForest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inForest"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.AttachPoint.Start
void GorillaTagScripts::AttachPoint::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::AttachPoint::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.AttachPoint.OnTriggerEnter
void GorillaTagScripts::AttachPoint::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::AttachPoint::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaTagScripts.AttachPoint.OnTriggerExit
void GorillaTagScripts::AttachPoint::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::AttachPoint::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaTagScripts.AttachPoint.UpdateHookState
void GorillaTagScripts::AttachPoint::UpdateHookState(bool isHooked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::AttachPoint::UpdateHookState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateHookState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isHooked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isHooked);
}
// Autogenerated method: GorillaTagScripts.AttachPoint.SetIsHook
void GorillaTagScripts::AttachPoint::SetIsHook(bool isHooked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::AttachPoint::SetIsHook");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsHook", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isHooked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isHooked);
}
// Autogenerated method: GorillaTagScripts.AttachPoint.IsHooked
bool GorillaTagScripts::AttachPoint::IsHooked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::AttachPoint::IsHooked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHooked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderAttachEdge
#include "GorillaTagScripts/BuilderAttachEdge.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform center
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaTagScripts::BuilderAttachEdge::dyn_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachEdge::dyn_center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "center"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single length
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::BuilderAttachEdge::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachEdge::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.BuilderAttachEdge.Awake
void GorillaTagScripts::BuilderAttachEdge::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachEdge::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderAttachEdge.OnDrawGizmosSelected
void GorillaTagScripts::BuilderAttachEdge::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachEdge::OnDrawGizmosSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::BuilderAttachEdge*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderAttachGridPlane
#include "GorillaTagScripts/BuilderAttachGridPlane.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: GorillaTagScripts.BuilderItem
#include "GorillaTagScripts/BuilderItem.hpp"
// Including type: BuilderPiece
#include "GlobalNamespace/BuilderPiece.hpp"
// Including type: SnapBounds
#include "GlobalNamespace/SnapBounds.hpp"
// Including type: UnityEngine.Vector2Int
#include "UnityEngine/Vector2Int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean male
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::BuilderAttachGridPlane::dyn_male() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::dyn_male");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "male"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform center
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaTagScripts::BuilderAttachGridPlane::dyn_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::dyn_center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "center"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderAttachGridPlane::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 length
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderAttachGridPlane::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderItem item
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderItem*& GorillaTagScripts::BuilderAttachGridPlane::dyn_item() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::dyn_item");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "item"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderPiece piece
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderPiece*& GorillaTagScripts::BuilderAttachGridPlane::dyn_piece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::dyn_piece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "piece"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderPiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 attachIndex
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderAttachGridPlane::dyn_attachIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::dyn_attachIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single boundingRadius
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::BuilderAttachGridPlane::dyn_boundingRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::dyn_boundingRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boundingRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 pieceToGridPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaTagScripts::BuilderAttachGridPlane::dyn_pieceToGridPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::dyn_pieceToGridPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pieceToGridPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion pieceToGridRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GorillaTagScripts::BuilderAttachGridPlane::dyn_pieceToGridRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::dyn_pieceToGridRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pieceToGridRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean[] connected
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& GorillaTagScripts::BuilderAttachGridPlane::dyn_connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::dyn_connected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connected"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.BuilderAttachGridPlane.Awake
void GorillaTagScripts::BuilderAttachGridPlane::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderAttachGridPlane.Setup
void GorillaTagScripts::BuilderAttachGridPlane::Setup(::GlobalNamespace::BuilderPiece* piece, int attachIndex, float gridSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(attachIndex), ::il2cpp_utils::ExtractType(gridSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, attachIndex, gridSize);
}
// Autogenerated method: GorillaTagScripts.BuilderAttachGridPlane.GetGridPosition
::UnityEngine::Vector3 GorillaTagScripts::BuilderAttachGridPlane::GetGridPosition(int x, int z, float gridSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::GetGridPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGridPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(gridSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, z, gridSize);
}
// Autogenerated method: GorillaTagScripts.BuilderAttachGridPlane.SetConnected
void GorillaTagScripts::BuilderAttachGridPlane::SetConnected(::GlobalNamespace::SnapBounds bounds, bool connect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::SetConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(connect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bounds, connect);
}
// Autogenerated method: GorillaTagScripts.BuilderAttachGridPlane.IsConnected
bool GorillaTagScripts::BuilderAttachGridPlane::IsConnected(::GlobalNamespace::SnapBounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bounds);
}
// Autogenerated method: GorillaTagScripts.BuilderAttachGridPlane.CalcGridOverlap
void GorillaTagScripts::BuilderAttachGridPlane::CalcGridOverlap(::GorillaTagScripts::BuilderAttachGridPlane* otherGridPlane, ::UnityEngine::Vector3 otherPieceLocalPos, ::UnityEngine::Quaternion otherPieceLocalRot, float gridSize, ByRef<::UnityEngine::Vector2Int> min, ByRef<::UnityEngine::Vector2Int> max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::CalcGridOverlap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalcGridOverlap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherGridPlane), ::il2cpp_utils::ExtractType(otherPieceLocalPos), ::il2cpp_utils::ExtractType(otherPieceLocalRot), ::il2cpp_utils::ExtractType(gridSize), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2Int&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2Int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherGridPlane, otherPieceLocalPos, otherPieceLocalRot, gridSize, byref(min), byref(max));
}
// Autogenerated method: GorillaTagScripts.BuilderAttachGridPlane.OnDrawGizmosSelected
void GorillaTagScripts::BuilderAttachGridPlane::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachGridPlane::OnDrawGizmosSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::BuilderAttachGridPlane*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderAttachPoint
#include "GorillaTagScripts/BuilderAttachPoint.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform center
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaTagScripts::BuilderAttachPoint::dyn_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachPoint::dyn_center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "center"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.BuilderAttachPoint.Awake
void GorillaTagScripts::BuilderAttachPoint::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderAttachPoint::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderFactory
#include "GorillaTagScripts/BuilderFactory.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: BuilderPiece
#include "GlobalNamespace/BuilderPiece.hpp"
// Including type: GorillaTagScripts.BuilderOptionButton
#include "GorillaTagScripts/BuilderOptionButton.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform spawnLocation
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaTagScripts::BuilderFactory::dyn_spawnLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::dyn_spawnLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spawnLocation"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshPro itemLabel
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& GorillaTagScripts::BuilderFactory::dyn_itemLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::dyn_itemLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> pieceTypes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GorillaTagScripts::BuilderFactory::dyn_pieceTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::dyn_pieceTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pieceTypes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> itemList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GorillaTagScripts::BuilderFactory::dyn_itemList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::dyn_itemList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BuilderPiece> pieceList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>*& GorillaTagScripts::BuilderFactory::dyn_pieceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::dyn_pieceList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pieceList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderOptionButton buildItemButton
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderOptionButton*& GorillaTagScripts::BuilderFactory::dyn_buildItemButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::dyn_buildItemButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buildItemButton"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderOptionButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderOptionButton prevItemButton
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderOptionButton*& GorillaTagScripts::BuilderFactory::dyn_prevItemButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::dyn_prevItemButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevItemButton"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderOptionButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderOptionButton nextItemButton
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderOptionButton*& GorillaTagScripts::BuilderFactory::dyn_nextItemButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::dyn_nextItemButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextItemButton"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderOptionButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GorillaTagScripts::BuilderFactory::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip buildPieceSound
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GorillaTagScripts::BuilderFactory::dyn_buildPieceSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::dyn_buildPieceSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buildPieceSound"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform previewMarker
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaTagScripts::BuilderFactory::dyn_previewMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::dyn_previewMarker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewMarker"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BuilderPiece previewPiece
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderPiece*& GorillaTagScripts::BuilderFactory::dyn_previewPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::dyn_previewPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewPiece"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderPiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currPieceTypeIndex
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderFactory::dyn_currPieceTypeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::dyn_currPieceTypeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currPieceTypeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> pieceTypeToIndex
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, int>*& GorillaTagScripts::BuilderFactory::dyn_pieceTypeToIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::dyn_pieceTypeToIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pieceTypeToIndex"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::BuilderFactory::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.BuilderFactory.Awake
void GorillaTagScripts::BuilderFactory::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderFactory.InitIfNeeded
void GorillaTagScripts::BuilderFactory::InitIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::InitIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderFactory.Setup
void GorillaTagScripts::BuilderFactory::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderFactory.GetPiecePrefab
::GlobalNamespace::BuilderPiece* GorillaTagScripts::BuilderFactory::GetPiecePrefab(int pieceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::GetPiecePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPiecePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BuilderPiece*, false>(this, ___internal__method, pieceType);
}
// Autogenerated method: GorillaTagScripts.BuilderFactory.OnBuildItem
void GorillaTagScripts::BuilderFactory::OnBuildItem(::GorillaTagScripts::BuilderOptionButton* button, bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::OnBuildItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBuildItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button), ::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, button, isLeftHand);
}
// Autogenerated method: GorillaTagScripts.BuilderFactory.OnPrevItem
void GorillaTagScripts::BuilderFactory::OnPrevItem(::GorillaTagScripts::BuilderOptionButton* button, bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::OnPrevItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPrevItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button), ::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, button, isLeftHand);
}
// Autogenerated method: GorillaTagScripts.BuilderFactory.OnNextItem
void GorillaTagScripts::BuilderFactory::OnNextItem(::GorillaTagScripts::BuilderOptionButton* button, bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::OnNextItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNextItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button), ::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, button, isLeftHand);
}
// Autogenerated method: GorillaTagScripts.BuilderFactory.RefreshUI
void GorillaTagScripts::BuilderFactory::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderFactory.CreateRandomPiece
void GorillaTagScripts::BuilderFactory::CreateRandomPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderFactory::CreateRandomPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRandomPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderItem
#include "GorillaTagScripts/BuilderItem.hpp"
// Including type: InteractionPoint
#include "GlobalNamespace/InteractionPoint.hpp"
// Including type: GorillaTagScripts.BuilderItemReliableState
#include "GorillaTagScripts/BuilderItemReliableState.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: BuilderPiece
#include "GlobalNamespace/BuilderPiece.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
// Including type: GorillaTagScripts.BuilderAttachGridPlane
#include "GorillaTagScripts/BuilderAttachGridPlane.hpp"
// Including type: GorillaTagScripts.BuilderAttachEdge
#include "GorillaTagScripts/BuilderAttachEdge.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: GorillaTagScripts.BuilderTable
#include "GorillaTagScripts/BuilderTable.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: DropZone
#include "GlobalNamespace/DropZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderItemReliableState reliableState
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderItemReliableState*& GorillaTagScripts::BuilderItem::dyn_reliableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_reliableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reliableState"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderItemReliableState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String builtItemPath
[[deprecated("Use field access instead!")]] ::StringW& GorillaTagScripts::BuilderItem::dyn_builtItemPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_builtItemPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "builtItemPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject itemRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::BuilderItem::dyn_itemRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_itemRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableCollidersWhenReady
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::BuilderItem::dyn_enableCollidersWhenReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_enableCollidersWhenReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableCollidersWhenReady"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single handsFreeOfCollidersTime
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::BuilderItem::dyn_handsFreeOfCollidersTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_handsFreeOfCollidersTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handsFreeOfCollidersTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderPiece attachedPiece
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderPiece*& GorillaTagScripts::BuilderItem::dyn_attachedPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_attachedPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachedPiece"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderPiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Behaviour> onlyWhenPlacedBehaviours
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Behaviour*>*& GorillaTagScripts::BuilderItem::dyn_onlyWhenPlacedBehaviours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_onlyWhenPlacedBehaviours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlyWhenPlacedBehaviours"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Behaviour*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderItem parentItem
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderItem*& GorillaTagScripts::BuilderItem::dyn_parentItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_parentItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentItem"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaTagScripts.BuilderAttachGridPlane> gridPlanes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>*& GorillaTagScripts::BuilderItem::dyn_gridPlanes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_gridPlanes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gridPlanes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaTagScripts.BuilderAttachEdge> edges
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachEdge*>*& GorillaTagScripts::BuilderItem::dyn_edges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_edges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "edges"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachEdge*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Collider> colliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& GorillaTagScripts::BuilderItem::dyn_colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform parent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaTagScripts::BuilderItem::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 initialPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaTagScripts::BuilderItem::dyn_initialPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_initialPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion initialRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GorillaTagScripts::BuilderItem::dyn_initialRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_initialRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 initialGrabInteractorScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaTagScripts::BuilderItem::dyn_initialGrabInteractorScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_initialGrabInteractorScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialGrabInteractorScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.BuilderTable currTable
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderTable*& GorillaTagScripts::BuilderItem::dyn_currTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_currTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currTable"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GorillaTagScripts::BuilderItem::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip snapAudio
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GorillaTagScripts::BuilderItem::dyn_snapAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_snapAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapAudio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip placeAudio
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GorillaTagScripts::BuilderItem::dyn_placeAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_placeAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "placeAudio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject placeVFX
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::BuilderItem::dyn_placeVFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_placeVFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "placeVFX"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.BuilderItem/BuilderItemState previousItemState
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderItem::BuilderItemState& GorillaTagScripts::BuilderItem::dyn_previousItemState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::dyn_previousItemState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousItemState"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderItem::BuilderItemState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.AttachPiece
void GorillaTagScripts::BuilderItem::AttachPiece(::GlobalNamespace::BuilderPiece* piece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::AttachPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.DetachPiece
void GorillaTagScripts::BuilderItem::DetachPiece(::GlobalNamespace::BuilderPiece* piece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::DetachPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.OnStateChanged
void GorillaTagScripts::BuilderItem::OnStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::OnStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.IsOverlapping
bool GorillaTagScripts::BuilderItem::IsOverlapping(::System::Collections::Generic::List_1<::GlobalNamespace::InteractionPoint*>* interactionPoints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::IsOverlapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOverlapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactionPoints)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactionPoints);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.OnHoverOverTableStart
void GorillaTagScripts::BuilderItem::OnHoverOverTableStart(::GorillaTagScripts::BuilderTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::OnHoverOverTableStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHoverOverTableStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.OnHoverOverTableEnd
void GorillaTagScripts::BuilderItem::OnHoverOverTableEnd(::GorillaTagScripts::BuilderTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::OnHoverOverTableEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHoverOverTableEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.PlayVFX
void GorillaTagScripts::BuilderItem::PlayVFX(::UnityEngine::GameObject* vfx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::PlayVFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayVFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vfx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vfx);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.Reparent
bool GorillaTagScripts::BuilderItem::Reparent(::UnityEngine::Transform* _transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::Reparent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reparent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_transform)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, _transform);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.ShouldPlayFX
bool GorillaTagScripts::BuilderItem::ShouldPlayFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::ShouldPlayFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldPlayFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.BuildEnvItem
::UnityEngine::GameObject* GorillaTagScripts::BuilderItem::BuildEnvItem(int prefabHash, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::BuildEnvItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "BuilderItem", "BuildEnvItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabHash), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabHash, position, rotation);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.GetPhotonViewId
int GorillaTagScripts::BuilderItem::GetPhotonViewId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::GetPhotonViewId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPhotonViewId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.ShouldBeKinematic
bool GorillaTagScripts::BuilderItem::ShouldBeKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::ShouldBeKinematic");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 80));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.Awake
void GorillaTagScripts::BuilderItem::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 72));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.OnEnable
void GorillaTagScripts::BuilderItem::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.OnDisable
void GorillaTagScripts::BuilderItem::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.Start
void GorillaTagScripts::BuilderItem::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 75));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.GetDefaultTransformationMatrix
::UnityEngine::Matrix4x4 GorillaTagScripts::BuilderItem::GetDefaultTransformationMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::GetDefaultTransformationMatrix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 79));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.LateUpdateShared
void GorillaTagScripts::BuilderItem::LateUpdateShared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::LateUpdateShared");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 86));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.LateUpdateLocal
void GorillaTagScripts::BuilderItem::LateUpdateLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::LateUpdateLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 90));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.OnGrab
void GorillaTagScripts::BuilderItem::OnGrab(::GlobalNamespace::InteractionPoint* pointGrabbed, ::UnityEngine::GameObject* grabbingHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::OnGrab");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 58));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointGrabbed, grabbingHand);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.OnRelease
bool GorillaTagScripts::BuilderItem::OnRelease(::GlobalNamespace::DropZone* zoneReleased, ::UnityEngine::GameObject* releasingHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::OnRelease");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 59));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, zoneReleased, releasingHand);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.OnJoinedRoom
void GorillaTagScripts::BuilderItem::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.OnLeftRoom
void GorillaTagScripts::BuilderItem::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderItem.OnHandMatrixUpdate
void GorillaTagScripts::BuilderItem::OnHandMatrixUpdate(::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation, bool leftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::OnHandMatrixUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 93));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localPosition, localRotation, leftHand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderItem/BuilderItemState
#include "GorillaTagScripts/BuilderItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderItem/BuilderItemState isHeld
::GorillaTagScripts::BuilderItem::BuilderItemState GorillaTagScripts::BuilderItem::BuilderItemState::_get_isHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::BuilderItemState::_get_isHeld");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderItem::BuilderItemState>("GorillaTagScripts", "BuilderItem/BuilderItemState", "isHeld"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderItem/BuilderItemState isHeld
void GorillaTagScripts::BuilderItem::BuilderItemState::_set_isHeld(::GorillaTagScripts::BuilderItem::BuilderItemState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::BuilderItemState::_set_isHeld");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderItem/BuilderItemState", "isHeld", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderItem/BuilderItemState dropped
::GorillaTagScripts::BuilderItem::BuilderItemState GorillaTagScripts::BuilderItem::BuilderItemState::_get_dropped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::BuilderItemState::_get_dropped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderItem::BuilderItemState>("GorillaTagScripts", "BuilderItem/BuilderItemState", "dropped"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderItem/BuilderItemState dropped
void GorillaTagScripts::BuilderItem::BuilderItemState::_set_dropped(::GorillaTagScripts::BuilderItem::BuilderItemState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::BuilderItemState::_set_dropped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderItem/BuilderItemState", "dropped", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderItem/BuilderItemState placed
::GorillaTagScripts::BuilderItem::BuilderItemState GorillaTagScripts::BuilderItem::BuilderItemState::_get_placed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::BuilderItemState::_get_placed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderItem::BuilderItemState>("GorillaTagScripts", "BuilderItem/BuilderItemState", "placed"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderItem/BuilderItemState placed
void GorillaTagScripts::BuilderItem::BuilderItemState::_set_placed(::GorillaTagScripts::BuilderItem::BuilderItemState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::BuilderItemState::_set_placed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderItem/BuilderItemState", "placed", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderItem/BuilderItemState unused0
::GorillaTagScripts::BuilderItem::BuilderItemState GorillaTagScripts::BuilderItem::BuilderItemState::_get_unused0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::BuilderItemState::_get_unused0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderItem::BuilderItemState>("GorillaTagScripts", "BuilderItem/BuilderItemState", "unused0"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderItem/BuilderItemState unused0
void GorillaTagScripts::BuilderItem::BuilderItemState::_set_unused0(::GorillaTagScripts::BuilderItem::BuilderItemState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::BuilderItemState::_set_unused0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderItem/BuilderItemState", "unused0", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderItem/BuilderItemState none
::GorillaTagScripts::BuilderItem::BuilderItemState GorillaTagScripts::BuilderItem::BuilderItemState::_get_none() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::BuilderItemState::_get_none");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderItem::BuilderItemState>("GorillaTagScripts", "BuilderItem/BuilderItemState", "none"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderItem/BuilderItemState none
void GorillaTagScripts::BuilderItem::BuilderItemState::_set_none(::GorillaTagScripts::BuilderItem::BuilderItemState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::BuilderItemState::_set_none");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderItem/BuilderItemState", "none", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderItem::BuilderItemState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItem::BuilderItemState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderItemReliableState
#include "GorillaTagScripts/BuilderItemReliableState.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rightHandAttachPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaTagScripts::BuilderItemReliableState::dyn_rightHandAttachPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItemReliableState::dyn_rightHandAttachPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandAttachPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rightHandAttachRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GorillaTagScripts::BuilderItemReliableState::dyn_rightHandAttachRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItemReliableState::dyn_rightHandAttachRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandAttachRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 leftHandAttachPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaTagScripts::BuilderItemReliableState::dyn_leftHandAttachPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItemReliableState::dyn_leftHandAttachPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandAttachPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion leftHandAttachRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GorillaTagScripts::BuilderItemReliableState::dyn_leftHandAttachRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItemReliableState::dyn_leftHandAttachRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandAttachRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean dirty
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::BuilderItemReliableState::dyn_dirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItemReliableState::dyn_dirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.BuilderItemReliableState.OnPhotonSerializeView
void GorillaTagScripts::BuilderItemReliableState::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderItemReliableState::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::BuilderItemReliableState*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderOptionButton
#include "GorillaTagScripts/BuilderOptionButton.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`2<GorillaTagScripts.BuilderOptionButton,System.Boolean> onPressed
[[deprecated("Use field access instead!")]] ::System::Action_2<::GorillaTagScripts::BuilderOptionButton*, bool>*& GorillaTagScripts::BuilderOptionButton::dyn_onPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderOptionButton::dyn_onPressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPressed"))->offset;
  return *reinterpret_cast<::System::Action_2<::GorillaTagScripts::BuilderOptionButton*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.BuilderOptionButton.OnDestroy
void GorillaTagScripts::BuilderOptionButton::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderOptionButton::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderOptionButton.Setup
void GorillaTagScripts::BuilderOptionButton::Setup(::System::Action_2<::GorillaTagScripts::BuilderOptionButton*, bool>* onPressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderOptionButton::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onPressed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onPressed);
}
// Autogenerated method: GorillaTagScripts.BuilderOptionButton.SetPressed
void GorillaTagScripts::BuilderOptionButton::SetPressed(bool pressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderOptionButton::SetPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pressed);
}
// Autogenerated method: GorillaTagScripts.BuilderOptionButton.Start
void GorillaTagScripts::BuilderOptionButton::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderOptionButton::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderOptionButton.ButtonActivationWithHand
void GorillaTagScripts::BuilderOptionButton::ButtonActivationWithHand(bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderOptionButton::ButtonActivationWithHand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeftHand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderPool
#include "GorillaTagScripts/BuilderPool.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BuilderPiece
#include "GlobalNamespace/BuilderPiece.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: BuilderBumpGlow
#include "GlobalNamespace/BuilderBumpGlow.hpp"
// Including type: GorillaTagScripts.BuilderFactory
#include "GorillaTagScripts/BuilderFactory.hpp"
// Including type: BuilderShelf
#include "GlobalNamespace/BuilderShelf.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Collections.Generic.List`1<BuilderPiece>> piecePools
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>*>*& GorillaTagScripts::BuilderPool::dyn_piecePools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPool::dyn_piecePools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "piecePools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> piecePoolLookup
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, int>*& GorillaTagScripts::BuilderPool::dyn_piecePoolLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPool::dyn_piecePoolLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "piecePoolLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BuilderBumpGlow> bumpGlowPool
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BuilderBumpGlow*>*& GorillaTagScripts::BuilderPool::dyn_bumpGlowPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPool::dyn_bumpGlowPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bumpGlowPool"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderBumpGlow*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderBumpGlow bumpGlowPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderBumpGlow*& GorillaTagScripts::BuilderPool::dyn_bumpGlowPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPool::dyn_bumpGlowPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bumpGlowPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderBumpGlow**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.BuilderFactory factory
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderFactory*& GorillaTagScripts::BuilderPool::dyn_factory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPool::dyn_factory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "factory"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderFactory**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.BuilderPool.Setup
void GorillaTagScripts::BuilderPool::Setup(::GorillaTagScripts::BuilderFactory* factory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPool::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(factory)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, factory);
}
// Autogenerated method: GorillaTagScripts.BuilderPool.BuildFromShelves
void GorillaTagScripts::BuilderPool::BuildFromShelves(::System::Collections::Generic::List_1<::GlobalNamespace::BuilderShelf*>* shelves) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPool::BuildFromShelves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildFromShelves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shelves)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shelves);
}
// Autogenerated method: GorillaTagScripts.BuilderPool.AddToPool
void GorillaTagScripts::BuilderPool::AddToPool(int pieceType, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPool::AddToPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceType), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceType, count);
}
// Autogenerated method: GorillaTagScripts.BuilderPool.CreatePiece
::GlobalNamespace::BuilderPiece* GorillaTagScripts::BuilderPool::CreatePiece(int pieceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPool::CreatePiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BuilderPiece*, false>(this, ___internal__method, pieceType);
}
// Autogenerated method: GorillaTagScripts.BuilderPool.DestroyPiece
void GorillaTagScripts::BuilderPool::DestroyPiece(::GlobalNamespace::BuilderPiece* piece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPool::DestroyPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece);
}
// Autogenerated method: GorillaTagScripts.BuilderPool.AddToGlowBumpPool
void GorillaTagScripts::BuilderPool::AddToGlowBumpPool(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPool::AddToGlowBumpPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToGlowBumpPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: GorillaTagScripts.BuilderPool.CreateGlowBump
::GlobalNamespace::BuilderBumpGlow* GorillaTagScripts::BuilderPool::CreateGlowBump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPool::CreateGlowBump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGlowBump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BuilderBumpGlow*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderPool.DestroyBumpGlow
void GorillaTagScripts::BuilderPool::DestroyBumpGlow(::GlobalNamespace::BuilderBumpGlow* bump) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPool::DestroyBumpGlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyBumpGlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bump)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bump);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderPlacementStyle
#include "GorillaTagScripts/BuilderPlacementStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderPlacementStyle Float
::GorillaTagScripts::BuilderPlacementStyle GorillaTagScripts::BuilderPlacementStyle::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPlacementStyle::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderPlacementStyle>("GorillaTagScripts", "BuilderPlacementStyle", "Float"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderPlacementStyle Float
void GorillaTagScripts::BuilderPlacementStyle::_set_Float(::GorillaTagScripts::BuilderPlacementStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPlacementStyle::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderPlacementStyle", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderPlacementStyle SnapDown
::GorillaTagScripts::BuilderPlacementStyle GorillaTagScripts::BuilderPlacementStyle::_get_SnapDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPlacementStyle::_get_SnapDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderPlacementStyle>("GorillaTagScripts", "BuilderPlacementStyle", "SnapDown"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderPlacementStyle SnapDown
void GorillaTagScripts::BuilderPlacementStyle::_set_SnapDown(::GorillaTagScripts::BuilderPlacementStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPlacementStyle::_set_SnapDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderPlacementStyle", "SnapDown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderPlacementStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPlacementStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderTableData
#include "GorillaTagScripts/BuilderTableData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 BUILDER_TABLE_DATA_VERSION
int GorillaTagScripts::BuilderTableData::_get_BUILDER_TABLE_DATA_VERSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::_get_BUILDER_TABLE_DATA_VERSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("GorillaTagScripts", "BuilderTableData", "BUILDER_TABLE_DATA_VERSION"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BUILDER_TABLE_DATA_VERSION
void GorillaTagScripts::BuilderTableData::_set_BUILDER_TABLE_DATA_VERSION(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::_set_BUILDER_TABLE_DATA_VERSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableData", "BUILDER_TABLE_DATA_VERSION", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 version
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderTableData::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 numEdits
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderTableData::dyn_numEdits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::dyn_numEdits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numEdits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 numPieces
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderTableData::dyn_numPieces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::dyn_numPieces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numPieces"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Int32> pieceType
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GorillaTagScripts::BuilderTableData::dyn_pieceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::dyn_pieceType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pieceType"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Int32> pieceId
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GorillaTagScripts::BuilderTableData::dyn_pieceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::dyn_pieceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pieceId"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Int32> parentId
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GorillaTagScripts::BuilderTableData::dyn_parentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::dyn_parentId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentId"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Int32> attachIndex
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GorillaTagScripts::BuilderTableData::dyn_attachIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::dyn_attachIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachIndex"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Int32> parentAttachIndex
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GorillaTagScripts::BuilderTableData::dyn_parentAttachIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::dyn_parentAttachIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentAttachIndex"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<SnapBounds> attachBounds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::SnapBounds>*& GorillaTagScripts::BuilderTableData::dyn_attachBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::dyn_attachBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachBounds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::SnapBounds>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<SnapBounds> parentAttachBounds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::SnapBounds>*& GorillaTagScripts::BuilderTableData::dyn_parentAttachBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::dyn_parentAttachBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentAttachBounds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::SnapBounds>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Vector3> position
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GorillaTagScripts::BuilderTableData::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Quaternion> rotation
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Quaternion>*& GorillaTagScripts::BuilderTableData::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Quaternion>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Int32> materialType
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GorillaTagScripts::BuilderTableData::dyn_materialType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::dyn_materialType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialType"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.BuilderTableData.Clear
void GorillaTagScripts::BuilderTableData::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableData::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderPotentialPlacement
#include "GorillaTagScripts/BuilderPotentialPlacement.hpp"
// Including type: BuilderPiece
#include "GlobalNamespace/BuilderPiece.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BuilderPiece attachPiece
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderPiece*& GorillaTagScripts::BuilderPotentialPlacement::dyn_attachPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPotentialPlacement::dyn_attachPiece");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachPiece"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderPiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderPiece parentPiece
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderPiece*& GorillaTagScripts::BuilderPotentialPlacement::dyn_parentPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPotentialPlacement::dyn_parentPiece");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentPiece"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderPiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 attachIndex
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderPotentialPlacement::dyn_attachIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPotentialPlacement::dyn_attachIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 parentAttachIndex
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderPotentialPlacement::dyn_parentAttachIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPotentialPlacement::dyn_parentAttachIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentAttachIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 localPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaTagScripts::BuilderPotentialPlacement::dyn_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPotentialPlacement::dyn_localPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion localRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GorillaTagScripts::BuilderPotentialPlacement::dyn_localRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPotentialPlacement::dyn_localRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 attachPlaneNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaTagScripts::BuilderPotentialPlacement::dyn_attachPlaneNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPotentialPlacement::dyn_attachPlaneNormal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachPlaneNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single attachDistance
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::BuilderPotentialPlacement::dyn_attachDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPotentialPlacement::dyn_attachDistance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single score
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::BuilderPotentialPlacement::dyn_score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPotentialPlacement::dyn_score");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "score"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SnapBounds attachBounds
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SnapBounds& GorillaTagScripts::BuilderPotentialPlacement::dyn_attachBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPotentialPlacement::dyn_attachBounds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachBounds"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SnapBounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SnapBounds parentAttachBounds
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SnapBounds& GorillaTagScripts::BuilderPotentialPlacement::dyn_parentAttachBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPotentialPlacement::dyn_parentAttachBounds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentAttachBounds"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SnapBounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.BuilderPotentialPlacement.Reset
void GorillaTagScripts::BuilderPotentialPlacement::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderPotentialPlacement::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderTable
#include "GorillaTagScripts/BuilderTable.hpp"
// Including type: GorillaTagScripts.BuilderTable/BuildPieceSpawn
#include "GorillaTagScripts/BuilderTable_BuildPieceSpawn.hpp"
// Including type: GorillaTagScripts.BuilderFactory
#include "GorillaTagScripts/BuilderFactory.hpp"
// Including type: GorillaTagScripts.BuilderTableData
#include "GorillaTagScripts/BuilderTableData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: GorillaTagScripts.BuilderTableNetworking
#include "GorillaTagScripts/BuilderTableNetworking.hpp"
// Including type: BuilderRenderer
#include "GlobalNamespace/BuilderRenderer.hpp"
// Including type: GorillaTagScripts.BuilderPool
#include "GorillaTagScripts/BuilderPool.hpp"
// Including type: SizeChanger
#include "GlobalNamespace/SizeChanger.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: GorillaTagScripts.BuilderOptionButton
#include "GorillaTagScripts/BuilderOptionButton.hpp"
// Including type: GorillaTagScripts.BuilderAttachGridPlane
#include "GorillaTagScripts/BuilderAttachGridPlane.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: BuilderShelf
#include "GlobalNamespace/BuilderShelf.hpp"
// Including type: GorillaTagScripts.BuilderItem
#include "GorillaTagScripts/BuilderItem.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: PlayFab.ClientModels.GetUserDataResult
#include "PlayFab/ClientModels/GetUserDataResult.hpp"
// Including type: PlayFab.ClientModels.GetTitleDataResult
#include "PlayFab/ClientModels/GetTitleDataResult.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: GorillaTagScripts.BuilderPotentialPlacement
#include "GorillaTagScripts/BuilderPotentialPlacement.hpp"
// Including type: UnityEngine.Vector2Int
#include "UnityEngine/Vector2Int.hpp"
// Including type: BuilderPiece/State
#include "GlobalNamespace/BuilderPiece.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 INITIAL_BUILTIN_PIECE_ID
int GorillaTagScripts::BuilderTable::_get_INITIAL_BUILTIN_PIECE_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_INITIAL_BUILTIN_PIECE_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("GorillaTagScripts", "BuilderTable", "INITIAL_BUILTIN_PIECE_ID"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 INITIAL_BUILTIN_PIECE_ID
void GorillaTagScripts::BuilderTable::_set_INITIAL_BUILTIN_PIECE_ID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_INITIAL_BUILTIN_PIECE_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "INITIAL_BUILTIN_PIECE_ID", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 INITIAL_CREATED_PIECE_ID
int GorillaTagScripts::BuilderTable::_get_INITIAL_CREATED_PIECE_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_INITIAL_CREATED_PIECE_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("GorillaTagScripts", "BuilderTable", "INITIAL_CREATED_PIECE_ID"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 INITIAL_CREATED_PIECE_ID
void GorillaTagScripts::BuilderTable::_set_INITIAL_CREATED_PIECE_ID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_INITIAL_CREATED_PIECE_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "INITIAL_CREATED_PIECE_ID", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single MAX_DROP_VELOCITY
float GorillaTagScripts::BuilderTable::_get_MAX_DROP_VELOCITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_MAX_DROP_VELOCITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaTagScripts", "BuilderTable", "MAX_DROP_VELOCITY"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MAX_DROP_VELOCITY
void GorillaTagScripts::BuilderTable::_set_MAX_DROP_VELOCITY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_MAX_DROP_VELOCITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "MAX_DROP_VELOCITY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single MAX_DROP_ANG_VELOCITY
float GorillaTagScripts::BuilderTable::_get_MAX_DROP_ANG_VELOCITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_MAX_DROP_ANG_VELOCITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaTagScripts", "BuilderTable", "MAX_DROP_ANG_VELOCITY"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MAX_DROP_ANG_VELOCITY
void GorillaTagScripts::BuilderTable::_set_MAX_DROP_ANG_VELOCITY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_MAX_DROP_ANG_VELOCITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "MAX_DROP_ANG_VELOCITY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MAX_DISTANCE_FROM_CENTER
float GorillaTagScripts::BuilderTable::_get_MAX_DISTANCE_FROM_CENTER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_MAX_DISTANCE_FROM_CENTER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaTagScripts", "BuilderTable", "MAX_DISTANCE_FROM_CENTER"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MAX_DISTANCE_FROM_CENTER
void GorillaTagScripts::BuilderTable::_set_MAX_DISTANCE_FROM_CENTER(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_MAX_DISTANCE_FROM_CENTER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "MAX_DISTANCE_FROM_CENTER", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MAX_LOCAL_MAGNITUDE
float GorillaTagScripts::BuilderTable::_get_MAX_LOCAL_MAGNITUDE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_MAX_LOCAL_MAGNITUDE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaTagScripts", "BuilderTable", "MAX_LOCAL_MAGNITUDE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MAX_LOCAL_MAGNITUDE
void GorillaTagScripts::BuilderTable::_set_MAX_LOCAL_MAGNITUDE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_MAX_LOCAL_MAGNITUDE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "MAX_LOCAL_MAGNITUDE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 placedLayer
int GorillaTagScripts::BuilderTable::_get_placedLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_placedLayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("GorillaTagScripts", "BuilderTable", "placedLayer"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 placedLayer
void GorillaTagScripts::BuilderTable::_set_placedLayer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_placedLayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "placedLayer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 heldLayer
int GorillaTagScripts::BuilderTable::_get_heldLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_heldLayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("GorillaTagScripts", "BuilderTable", "heldLayer"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 heldLayer
void GorillaTagScripts::BuilderTable::_set_heldLayer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_heldLayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "heldLayer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 heldLayerLocal
int GorillaTagScripts::BuilderTable::_get_heldLayerLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_heldLayerLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("GorillaTagScripts", "BuilderTable", "heldLayerLocal"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 heldLayerLocal
void GorillaTagScripts::BuilderTable::_set_heldLayerLocal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_heldLayerLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "heldLayerLocal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 droppedLayer
int GorillaTagScripts::BuilderTable::_get_droppedLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_droppedLayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("GorillaTagScripts", "BuilderTable", "droppedLayer"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 droppedLayer
void GorillaTagScripts::BuilderTable::_set_droppedLayer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_droppedLayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "droppedLayer", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable instance
::GorillaTagScripts::BuilderTable* GorillaTagScripts::BuilderTable::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable*>("GorillaTagScripts", "BuilderTable", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable instance
void GorillaTagScripts::BuilderTable::_set_instance(::GorillaTagScripts::BuilderTable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<BuilderPiece> tempDeletePieces
::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>* GorillaTagScripts::BuilderTable::_get_tempDeletePieces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_tempDeletePieces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>*>("GorillaTagScripts", "BuilderTable", "tempDeletePieces"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<BuilderPiece> tempDeletePieces
void GorillaTagScripts::BuilderTable::_set_tempDeletePieces(::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_tempDeletePieces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "tempDeletePieces", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> tempPeiceIds
::System::Collections::Generic::List_1<int>* GorillaTagScripts::BuilderTable::_get_tempPeiceIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_tempPeiceIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<int>*>("GorillaTagScripts", "BuilderTable", "tempPeiceIds"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> tempPeiceIds
void GorillaTagScripts::BuilderTable::_set_tempPeiceIds(::System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_tempPeiceIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "tempPeiceIds", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> tempParentPeiceIds
::System::Collections::Generic::List_1<int>* GorillaTagScripts::BuilderTable::_get_tempParentPeiceIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_tempParentPeiceIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<int>*>("GorillaTagScripts", "BuilderTable", "tempParentPeiceIds"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> tempParentPeiceIds
void GorillaTagScripts::BuilderTable::_set_tempParentPeiceIds(::System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_tempParentPeiceIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "tempParentPeiceIds", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> tempAttachIndexes
::System::Collections::Generic::List_1<int>* GorillaTagScripts::BuilderTable::_get_tempAttachIndexes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_tempAttachIndexes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<int>*>("GorillaTagScripts", "BuilderTable", "tempAttachIndexes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> tempAttachIndexes
void GorillaTagScripts::BuilderTable::_set_tempAttachIndexes(::System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_tempAttachIndexes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "tempAttachIndexes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> tempParentAttachIndexes
::System::Collections::Generic::List_1<int>* GorillaTagScripts::BuilderTable::_get_tempParentAttachIndexes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_tempParentAttachIndexes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<int>*>("GorillaTagScripts", "BuilderTable", "tempParentAttachIndexes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> tempParentAttachIndexes
void GorillaTagScripts::BuilderTable::_set_tempParentAttachIndexes(::System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_tempParentAttachIndexes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "tempParentAttachIndexes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<SnapBounds> tempAttachBounds
::System::Collections::Generic::List_1<::GlobalNamespace::SnapBounds>* GorillaTagScripts::BuilderTable::_get_tempAttachBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_tempAttachBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::SnapBounds>*>("GorillaTagScripts", "BuilderTable", "tempAttachBounds"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<SnapBounds> tempAttachBounds
void GorillaTagScripts::BuilderTable::_set_tempAttachBounds(::System::Collections::Generic::List_1<::GlobalNamespace::SnapBounds>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_tempAttachBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "tempAttachBounds", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<SnapBounds> tempParentAttachBounds
::System::Collections::Generic::List_1<::GlobalNamespace::SnapBounds>* GorillaTagScripts::BuilderTable::_get_tempParentAttachBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_tempParentAttachBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::SnapBounds>*>("GorillaTagScripts", "BuilderTable", "tempParentAttachBounds"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<SnapBounds> tempParentAttachBounds
void GorillaTagScripts::BuilderTable::_set_tempParentAttachBounds(::System::Collections::Generic::List_1<::GlobalNamespace::SnapBounds>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_tempParentAttachBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "tempParentAttachBounds", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> tempParentActorNumbers
::System::Collections::Generic::List_1<int>* GorillaTagScripts::BuilderTable::_get_tempParentActorNumbers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_tempParentActorNumbers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<int>*>("GorillaTagScripts", "BuilderTable", "tempParentActorNumbers"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> tempParentActorNumbers
void GorillaTagScripts::BuilderTable::_set_tempParentActorNumbers(::System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_tempParentActorNumbers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "tempParentActorNumbers", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Boolean> tempInLeftHand
::System::Collections::Generic::List_1<bool>* GorillaTagScripts::BuilderTable::_get_tempInLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_tempInLeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<bool>*>("GorillaTagScripts", "BuilderTable", "tempInLeftHand"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Boolean> tempInLeftHand
void GorillaTagScripts::BuilderTable::_set_tempInLeftHand(::System::Collections::Generic::List_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_tempInLeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "tempInLeftHand", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> tempMaterialTypes
::System::Collections::Generic::List_1<int>* GorillaTagScripts::BuilderTable::_get_tempMaterialTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_tempMaterialTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<int>*>("GorillaTagScripts", "BuilderTable", "tempMaterialTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> tempMaterialTypes
void GorillaTagScripts::BuilderTable::_set_tempMaterialTypes(::System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_tempMaterialTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "tempMaterialTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<GorillaTagScripts.BuilderAttachGridPlane> tempLocalGridPlanes
::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>* GorillaTagScripts::BuilderTable::_get_tempLocalGridPlanes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_get_tempLocalGridPlanes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>*>("GorillaTagScripts", "BuilderTable", "tempLocalGridPlanes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<GorillaTagScripts.BuilderAttachGridPlane> tempLocalGridPlanes
void GorillaTagScripts::BuilderTable::_set_tempLocalGridPlanes(::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::_set_tempLocalGridPlanes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable", "tempLocalGridPlanes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BuilderPiece> builderPieces
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>*& GorillaTagScripts::BuilderTable::dyn_builderPieces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_builderPieces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "builderPieces"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderTableNetworking builderNetworking
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderTableNetworking*& GorillaTagScripts::BuilderTable::dyn_builderNetworking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_builderNetworking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "builderNetworking"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderTableNetworking**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderRenderer builderRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderRenderer*& GorillaTagScripts::BuilderTable::dyn_builderRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_builderRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "builderRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderPool builderPool
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderPool*& GorillaTagScripts::BuilderTable::dyn_builderPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_builderPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "builderPool"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderPool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SizeChanger sizeChanger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeChanger*& GorillaTagScripts::BuilderTable::dyn_sizeChanger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_sizeChanger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sizeChanger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SizeChanger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultTint
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::BuilderTable::dyn_defaultTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_defaultTint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultTint"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single droppedTint
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::BuilderTable::dyn_droppedTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_droppedTint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "droppedTint"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single grabbedTint
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::BuilderTable::dyn_grabbedTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_grabbedTint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabbedTint"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single shelfTint
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::BuilderTable::dyn_shelfTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_shelfTint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shelfTint"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform tableCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaTagScripts::BuilderTable::dyn_tableCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_tableCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tableCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform worldCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaTagScripts::BuilderTable::dyn_worldCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_worldCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tableToWorldScale
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::BuilderTable::dyn_tableToWorldScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_tableToWorldScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tableToWorldScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pieceScale
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::BuilderTable::dyn_pieceScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_pieceScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pieceScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gridSize
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::BuilderTable::dyn_gridSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_gridSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gridSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask allPiecesMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GorillaTagScripts::BuilderTable::dyn_allPiecesMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_allPiecesMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allPiecesMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useSnapRotation
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::BuilderTable::dyn_useSnapRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_useSnapRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useSnapRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderPlacementStyle usePlacementStyle
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderPlacementStyle& GorillaTagScripts::BuilderTable::dyn_usePlacementStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_usePlacementStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usePlacementStyle"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderPlacementStyle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean buildInPlace
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::BuilderTable::dyn_buildInPlace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_buildInPlace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buildInPlace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderOptionButton buttonSnapRotation
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderOptionButton*& GorillaTagScripts::BuilderTable::dyn_buttonSnapRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_buttonSnapRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonSnapRotation"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderOptionButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderOptionButton buttonSnapPosition
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderOptionButton*& GorillaTagScripts::BuilderTable::dyn_buttonSnapPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_buttonSnapPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonSnapPosition"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderOptionButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderOptionButton buttonSaveLayout
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderOptionButton*& GorillaTagScripts::BuilderTable::dyn_buttonSaveLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_buttonSaveLayout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonSaveLayout"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderOptionButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderOptionButton buttonClearLayout
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderOptionButton*& GorillaTagScripts::BuilderTable::dyn_buttonClearLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_buttonClearLayout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonClearLayout"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderOptionButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaTagScripts.BuilderAttachGridPlane> baseGridPlanes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>*& GorillaTagScripts::BuilderTable::dyn_baseGridPlanes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_baseGridPlanes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseGridPlanes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BuilderPiece> basePieces
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>*& GorillaTagScripts::BuilderTable::dyn_basePieces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_basePieces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "basePieces"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nextPieceId
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderTable::dyn_nextPieceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_nextPieceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextPieceId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject shelvesRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::BuilderTable::dyn_shelvesRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_shelvesRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shelvesRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaTagScripts.BuilderTable/BuildPieceSpawn> buildPieceSpawns
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderTable::BuildPieceSpawn*>*& GorillaTagScripts::BuilderTable::dyn_buildPieceSpawns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_buildPieceSpawns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buildPieceSpawns"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderTable::BuildPieceSpawn*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BuilderShelf> shelves
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BuilderShelf*>*& GorillaTagScripts::BuilderTable::dyn_shelves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_shelves");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shelves"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderShelf*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> buildItemRoots
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GorillaTagScripts::BuilderTable::dyn_buildItemRoots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_buildItemRoots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buildItemRoots"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaTagScripts.BuilderItem> buildItems
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderItem*>*& GorillaTagScripts::BuilderTable::dyn_buildItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_buildItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buildItems"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BuilderPiece> pieces
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>*& GorillaTagScripts::BuilderTable::dyn_pieces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_pieces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pieces"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> builderPiecesVisited
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<int>*& GorillaTagScripts::BuilderTable::dyn_builderPiecesVisited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_builderPiecesVisited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "builderPiecesVisited"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.BuilderTable/TableState tableState
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderTable::TableState& GorillaTagScripts::BuilderTable::dyn_tableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_tableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tableState"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderTable::TableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inRoom
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::BuilderTable::dyn_inRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_inRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inBuilderZone
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::BuilderTable::dyn_inBuilderZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_inBuilderZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inBuilderZone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<GorillaTagScripts.BuilderTable/BuilderCommand> queuedBuildCommands
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderTable::BuilderCommand>*& GorillaTagScripts::BuilderTable::dyn_queuedBuildCommands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_queuedBuildCommands");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queuedBuildCommands"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderTable::BuilderCommand>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaTagScripts.BuilderAttachGridPlane> gridPlanes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>*& GorillaTagScripts::BuilderTable::dyn_gridPlanes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_gridPlanes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gridPlanes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaTagScripts.BuilderFactory> factories
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderFactory*>*& GorillaTagScripts::BuilderTable::dyn_factories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_factories");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "factories"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderFactory*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isSetup
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::BuilderTable::dyn_isSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_isSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isSetup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderTable/SnapParams releaseSnapParams
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderTable::SnapParams& GorillaTagScripts::BuilderTable::dyn_releaseSnapParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_releaseSnapParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "releaseSnapParams"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderTable::SnapParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderTable/SnapParams pushSnapParams
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderTable::SnapParams& GorillaTagScripts::BuilderTable::dyn_pushSnapParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_pushSnapParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pushSnapParams"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderTable::SnapParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.BuilderTable/SnapParams pushAndEaseParams
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderTable::SnapParams& GorillaTagScripts::BuilderTable::dyn_pushAndEaseParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_pushAndEaseParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pushAndEaseParams"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderTable::SnapParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.BuilderTable/SnapParams currSnapParams
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderTable::SnapParams& GorillaTagScripts::BuilderTable::dyn_currSnapParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_currSnapParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currSnapParams"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderTable::SnapParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxPlacementChildDepth
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderTable::dyn_maxPlacementChildDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_maxPlacementChildDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPlacementChildDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.BuilderTableData tableData
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderTableData*& GorillaTagScripts::BuilderTable::dyn_tableData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::dyn_tableData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tableData"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderTableData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.Awake
void GorillaTagScripts::BuilderTable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.Start
void GorillaTagScripts::BuilderTable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.OnDestroy
void GorillaTagScripts::BuilderTable::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.HandleOnZoneChanged
void GorillaTagScripts::BuilderTable::HandleOnZoneChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::HandleOnZoneChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOnZoneChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.InitIfNeeded
void GorillaTagScripts::BuilderTable::InitIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::InitIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.Update
void GorillaTagScripts::BuilderTable::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.GetTableState
::GorillaTagScripts::BuilderTable::TableState GorillaTagScripts::BuilderTable::GetTableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::GetTableState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaTagScripts::BuilderTable::TableState, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.SetTableState
void GorillaTagScripts::BuilderTable::SetTableState(::GorillaTagScripts::BuilderTable::TableState newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::SetTableState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.SetInRoom
void GorillaTagScripts::BuilderTable::SetInRoom(bool inRoom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::SetInRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inRoom)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inRoom);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.IsInBuilderZone
bool GorillaTagScripts::BuilderTable::IsInBuilderZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::IsInBuilderZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInBuilderZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.SetInBuilderZone
void GorillaTagScripts::BuilderTable::SetInBuilderZone(bool inBuilderZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::SetInBuilderZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInBuilderZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBuilderZone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inBuilderZone);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.UpdateTableState
void GorillaTagScripts::BuilderTable::UpdateTableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::UpdateTableState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ExecuteBuildCommand
void GorillaTagScripts::BuilderTable::ExecuteBuildCommand(::GorillaTagScripts::BuilderTable::BuilderCommand cmd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ExecuteBuildCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteBuildCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cmd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cmd);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ClearTable
void GorillaTagScripts::BuilderTable::ClearTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ClearTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ClearQueuedCommands
void GorillaTagScripts::BuilderTable::ClearQueuedCommands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ClearQueuedCommands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearQueuedCommands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.GetNumQueuedCommands
int GorillaTagScripts::BuilderTable::GetNumQueuedCommands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::GetNumQueuedCommands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNumQueuedCommands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ClearTableInternal
void GorillaTagScripts::BuilderTable::ClearTableInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ClearTableInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearTableInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.SerializeTableState
int GorillaTagScripts::BuilderTable::SerializeTableState(::ArrayW<uint8_t> bytes, int maxBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::SerializeTableState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeTableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(maxBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, maxBytes);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.DeserializeTableState
void GorillaTagScripts::BuilderTable::DeserializeTableState(::ArrayW<uint8_t> bytes, int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::DeserializeTableState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeTableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(numBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes, numBytes);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.SerializeSinglePieceState
int GorillaTagScripts::BuilderTable::SerializeSinglePieceState(int pieceId, ::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::SerializeSinglePieceState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeSinglePieceState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pieceId, bytes);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.DeserializeSinglePieceState
void GorillaTagScripts::BuilderTable::DeserializeSinglePieceState(::ArrayW<uint8_t> bytes, int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::DeserializeSinglePieceState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeSinglePieceState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(numBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes, numBytes);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.WriteVector3
void GorillaTagScripts::BuilderTable::WriteVector3(::System::IO::BinaryWriter* writer, ::UnityEngine::Vector3 data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::WriteVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, data);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.WriteQuaternion
void GorillaTagScripts::BuilderTable::WriteQuaternion(::System::IO::BinaryWriter* writer, ::UnityEngine::Quaternion data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::WriteQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, data);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ReadVector3
::UnityEngine::Vector3 GorillaTagScripts::BuilderTable::ReadVector3(::System::IO::BinaryReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ReadVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, reader);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ReadQuaternion
::UnityEngine::Quaternion GorillaTagScripts::BuilderTable::ReadQuaternion(::System::IO::BinaryReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ReadQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, reader);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.BuildPiecesOnShelves
void GorillaTagScripts::BuilderTable::BuildPiecesOnShelves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuildPiecesOnShelves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildPiecesOnShelves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.BuildInitialTableForPlayer
void GorillaTagScripts::BuilderTable::BuildInitialTableForPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuildInitialTableForPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildInitialTableForPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.OnGetUserDataInitialState
void GorillaTagScripts::BuilderTable::OnGetUserDataInitialState(::PlayFab::ClientModels::GetUserDataResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::OnGetUserDataInitialState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetUserDataInitialState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.OnGetTitleDataInitialState
void GorillaTagScripts::BuilderTable::OnGetTitleDataInitialState(::PlayFab::ClientModels::GetTitleDataResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::OnGetTitleDataInitialState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetTitleDataInitialState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.OnGetInitialStateFail
void GorillaTagScripts::BuilderTable::OnGetInitialStateFail(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::OnGetInitialStateFail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetInitialStateFail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.WriteTableToJson
::StringW GorillaTagScripts::BuilderTable::WriteTableToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::WriteTableToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTableToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.BuildTableFromJson
bool GorillaTagScripts::BuilderTable::BuildTableFromJson(::StringW tableJson) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuildTableFromJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildTableFromJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableJson)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tableJson);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.CreatePieceId
int GorillaTagScripts::BuilderTable::CreatePieceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::CreatePieceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePieceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.CreatePiece
void GorillaTagScripts::BuilderTable::CreatePiece(int pieceType, int pieceId, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, int materialType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::CreatePiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceType), ::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(materialType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceType, pieceId, position, rotation, materialType);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ShouldExecuteCommand
bool GorillaTagScripts::BuilderTable::ShouldExecuteCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ShouldExecuteCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldExecuteCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ShouldQueueCommand
bool GorillaTagScripts::BuilderTable::ShouldQueueCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ShouldQueueCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldQueueCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ShouldDiscardCommand
bool GorillaTagScripts::BuilderTable::ShouldDiscardCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ShouldDiscardCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldDiscardCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.DoesChainContainPiece
bool GorillaTagScripts::BuilderTable::DoesChainContainPiece(::GlobalNamespace::BuilderPiece* targetPiece, ::GlobalNamespace::BuilderPiece* firstInChain, ::GlobalNamespace::BuilderPiece* nextInChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::DoesChainContainPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoesChainContainPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPiece), ::il2cpp_utils::ExtractType(firstInChain), ::il2cpp_utils::ExtractType(nextInChain)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetPiece, firstInChain, nextInChain);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.DoesChainContainChain
bool GorillaTagScripts::BuilderTable::DoesChainContainChain(::GlobalNamespace::BuilderPiece* chainARoot, ::GlobalNamespace::BuilderPiece* chainBAttachPiece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::DoesChainContainChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoesChainContainChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chainARoot), ::il2cpp_utils::ExtractType(chainBAttachPiece)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, chainARoot, chainBAttachPiece);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ValidatePlacePieceParams
bool GorillaTagScripts::BuilderTable::ValidatePlacePieceParams(int pieceId, int attachPieceId, ::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation, int parentPieceId, int attachIndex, int attachBoundsMinX, int attachBoundsMinY, int attachBoundsMaxX, int attachBoundsMaxY, int parentAttachIndex, int parentAttachBoundsMinX, int parentAttachBoundsMinY, int parentAttachBoundsMaxX, int parentAttachBoundsMaxY, ::Photon::Realtime::Player* placedByPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ValidatePlacePieceParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidatePlacePieceParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(attachPieceId), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation), ::il2cpp_utils::ExtractType(parentPieceId), ::il2cpp_utils::ExtractType(attachIndex), ::il2cpp_utils::ExtractType(attachBoundsMinX), ::il2cpp_utils::ExtractType(attachBoundsMinY), ::il2cpp_utils::ExtractType(attachBoundsMaxX), ::il2cpp_utils::ExtractType(attachBoundsMaxY), ::il2cpp_utils::ExtractType(parentAttachIndex), ::il2cpp_utils::ExtractType(parentAttachBoundsMinX), ::il2cpp_utils::ExtractType(parentAttachBoundsMinY), ::il2cpp_utils::ExtractType(parentAttachBoundsMaxX), ::il2cpp_utils::ExtractType(parentAttachBoundsMaxY), ::il2cpp_utils::ExtractType(placedByPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pieceId, attachPieceId, localPosition, localRotation, parentPieceId, attachIndex, attachBoundsMinX, attachBoundsMinY, attachBoundsMaxX, attachBoundsMaxY, parentAttachIndex, parentAttachBoundsMinX, parentAttachBoundsMinY, parentAttachBoundsMaxX, parentAttachBoundsMaxY, placedByPlayer);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ExecutePieceCreated
void GorillaTagScripts::BuilderTable::ExecutePieceCreated(::GorillaTagScripts::BuilderTable::BuilderCommand cmd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ExecutePieceCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecutePieceCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cmd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cmd);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ValidateCreatePieceParams
bool GorillaTagScripts::BuilderTable::ValidateCreatePieceParams(int newPieceType, int newPieceId, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::GlobalNamespace::BuilderPiece::State state, int materialType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ValidateCreatePieceParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCreatePieceParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPieceType), ::il2cpp_utils::ExtractType(newPieceId), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(materialType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, newPieceType, newPieceId, position, rotation, state, materialType);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.CreatePieceInternal
::GlobalNamespace::BuilderPiece* GorillaTagScripts::BuilderTable::CreatePieceInternal(int newPieceType, int newPieceId, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::GlobalNamespace::BuilderPiece::State state, int materialType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::CreatePieceInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePieceInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPieceType), ::il2cpp_utils::ExtractType(newPieceId), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(materialType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BuilderPiece*, false>(this, ___internal__method, newPieceType, newPieceId, position, rotation, state, materialType);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ValidateAttachPieceParams
bool GorillaTagScripts::BuilderTable::ValidateAttachPieceParams(int pieceId, int attachIndex, ::GlobalNamespace::SnapBounds attachBounds, int parentId, int parentAttachIndex, ::GlobalNamespace::SnapBounds parentAttachBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ValidateAttachPieceParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateAttachPieceParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(attachIndex), ::il2cpp_utils::ExtractType(attachBounds), ::il2cpp_utils::ExtractType(parentId), ::il2cpp_utils::ExtractType(parentAttachIndex), ::il2cpp_utils::ExtractType(parentAttachBounds)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pieceId, attachIndex, attachBounds, parentId, parentAttachIndex, parentAttachBounds);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.AttachPieceInternal
void GorillaTagScripts::BuilderTable::AttachPieceInternal(int pieceId, int attachIndex, ::GlobalNamespace::SnapBounds attachBounds, int parentId, int parentAttachIndex, ::GlobalNamespace::SnapBounds parentAttachBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::AttachPieceInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachPieceInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(attachIndex), ::il2cpp_utils::ExtractType(attachBounds), ::il2cpp_utils::ExtractType(parentId), ::il2cpp_utils::ExtractType(parentAttachIndex), ::il2cpp_utils::ExtractType(parentAttachBounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceId, attachIndex, attachBounds, parentId, parentAttachIndex, parentAttachBounds);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.AttachPieceToActorInternal
void GorillaTagScripts::BuilderTable::AttachPieceToActorInternal(int pieceId, int actorNumber, bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::AttachPieceToActorInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachPieceToActorInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(actorNumber), ::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceId, actorNumber, isLeftHand);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.RequestPlacePiece
void GorillaTagScripts::BuilderTable::RequestPlacePiece(::GlobalNamespace::BuilderPiece* piece, ::GlobalNamespace::BuilderPiece* attachPiece, ::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation, ::GlobalNamespace::BuilderPiece* parentPiece, int attachIndex, ::GlobalNamespace::SnapBounds attachBounds, int parentAttachIndex, ::GlobalNamespace::SnapBounds parentAttachBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::RequestPlacePiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestPlacePiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(attachPiece), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation), ::il2cpp_utils::ExtractType(parentPiece), ::il2cpp_utils::ExtractType(attachIndex), ::il2cpp_utils::ExtractType(attachBounds), ::il2cpp_utils::ExtractType(parentAttachIndex), ::il2cpp_utils::ExtractType(parentAttachBounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, attachPiece, localPosition, localRotation, parentPiece, attachIndex, attachBounds, parentAttachIndex, parentAttachBounds);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.PlacePiece
void GorillaTagScripts::BuilderTable::PlacePiece(int pieceId, int attachPieceId, ::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation, int parentPieceId, int attachIndex, ::GlobalNamespace::SnapBounds attachBounds, int parentAttachIndex, ::GlobalNamespace::SnapBounds parentAttachBounds, ::Photon::Realtime::Player* placedByPlayer, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::PlacePiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlacePiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(attachPieceId), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation), ::il2cpp_utils::ExtractType(parentPieceId), ::il2cpp_utils::ExtractType(attachIndex), ::il2cpp_utils::ExtractType(attachBounds), ::il2cpp_utils::ExtractType(parentAttachIndex), ::il2cpp_utils::ExtractType(parentAttachBounds), ::il2cpp_utils::ExtractType(placedByPlayer), ::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceId, attachPieceId, localPosition, localRotation, parentPieceId, attachIndex, attachBounds, parentAttachIndex, parentAttachBounds, placedByPlayer, force);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.PiecePlacedInternal
void GorillaTagScripts::BuilderTable::PiecePlacedInternal(int pieceId, int attachPieceId, ::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation, int parentPieceId, int attachIndex, ::GlobalNamespace::SnapBounds attachBounds, int parentAttachIndex, ::GlobalNamespace::SnapBounds parentAttachBounds, ::Photon::Realtime::Player* placedByPlayer, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::PiecePlacedInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PiecePlacedInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(attachPieceId), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation), ::il2cpp_utils::ExtractType(parentPieceId), ::il2cpp_utils::ExtractType(attachIndex), ::il2cpp_utils::ExtractType(attachBounds), ::il2cpp_utils::ExtractType(parentAttachIndex), ::il2cpp_utils::ExtractType(parentAttachBounds), ::il2cpp_utils::ExtractType(placedByPlayer), ::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceId, attachPieceId, localPosition, localRotation, parentPieceId, attachIndex, attachBounds, parentAttachIndex, parentAttachBounds, placedByPlayer, force);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ExecutePiecePlaced
void GorillaTagScripts::BuilderTable::ExecutePiecePlaced(::GorillaTagScripts::BuilderTable::BuilderCommand cmd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ExecutePiecePlaced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecutePiecePlaced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cmd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cmd);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ValidateGrabPieceParams
bool GorillaTagScripts::BuilderTable::ValidateGrabPieceParams(int pieceId, bool isLeftHand, ::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation, ::Photon::Realtime::Player* grabbedByPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ValidateGrabPieceParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateGrabPieceParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(isLeftHand), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation), ::il2cpp_utils::ExtractType(grabbedByPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pieceId, isLeftHand, localPosition, localRotation, grabbedByPlayer);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.RequestGrabPiece
void GorillaTagScripts::BuilderTable::RequestGrabPiece(::GlobalNamespace::BuilderPiece* piece, bool isLefHand, ::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::RequestGrabPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestGrabPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(isLefHand), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, isLefHand, localPosition, localRotation);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.GrabPiece
void GorillaTagScripts::BuilderTable::GrabPiece(int pieceId, bool isLeftHand, ::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation, ::Photon::Realtime::Player* grabbedByPlayer, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::GrabPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(isLeftHand), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation), ::il2cpp_utils::ExtractType(grabbedByPlayer), ::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceId, isLeftHand, localPosition, localRotation, grabbedByPlayer, force);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.PieceGrabbedInternal
void GorillaTagScripts::BuilderTable::PieceGrabbedInternal(int pieceId, bool isLeftHand, ::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation, ::Photon::Realtime::Player* grabbedByPlayer, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::PieceGrabbedInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PieceGrabbedInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(isLeftHand), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation), ::il2cpp_utils::ExtractType(grabbedByPlayer), ::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceId, isLeftHand, localPosition, localRotation, grabbedByPlayer, force);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ExecutePieceGrabbed
void GorillaTagScripts::BuilderTable::ExecutePieceGrabbed(::GorillaTagScripts::BuilderTable::BuilderCommand cmd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ExecutePieceGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecutePieceGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cmd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cmd);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ValidateDropPieceParams
bool GorillaTagScripts::BuilderTable::ValidateDropPieceParams(int pieceId, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 velocity, ::UnityEngine::Vector3 angVelocity, ::Photon::Realtime::Player* droppedByPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ValidateDropPieceParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateDropPieceParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(angVelocity), ::il2cpp_utils::ExtractType(droppedByPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pieceId, position, rotation, velocity, angVelocity, droppedByPlayer);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.RequestDropPiece
void GorillaTagScripts::BuilderTable::RequestDropPiece(::GlobalNamespace::BuilderPiece* piece, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 velocity, ::UnityEngine::Vector3 angVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::RequestDropPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestDropPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(angVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, position, rotation, velocity, angVelocity);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.DropPiece
void GorillaTagScripts::BuilderTable::DropPiece(int pieceId, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 velocity, ::UnityEngine::Vector3 angVelocity, ::Photon::Realtime::Player* droppedByPlayer, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::DropPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DropPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(angVelocity), ::il2cpp_utils::ExtractType(droppedByPlayer), ::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceId, position, rotation, velocity, angVelocity, droppedByPlayer, force);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.PieceDroppedInternal
void GorillaTagScripts::BuilderTable::PieceDroppedInternal(int pieceId, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 velocity, ::UnityEngine::Vector3 angVelocity, ::Photon::Realtime::Player* droppedByPlayer, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::PieceDroppedInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PieceDroppedInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(angVelocity), ::il2cpp_utils::ExtractType(droppedByPlayer), ::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceId, position, rotation, velocity, angVelocity, droppedByPlayer, force);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ExecutePieceDropped
void GorillaTagScripts::BuilderTable::ExecutePieceDropped(::GorillaTagScripts::BuilderTable::BuilderCommand cmd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ExecutePieceDropped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecutePieceDropped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cmd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cmd);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ExecuteSyncPiece
void GorillaTagScripts::BuilderTable::ExecuteSyncPiece(::GorillaTagScripts::BuilderTable::BuilderCommand cmd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ExecuteSyncPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteSyncPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cmd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cmd);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.GetPiece
::GlobalNamespace::BuilderPiece* GorillaTagScripts::BuilderTable::GetPiece(int pieceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::GetPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BuilderPiece*, false>(this, ___internal__method, pieceId);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.AddPiece
void GorillaTagScripts::BuilderTable::AddPiece(::GlobalNamespace::BuilderPiece* piece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::AddPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.RemovePiece
void GorillaTagScripts::BuilderTable::RemovePiece(::GlobalNamespace::BuilderPiece* piece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::RemovePiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.GetBuildItemFromPhotonViewId
::GorillaTagScripts::BuilderItem* GorillaTagScripts::BuilderTable::GetBuildItemFromPhotonViewId(int photonViewId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::GetBuildItemFromPhotonViewId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuildItemFromPhotonViewId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(photonViewId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaTagScripts::BuilderItem*, false>(this, ___internal__method, photonViewId);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.AddGridPlanes
void GorillaTagScripts::BuilderTable::AddGridPlanes(::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>* add) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::AddGridPlanes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGridPlanes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(add)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, add);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.RemoveGridPlanes
void GorillaTagScripts::BuilderTable::RemoveGridPlanes(::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>* remove) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::RemoveGridPlanes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveGridPlanes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remove)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remove);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.OnTriggerEnter
void GorillaTagScripts::BuilderTable::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.OnTriggerExit
void GorillaTagScripts::BuilderTable::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.OnButtonFreeRotation
void GorillaTagScripts::BuilderTable::OnButtonFreeRotation(::GorillaTagScripts::BuilderOptionButton* button, bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::OnButtonFreeRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnButtonFreeRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button), ::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, button, isLeftHand);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.OnButtonFreePosition
void GorillaTagScripts::BuilderTable::OnButtonFreePosition(::GorillaTagScripts::BuilderOptionButton* button, bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::OnButtonFreePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnButtonFreePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button), ::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, button, isLeftHand);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.OnButtonSaveLayout
void GorillaTagScripts::BuilderTable::OnButtonSaveLayout(::GorillaTagScripts::BuilderOptionButton* button, bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::OnButtonSaveLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnButtonSaveLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button), ::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, button, isLeftHand);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.OnButtonClearLayout
void GorillaTagScripts::BuilderTable::OnButtonClearLayout(::GorillaTagScripts::BuilderOptionButton* button, bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::OnButtonClearLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnButtonClearLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button), ::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, button, isLeftHand);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.TryPlaceGridPlane
bool GorillaTagScripts::BuilderTable::TryPlaceGridPlane(::GlobalNamespace::BuilderPiece* piece, ::GorillaTagScripts::BuilderAttachGridPlane* gridPlane, ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>* checkGridPlanes, ByRef<::GorillaTagScripts::BuilderPotentialPlacement> potentialPlacement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TryPlaceGridPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryPlaceGridPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(gridPlane), ::il2cpp_utils::ExtractType(checkGridPlanes), ::il2cpp_utils::ExtractIndependentType<::GorillaTagScripts::BuilderPotentialPlacement&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, piece, gridPlane, checkGridPlanes, byref(potentialPlacement));
}
// Autogenerated method: GorillaTagScripts.BuilderTable.TryPlaceGridPlaneOnGridPlane
bool GorillaTagScripts::BuilderTable::TryPlaceGridPlaneOnGridPlane(::GlobalNamespace::BuilderPiece* piece, ::GorillaTagScripts::BuilderAttachGridPlane* gridPlane, ::UnityEngine::Vector3 gridPlanePos, ::UnityEngine::Quaternion gridPlaneRot, ::GorillaTagScripts::BuilderAttachGridPlane* checkGridPlane, ByRef<::GorillaTagScripts::BuilderPotentialPlacement> potentialPlacement, ByRef<bool> success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TryPlaceGridPlaneOnGridPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryPlaceGridPlaneOnGridPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(gridPlane), ::il2cpp_utils::ExtractType(gridPlanePos), ::il2cpp_utils::ExtractType(gridPlaneRot), ::il2cpp_utils::ExtractType(checkGridPlane), ::il2cpp_utils::ExtractType(potentialPlacement), ::il2cpp_utils::ExtractType(success)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, piece, gridPlane, gridPlanePos, gridPlaneRot, checkGridPlane, byref(potentialPlacement), byref(success));
}
// Autogenerated method: GorillaTagScripts.BuilderTable.Rotate90
::UnityEngine::Vector2Int GorillaTagScripts::BuilderTable::Rotate90(::UnityEngine::Vector2Int v, int offsetX, int offsetY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::Rotate90");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate90", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(offsetX), ::il2cpp_utils::ExtractType(offsetY)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2Int, false>(this, ___internal__method, v, offsetX, offsetY);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.Rotate270
::UnityEngine::Vector2Int GorillaTagScripts::BuilderTable::Rotate270(::UnityEngine::Vector2Int v, int offsetX, int offsetY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::Rotate270");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate270", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(offsetX), ::il2cpp_utils::ExtractType(offsetY)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2Int, false>(this, ___internal__method, v, offsetX, offsetY);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.Rotate180
::UnityEngine::Vector2Int GorillaTagScripts::BuilderTable::Rotate180(::UnityEngine::Vector2Int v, int offsetX, int offsetY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::Rotate180");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate180", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(offsetX), ::il2cpp_utils::ExtractType(offsetY)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2Int, false>(this, ___internal__method, v, offsetX, offsetY);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ShareSameRoot
bool GorillaTagScripts::BuilderTable::ShareSameRoot(::GorillaTagScripts::BuilderAttachGridPlane* plane, ::GorillaTagScripts::BuilderAttachGridPlane* otherPlane) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ShareSameRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShareSameRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plane), ::il2cpp_utils::ExtractType(otherPlane)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, plane, otherPlane);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.ShareSameRoot
bool GorillaTagScripts::BuilderTable::ShareSameRoot(::GlobalNamespace::BuilderPiece* piece, ::GlobalNamespace::BuilderPiece* otherPiece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::ShareSameRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShareSameRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(otherPiece)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, piece, otherPiece);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.TryPlacePieceOnTable
void GorillaTagScripts::BuilderTable::TryPlacePieceOnTable(bool leftHand, ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>* checkGridPlanes, ::GlobalNamespace::BuilderPiece* testPiece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TryPlacePieceOnTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryPlacePieceOnTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftHand), ::il2cpp_utils::ExtractType(checkGridPlanes), ::il2cpp_utils::ExtractType(testPiece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leftHand, checkGridPlanes, testPiece);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.TryPlacePieceOnTableNoDrop
bool GorillaTagScripts::BuilderTable::TryPlacePieceOnTableNoDrop(bool leftHand, ::GlobalNamespace::BuilderPiece* testPiece, ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>* gridPlanes, ByRef<::GorillaTagScripts::BuilderPotentialPlacement> potentialPlacement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TryPlacePieceOnTableNoDrop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryPlacePieceOnTableNoDrop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftHand), ::il2cpp_utils::ExtractType(testPiece), ::il2cpp_utils::ExtractType(gridPlanes), ::il2cpp_utils::ExtractIndependentType<::GorillaTagScripts::BuilderPotentialPlacement&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, leftHand, testPiece, gridPlanes, byref(potentialPlacement));
}
// Autogenerated method: GorillaTagScripts.BuilderTable.TryDropPiece
void GorillaTagScripts::BuilderTable::TryDropPiece(bool leftHand, ::GlobalNamespace::BuilderPiece* testPiece, ::UnityEngine::Vector3 velocity, ::UnityEngine::Vector3 angVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TryDropPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDropPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftHand), ::il2cpp_utils::ExtractType(testPiece), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(angVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leftHand, testPiece, velocity, angVelocity);
}
// Autogenerated method: GorillaTagScripts.BuilderTable.TryPlacePieceGridPlanesOnTableInternal
bool GorillaTagScripts::BuilderTable::TryPlacePieceGridPlanesOnTableInternal(::GlobalNamespace::BuilderPiece* testPiece, int recurse, ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>* checkGridPlanes, ByRef<::GorillaTagScripts::BuilderPotentialPlacement> potentialPlacement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TryPlacePieceGridPlanesOnTableInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryPlacePieceGridPlanesOnTableInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testPiece), ::il2cpp_utils::ExtractType(recurse), ::il2cpp_utils::ExtractType(checkGridPlanes), ::il2cpp_utils::ExtractIndependentType<::GorillaTagScripts::BuilderPotentialPlacement&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, testPiece, recurse, checkGridPlanes, byref(potentialPlacement));
}
// Autogenerated method: GorillaTagScripts.BuilderTable.TryPlaceRandomlyOnTable
void GorillaTagScripts::BuilderTable::TryPlaceRandomlyOnTable(::GlobalNamespace::BuilderPiece* piece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TryPlaceRandomlyOnTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryPlaceRandomlyOnTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece);
}
// Autogenerated method: GorillaTagScripts.BuilderTable..cctor
void GorillaTagScripts::BuilderTable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "BuilderTable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderTable/BuildPieceSpawn
#include "GorillaTagScripts/BuilderTable_BuildPieceSpawn.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject buildPiecePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::BuilderTable::BuildPieceSpawn::dyn_buildPiecePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuildPieceSpawn::dyn_buildPiecePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buildPiecePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderTable::BuildPieceSpawn::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuildPieceSpawn::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderTable/BuilderCommandType
#include "GorillaTagScripts/BuilderTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/BuilderCommandType Create
::GorillaTagScripts::BuilderTable::BuilderCommandType GorillaTagScripts::BuilderTable::BuilderCommandType::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuilderCommandType::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::BuilderCommandType>("GorillaTagScripts", "BuilderTable/BuilderCommandType", "Create"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/BuilderCommandType Create
void GorillaTagScripts::BuilderTable::BuilderCommandType::_set_Create(::GorillaTagScripts::BuilderTable::BuilderCommandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuilderCommandType::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/BuilderCommandType", "Create", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/BuilderCommandType Place
::GorillaTagScripts::BuilderTable::BuilderCommandType GorillaTagScripts::BuilderTable::BuilderCommandType::_get_Place() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuilderCommandType::_get_Place");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::BuilderCommandType>("GorillaTagScripts", "BuilderTable/BuilderCommandType", "Place"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/BuilderCommandType Place
void GorillaTagScripts::BuilderTable::BuilderCommandType::_set_Place(::GorillaTagScripts::BuilderTable::BuilderCommandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuilderCommandType::_set_Place");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/BuilderCommandType", "Place", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/BuilderCommandType Grab
::GorillaTagScripts::BuilderTable::BuilderCommandType GorillaTagScripts::BuilderTable::BuilderCommandType::_get_Grab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuilderCommandType::_get_Grab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::BuilderCommandType>("GorillaTagScripts", "BuilderTable/BuilderCommandType", "Grab"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/BuilderCommandType Grab
void GorillaTagScripts::BuilderTable::BuilderCommandType::_set_Grab(::GorillaTagScripts::BuilderTable::BuilderCommandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuilderCommandType::_set_Grab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/BuilderCommandType", "Grab", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/BuilderCommandType Drop
::GorillaTagScripts::BuilderTable::BuilderCommandType GorillaTagScripts::BuilderTable::BuilderCommandType::_get_Drop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuilderCommandType::_get_Drop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::BuilderCommandType>("GorillaTagScripts", "BuilderTable/BuilderCommandType", "Drop"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/BuilderCommandType Drop
void GorillaTagScripts::BuilderTable::BuilderCommandType::_set_Drop(::GorillaTagScripts::BuilderTable::BuilderCommandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuilderCommandType::_set_Drop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/BuilderCommandType", "Drop", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/BuilderCommandType Remove
::GorillaTagScripts::BuilderTable::BuilderCommandType GorillaTagScripts::BuilderTable::BuilderCommandType::_get_Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuilderCommandType::_get_Remove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::BuilderCommandType>("GorillaTagScripts", "BuilderTable/BuilderCommandType", "Remove"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/BuilderCommandType Remove
void GorillaTagScripts::BuilderTable::BuilderCommandType::_set_Remove(::GorillaTagScripts::BuilderTable::BuilderCommandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuilderCommandType::_set_Remove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/BuilderCommandType", "Remove", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/BuilderCommandType Sync
::GorillaTagScripts::BuilderTable::BuilderCommandType GorillaTagScripts::BuilderTable::BuilderCommandType::_get_Sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuilderCommandType::_get_Sync");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::BuilderCommandType>("GorillaTagScripts", "BuilderTable/BuilderCommandType", "Sync"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/BuilderCommandType Sync
void GorillaTagScripts::BuilderTable::BuilderCommandType::_set_Sync(::GorillaTagScripts::BuilderTable::BuilderCommandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuilderCommandType::_set_Sync");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/BuilderCommandType", "Sync", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderTable::BuilderCommandType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::BuilderCommandType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderTable/TableState
#include "GorillaTagScripts/BuilderTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/TableState WaitingForZoneAndRoom
::GorillaTagScripts::BuilderTable::TableState GorillaTagScripts::BuilderTable::TableState::_get_WaitingForZoneAndRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_get_WaitingForZoneAndRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::TableState>("GorillaTagScripts", "BuilderTable/TableState", "WaitingForZoneAndRoom"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/TableState WaitingForZoneAndRoom
void GorillaTagScripts::BuilderTable::TableState::_set_WaitingForZoneAndRoom(::GorillaTagScripts::BuilderTable::TableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_set_WaitingForZoneAndRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/TableState", "WaitingForZoneAndRoom", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/TableState WaitingForInitalBuild
::GorillaTagScripts::BuilderTable::TableState GorillaTagScripts::BuilderTable::TableState::_get_WaitingForInitalBuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_get_WaitingForInitalBuild");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::TableState>("GorillaTagScripts", "BuilderTable/TableState", "WaitingForInitalBuild"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/TableState WaitingForInitalBuild
void GorillaTagScripts::BuilderTable::TableState::_set_WaitingForInitalBuild(::GorillaTagScripts::BuilderTable::TableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_set_WaitingForInitalBuild");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/TableState", "WaitingForInitalBuild", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/TableState ReceivingInitialBuild
::GorillaTagScripts::BuilderTable::TableState GorillaTagScripts::BuilderTable::TableState::_get_ReceivingInitialBuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_get_ReceivingInitialBuild");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::TableState>("GorillaTagScripts", "BuilderTable/TableState", "ReceivingInitialBuild"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/TableState ReceivingInitialBuild
void GorillaTagScripts::BuilderTable::TableState::_set_ReceivingInitialBuild(::GorillaTagScripts::BuilderTable::TableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_set_ReceivingInitialBuild");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/TableState", "ReceivingInitialBuild", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/TableState WaitForInitialBuildMaster
::GorillaTagScripts::BuilderTable::TableState GorillaTagScripts::BuilderTable::TableState::_get_WaitForInitialBuildMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_get_WaitForInitialBuildMaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::TableState>("GorillaTagScripts", "BuilderTable/TableState", "WaitForInitialBuildMaster"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/TableState WaitForInitialBuildMaster
void GorillaTagScripts::BuilderTable::TableState::_set_WaitForInitialBuildMaster(::GorillaTagScripts::BuilderTable::TableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_set_WaitForInitialBuildMaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/TableState", "WaitForInitialBuildMaster", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/TableState WaitForMasterResync
::GorillaTagScripts::BuilderTable::TableState GorillaTagScripts::BuilderTable::TableState::_get_WaitForMasterResync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_get_WaitForMasterResync");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::TableState>("GorillaTagScripts", "BuilderTable/TableState", "WaitForMasterResync"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/TableState WaitForMasterResync
void GorillaTagScripts::BuilderTable::TableState::_set_WaitForMasterResync(::GorillaTagScripts::BuilderTable::TableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_set_WaitForMasterResync");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/TableState", "WaitForMasterResync", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/TableState ReceivingMasterResync
::GorillaTagScripts::BuilderTable::TableState GorillaTagScripts::BuilderTable::TableState::_get_ReceivingMasterResync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_get_ReceivingMasterResync");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::TableState>("GorillaTagScripts", "BuilderTable/TableState", "ReceivingMasterResync"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/TableState ReceivingMasterResync
void GorillaTagScripts::BuilderTable::TableState::_set_ReceivingMasterResync(::GorillaTagScripts::BuilderTable::TableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_set_ReceivingMasterResync");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/TableState", "ReceivingMasterResync", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/TableState InitialBuild
::GorillaTagScripts::BuilderTable::TableState GorillaTagScripts::BuilderTable::TableState::_get_InitialBuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_get_InitialBuild");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::TableState>("GorillaTagScripts", "BuilderTable/TableState", "InitialBuild"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/TableState InitialBuild
void GorillaTagScripts::BuilderTable::TableState::_set_InitialBuild(::GorillaTagScripts::BuilderTable::TableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_set_InitialBuild");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/TableState", "InitialBuild", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/TableState ExecuteQueuedCommands
::GorillaTagScripts::BuilderTable::TableState GorillaTagScripts::BuilderTable::TableState::_get_ExecuteQueuedCommands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_get_ExecuteQueuedCommands");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::TableState>("GorillaTagScripts", "BuilderTable/TableState", "ExecuteQueuedCommands"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/TableState ExecuteQueuedCommands
void GorillaTagScripts::BuilderTable::TableState::_set_ExecuteQueuedCommands(::GorillaTagScripts::BuilderTable::TableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_set_ExecuteQueuedCommands");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/TableState", "ExecuteQueuedCommands", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/TableState Ready
::GorillaTagScripts::BuilderTable::TableState GorillaTagScripts::BuilderTable::TableState::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::TableState>("GorillaTagScripts", "BuilderTable/TableState", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/TableState Ready
void GorillaTagScripts::BuilderTable::TableState::_set_Ready(::GorillaTagScripts::BuilderTable::TableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/TableState", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTable/TableState BadData
::GorillaTagScripts::BuilderTable::TableState GorillaTagScripts::BuilderTable::TableState::_get_BadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_get_BadData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTable::TableState>("GorillaTagScripts", "BuilderTable/TableState", "BadData"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTable/TableState BadData
void GorillaTagScripts::BuilderTable::TableState::_set_BadData(::GorillaTagScripts::BuilderTable::TableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::_set_BadData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTable/TableState", "BadData", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderTable::TableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTable::TableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderTableNetworking
#include "GorillaTagScripts/BuilderTableNetworking.hpp"
// Including type: GorillaTagScripts.BuilderTableNetworking/PlayerTableInitState
#include "GorillaTagScripts/BuilderTableNetworking_PlayerTableInitState.hpp"
// Including type: GorillaTagScripts.BuilderTableNetworking/RPC
#include "GorillaTagScripts/BuilderTableNetworking_RPC.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: GorillaTagScripts.BuilderTable
#include "GorillaTagScripts/BuilderTable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: CallLimiter
#include "GlobalNamespace/CallLimiter.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: BuilderPiece
#include "GlobalNamespace/BuilderPiece.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: SnapBounds
#include "GlobalNamespace/SnapBounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTableNetworking instance
::GorillaTagScripts::BuilderTableNetworking* GorillaTagScripts::BuilderTableNetworking::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTableNetworking*>("GorillaTagScripts", "BuilderTableNetworking", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTableNetworking instance
void GorillaTagScripts::BuilderTableNetworking::_set_instance(::GorillaTagScripts::BuilderTableNetworking* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking", "instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MAX_TABLE_BYTES
int GorillaTagScripts::BuilderTableNetworking::_get_MAX_TABLE_BYTES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::_get_MAX_TABLE_BYTES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("GorillaTagScripts", "BuilderTableNetworking", "MAX_TABLE_BYTES"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAX_TABLE_BYTES
void GorillaTagScripts::BuilderTableNetworking::_set_MAX_TABLE_BYTES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::_set_MAX_TABLE_BYTES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking", "MAX_TABLE_BYTES", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MAX_TABLE_CHUNK_BYTES
int GorillaTagScripts::BuilderTableNetworking::_get_MAX_TABLE_CHUNK_BYTES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::_get_MAX_TABLE_CHUNK_BYTES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("GorillaTagScripts", "BuilderTableNetworking", "MAX_TABLE_CHUNK_BYTES"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAX_TABLE_CHUNK_BYTES
void GorillaTagScripts::BuilderTableNetworking::_set_MAX_TABLE_CHUNK_BYTES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::_set_MAX_TABLE_CHUNK_BYTES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking", "MAX_TABLE_CHUNK_BYTES", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single DELAY_CLIENT_TABLE_CREATION_TIME
float GorillaTagScripts::BuilderTableNetworking::_get_DELAY_CLIENT_TABLE_CREATION_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::_get_DELAY_CLIENT_TABLE_CREATION_TIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("GorillaTagScripts", "BuilderTableNetworking", "DELAY_CLIENT_TABLE_CREATION_TIME"));
}
// Autogenerated static field setter
// Set static field: static private System.Single DELAY_CLIENT_TABLE_CREATION_TIME
void GorillaTagScripts::BuilderTableNetworking::_set_DELAY_CLIENT_TABLE_CREATION_TIME(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::_set_DELAY_CLIENT_TABLE_CREATION_TIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking", "DELAY_CLIENT_TABLE_CREATION_TIME", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 PIECE_SYNC_BYTES
int GorillaTagScripts::BuilderTableNetworking::_get_PIECE_SYNC_BYTES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::_get_PIECE_SYNC_BYTES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("GorillaTagScripts", "BuilderTableNetworking", "PIECE_SYNC_BYTES"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 PIECE_SYNC_BYTES
void GorillaTagScripts::BuilderTableNetworking::_set_PIECE_SYNC_BYTES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::_set_PIECE_SYNC_BYTES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking", "PIECE_SYNC_BYTES", value));
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonView tablePhotonView
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& GorillaTagScripts::BuilderTableNetworking::dyn_tablePhotonView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::dyn_tablePhotonView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tablePhotonView"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.BuilderTable currTable
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderTable*& GorillaTagScripts::BuilderTableNetworking::dyn_currTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::dyn_currTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currTable"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<GorillaTagScripts.BuilderTableNetworking/PlayerTableInitState> masterClientTableInit
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState*>*& GorillaTagScripts::BuilderTableNetworking::dyn_masterClientTableInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::dyn_masterClientTableInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "masterClientTableInit"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.BuilderTableNetworking/PlayerTableInitState localClientTableInit
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState*& GorillaTagScripts::BuilderTableNetworking::dyn_localClientTableInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::dyn_localClientTableInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localClientTableInit"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CallLimiter[] callLimiters
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::CallLimiter*>& GorillaTagScripts::BuilderTableNetworking::dyn_callLimiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::dyn_callLimiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callLimiters"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::CallLimiter*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.Awake
void GorillaTagScripts::BuilderTableNetworking::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.SetTable
void GorillaTagScripts::BuilderTableNetworking::SetTable(::GorillaTagScripts::BuilderTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::SetTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.GetTable
::GorillaTagScripts::BuilderTable* GorillaTagScripts::BuilderTableNetworking::GetTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::GetTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaTagScripts::BuilderTable*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.GetLocalTableInit
::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState* GorillaTagScripts::BuilderTableNetworking::GetLocalTableInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::GetLocalTableInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalTableInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.Update
void GorillaTagScripts::BuilderTableNetworking::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.PlayerEnterBuilder
void GorillaTagScripts::BuilderTableNetworking::PlayerEnterBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::PlayerEnterBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerEnterBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.PlayerEnterBuilderRPC
void GorillaTagScripts::BuilderTableNetworking::PlayerEnterBuilderRPC(::Photon::Realtime::Player* player, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::PlayerEnterBuilderRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerEnterBuilderRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, info);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.PlayerExitBuilder
void GorillaTagScripts::BuilderTableNetworking::PlayerExitBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::PlayerExitBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerExitBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.PlayerExitBuilderRPC
void GorillaTagScripts::BuilderTableNetworking::PlayerExitBuilderRPC(::Photon::Realtime::Player* player, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::PlayerExitBuilderRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerExitBuilderRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, info);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.IsPrivateMasterClient
bool GorillaTagScripts::BuilderTableNetworking::IsPrivateMasterClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::IsPrivateMasterClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrivateMasterClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.UpdateNewPlayerInit
void GorillaTagScripts::BuilderTableNetworking::UpdateNewPlayerInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::UpdateNewPlayerInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNewPlayerInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.StartCreatingSerializedTable
void GorillaTagScripts::BuilderTableNetworking::StartCreatingSerializedTable(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::StartCreatingSerializedTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCreatingSerializedTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.StartBuildTableRPC
void GorillaTagScripts::BuilderTableNetworking::StartBuildTableRPC(int totalBytes, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::StartBuildTableRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBuildTableRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalBytes), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, totalBytes, info);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.RequestTableDataRPC
void GorillaTagScripts::BuilderTableNetworking::RequestTableDataRPC(::Photon::Realtime::Player* requestingPlayer, int offset, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RequestTableDataRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestTableDataRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestingPlayer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestingPlayer, offset, info);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.SendTableDataRPC
void GorillaTagScripts::BuilderTableNetworking::SendTableDataRPC(int numBytes, ::ArrayW<uint8_t> bytes, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::SendTableDataRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendTableDataRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numBytes), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numBytes, bytes, info);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.CreatePlayerTableInit
::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState* GorillaTagScripts::BuilderTableNetworking::CreatePlayerTableInit(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::CreatePlayerTableInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayerTableInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState*, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.CreateSerializedTableForNewPlayerInit
void GorillaTagScripts::BuilderTableNetworking::CreateSerializedTableForNewPlayerInit(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::CreateSerializedTableForNewPlayerInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSerializedTableForNewPlayerInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.DestroyPlayerTableInit
void GorillaTagScripts::BuilderTableNetworking::DestroyPlayerTableInit(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::DestroyPlayerTableInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPlayerTableInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.GetPlayerTableInit
::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState* GorillaTagScripts::BuilderTableNetworking::GetPlayerTableInit(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::GetPlayerTableInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerTableInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState*, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.ValidateMasterClientIsReady
bool GorillaTagScripts::BuilderTableNetworking::ValidateMasterClientIsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::ValidateMasterClientIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateMasterClientIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.ValidateCallLimits
bool GorillaTagScripts::BuilderTableNetworking::ValidateCallLimits(::GorillaTagScripts::BuilderTableNetworking::RPC rpcCall, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::ValidateCallLimits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCallLimits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rpcCall), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rpcCall, info);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.RequestPlacePiece
void GorillaTagScripts::BuilderTableNetworking::RequestPlacePiece(::GlobalNamespace::BuilderPiece* piece, ::GlobalNamespace::BuilderPiece* attachPiece, ::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation, ::GlobalNamespace::BuilderPiece* parentPiece, int attachIndex, ::GlobalNamespace::SnapBounds attachBounds, int parentAttachIndex, ::GlobalNamespace::SnapBounds parentAttachBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RequestPlacePiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestPlacePiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(attachPiece), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation), ::il2cpp_utils::ExtractType(parentPiece), ::il2cpp_utils::ExtractType(attachIndex), ::il2cpp_utils::ExtractType(attachBounds), ::il2cpp_utils::ExtractType(parentAttachIndex), ::il2cpp_utils::ExtractType(parentAttachBounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, attachPiece, localPosition, localRotation, parentPiece, attachIndex, attachBounds, parentAttachIndex, parentAttachBounds);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.RequestPlacePieceRPC
void GorillaTagScripts::BuilderTableNetworking::RequestPlacePieceRPC(int pieceId, int attachPieceId, ::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation, int parentPieceId, int attachIndex, int attachBoundsMinX, int attachBoundsMinY, int attachBoundsMaxX, int attachBoundsMaxY, int parentAttachIndex, int parentAttachBoundsMinX, int parentAttachBoundsMinY, int parentAttachBoundsMaxX, int parentAttachBoundsMaxY, ::Photon::Realtime::Player* placedByPlayer, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RequestPlacePieceRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestPlacePieceRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(attachPieceId), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation), ::il2cpp_utils::ExtractType(parentPieceId), ::il2cpp_utils::ExtractType(attachIndex), ::il2cpp_utils::ExtractType(attachBoundsMinX), ::il2cpp_utils::ExtractType(attachBoundsMinY), ::il2cpp_utils::ExtractType(attachBoundsMaxX), ::il2cpp_utils::ExtractType(attachBoundsMaxY), ::il2cpp_utils::ExtractType(parentAttachIndex), ::il2cpp_utils::ExtractType(parentAttachBoundsMinX), ::il2cpp_utils::ExtractType(parentAttachBoundsMinY), ::il2cpp_utils::ExtractType(parentAttachBoundsMaxX), ::il2cpp_utils::ExtractType(parentAttachBoundsMaxY), ::il2cpp_utils::ExtractType(placedByPlayer), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceId, attachPieceId, localPosition, localRotation, parentPieceId, attachIndex, attachBoundsMinX, attachBoundsMinY, attachBoundsMaxX, attachBoundsMaxY, parentAttachIndex, parentAttachBoundsMinX, parentAttachBoundsMinY, parentAttachBoundsMaxX, parentAttachBoundsMaxY, placedByPlayer, info);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.PiecePlacedRPC
void GorillaTagScripts::BuilderTableNetworking::PiecePlacedRPC(int pieceId, int attachPieceId, ::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation, int parentPieceId, int attachIndex, int attachBoundsMinX, int attachBoundsMinY, int attachBoundsMaxX, int attachBoundsMaxY, int parentAttachIndex, int parentAttachBoundsMinX, int parentAttachBoundsMinY, int parentAttachBoundsMaxX, int parentAttachBoundsMaxY, ::Photon::Realtime::Player* placedByPlayer, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::PiecePlacedRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PiecePlacedRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(attachPieceId), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation), ::il2cpp_utils::ExtractType(parentPieceId), ::il2cpp_utils::ExtractType(attachIndex), ::il2cpp_utils::ExtractType(attachBoundsMinX), ::il2cpp_utils::ExtractType(attachBoundsMinY), ::il2cpp_utils::ExtractType(attachBoundsMaxX), ::il2cpp_utils::ExtractType(attachBoundsMaxY), ::il2cpp_utils::ExtractType(parentAttachIndex), ::il2cpp_utils::ExtractType(parentAttachBoundsMinX), ::il2cpp_utils::ExtractType(parentAttachBoundsMinY), ::il2cpp_utils::ExtractType(parentAttachBoundsMaxX), ::il2cpp_utils::ExtractType(parentAttachBoundsMaxY), ::il2cpp_utils::ExtractType(placedByPlayer), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceId, attachPieceId, localPosition, localRotation, parentPieceId, attachIndex, attachBoundsMinX, attachBoundsMinY, attachBoundsMaxX, attachBoundsMaxY, parentAttachIndex, parentAttachBoundsMinX, parentAttachBoundsMinY, parentAttachBoundsMaxX, parentAttachBoundsMaxY, placedByPlayer, info);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.RequestGrabPiece
void GorillaTagScripts::BuilderTableNetworking::RequestGrabPiece(::GlobalNamespace::BuilderPiece* piece, bool isLefHand, ::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RequestGrabPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestGrabPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(isLefHand), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, isLefHand, localPosition, localRotation);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.RequestGrabPieceRPC
void GorillaTagScripts::BuilderTableNetworking::RequestGrabPieceRPC(int pieceId, bool isLeftHand, ::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation, ::Photon::Realtime::Player* grabbedByPlayer, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RequestGrabPieceRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestGrabPieceRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(isLeftHand), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation), ::il2cpp_utils::ExtractType(grabbedByPlayer), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceId, isLeftHand, localPosition, localRotation, grabbedByPlayer, info);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.PieceGrabbedRPC
void GorillaTagScripts::BuilderTableNetworking::PieceGrabbedRPC(int pieceId, bool isLeftHand, ::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation, ::Photon::Realtime::Player* grabbedByPlayer, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::PieceGrabbedRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PieceGrabbedRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(isLeftHand), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation), ::il2cpp_utils::ExtractType(grabbedByPlayer), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceId, isLeftHand, localPosition, localRotation, grabbedByPlayer, info);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.RequestDropPiece
void GorillaTagScripts::BuilderTableNetworking::RequestDropPiece(::GlobalNamespace::BuilderPiece* piece, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 velocity, ::UnityEngine::Vector3 angVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RequestDropPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestDropPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(angVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, position, rotation, velocity, angVelocity);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.RequestDropPieceRPC
void GorillaTagScripts::BuilderTableNetworking::RequestDropPieceRPC(int pieceId, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 velocity, ::UnityEngine::Vector3 angVelocity, ::Photon::Realtime::Player* droppedByPlayer, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RequestDropPieceRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestDropPieceRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(angVelocity), ::il2cpp_utils::ExtractType(droppedByPlayer), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceId, position, rotation, velocity, angVelocity, droppedByPlayer, info);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.PieceDroppedRPC
void GorillaTagScripts::BuilderTableNetworking::PieceDroppedRPC(int pieceId, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 velocity, ::UnityEngine::Vector3 angVelocity, ::Photon::Realtime::Player* droppedByPlayer, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::PieceDroppedRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PieceDroppedRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pieceId), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(angVelocity), ::il2cpp_utils::ExtractType(droppedByPlayer), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceId, position, rotation, velocity, angVelocity, droppedByPlayer, info);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.OnMasterClientSwitched
void GorillaTagScripts::BuilderTableNetworking::OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.OnPlayerLeftRoom
void GorillaTagScripts::BuilderTableNetworking::OnPlayerLeftRoom(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.OnJoinedRoom
void GorillaTagScripts::BuilderTableNetworking::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking.OnLeftRoom
void GorillaTagScripts::BuilderTableNetworking::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderTableNetworking/PlayerTableInitState
#include "GorillaTagScripts/BuilderTableNetworking_PlayerTableInitState.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player player
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState::dyn_player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 numSerializedBytes
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState::dyn_numSerializedBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState::dyn_numSerializedBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numSerializedBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 totalSerializedBytes
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState::dyn_totalSerializedBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState::dyn_totalSerializedBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalSerializedBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serializedTableState
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState::dyn_serializedTableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState::dyn_serializedTableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializedTableState"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] chunk
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState::dyn_chunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState::dyn_chunk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chunk"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single waitForInitTimeRemaining
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState::dyn_waitForInitTimeRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState::dyn_waitForInitTimeRemaining");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitForInitTimeRemaining"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.BuilderTableNetworking/PlayerTableInitState.Reset
void GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::PlayerTableInitState::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.BuilderTableNetworking/RPC
#include "GorillaTagScripts/BuilderTableNetworking_RPC.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTableNetworking/RPC PlayerEnterMaster
::GorillaTagScripts::BuilderTableNetworking::RPC GorillaTagScripts::BuilderTableNetworking::RPC::_get_PlayerEnterMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_get_PlayerEnterMaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTableNetworking::RPC>("GorillaTagScripts", "BuilderTableNetworking/RPC", "PlayerEnterMaster"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTableNetworking/RPC PlayerEnterMaster
void GorillaTagScripts::BuilderTableNetworking::RPC::_set_PlayerEnterMaster(::GorillaTagScripts::BuilderTableNetworking::RPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_set_PlayerEnterMaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking/RPC", "PlayerEnterMaster", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTableNetworking/RPC PlayerExitMaster
::GorillaTagScripts::BuilderTableNetworking::RPC GorillaTagScripts::BuilderTableNetworking::RPC::_get_PlayerExitMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_get_PlayerExitMaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTableNetworking::RPC>("GorillaTagScripts", "BuilderTableNetworking/RPC", "PlayerExitMaster"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTableNetworking/RPC PlayerExitMaster
void GorillaTagScripts::BuilderTableNetworking::RPC::_set_PlayerExitMaster(::GorillaTagScripts::BuilderTableNetworking::RPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_set_PlayerExitMaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking/RPC", "PlayerExitMaster", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTableNetworking/RPC TableDataMaster
::GorillaTagScripts::BuilderTableNetworking::RPC GorillaTagScripts::BuilderTableNetworking::RPC::_get_TableDataMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_get_TableDataMaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTableNetworking::RPC>("GorillaTagScripts", "BuilderTableNetworking/RPC", "TableDataMaster"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTableNetworking/RPC TableDataMaster
void GorillaTagScripts::BuilderTableNetworking::RPC::_set_TableDataMaster(::GorillaTagScripts::BuilderTableNetworking::RPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_set_TableDataMaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking/RPC", "TableDataMaster", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTableNetworking/RPC TableData
::GorillaTagScripts::BuilderTableNetworking::RPC GorillaTagScripts::BuilderTableNetworking::RPC::_get_TableData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_get_TableData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTableNetworking::RPC>("GorillaTagScripts", "BuilderTableNetworking/RPC", "TableData"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTableNetworking/RPC TableData
void GorillaTagScripts::BuilderTableNetworking::RPC::_set_TableData(::GorillaTagScripts::BuilderTableNetworking::RPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_set_TableData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking/RPC", "TableData", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTableNetworking/RPC TableDataStart
::GorillaTagScripts::BuilderTableNetworking::RPC GorillaTagScripts::BuilderTableNetworking::RPC::_get_TableDataStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_get_TableDataStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTableNetworking::RPC>("GorillaTagScripts", "BuilderTableNetworking/RPC", "TableDataStart"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTableNetworking/RPC TableDataStart
void GorillaTagScripts::BuilderTableNetworking::RPC::_set_TableDataStart(::GorillaTagScripts::BuilderTableNetworking::RPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_set_TableDataStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking/RPC", "TableDataStart", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTableNetworking/RPC PlacePieceMaster
::GorillaTagScripts::BuilderTableNetworking::RPC GorillaTagScripts::BuilderTableNetworking::RPC::_get_PlacePieceMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_get_PlacePieceMaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTableNetworking::RPC>("GorillaTagScripts", "BuilderTableNetworking/RPC", "PlacePieceMaster"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTableNetworking/RPC PlacePieceMaster
void GorillaTagScripts::BuilderTableNetworking::RPC::_set_PlacePieceMaster(::GorillaTagScripts::BuilderTableNetworking::RPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_set_PlacePieceMaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking/RPC", "PlacePieceMaster", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTableNetworking/RPC PlacePiece
::GorillaTagScripts::BuilderTableNetworking::RPC GorillaTagScripts::BuilderTableNetworking::RPC::_get_PlacePiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_get_PlacePiece");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTableNetworking::RPC>("GorillaTagScripts", "BuilderTableNetworking/RPC", "PlacePiece"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTableNetworking/RPC PlacePiece
void GorillaTagScripts::BuilderTableNetworking::RPC::_set_PlacePiece(::GorillaTagScripts::BuilderTableNetworking::RPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_set_PlacePiece");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking/RPC", "PlacePiece", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTableNetworking/RPC GrabPieceMaster
::GorillaTagScripts::BuilderTableNetworking::RPC GorillaTagScripts::BuilderTableNetworking::RPC::_get_GrabPieceMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_get_GrabPieceMaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTableNetworking::RPC>("GorillaTagScripts", "BuilderTableNetworking/RPC", "GrabPieceMaster"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTableNetworking/RPC GrabPieceMaster
void GorillaTagScripts::BuilderTableNetworking::RPC::_set_GrabPieceMaster(::GorillaTagScripts::BuilderTableNetworking::RPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_set_GrabPieceMaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking/RPC", "GrabPieceMaster", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTableNetworking/RPC GrabPiece
::GorillaTagScripts::BuilderTableNetworking::RPC GorillaTagScripts::BuilderTableNetworking::RPC::_get_GrabPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_get_GrabPiece");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTableNetworking::RPC>("GorillaTagScripts", "BuilderTableNetworking/RPC", "GrabPiece"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTableNetworking/RPC GrabPiece
void GorillaTagScripts::BuilderTableNetworking::RPC::_set_GrabPiece(::GorillaTagScripts::BuilderTableNetworking::RPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_set_GrabPiece");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking/RPC", "GrabPiece", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTableNetworking/RPC DropPieceMaster
::GorillaTagScripts::BuilderTableNetworking::RPC GorillaTagScripts::BuilderTableNetworking::RPC::_get_DropPieceMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_get_DropPieceMaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTableNetworking::RPC>("GorillaTagScripts", "BuilderTableNetworking/RPC", "DropPieceMaster"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTableNetworking/RPC DropPieceMaster
void GorillaTagScripts::BuilderTableNetworking::RPC::_set_DropPieceMaster(::GorillaTagScripts::BuilderTableNetworking::RPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_set_DropPieceMaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking/RPC", "DropPieceMaster", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTableNetworking/RPC DropPiece
::GorillaTagScripts::BuilderTableNetworking::RPC GorillaTagScripts::BuilderTableNetworking::RPC::_get_DropPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_get_DropPiece");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTableNetworking::RPC>("GorillaTagScripts", "BuilderTableNetworking/RPC", "DropPiece"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTableNetworking/RPC DropPiece
void GorillaTagScripts::BuilderTableNetworking::RPC::_set_DropPiece(::GorillaTagScripts::BuilderTableNetworking::RPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_set_DropPiece");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking/RPC", "DropPiece", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.BuilderTableNetworking/RPC Count
::GorillaTagScripts::BuilderTableNetworking::RPC GorillaTagScripts::BuilderTableNetworking::RPC::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::BuilderTableNetworking::RPC>("GorillaTagScripts", "BuilderTableNetworking/RPC", "Count"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.BuilderTableNetworking/RPC Count
void GorillaTagScripts::BuilderTableNetworking::RPC::_set_Count(::GorillaTagScripts::BuilderTableNetworking::RPC value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "BuilderTableNetworking/RPC", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::BuilderTableNetworking::RPC::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::BuilderTableNetworking::RPC::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.ChristmasTree
#include "GorillaTagScripts/ChristmasTree.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaTagScripts.AttachPoint
#include "GorillaTagScripts/AttachPoint.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject hangers
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::ChristmasTree::dyn_hangers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::dyn_hangers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hangers"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject lights
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::ChristmasTree::dyn_lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::dyn_lights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lights"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject topOrnament
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::ChristmasTree::dyn_topOrnament() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::dyn_topOrnament");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topOrnament"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spinSpeed
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::ChristmasTree::dyn_spinSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::dyn_spinSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spinSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<GorillaTagScripts.AttachPoint> attachPointsList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::AttachPoint*>*& GorillaTagScripts::ChristmasTree::dyn_attachPointsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::dyn_attachPointsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachPointsList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::AttachPoint*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] lightRenderers
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::MeshRenderer*>& GorillaTagScripts::ChristmasTree::dyn_lightRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::dyn_lightRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightRenderers"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean wasActive
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::ChristmasTree::dyn_wasActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::dyn_wasActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isActive
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::ChristmasTree::dyn_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::dyn_isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean spinTheTop
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::ChristmasTree::dyn_spinTheTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::dyn_spinTheTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spinTheTop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material lightsOffMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GorillaTagScripts::ChristmasTree::dyn_lightsOffMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::dyn_lightsOffMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightsOffMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material[] lightsOnMaterials
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& GorillaTagScripts::ChristmasTree::dyn_lightsOnMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::dyn_lightsOnMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightsOnMaterials"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.ChristmasTree.Awake
void GorillaTagScripts::ChristmasTree::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ChristmasTree.Update
void GorillaTagScripts::ChristmasTree::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ChristmasTree.OnDestroy
void GorillaTagScripts::ChristmasTree::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ChristmasTree.UpdateHangers
void GorillaTagScripts::ChristmasTree::UpdateHangers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::UpdateHangers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateHangers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ChristmasTree.updateLight
void GorillaTagScripts::ChristmasTree::updateLight(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::updateLight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "updateLight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: GorillaTagScripts.ChristmasTree.OnPhotonSerializeView
void GorillaTagScripts::ChristmasTree::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ChristmasTree::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::ChristmasTree*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.CrystalVisualsPreset
#include "GorillaTagScripts/CrystalVisualsPreset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.CrystalVisualsPreset/VisualState stateA
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::CrystalVisualsPreset::VisualState& GorillaTagScripts::CrystalVisualsPreset::dyn_stateA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::CrystalVisualsPreset::dyn_stateA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateA"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::CrystalVisualsPreset::VisualState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.CrystalVisualsPreset/VisualState stateB
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::CrystalVisualsPreset::VisualState& GorillaTagScripts::CrystalVisualsPreset::dyn_stateB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::CrystalVisualsPreset::dyn_stateB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateB"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::CrystalVisualsPreset::VisualState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.CrystalVisualsPreset.Save
void GorillaTagScripts::CrystalVisualsPreset::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::CrystalVisualsPreset::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.CrystalVisualsPreset.GetHashCode
int GorillaTagScripts::CrystalVisualsPreset::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::CrystalVisualsPreset::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Object*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.CrystalVisualsPreset/VisualState
#include "GorillaTagScripts/CrystalVisualsPreset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color albedo
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GorillaTagScripts::CrystalVisualsPreset::VisualState::dyn_albedo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::CrystalVisualsPreset::VisualState::dyn_albedo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "albedo"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color emission
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GorillaTagScripts::CrystalVisualsPreset::VisualState::dyn_emission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::CrystalVisualsPreset::VisualState::dyn_emission");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emission"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.CrystalVisualsPreset/VisualState.<GetHashCode>g__GetColorHash|2_0
int GorillaTagScripts::CrystalVisualsPreset::VisualState::$GetHashCode$g__GetColorHash_2_0(::UnityEngine::Color c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::CrystalVisualsPreset::VisualState::<GetHashCode>g__GetColorHash|2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "CrystalVisualsPreset/VisualState", "<GetHashCode>g__GetColorHash|2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: GorillaTagScripts.CrystalVisualsPreset/VisualState.GetHashCode
int GorillaTagScripts::CrystalVisualsPreset::VisualState::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::CrystalVisualsPreset::VisualState::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.DecorativeItem
#include "GorillaTagScripts/DecorativeItem.hpp"
// Including type: GorillaTagScripts.DecorativeItemReliableState
#include "GorillaTagScripts/DecorativeItemReliableState.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
// Including type: InteractionPoint
#include "GlobalNamespace/InteractionPoint.hpp"
// Including type: DropZone
#include "GlobalNamespace/DropZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.DecorativeItemReliableState reliableState
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::DecorativeItemReliableState*& GorillaTagScripts::DecorativeItem::dyn_reliableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::dyn_reliableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reliableState"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::DecorativeItemReliableState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityAction`1<GorillaTagScripts.DecorativeItem> respawnItem
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction_1<::GorillaTagScripts::DecorativeItem*>*& GorillaTagScripts::DecorativeItem::dyn_respawnItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::dyn_respawnItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "respawnItem"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityAction_1<::GorillaTagScripts::DecorativeItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask breakItemLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GorillaTagScripts::DecorativeItem::dyn_breakItemLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::dyn_breakItemLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "breakItemLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine respawnTimer
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GorillaTagScripts::DecorativeItem::dyn_respawnTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::dyn_respawnTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "respawnTimer"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform parent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaTagScripts::DecorativeItem::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _respawnTimestamp
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::DecorativeItem::dyn__respawnTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::dyn__respawnTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_respawnTimestamp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isSnapped
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::DecorativeItem::dyn_isSnapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::dyn_isSnapped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isSnapped"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 currentPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaTagScripts::DecorativeItem::dyn_currentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::dyn_currentPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GorillaTagScripts::DecorativeItem::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip snapAudio
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GorillaTagScripts::DecorativeItem::dyn_snapAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::dyn_snapAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapAudio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject shatterVFX
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::DecorativeItem::dyn_shatterVFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::dyn_shatterVFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shatterVFX"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.DecorativeItem/DecorativeItemState previousItemState
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::DecorativeItem::DecorativeItemState& GorillaTagScripts::DecorativeItem::dyn_previousItemState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::dyn_previousItemState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousItemState"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::DecorativeItem::DecorativeItemState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.OnStateChanged
void GorillaTagScripts::DecorativeItem::OnStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::OnStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.SetWillTeleport
void GorillaTagScripts::DecorativeItem::SetWillTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::SetWillTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWillTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.Respawn
void GorillaTagScripts::DecorativeItem::Respawn(::UnityEngine::Vector3 randPosition, ::UnityEngine::Quaternion randRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::Respawn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Respawn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(randPosition), ::il2cpp_utils::ExtractType(randRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, randPosition, randRotation);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.PlayVFX
void GorillaTagScripts::DecorativeItem::PlayVFX(::UnityEngine::GameObject* vfx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::PlayVFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayVFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vfx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vfx);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.Reparent
bool GorillaTagScripts::DecorativeItem::Reparent(::UnityEngine::Transform* _transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::Reparent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reparent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_transform)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, _transform);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.SnapItem
void GorillaTagScripts::DecorativeItem::SnapItem(bool snap, ::UnityEngine::Vector3 attachPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::SnapItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SnapItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(snap), ::il2cpp_utils::ExtractType(attachPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, snap, attachPoint);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.InvokeRespawn
void GorillaTagScripts::DecorativeItem::InvokeRespawn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::InvokeRespawn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeRespawn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.ShouldPlayFX
bool GorillaTagScripts::DecorativeItem::ShouldPlayFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::ShouldPlayFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldPlayFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.OnCollisionEnter
void GorillaTagScripts::DecorativeItem::OnCollisionEnter(::UnityEngine::Collision* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.ShouldBeKinematic
bool GorillaTagScripts::DecorativeItem::ShouldBeKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::ShouldBeKinematic");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 80));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.OnSpawn
void GorillaTagScripts::DecorativeItem::OnSpawn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::OnSpawn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 73));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.Start
void GorillaTagScripts::DecorativeItem::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 75));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.LateUpdateShared
void GorillaTagScripts::DecorativeItem::LateUpdateShared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::LateUpdateShared");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 86));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.LateUpdateLocal
void GorillaTagScripts::DecorativeItem::LateUpdateLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::LateUpdateLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 90));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.OnGrab
void GorillaTagScripts::DecorativeItem::OnGrab(::GlobalNamespace::InteractionPoint* pointGrabbed, ::UnityEngine::GameObject* grabbingHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::OnGrab");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 58));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointGrabbed, grabbingHand);
}
// Autogenerated method: GorillaTagScripts.DecorativeItem.OnRelease
bool GorillaTagScripts::DecorativeItem::OnRelease(::GlobalNamespace::DropZone* zoneReleased, ::UnityEngine::GameObject* releasingHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::OnRelease");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TransferrableObject*), 59));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, zoneReleased, releasingHand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.DecorativeItem/DecorativeItemState
#include "GorillaTagScripts/DecorativeItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.DecorativeItem/DecorativeItemState isHeld
::GorillaTagScripts::DecorativeItem::DecorativeItemState GorillaTagScripts::DecorativeItem::DecorativeItemState::_get_isHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::DecorativeItemState::_get_isHeld");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::DecorativeItem::DecorativeItemState>("GorillaTagScripts", "DecorativeItem/DecorativeItemState", "isHeld"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.DecorativeItem/DecorativeItemState isHeld
void GorillaTagScripts::DecorativeItem::DecorativeItemState::_set_isHeld(::GorillaTagScripts::DecorativeItem::DecorativeItemState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::DecorativeItemState::_set_isHeld");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "DecorativeItem/DecorativeItemState", "isHeld", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.DecorativeItem/DecorativeItemState dropped
::GorillaTagScripts::DecorativeItem::DecorativeItemState GorillaTagScripts::DecorativeItem::DecorativeItemState::_get_dropped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::DecorativeItemState::_get_dropped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::DecorativeItem::DecorativeItemState>("GorillaTagScripts", "DecorativeItem/DecorativeItemState", "dropped"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.DecorativeItem/DecorativeItemState dropped
void GorillaTagScripts::DecorativeItem::DecorativeItemState::_set_dropped(::GorillaTagScripts::DecorativeItem::DecorativeItemState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::DecorativeItemState::_set_dropped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "DecorativeItem/DecorativeItemState", "dropped", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.DecorativeItem/DecorativeItemState snapped
::GorillaTagScripts::DecorativeItem::DecorativeItemState GorillaTagScripts::DecorativeItem::DecorativeItemState::_get_snapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::DecorativeItemState::_get_snapped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::DecorativeItem::DecorativeItemState>("GorillaTagScripts", "DecorativeItem/DecorativeItemState", "snapped"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.DecorativeItem/DecorativeItemState snapped
void GorillaTagScripts::DecorativeItem::DecorativeItemState::_set_snapped(::GorillaTagScripts::DecorativeItem::DecorativeItemState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::DecorativeItemState::_set_snapped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "DecorativeItem/DecorativeItemState", "snapped", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.DecorativeItem/DecorativeItemState respawn
::GorillaTagScripts::DecorativeItem::DecorativeItemState GorillaTagScripts::DecorativeItem::DecorativeItemState::_get_respawn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::DecorativeItemState::_get_respawn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::DecorativeItem::DecorativeItemState>("GorillaTagScripts", "DecorativeItem/DecorativeItemState", "respawn"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.DecorativeItem/DecorativeItemState respawn
void GorillaTagScripts::DecorativeItem::DecorativeItemState::_set_respawn(::GorillaTagScripts::DecorativeItem::DecorativeItemState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::DecorativeItemState::_set_respawn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "DecorativeItem/DecorativeItemState", "respawn", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.DecorativeItem/DecorativeItemState none
::GorillaTagScripts::DecorativeItem::DecorativeItemState GorillaTagScripts::DecorativeItem::DecorativeItemState::_get_none() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::DecorativeItemState::_get_none");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::DecorativeItem::DecorativeItemState>("GorillaTagScripts", "DecorativeItem/DecorativeItemState", "none"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.DecorativeItem/DecorativeItemState none
void GorillaTagScripts::DecorativeItem::DecorativeItemState::_set_none(::GorillaTagScripts::DecorativeItem::DecorativeItemState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::DecorativeItemState::_set_none");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "DecorativeItem/DecorativeItemState", "none", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::DecorativeItem::DecorativeItemState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItem::DecorativeItemState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.DecorativeItemReliableState
#include "GorillaTagScripts/DecorativeItemReliableState.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isSnapped
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::DecorativeItemReliableState::dyn_isSnapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemReliableState::dyn_isSnapped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isSnapped"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 snapPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaTagScripts::DecorativeItemReliableState::dyn_snapPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemReliableState::dyn_snapPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 respawnPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaTagScripts::DecorativeItemReliableState::dyn_respawnPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemReliableState::dyn_respawnPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "respawnPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion respawnRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GorillaTagScripts::DecorativeItemReliableState::dyn_respawnRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemReliableState::dyn_respawnRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "respawnRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.DecorativeItemReliableState.OnPhotonSerializeView
void GorillaTagScripts::DecorativeItemReliableState::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemReliableState::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::DecorativeItemReliableState*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.DecorativeItemsManager
#include "GorillaTagScripts/DecorativeItemsManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaTagScripts.DecorativeItem
#include "GorillaTagScripts/DecorativeItem.hpp"
// Including type: GorillaTagScripts.AttachPoint
#include "GorillaTagScripts/AttachPoint.hpp"
// Including type: ZoneBasedObject
#include "GlobalNamespace/ZoneBasedObject.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private GorillaTagScripts.DecorativeItemsManager _instance
::GorillaTagScripts::DecorativeItemsManager* GorillaTagScripts::DecorativeItemsManager::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::DecorativeItemsManager*>("GorillaTagScripts", "DecorativeItemsManager", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private GorillaTagScripts.DecorativeItemsManager _instance
void GorillaTagScripts::DecorativeItemsManager::_set__instance(::GorillaTagScripts::DecorativeItemsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "DecorativeItemsManager", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject decorativeItemsContainer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::DecorativeItemsManager::dyn_decorativeItemsContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::dyn_decorativeItemsContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decorativeItemsContainer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject respawnableHooksContainer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::DecorativeItemsManager::dyn_respawnableHooksContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::dyn_respawnableHooksContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "respawnableHooksContainer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> nonRespawnableHooksContainer
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GorillaTagScripts::DecorativeItemsManager::dyn_nonRespawnableHooksContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::dyn_nonRespawnableHooksContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nonRespawnableHooksContainer"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<GorillaTagScripts.DecorativeItem> itemsList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::DecorativeItem*>*& GorillaTagScripts::DecorativeItemsManager::dyn_itemsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::dyn_itemsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemsList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::DecorativeItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<GorillaTagScripts.AttachPoint> respawnableHooks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::AttachPoint*>*& GorillaTagScripts::DecorativeItemsManager::dyn_respawnableHooks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::dyn_respawnableHooks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "respawnableHooks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::AttachPoint*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<GorillaTagScripts.AttachPoint> allHooks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::AttachPoint*>*& GorillaTagScripts::DecorativeItemsManager::dyn_allHooks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::dyn_allHooks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allHooks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::AttachPoint*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastIndex
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::DecorativeItemsManager::dyn_lastIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::dyn_lastIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentIndex
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::DecorativeItemsManager::dyn_currentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::dyn_currentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 arrayIndex
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::DecorativeItemsManager::dyn_arrayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::dyn_arrayIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean shouldRunUpdate
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::DecorativeItemsManager::dyn_shouldRunUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::dyn_shouldRunUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shouldRunUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ZoneBasedObject zone
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ZoneBasedObject*& GorillaTagScripts::DecorativeItemsManager::dyn_zone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::dyn_zone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zone"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ZoneBasedObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean wasInZone
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::DecorativeItemsManager::dyn_wasInZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::dyn_wasInZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasInZone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.DecorativeItemsManager.get_Instance
::GorillaTagScripts::DecorativeItemsManager* GorillaTagScripts::DecorativeItemsManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "DecorativeItemsManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaTagScripts::DecorativeItemsManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaTagScripts.DecorativeItemsManager.Awake
void GorillaTagScripts::DecorativeItemsManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.DecorativeItemsManager.OnDestroy
void GorillaTagScripts::DecorativeItemsManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.DecorativeItemsManager.Update
void GorillaTagScripts::DecorativeItemsManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.DecorativeItemsManager.SpawnItem
void GorillaTagScripts::DecorativeItemsManager::SpawnItem(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::SpawnItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: GorillaTagScripts.DecorativeItemsManager.RespawnItemRPC
void GorillaTagScripts::DecorativeItemsManager::RespawnItemRPC(int index, ::UnityEngine::Vector3 _transformPos, ::UnityEngine::Quaternion _transformRot, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::RespawnItemRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RespawnItemRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(_transformPos), ::il2cpp_utils::ExtractType(_transformRot), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, _transformPos, _transformRot, info);
}
// Autogenerated method: GorillaTagScripts.DecorativeItemsManager.RandomSpawn
::UnityEngine::Transform* GorillaTagScripts::DecorativeItemsManager::RandomSpawn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::RandomSpawn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomSpawn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.DecorativeItemsManager.UpdateListPerFrame
int GorillaTagScripts::DecorativeItemsManager::UpdateListPerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::UpdateListPerFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateListPerFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.DecorativeItemsManager.OnRequestToRespawn
void GorillaTagScripts::DecorativeItemsManager::OnRequestToRespawn(::GorillaTagScripts::DecorativeItem* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::OnRequestToRespawn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestToRespawn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: GorillaTagScripts.DecorativeItemsManager.getCurrentAttachPointByPosition
::GorillaTagScripts::AttachPoint* GorillaTagScripts::DecorativeItemsManager::getCurrentAttachPointByPosition(::UnityEngine::Vector3 _attachPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::getCurrentAttachPointByPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getCurrentAttachPointByPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_attachPoint)})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaTagScripts::AttachPoint*, false>(this, ___internal__method, _attachPoint);
}
// Autogenerated method: GorillaTagScripts.DecorativeItemsManager.Photon.Pun.IPunObservable.OnPhotonSerializeView
void GorillaTagScripts::DecorativeItemsManager::Photon_Pun_IPunObservable_OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::DecorativeItemsManager::Photon.Pun.IPunObservable.OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::DecorativeItemsManager*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.EnvItem
#include "GorillaTagScripts/EnvItem.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 spawnedByPhotonViewId
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::EnvItem::dyn_spawnedByPhotonViewId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::EnvItem::dyn_spawnedByPhotonViewId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spawnedByPhotonViewId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.EnvItem.OnEnable
void GorillaTagScripts::EnvItem::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::EnvItem::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.EnvItem.OnDisable
void GorillaTagScripts::EnvItem::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::EnvItem::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.EnvItem.OnPhotonInstantiate
void GorillaTagScripts::EnvItem::OnPhotonInstantiate(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::EnvItem::OnPhotonInstantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::EnvItem*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.Flower
#include "GorillaTagScripts/Flower.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: GorillaTagScripts.GorillaTimer
#include "GorillaTagScripts/GorillaTimer.hpp"
// Including type: BeePerchPoint
#include "GlobalNamespace/BeePerchPoint.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 healthy_to_middle
int GorillaTagScripts::Flower::_get_healthy_to_middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::_get_healthy_to_middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("GorillaTagScripts", "Flower", "healthy_to_middle"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 healthy_to_middle
void GorillaTagScripts::Flower::_set_healthy_to_middle(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::_set_healthy_to_middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "Flower", "healthy_to_middle", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 middle_to_healthy
int GorillaTagScripts::Flower::_get_middle_to_healthy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::_get_middle_to_healthy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("GorillaTagScripts", "Flower", "middle_to_healthy"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 middle_to_healthy
void GorillaTagScripts::Flower::_set_middle_to_healthy(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::_set_middle_to_healthy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "Flower", "middle_to_healthy", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 wilted_to_middle
int GorillaTagScripts::Flower::_get_wilted_to_middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::_get_wilted_to_middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("GorillaTagScripts", "Flower", "wilted_to_middle"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 wilted_to_middle
void GorillaTagScripts::Flower::_set_wilted_to_middle(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::_set_wilted_to_middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "Flower", "wilted_to_middle", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 middle_to_wilted
int GorillaTagScripts::Flower::_get_middle_to_wilted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::_get_middle_to_wilted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("GorillaTagScripts", "Flower", "middle_to_wilted"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 middle_to_wilted
void GorillaTagScripts::Flower::_set_middle_to_wilted(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::_set_middle_to_wilted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "Flower", "middle_to_wilted", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator anim
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& GorillaTagScripts::Flower::dyn_anim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::dyn_anim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anim"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer meshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& GorillaTagScripts::Flower::dyn_meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::dyn_meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.GorillaTimer timer
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaTimer*& GorillaTagScripts::Flower::dyn_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::dyn_timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timer"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::GorillaTimer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeePerchPoint perchPoint
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeePerchPoint*& GorillaTagScripts::Flower::dyn_perchPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::dyn_perchPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perchPoint"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeePerchPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem wateredFx
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GorillaTagScripts::Flower::dyn_wateredFx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::dyn_wateredFx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wateredFx"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem sparkleFx
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GorillaTagScripts::Flower::dyn_sparkleFx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::dyn_sparkleFx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sparkleFx"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject meshStatesGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::Flower::dyn_meshStatesGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::dyn_meshStatesGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshStatesGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] meshStates
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GorillaTagScripts::Flower::dyn_meshStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::dyn_meshStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshStates"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.Flower/FlowerState currentState
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::Flower::FlowerState& GorillaTagScripts::Flower::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::Flower::FlowerState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String id
[[deprecated("Use field access instead!")]] ::StringW& GorillaTagScripts::Flower::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean shouldUpdateVisuals
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::Flower::dyn_shouldUpdateVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::dyn_shouldUpdateVisuals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shouldUpdateVisuals"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.Flower/FlowerState lastState
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::Flower::FlowerState& GorillaTagScripts::Flower::dyn_lastState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::dyn_lastState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastState"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::Flower::FlowerState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsWatered>k__BackingField
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::Flower::dyn_$IsWatered$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::dyn_$IsWatered$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsWatered>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.Flower.get_IsWatered
bool GorillaTagScripts::Flower::get_IsWatered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::get_IsWatered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWatered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.Flower.set_IsWatered
void GorillaTagScripts::Flower::set_IsWatered(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::set_IsWatered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsWatered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.Flower.Awake
void GorillaTagScripts::Flower::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.Flower.OnDestroy
void GorillaTagScripts::Flower::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.Flower.WaterFlower
void GorillaTagScripts::Flower::WaterFlower(bool isWatered) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::WaterFlower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaterFlower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isWatered)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isWatered);
}
// Autogenerated method: GorillaTagScripts.Flower.UpdateFlowerState
void GorillaTagScripts::Flower::UpdateFlowerState(::GorillaTagScripts::Flower::FlowerState newState, bool isWatered, bool updateVisual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::UpdateFlowerState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFlowerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState), ::il2cpp_utils::ExtractType(isWatered), ::il2cpp_utils::ExtractType(updateVisual)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState, isWatered, updateVisual);
}
// Autogenerated method: GorillaTagScripts.Flower.LocalUpdateFlowers
void GorillaTagScripts::Flower::LocalUpdateFlowers(::GorillaTagScripts::Flower::FlowerState state, bool isWatered) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::LocalUpdateFlowers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalUpdateFlowers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(isWatered)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, isWatered);
}
// Autogenerated method: GorillaTagScripts.Flower.HandleOnFlowerTimerEnded
void GorillaTagScripts::Flower::HandleOnFlowerTimerEnded(::GorillaTagScripts::GorillaTimer* _timer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::HandleOnFlowerTimerEnded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOnFlowerTimerEnded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_timer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _timer);
}
// Autogenerated method: GorillaTagScripts.Flower.ChangeState
void GorillaTagScripts::Flower::ChangeState(::GorillaTagScripts::Flower::FlowerState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::ChangeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: GorillaTagScripts.Flower.GetCurrentState
::GorillaTagScripts::Flower::FlowerState GorillaTagScripts::Flower::GetCurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::GetCurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaTagScripts::Flower::FlowerState, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.Flower.OnAnimationIsDone
void GorillaTagScripts::Flower::OnAnimationIsDone(int state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::OnAnimationIsDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAnimationIsDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: GorillaTagScripts.Flower.UpdateVisuals
void GorillaTagScripts::Flower::UpdateVisuals(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::UpdateVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: GorillaTagScripts.Flower.AnimCatch
void GorillaTagScripts::Flower::AnimCatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::AnimCatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimCatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.Flower..cctor
void GorillaTagScripts::Flower::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "Flower", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.Flower/FlowerState
#include "GorillaTagScripts/Flower.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.Flower/FlowerState None
::GorillaTagScripts::Flower::FlowerState GorillaTagScripts::Flower::FlowerState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::FlowerState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::Flower::FlowerState>("GorillaTagScripts", "Flower/FlowerState", "None"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.Flower/FlowerState None
void GorillaTagScripts::Flower::FlowerState::_set_None(::GorillaTagScripts::Flower::FlowerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::FlowerState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "Flower/FlowerState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.Flower/FlowerState Healthy
::GorillaTagScripts::Flower::FlowerState GorillaTagScripts::Flower::FlowerState::_get_Healthy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::FlowerState::_get_Healthy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::Flower::FlowerState>("GorillaTagScripts", "Flower/FlowerState", "Healthy"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.Flower/FlowerState Healthy
void GorillaTagScripts::Flower::FlowerState::_set_Healthy(::GorillaTagScripts::Flower::FlowerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::FlowerState::_set_Healthy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "Flower/FlowerState", "Healthy", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.Flower/FlowerState Middle
::GorillaTagScripts::Flower::FlowerState GorillaTagScripts::Flower::FlowerState::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::FlowerState::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::Flower::FlowerState>("GorillaTagScripts", "Flower/FlowerState", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.Flower/FlowerState Middle
void GorillaTagScripts::Flower::FlowerState::_set_Middle(::GorillaTagScripts::Flower::FlowerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::FlowerState::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "Flower/FlowerState", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.Flower/FlowerState Wilted
::GorillaTagScripts::Flower::FlowerState GorillaTagScripts::Flower::FlowerState::_get_Wilted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::FlowerState::_get_Wilted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::Flower::FlowerState>("GorillaTagScripts", "Flower/FlowerState", "Wilted"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.Flower/FlowerState Wilted
void GorillaTagScripts::Flower::FlowerState::_set_Wilted(::GorillaTagScripts::Flower::FlowerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::FlowerState::_set_Wilted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "Flower/FlowerState", "Wilted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::Flower::FlowerState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::Flower::FlowerState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.FlowersManager
#include "GorillaTagScripts/FlowersManager.hpp"
// Including type: GorillaTagScripts.FlowersManager/FlowersInZone
#include "GorillaTagScripts/FlowersManager_FlowersInZone.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaTagScripts.Flower
#include "GorillaTagScripts/Flower.hpp"
// Including type: SlingshotProjectileHitNotifier
#include "GlobalNamespace/SlingshotProjectileHitNotifier.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: SlingshotProjectile
#include "GlobalNamespace/SlingshotProjectile.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private GorillaTagScripts.FlowersManager <Instance>k__BackingField
::GorillaTagScripts::FlowersManager* GorillaTagScripts::FlowersManager::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GorillaTagScripts::FlowersManager*>("GorillaTagScripts", "FlowersManager", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private GorillaTagScripts.FlowersManager <Instance>k__BackingField
void GorillaTagScripts::FlowersManager::_set_$Instance$k__BackingField(::GorillaTagScripts::FlowersManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "FlowersManager", "<Instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaTagScripts.FlowersManager/FlowersInZone> sections
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::FlowersManager::FlowersInZone*>*& GorillaTagScripts::FlowersManager::dyn_sections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::dyn_sections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sections"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::FlowersManager::FlowersInZone*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 flowersToCheck
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::FlowersManager::dyn_flowersToCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::dyn_flowersToCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flowersToCheck"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 flowerCheckIndex
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::FlowersManager::dyn_flowerCheckIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::dyn_flowerCheckIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flowerCheckIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<GorillaTagScripts.Flower> allFlowers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::Flower*>*& GorillaTagScripts::FlowersManager::dyn_allFlowers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::dyn_allFlowers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allFlowers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::Flower*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SlingshotProjectileHitNotifier[] hitNotifiers
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SlingshotProjectileHitNotifier*>& GorillaTagScripts::FlowersManager::dyn_hitNotifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::dyn_hitNotifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hitNotifiers"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SlingshotProjectileHitNotifier*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,System.Collections.Generic.List`1<GorillaTagScripts.Flower>> sectionToFlowersDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, ::System::Collections::Generic::List_1<::GorillaTagScripts::Flower*>*>*& GorillaTagScripts::FlowersManager::dyn_sectionToFlowersDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::dyn_sectionToFlowersDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sectionToFlowersDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, ::System::Collections::Generic::List_1<::GorillaTagScripts::Flower*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,GTZone> sectionToZonesDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, ::GlobalNamespace::GTZone>*& GorillaTagScripts::FlowersManager::dyn_sectionToZonesDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::dyn_sectionToZonesDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sectionToZonesDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::GameObject*, ::GlobalNamespace::GTZone>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasBeenSerialized
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::FlowersManager::dyn_hasBeenSerialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::dyn_hasBeenSerialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasBeenSerialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.FlowersManager.get_Instance
::GorillaTagScripts::FlowersManager* GorillaTagScripts::FlowersManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "FlowersManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaTagScripts::FlowersManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FlowersManager.set_Instance
void GorillaTagScripts::FlowersManager::set_Instance(::GorillaTagScripts::FlowersManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "FlowersManager", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.FlowersManager.Awake
void GorillaTagScripts::FlowersManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FlowersManager.Start
void GorillaTagScripts::FlowersManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FlowersManager.OnDestroy
void GorillaTagScripts::FlowersManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FlowersManager.ProjectileHitReceiver
void GorillaTagScripts::FlowersManager::ProjectileHitReceiver(::GlobalNamespace::SlingshotProjectile* projectile, ::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::ProjectileHitReceiver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProjectileHitReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(projectile), ::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, projectile, collider);
}
// Autogenerated method: GorillaTagScripts.FlowersManager.WaterFlowers
void GorillaTagScripts::FlowersManager::WaterFlowers(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::WaterFlowers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaterFlowers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: GorillaTagScripts.FlowersManager.HandleOnZoneChanged
void GorillaTagScripts::FlowersManager::HandleOnZoneChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::HandleOnZoneChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOnZoneChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FlowersManager.GetHealthyFlowersInZoneCount
int GorillaTagScripts::FlowersManager::GetHealthyFlowersInZoneCount(::GlobalNamespace::GTZone zone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::GetHealthyFlowersInZoneCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHealthyFlowersInZoneCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(zone)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, zone);
}
// Autogenerated method: GorillaTagScripts.FlowersManager.OnPhotonSerializeView
void GorillaTagScripts::FlowersManager::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::FlowersManager*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaTagScripts.FlowersManager.Update
void GorillaTagScripts::FlowersManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.FlowersManager/FlowersInZone
#include "GorillaTagScripts/FlowersManager_FlowersInZone.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GTZone zone
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GTZone& GorillaTagScripts::FlowersManager::FlowersInZone::dyn_zone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::FlowersInZone::dyn_zone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zone"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GTZone*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> sections
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GorillaTagScripts::FlowersManager::FlowersInZone::dyn_sections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FlowersManager::FlowersInZone::dyn_sections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sections"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.FriendshipGroupDetection
#include "GorillaTagScripts/FriendshipGroupDetection.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: GorillaFriendCollider
#include "GlobalNamespace/GorillaFriendCollider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private GorillaTagScripts.FriendshipGroupDetection <Instance>k__BackingField
::GorillaTagScripts::FriendshipGroupDetection* GorillaTagScripts::FriendshipGroupDetection::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GorillaTagScripts::FriendshipGroupDetection*>("GorillaTagScripts", "FriendshipGroupDetection", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private GorillaTagScripts.FriendshipGroupDetection <Instance>k__BackingField
void GorillaTagScripts::FriendshipGroupDetection::_set_$Instance$k__BackingField(::GorillaTagScripts::FriendshipGroupDetection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "FriendshipGroupDetection", "<Instance>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.String> userIdLookup
::System::Collections::Generic::Dictionary_2<int, ::StringW>* GorillaTagScripts::FriendshipGroupDetection::_get_userIdLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::_get_userIdLookup");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::StringW>*>("GorillaTagScripts", "FriendshipGroupDetection", "userIdLookup")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.String> userIdLookup
void GorillaTagScripts::FriendshipGroupDetection::_set_userIdLookup(::System::Collections::Generic::Dictionary_2<int, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::_set_userIdLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "FriendshipGroupDetection", "userIdLookup", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Color> tempColorLookup
::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Color>* GorillaTagScripts::FriendshipGroupDetection::_get_tempColorLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::_get_tempColorLookup");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Color>*>("GorillaTagScripts", "FriendshipGroupDetection", "tempColorLookup")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Color> tempColorLookup
void GorillaTagScripts::FriendshipGroupDetection::_set_tempColorLookup(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::_set_tempColorLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "FriendshipGroupDetection", "tempColorLookup", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single detectionRadius
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::FriendshipGroupDetection::dyn_detectionRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_detectionRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "detectionRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single groupTime
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::FriendshipGroupDetection::dyn_groupTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_groupTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single cooldownAfterCreatingGroup
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::FriendshipGroupDetection::dyn_cooldownAfterCreatingGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_cooldownAfterCreatingGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cooldownAfterCreatingGroup"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single hapticStrength
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::FriendshipGroupDetection::dyn_hapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_hapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single hapticDuration
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::FriendshipGroupDetection::dyn_hapticDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_hapticDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean debug
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::FriendshipGroupDetection::dyn_debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_debug");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debug"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double offset
[[deprecated("Use field access instead!")]] double& GorillaTagScripts::FriendshipGroupDetection::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> myPartyMemberIDs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GorillaTagScripts::FriendshipGroupDetection::dyn_myPartyMemberIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_myPartyMemberIDs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myPartyMemberIDs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> myPartyMembersHash
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GorillaTagScripts::FriendshipGroupDetection::dyn_myPartyMembersHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_myPartyMembersHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myPartyMembersHash"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Color> <myBeadColors>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Color>*& GorillaTagScripts::FriendshipGroupDetection::dyn_$myBeadColors$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_$myBeadColors$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<myBeadColors>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <myBraceletColor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GorillaTagScripts::FriendshipGroupDetection::dyn_$myBraceletColor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_$myBraceletColor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<myBraceletColor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <MyBraceletSelfIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::FriendshipGroupDetection::dyn_$MyBraceletSelfIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_$MyBraceletSelfIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MyBraceletSelfIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GroupJoinZone <partyZone>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GroupJoinZone& GorillaTagScripts::FriendshipGroupDetection::dyn_$partyZone$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_$partyZone$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<partyZone>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GroupJoinZone*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Action`1<GroupJoinZone>> groupZoneCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Action_1<::GlobalNamespace::GroupJoinZone>*>*& GorillaTagScripts::FriendshipGroupDetection::dyn_groupZoneCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_groupZoneCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupZoneCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Action_1<::GlobalNamespace::GroupJoinZone>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTag.GTColor/HSVRanges braceletRandomColorHSVRanges
[[deprecated("Use field access instead!")]] ::GorillaTag::GTColor::HSVRanges& GorillaTagScripts::FriendshipGroupDetection::dyn_braceletRandomColorHSVRanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_braceletRandomColorHSVRanges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "braceletRandomColorHSVRanges"))->offset;
  return *reinterpret_cast<::GorillaTag::GTColor::HSVRanges*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject friendshipBubble
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::FriendshipGroupDetection::dyn_friendshipBubble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_friendshipBubble");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "friendshipBubble"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip fistBumpInterruptedAudio
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GorillaTagScripts::FriendshipGroupDetection::dyn_fistBumpInterruptedAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_fistBumpInterruptedAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fistBumpInterruptedAudio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem particleSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GorillaTagScripts::FriendshipGroupDetection::dyn_particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GorillaTagScripts::FriendshipGroupDetection::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<GorillaTagScripts.FriendshipGroupDetection/PlayerFist> playersToPropagateFrom
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GorillaTagScripts::FriendshipGroupDetection::PlayerFist>*& GorillaTagScripts::FriendshipGroupDetection::dyn_playersToPropagateFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_playersToPropagateFrom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playersToPropagateFrom"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GorillaTagScripts::FriendshipGroupDetection::PlayerFist>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> playersInProvisionalGroup
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GorillaTagScripts::FriendshipGroupDetection::dyn_playersInProvisionalGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_playersInProvisionalGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playersInProvisionalGroup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> provisionalGroupUsingLeftHands
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GorillaTagScripts::FriendshipGroupDetection::dyn_provisionalGroupUsingLeftHands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_provisionalGroupUsingLeftHands");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provisionalGroupUsingLeftHands"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> tempIntList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GorillaTagScripts::FriendshipGroupDetection::dyn_tempIntList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_tempIntList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempIntList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean amFirstProvisionalPlayer
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::FriendshipGroupDetection::dyn_amFirstProvisionalPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_amFirstProvisionalPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amFirstProvisionalPlayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32[]> partyMergeIDs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::ArrayW<int>>*& GorillaTagScripts::FriendshipGroupDetection::dyn_partyMergeIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_partyMergeIDs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partyMergeIDs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::ArrayW<int>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single groupCreateAfterTimestamp
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::FriendshipGroupDetection::dyn_groupCreateAfterTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_groupCreateAfterTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupCreateAfterTimestamp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single suppressPartyCreationUntilTimestamp
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::FriendshipGroupDetection::dyn_suppressPartyCreationUntilTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_suppressPartyCreationUntilTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "suppressPartyCreationUntilTimestamp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <DidJoinLeftHanded>k__BackingField
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::FriendshipGroupDetection::dyn_$DidJoinLeftHanded$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_$DidJoinLeftHanded$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DidJoinLeftHanded>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean WillJoinLeftHanded
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::FriendshipGroupDetection::dyn_WillJoinLeftHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_WillJoinLeftHanded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WillJoinLeftHanded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<GorillaTagScripts.FriendshipGroupDetection/PlayerFist> playersMakingFists
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::FriendshipGroupDetection::PlayerFist>*& GorillaTagScripts::FriendshipGroupDetection::dyn_playersMakingFists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_playersMakingFists");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playersMakingFists"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::FriendshipGroupDetection::PlayerFist>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder debugStr
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& GorillaTagScripts::FriendshipGroupDetection::dyn_debugStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_debugStr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugStr"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single aboutToGroupJoin_CooldownUntilTimestamp
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::FriendshipGroupDetection::dyn_aboutToGroupJoin_CooldownUntilTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::dyn_aboutToGroupJoin_CooldownUntilTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aboutToGroupJoin_CooldownUntilTimestamp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.get_Instance
::GorillaTagScripts::FriendshipGroupDetection* GorillaTagScripts::FriendshipGroupDetection::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "FriendshipGroupDetection", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaTagScripts::FriendshipGroupDetection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.set_Instance
void GorillaTagScripts::FriendshipGroupDetection::set_Instance(::GorillaTagScripts::FriendshipGroupDetection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "FriendshipGroupDetection", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.get_myBeadColors
::System::Collections::Generic::List_1<::UnityEngine::Color>* GorillaTagScripts::FriendshipGroupDetection::get_myBeadColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::get_myBeadColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_myBeadColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Color>*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.set_myBeadColors
void GorillaTagScripts::FriendshipGroupDetection::set_myBeadColors(::System::Collections::Generic::List_1<::UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::set_myBeadColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_myBeadColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.get_myBraceletColor
::UnityEngine::Color GorillaTagScripts::FriendshipGroupDetection::get_myBraceletColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::get_myBraceletColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_myBraceletColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.set_myBraceletColor
void GorillaTagScripts::FriendshipGroupDetection::set_myBraceletColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::set_myBraceletColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_myBraceletColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.get_MyBraceletSelfIndex
int GorillaTagScripts::FriendshipGroupDetection::get_MyBraceletSelfIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::get_MyBraceletSelfIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MyBraceletSelfIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.set_MyBraceletSelfIndex
void GorillaTagScripts::FriendshipGroupDetection::set_MyBraceletSelfIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::set_MyBraceletSelfIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MyBraceletSelfIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.get_PartyMemberIDs
::System::Collections::Generic::List_1<::StringW>* GorillaTagScripts::FriendshipGroupDetection::get_PartyMemberIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::get_PartyMemberIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PartyMemberIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.get_IsInParty
bool GorillaTagScripts::FriendshipGroupDetection::get_IsInParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::get_IsInParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.get_partyZone
::GlobalNamespace::GroupJoinZone GorillaTagScripts::FriendshipGroupDetection::get_partyZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::get_partyZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GroupJoinZone, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.set_partyZone
void GorillaTagScripts::FriendshipGroupDetection::set_partyZone(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::set_partyZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_partyZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.Awake
void GorillaTagScripts::FriendshipGroupDetection::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.AddGroupZoneCallback
void GorillaTagScripts::FriendshipGroupDetection::AddGroupZoneCallback(::System::Action_1<::GlobalNamespace::GroupJoinZone>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::AddGroupZoneCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGroupZoneCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.RemoveGroupZoneCallback
void GorillaTagScripts::FriendshipGroupDetection::RemoveGroupZoneCallback(::System::Action_1<::GlobalNamespace::GroupJoinZone>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::RemoveGroupZoneCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveGroupZoneCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.IsInMyGroup
bool GorillaTagScripts::FriendshipGroupDetection::IsInMyGroup(::StringW userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::IsInMyGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInMyGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, userID);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.get_DidJoinLeftHanded
bool GorillaTagScripts::FriendshipGroupDetection::get_DidJoinLeftHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::get_DidJoinLeftHanded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DidJoinLeftHanded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.set_DidJoinLeftHanded
void GorillaTagScripts::FriendshipGroupDetection::set_DidJoinLeftHanded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::set_DidJoinLeftHanded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DidJoinLeftHanded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.Update
void GorillaTagScripts::FriendshipGroupDetection::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.UpdateProvisionalGroup
void GorillaTagScripts::FriendshipGroupDetection::UpdateProvisionalGroup(ByRef<::UnityEngine::Vector3> midpoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::UpdateProvisionalGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateProvisionalGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(midpoint));
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.UpdateWarningSigns
void GorillaTagScripts::FriendshipGroupDetection::UpdateWarningSigns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::UpdateWarningSigns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateWarningSigns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.NotifyNoPartyToMerge
void GorillaTagScripts::FriendshipGroupDetection::NotifyNoPartyToMerge(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::NotifyNoPartyToMerge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyNoPartyToMerge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.NotifyPartyMerging
void GorillaTagScripts::FriendshipGroupDetection::NotifyPartyMerging(::ArrayW<int> memberIDs, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::NotifyPartyMerging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyPartyMerging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberIDs), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, memberIDs, info);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.SendAboutToGroupJoin
void GorillaTagScripts::FriendshipGroupDetection::SendAboutToGroupJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::SendAboutToGroupJoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAboutToGroupJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.PartyMemberIsAboutToGroupJoin
void GorillaTagScripts::FriendshipGroupDetection::PartyMemberIsAboutToGroupJoin(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::PartyMemberIsAboutToGroupJoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PartyMemberIsAboutToGroupJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.SendPartyFormedRPC
void GorillaTagScripts::FriendshipGroupDetection::SendPartyFormedRPC(int16_t braceletColor, ::ArrayW<int> memberIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::SendPartyFormedRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendPartyFormedRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(braceletColor), ::il2cpp_utils::ExtractType(memberIDs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, braceletColor, memberIDs);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.PartyFormedSuccessfully
void GorillaTagScripts::FriendshipGroupDetection::PartyFormedSuccessfully(int16_t braceletColor, ::ArrayW<int> memberIDs, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::PartyFormedSuccessfully");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PartyFormedSuccessfully", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(braceletColor), ::il2cpp_utils::ExtractType(memberIDs), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, braceletColor, memberIDs, info);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.AddPartyMembers
void GorillaTagScripts::FriendshipGroupDetection::AddPartyMembers(int16_t braceletColor, ::ArrayW<int> memberIDs, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::AddPartyMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPartyMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(braceletColor), ::il2cpp_utils::ExtractType(memberIDs), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, braceletColor, memberIDs, info);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.SetNewParty
void GorillaTagScripts::FriendshipGroupDetection::SetNewParty(int16_t braceletColor, ::ArrayW<int> memberIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::SetNewParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNewParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(braceletColor), ::il2cpp_utils::ExtractType(memberIDs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, braceletColor, memberIDs);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.LeaveParty
void GorillaTagScripts::FriendshipGroupDetection::LeaveParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::LeaveParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LeaveParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.PlayerLeftParty
void GorillaTagScripts::FriendshipGroupDetection::PlayerLeftParty(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::PlayerLeftParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerLeftParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.SendVerifyPartyMember
void GorillaTagScripts::FriendshipGroupDetection::SendVerifyPartyMember(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::SendVerifyPartyMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendVerifyPartyMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.VerifyPartyMember
void GorillaTagScripts::FriendshipGroupDetection::VerifyPartyMember(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::VerifyPartyMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyPartyMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.OnPartyMembershipChanged
void GorillaTagScripts::FriendshipGroupDetection::OnPartyMembershipChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::OnPartyMembershipChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPartyMembershipChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.IsPartyWithinCollider
bool GorillaTagScripts::FriendshipGroupDetection::IsPartyWithinCollider(::GlobalNamespace::GorillaFriendCollider* friendCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::IsPartyWithinCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPartyWithinCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(friendCollider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, friendCollider);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.PackColor
int16_t GorillaTagScripts::FriendshipGroupDetection::PackColor(::UnityEngine::Color col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::PackColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "FriendshipGroupDetection", "PackColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, col);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection.UnpackColor
::UnityEngine::Color GorillaTagScripts::FriendshipGroupDetection::UnpackColor(int16_t data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::UnpackColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "FriendshipGroupDetection", "UnpackColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: GorillaTagScripts.FriendshipGroupDetection..cctor
void GorillaTagScripts::FriendshipGroupDetection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::FriendshipGroupDetection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "FriendshipGroupDetection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.GameObjectManagerWithId
#include "GorillaTagScripts/GameObjectManagerWithId.hpp"
// Including type: GorillaTagScripts.GameObjectManagerWithId/gameObjectData
#include "GorillaTagScripts/GameObjectManagerWithId_gameObjectData.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject objectsContainer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::GameObjectManagerWithId::dyn_objectsContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GameObjectManagerWithId::dyn_objectsContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectsContainer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GTZone zone
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GTZone& GorillaTagScripts::GameObjectManagerWithId::dyn_zone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GameObjectManagerWithId::dyn_zone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zone"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GTZone*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<GorillaTagScripts.GameObjectManagerWithId/gameObjectData> objectData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::GameObjectManagerWithId::gameObjectData*>*& GorillaTagScripts::GameObjectManagerWithId::dyn_objectData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GameObjectManagerWithId::dyn_objectData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::GameObjectManagerWithId::gameObjectData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.GameObjectManagerWithId.Awake
void GorillaTagScripts::GameObjectManagerWithId::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GameObjectManagerWithId::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GameObjectManagerWithId.OnDestroy
void GorillaTagScripts::GameObjectManagerWithId::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GameObjectManagerWithId::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GameObjectManagerWithId.ReceiveEvent
void GorillaTagScripts::GameObjectManagerWithId::ReceiveEvent(::StringW id, ::UnityEngine::Transform* _transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GameObjectManagerWithId::ReceiveEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(_transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, _transform);
}
// Autogenerated method: GorillaTagScripts.GameObjectManagerWithId.Update
void GorillaTagScripts::GameObjectManagerWithId::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GameObjectManagerWithId::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.GameObjectManagerWithId/gameObjectData
#include "GorillaTagScripts/GameObjectManagerWithId_gameObjectData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaTagScripts::GameObjectManagerWithId::gameObjectData::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GameObjectManagerWithId::gameObjectData::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform followTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaTagScripts::GameObjectManagerWithId::gameObjectData::dyn_followTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GameObjectManagerWithId::gameObjectData::dyn_followTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String id
[[deprecated("Use field access instead!")]] ::StringW& GorillaTagScripts::GameObjectManagerWithId::gameObjectData::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GameObjectManagerWithId::gameObjectData::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isMatched
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::GameObjectManagerWithId::gameObjectData::dyn_isMatched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GameObjectManagerWithId::gameObjectData::dyn_isMatched");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isMatched"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.GorillaCaveCrystalSetup
#include "GorillaTagScripts/GorillaCaveCrystalSetup.hpp"
// Including type: GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef
#include "GorillaTagScripts/GorillaCaveCrystalSetup_CrystalDef.hpp"
// Including type: GorillaTagScripts.GorillaCaveCrystalSetup/<>c
#include "GorillaTagScripts/GorillaCaveCrystalSetup_--c.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private GorillaTagScripts.GorillaCaveCrystalSetup gInstance
::GorillaTagScripts::GorillaCaveCrystalSetup* GorillaTagScripts::GorillaCaveCrystalSetup::_get_gInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::_get_gInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::GorillaCaveCrystalSetup*>("GorillaTagScripts", "GorillaCaveCrystalSetup", "gInstance"));
}
// Autogenerated static field setter
// Set static field: static private GorillaTagScripts.GorillaCaveCrystalSetup gInstance
void GorillaTagScripts::GorillaCaveCrystalSetup::_set_gInstance(::GorillaTagScripts::GorillaCaveCrystalSetup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::_set_gInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "GorillaCaveCrystalSetup", "gInstance", value));
}
// Autogenerated static field getter
// Get static field: static private GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef[] gCrystalDefs
::ArrayW<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*> GorillaTagScripts::GorillaCaveCrystalSetup::_get_gCrystalDefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::_get_gCrystalDefs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*>>("GorillaTagScripts", "GorillaCaveCrystalSetup", "gCrystalDefs"));
}
// Autogenerated static field setter
// Set static field: static private GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef[] gCrystalDefs
void GorillaTagScripts::GorillaCaveCrystalSetup::_set_gCrystalDefs(::ArrayW<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::_set_gCrystalDefs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "GorillaCaveCrystalSetup", "gCrystalDefs", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material SharedBase
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GorillaTagScripts::GorillaCaveCrystalSetup::dyn_SharedBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::dyn_SharedBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SharedBase"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D CrystalAlbedo
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GorillaTagScripts::GorillaCaveCrystalSetup::dyn_CrystalAlbedo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::dyn_CrystalAlbedo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CrystalAlbedo"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D CrystalDarkAlbedo
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GorillaTagScripts::GorillaCaveCrystalSetup::dyn_CrystalDarkAlbedo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::dyn_CrystalDarkAlbedo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CrystalDarkAlbedo"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Red
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& GorillaTagScripts::GorillaCaveCrystalSetup::dyn_Red() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::dyn_Red");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Red"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Orange
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& GorillaTagScripts::GorillaCaveCrystalSetup::dyn_Orange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::dyn_Orange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Orange"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Yellow
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& GorillaTagScripts::GorillaCaveCrystalSetup::dyn_Yellow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::dyn_Yellow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Yellow"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Green
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& GorillaTagScripts::GorillaCaveCrystalSetup::dyn_Green() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::dyn_Green");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Green"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Teal
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& GorillaTagScripts::GorillaCaveCrystalSetup::dyn_Teal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::dyn_Teal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Teal"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef DarkBlue
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& GorillaTagScripts::GorillaCaveCrystalSetup::dyn_DarkBlue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::dyn_DarkBlue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DarkBlue"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Pink
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& GorillaTagScripts::GorillaCaveCrystalSetup::dyn_Pink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::dyn_Pink");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pink"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef Dark
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& GorillaTagScripts::GorillaCaveCrystalSetup::dyn_Dark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::dyn_Dark");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Dark"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef DarkLight
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& GorillaTagScripts::GorillaCaveCrystalSetup::dyn_DarkLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::dyn_DarkLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DarkLight"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef DarkLightUnderWater
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*& GorillaTagScripts::GorillaCaveCrystalSetup::dyn_DarkLightUnderWater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::dyn_DarkLightUnderWater");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DarkLightUnderWater"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _notes
[[deprecated("Use field access instead!")]] ::StringW& GorillaTagScripts::GorillaCaveCrystalSetup::dyn__notes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::dyn__notes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notes"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _target
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::GorillaCaveCrystalSetup::dyn__target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::dyn__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.GorillaCaveCrystalSetup.get_Instance
::GorillaTagScripts::GorillaCaveCrystalSetup* GorillaTagScripts::GorillaCaveCrystalSetup::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "GorillaCaveCrystalSetup", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaTagScripts::GorillaCaveCrystalSetup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaCaveCrystalSetup.OnEnable
void GorillaTagScripts::GorillaCaveCrystalSetup::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaCaveCrystalSetup.GetCrystalDefs
::ArrayW<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*> GorillaTagScripts::GorillaCaveCrystalSetup::GetCrystalDefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::GetCrystalDefs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCrystalDefs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*>, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaCaveCrystalSetup.ProcessTarget
void GorillaTagScripts::GorillaCaveCrystalSetup::ProcessTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::ProcessTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaCaveCrystalSetup.<GetCrystalDefs>b__19_1
::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef* GorillaTagScripts::GorillaCaveCrystalSetup::$GetCrystalDefs$b__19_1(::System::Reflection::FieldInfo* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::<GetCrystalDefs>b__19_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetCrystalDefs>b__19_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef*, false>(this, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef
#include "GorillaTagScripts/GorillaCaveCrystalSetup_CrystalDef.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: GorillaTagScripts.CrystalVisualsPreset
#include "GorillaTagScripts/CrystalVisualsPreset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material keyMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef::dyn_keyMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef::dyn_keyMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.CrystalVisualsPreset visualPreset
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::CrystalVisualsPreset*& GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef::dyn_visualPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef::dyn_visualPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visualPreset"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::CrystalVisualsPreset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 low
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef::dyn_low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef::dyn_low");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "low"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 mid
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef::dyn_mid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef::dyn_mid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 high
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef::dyn_high() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef::dyn_high");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "high"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.GorillaCaveCrystalSetup/<>c
#include "GorillaTagScripts/GorillaCaveCrystalSetup_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: GorillaCaveCrystal
#include "GlobalNamespace/GorillaCaveCrystal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GorillaTagScripts.GorillaCaveCrystalSetup/<>c <>9
::GorillaTagScripts::GorillaCaveCrystalSetup::$$c* GorillaTagScripts::GorillaCaveCrystalSetup::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GorillaTagScripts::GorillaCaveCrystalSetup::$$c*>("GorillaTagScripts", "GorillaCaveCrystalSetup/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GorillaTagScripts.GorillaCaveCrystalSetup/<>c <>9
void GorillaTagScripts::GorillaCaveCrystalSetup::$$c::_set_$$9(::GorillaTagScripts::GorillaCaveCrystalSetup::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("GorillaTagScripts", "GorillaCaveCrystalSetup/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.FieldInfo,System.Boolean> <>9__19_0
::System::Func_2<::System::Reflection::FieldInfo*, bool>* GorillaTagScripts::GorillaCaveCrystalSetup::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::FieldInfo*, bool>*>("GorillaTagScripts", "GorillaCaveCrystalSetup/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.FieldInfo,System.Boolean> <>9__19_0
void GorillaTagScripts::GorillaCaveCrystalSetup::$$c::_set_$$9__19_0(::System::Func_2<::System::Reflection::FieldInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("GorillaTagScripts", "GorillaCaveCrystalSetup/<>c", "<>9__19_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<GorillaCaveCrystal,System.Boolean> <>9__21_0
::System::Func_2<::GlobalNamespace::GorillaCaveCrystal*, bool>* GorillaTagScripts::GorillaCaveCrystalSetup::$$c::_get_$$9__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::$$c::_get_$$9__21_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::GorillaCaveCrystal*, bool>*>("GorillaTagScripts", "GorillaCaveCrystalSetup/<>c", "<>9__21_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<GorillaCaveCrystal,System.Boolean> <>9__21_0
void GorillaTagScripts::GorillaCaveCrystalSetup::$$c::_set_$$9__21_0(::System::Func_2<::GlobalNamespace::GorillaCaveCrystal*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::$$c::_set_$$9__21_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("GorillaTagScripts", "GorillaCaveCrystalSetup/<>c", "<>9__21_0", value)));
}
// Autogenerated method: GorillaTagScripts.GorillaCaveCrystalSetup/<>c..cctor
void GorillaTagScripts::GorillaCaveCrystalSetup::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "GorillaCaveCrystalSetup/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaCaveCrystalSetup/<>c.<GetCrystalDefs>b__19_0
bool GorillaTagScripts::GorillaCaveCrystalSetup::$$c::$GetCrystalDefs$b__19_0(::System::Reflection::FieldInfo* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::$$c::<GetCrystalDefs>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetCrystalDefs>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, f);
}
// Autogenerated method: GorillaTagScripts.GorillaCaveCrystalSetup/<>c.<ProcessTarget>b__21_0
bool GorillaTagScripts::GorillaCaveCrystalSetup::$$c::$ProcessTarget$b__21_0(::GlobalNamespace::GorillaCaveCrystal* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaCaveCrystalSetup::$$c::<ProcessTarget>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ProcessTarget>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.GorillaTimer
#include "GorillaTagScripts/GorillaTimer.hpp"
// Including type: GorillaTagScripts.GorillaTimer/<DelayedReStartTimer>d__11
#include "GorillaTagScripts/GorillaTimer_-DelayedReStartTimer-d__11.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single timerDuration
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::GorillaTimer::dyn_timerDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::dyn_timerDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timerDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useRandomDuration
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::GorillaTimer::dyn_useRandomDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::dyn_useRandomDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRandomDuration"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single randTimeMin
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::GorillaTimer::dyn_randTimeMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::dyn_randTimeMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randTimeMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single randTimeMax
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::GorillaTimer::dyn_randTimeMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::dyn_randTimeMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randTimeMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single passedTime
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::GorillaTimer::dyn_passedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::dyn_passedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean startTimer
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::GorillaTimer::dyn_startTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::dyn_startTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startTimer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean resetTimer
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::GorillaTimer::dyn_resetTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::dyn_resetTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetTimer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityAction`1<GorillaTagScripts.GorillaTimer> onTimerStarted
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction_1<::GorillaTagScripts::GorillaTimer*>*& GorillaTagScripts::GorillaTimer::dyn_onTimerStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::dyn_onTimerStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onTimerStarted"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityAction_1<::GorillaTagScripts::GorillaTimer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityAction`1<GorillaTagScripts.GorillaTimer> onTimerStopped
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction_1<::GorillaTagScripts::GorillaTimer*>*& GorillaTagScripts::GorillaTimer::dyn_onTimerStopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::dyn_onTimerStopped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onTimerStopped"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityAction_1<::GorillaTagScripts::GorillaTimer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer.Awake
void GorillaTagScripts::GorillaTimer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer.StartTimer
void GorillaTagScripts::GorillaTimer::StartTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::StartTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer.DelayedReStartTimer
::System::Collections::IEnumerator* GorillaTagScripts::GorillaTimer::DelayedReStartTimer(float delayTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::DelayedReStartTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedReStartTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delayTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delayTime);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer.StopTimer
void GorillaTagScripts::GorillaTimer::StopTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::StopTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer.ResetTimer
void GorillaTagScripts::GorillaTimer::ResetTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::ResetTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer.RestartTimer
void GorillaTagScripts::GorillaTimer::RestartTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::RestartTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestartTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer.SetTimerDuration
void GorillaTagScripts::GorillaTimer::SetTimerDuration(float timer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::SetTimerDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTimerDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timer);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer.InvokeUpdate
void GorillaTagScripts::GorillaTimer::InvokeUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::InvokeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer.GetPassedTime
float GorillaTagScripts::GorillaTimer::GetPassedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::GetPassedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPassedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer.SetPassedTime
void GorillaTagScripts::GorillaTimer::SetPassedTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::SetPassedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPassedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer.GetRemainingTime
float GorillaTagScripts::GorillaTimer::GetRemainingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::GetRemainingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemainingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer.OnEnable
void GorillaTagScripts::GorillaTimer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer.OnDisable
void GorillaTagScripts::GorillaTimer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaTagScripts.GorillaTimer/<DelayedReStartTimer>d__11
#include "GorillaTagScripts/GorillaTimer_-DelayedReStartTimer-d__11.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delayTime
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::dyn_delayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::dyn_delayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.GorillaTimer <>4__this
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaTimer*& GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::GorillaTimer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer/<DelayedReStartTimer>d__11.System.IDisposable.Dispose
void GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer/<DelayedReStartTimer>d__11.MoveNext
bool GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer/<DelayedReStartTimer>d__11.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer/<DelayedReStartTimer>d__11.System.Collections.IEnumerator.Reset
void GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimer/<DelayedReStartTimer>d__11.System.Collections.IEnumerator.get_Current
::Il2CppObject* GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::GorillaTimer::$DelayedReStartTimer$d__11*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.GorillaTimerManager
#include "GorillaTagScripts/GorillaTimerManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaTagScripts.GorillaTimer
#include "GorillaTagScripts/GorillaTimer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.GorillaTimerManager instance
::GorillaTagScripts::GorillaTimerManager* GorillaTagScripts::GorillaTimerManager::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimerManager::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::GorillaTimerManager*>("GorillaTagScripts", "GorillaTimerManager", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.GorillaTimerManager instance
void GorillaTagScripts::GorillaTimerManager::_set_instance(::GorillaTagScripts::GorillaTimerManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimerManager::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "GorillaTimerManager", "instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean hasInstance
bool GorillaTagScripts::GorillaTimerManager::_get_hasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimerManager::_get_hasInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("GorillaTagScripts", "GorillaTimerManager", "hasInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean hasInstance
void GorillaTagScripts::GorillaTimerManager::_set_hasInstance(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimerManager::_set_hasInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "GorillaTimerManager", "hasInstance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<GorillaTagScripts.GorillaTimer> allTimers
::System::Collections::Generic::List_1<::GorillaTagScripts::GorillaTimer*>* GorillaTagScripts::GorillaTimerManager::_get_allTimers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimerManager::_get_allTimers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GorillaTagScripts::GorillaTimer*>*>("GorillaTagScripts", "GorillaTimerManager", "allTimers"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<GorillaTagScripts.GorillaTimer> allTimers
void GorillaTagScripts::GorillaTimerManager::_set_allTimers(::System::Collections::Generic::List_1<::GorillaTagScripts::GorillaTimer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimerManager::_set_allTimers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "GorillaTimerManager", "allTimers", value));
}
// Autogenerated method: GorillaTagScripts.GorillaTimerManager.Awake
void GorillaTagScripts::GorillaTimerManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimerManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimerManager.CreateManager
void GorillaTagScripts::GorillaTimerManager::CreateManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimerManager::CreateManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "GorillaTimerManager", "CreateManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimerManager.SetInstance
void GorillaTagScripts::GorillaTimerManager::SetInstance(::GorillaTagScripts::GorillaTimerManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimerManager::SetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "GorillaTimerManager", "SetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, manager);
}
// Autogenerated method: GorillaTagScripts.GorillaTimerManager.RegisterGorillaTimer
void GorillaTagScripts::GorillaTimerManager::RegisterGorillaTimer(::GorillaTagScripts::GorillaTimer* gTimer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimerManager::RegisterGorillaTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "GorillaTimerManager", "RegisterGorillaTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gTimer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gTimer);
}
// Autogenerated method: GorillaTagScripts.GorillaTimerManager.UnregisterGorillaTimer
void GorillaTagScripts::GorillaTimerManager::UnregisterGorillaTimer(::GorillaTagScripts::GorillaTimer* gTimer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimerManager::UnregisterGorillaTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "GorillaTimerManager", "UnregisterGorillaTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gTimer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gTimer);
}
// Autogenerated method: GorillaTagScripts.GorillaTimerManager.Update
void GorillaTagScripts::GorillaTimerManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimerManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.GorillaTimerManager..cctor
void GorillaTagScripts::GorillaTimerManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::GorillaTimerManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts", "GorillaTimerManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.LurkerGhost
#include "GorillaTagScripts/LurkerGhost.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: GorillaTagScripts.LurkerGhost/<>c__DisplayClass59_0
#include "GorillaTagScripts/LurkerGhost_--c__DisplayClass59_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: ZoneBasedObject
#include "GlobalNamespace/ZoneBasedObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: ThrowableSetDressing
#include "GlobalNamespace/ThrowableSetDressing.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single patrolSpeed
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_patrolSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_patrolSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patrolSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single seekSpeed
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_seekSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_seekSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seekSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single chargeSpeed
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_chargeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_chargeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chargeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cooldownDuration
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_cooldownDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_cooldownDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cooldownDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxCooldownDuration
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_maxCooldownDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_maxCooldownDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxCooldownDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PossessionDuration
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_PossessionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_PossessionDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PossessionDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sphereColliderRadius
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_sphereColliderRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_sphereColliderRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sphereColliderRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxHuntDistance
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_maxHuntDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_maxHuntDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxHuntDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minCatchDistance
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_minCatchDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_minCatchDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minCatchDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxRepeatHuntDistance
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_maxRepeatHuntDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_maxRepeatHuntDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRepeatHuntDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxRepeatHuntTimes
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::LurkerGhost::dyn_maxRepeatHuntTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_maxRepeatHuntTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRepeatHuntTimes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagCoolDown
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_tagCoolDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_tagCoolDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagCoolDown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 SpookyMagicNumbers
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaTagScripts::LurkerGhost::dyn_SpookyMagicNumbers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_SpookyMagicNumbers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SpookyMagicNumbers"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 HauntedMagicNumbers
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GorillaTagScripts::LurkerGhost::dyn_HauntedMagicNumbers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_HauntedMagicNumbers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HauntedMagicNumbers"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticStrength
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_hapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_hapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticDuration
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_hapticDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_hapticDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject waypointsContainer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::LurkerGhost::dyn_waypointsContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_waypointsContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waypointsContainer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ZoneBasedObject[] waypointRegions
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ZoneBasedObject*>& GorillaTagScripts::LurkerGhost::dyn_waypointRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_waypointRegions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waypointRegions"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ZoneBasedObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ZoneBasedObject lastWaypointRegion
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ZoneBasedObject*& GorillaTagScripts::LurkerGhost::dyn_lastWaypointRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_lastWaypointRegion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastWaypointRegion"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ZoneBasedObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Transform> waypoints
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& GorillaTagScripts::LurkerGhost::dyn_waypoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_waypoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waypoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform currentWaypoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaTagScripts::LurkerGhost::dyn_currentWaypoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_currentWaypoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentWaypoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material visibleMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GorillaTagScripts::LurkerGhost::dyn_visibleMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_visibleMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visibleMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material scryableMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GorillaTagScripts::LurkerGhost::dyn_scryableMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_scryableMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scryableMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material visibleMaterialBones
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GorillaTagScripts::LurkerGhost::dyn_visibleMaterialBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_visibleMaterialBones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visibleMaterialBones"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material scryableMaterialBones
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GorillaTagScripts::LurkerGhost::dyn_scryableMaterialBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_scryableMaterialBones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scryableMaterialBones"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer meshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GorillaTagScripts::LurkerGhost::dyn_meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer bonesMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GorillaTagScripts::LurkerGhost::dyn_bonesMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_bonesMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bonesMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GorillaTagScripts::LurkerGhost::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip patrolAudio
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GorillaTagScripts::LurkerGhost::dyn_patrolAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_patrolAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patrolAudio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip huntAudio
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GorillaTagScripts::LurkerGhost::dyn_huntAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_huntAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "huntAudio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip possessedAudio
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GorillaTagScripts::LurkerGhost::dyn_possessedAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_possessedAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "possessedAudio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ThrowableSetDressing scryingGlass
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ThrowableSetDressing*& GorillaTagScripts::LurkerGhost::dyn_scryingGlass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_scryingGlass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scryingGlass"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ThrowableSetDressing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single scryingAngerAngle
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_scryingAngerAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_scryingAngerAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scryingAngerAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single scryingAngerDelay
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_scryingAngerDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_scryingAngerDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scryingAngerDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single seekAheadDistance
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_seekAheadDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_seekAheadDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seekAheadDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single seekCloseEnoughDistance
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_seekCloseEnoughDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_seekCloseEnoughDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seekCloseEnoughDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single scryingAngerAfterTimestamp
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_scryingAngerAfterTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_scryingAngerAfterTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scryingAngerAfterTimestamp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentRepeatHuntTimes
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::LurkerGhost::dyn_currentRepeatHuntTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_currentRepeatHuntTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentRepeatHuntTimes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityAction`1<UnityEngine.GameObject> TriggerHauntedObjects
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction_1<::UnityEngine::GameObject*>*& GorillaTagScripts::LurkerGhost::dyn_TriggerHauntedObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_TriggerHauntedObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TriggerHauntedObjects"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityAction_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String handLayermask
[[deprecated("Use field access instead!")]] ::StringW& GorillaTagScripts::LurkerGhost::dyn_handLayermask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_handLayermask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handLayermask"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String bodyLayerMask
[[deprecated("Use field access instead!")]] ::StringW& GorillaTagScripts::LurkerGhost::dyn_bodyLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_bodyLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyLayerMask"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentIndex
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::LurkerGhost::dyn_currentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_currentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.LurkerGhost/ghostState currentState
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::LurkerGhost::ghostState& GorillaTagScripts::LurkerGhost::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::LurkerGhost::ghostState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single cooldownTimeRemaining
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_cooldownTimeRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_cooldownTimeRemaining");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cooldownTimeRemaining"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Realtime.Player> possibleTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*& GorillaTagScripts::LurkerGhost::dyn_possibleTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_possibleTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "possibleTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Realtime::Player*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player targetPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GorillaTagScripts::LurkerGhost::dyn_targetPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_targetPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform targetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaTagScripts::LurkerGhost::dyn_targetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_targetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single huntedPassedTime
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_huntedPassedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_huntedPassedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "huntedPassedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 targetPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaTagScripts::LurkerGhost::dyn_targetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_targetPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion targetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GorillaTagScripts::LurkerGhost::dyn_targetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_targetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig targetVRRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GorillaTagScripts::LurkerGhost::dyn_targetVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_targetVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetVRRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ShaderHashId _BlackAndWhite
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ShaderHashId& GorillaTagScripts::LurkerGhost::dyn__BlackAndWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn__BlackAndWhite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_BlackAndWhite"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ShaderHashId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig lastHauntedVRRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GorillaTagScripts::LurkerGhost::dyn_lastHauntedVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_lastHauntedVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastHauntedVRRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextTagTime
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::LurkerGhost::dyn_nextTagTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_nextTagTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextTagTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player passingPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GorillaTagScripts::LurkerGhost::dyn_passingPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_passingPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passingPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hauntNeighbors
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::LurkerGhost::dyn_hauntNeighbors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_hauntNeighbors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hauntNeighbors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hauntOnTag
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::LurkerGhost::dyn_hauntOnTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::dyn_hauntOnTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hauntOnTag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.Awake
void GorillaTagScripts::LurkerGhost::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.Start
void GorillaTagScripts::LurkerGhost::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.LateUpdate
void GorillaTagScripts::LurkerGhost::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.PickNextWaypoint
void GorillaTagScripts::LurkerGhost::PickNextWaypoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::PickNextWaypoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PickNextWaypoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.Patrol
void GorillaTagScripts::LurkerGhost::Patrol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::Patrol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Patrol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.PlaySound
void GorillaTagScripts::LurkerGhost::PlaySound(::UnityEngine::AudioClip* clip, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(loop)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, loop);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.PickPlayer
bool GorillaTagScripts::LurkerGhost::PickPlayer(float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::PickPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, maxDistance);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.PickPlayer
void GorillaTagScripts::LurkerGhost::PickPlayer(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::PickPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.SeekPlayer
void GorillaTagScripts::LurkerGhost::SeekPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::SeekPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SeekPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.ChargeAtPlayer
void GorillaTagScripts::LurkerGhost::ChargeAtPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::ChargeAtPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChargeAtPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.UpdateGhostVisibility
void GorillaTagScripts::LurkerGhost::UpdateGhostVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::UpdateGhostVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGhostVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.HauntObjects
void GorillaTagScripts::LurkerGhost::HauntObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::HauntObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HauntObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.ChangeState
void GorillaTagScripts::LurkerGhost::ChangeState(::GorillaTagScripts::LurkerGhost::ghostState newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::ChangeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.OnDestroy
void GorillaTagScripts::LurkerGhost::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.UpdateState
void GorillaTagScripts::LurkerGhost::UpdateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.Photon.Pun.IPunObservable.OnPhotonSerializeView
void GorillaTagScripts::LurkerGhost::Photon_Pun_IPunObservable_OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::Photon.Pun.IPunObservable.OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::LurkerGhost*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost.Photon.Pun.IOnPhotonViewOwnerChange.OnOwnerChange
void GorillaTagScripts::LurkerGhost::Photon_Pun_IOnPhotonViewOwnerChange_OnOwnerChange(::Photon::Realtime::Player* newOwner, ::Photon::Realtime::Player* previousOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::Photon.Pun.IOnPhotonViewOwnerChange.OnOwnerChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::LurkerGhost*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newOwner, previousOwner);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.LurkerGhost/ghostState
#include "GorillaTagScripts/LurkerGhost.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.LurkerGhost/ghostState patrol
::GorillaTagScripts::LurkerGhost::ghostState GorillaTagScripts::LurkerGhost::ghostState::_get_patrol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::ghostState::_get_patrol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::LurkerGhost::ghostState>("GorillaTagScripts", "LurkerGhost/ghostState", "patrol"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.LurkerGhost/ghostState patrol
void GorillaTagScripts::LurkerGhost::ghostState::_set_patrol(::GorillaTagScripts::LurkerGhost::ghostState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::ghostState::_set_patrol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "LurkerGhost/ghostState", "patrol", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.LurkerGhost/ghostState seek
::GorillaTagScripts::LurkerGhost::ghostState GorillaTagScripts::LurkerGhost::ghostState::_get_seek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::ghostState::_get_seek");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::LurkerGhost::ghostState>("GorillaTagScripts", "LurkerGhost/ghostState", "seek"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.LurkerGhost/ghostState seek
void GorillaTagScripts::LurkerGhost::ghostState::_set_seek(::GorillaTagScripts::LurkerGhost::ghostState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::ghostState::_set_seek");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "LurkerGhost/ghostState", "seek", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.LurkerGhost/ghostState charge
::GorillaTagScripts::LurkerGhost::ghostState GorillaTagScripts::LurkerGhost::ghostState::_get_charge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::ghostState::_get_charge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::LurkerGhost::ghostState>("GorillaTagScripts", "LurkerGhost/ghostState", "charge"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.LurkerGhost/ghostState charge
void GorillaTagScripts::LurkerGhost::ghostState::_set_charge(::GorillaTagScripts::LurkerGhost::ghostState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::ghostState::_set_charge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "LurkerGhost/ghostState", "charge", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.LurkerGhost/ghostState possess
::GorillaTagScripts::LurkerGhost::ghostState GorillaTagScripts::LurkerGhost::ghostState::_get_possess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::ghostState::_get_possess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::LurkerGhost::ghostState>("GorillaTagScripts", "LurkerGhost/ghostState", "possess"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.LurkerGhost/ghostState possess
void GorillaTagScripts::LurkerGhost::ghostState::_set_possess(::GorillaTagScripts::LurkerGhost::ghostState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::ghostState::_set_possess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts", "LurkerGhost/ghostState", "possess", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::LurkerGhost::ghostState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::ghostState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.LurkerGhost/<>c__DisplayClass59_0
#include "GorillaTagScripts/LurkerGhost_--c__DisplayClass59_0.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player player
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GorillaTagScripts::LurkerGhost::$$c__DisplayClass59_0::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::$$c__DisplayClass59_0::dyn_player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.LurkerGhost/<>c__DisplayClass59_0.<PickPlayer>b__0
bool GorillaTagScripts::LurkerGhost::$$c__DisplayClass59_0::$PickPlayer$b__0(::GlobalNamespace::VRRig* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::LurkerGhost::$$c__DisplayClass59_0::<PickPlayer>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PickPlayer>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.MenorahCandle
#include "GorillaTagScripts/MenorahCandle.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 day
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::MenorahCandle::dyn_day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::dyn_day");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "day"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 month
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::MenorahCandle::dyn_month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::dyn_month");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "month"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 year
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::MenorahCandle::dyn_year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::dyn_year");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "year"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject flame
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::MenorahCandle::dyn_flame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::dyn_flame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flame"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject candle
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::MenorahCandle::dyn_candle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::dyn_candle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "candle"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime litDate
[[deprecated("Use field access instead!")]] ::System::DateTime& GorillaTagScripts::MenorahCandle::dyn_litDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::dyn_litDate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "litDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean activeTimeEventDay
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::MenorahCandle::dyn_activeTimeEventDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::dyn_activeTimeEventDay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeTimeEventDay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime currentDate
[[deprecated("Use field access instead!")]] ::System::DateTime& GorillaTagScripts::MenorahCandle::dyn_currentDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::dyn_currentDate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.MenorahCandle.Awake
void GorillaTagScripts::MenorahCandle::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.MenorahCandle.Start
void GorillaTagScripts::MenorahCandle::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.MenorahCandle.UpdateMenorah
void GorillaTagScripts::MenorahCandle::UpdateMenorah() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::UpdateMenorah");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMenorah", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.MenorahCandle.OnTimeChanged
void GorillaTagScripts::MenorahCandle::OnTimeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::OnTimeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTimeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.MenorahCandle.OnTimeEventStart
void GorillaTagScripts::MenorahCandle::OnTimeEventStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::OnTimeEventStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTimeEventStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.MenorahCandle.OnTimeEventEnd
void GorillaTagScripts::MenorahCandle::OnTimeEventEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::OnTimeEventEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTimeEventEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.MenorahCandle.EnableCandle
void GorillaTagScripts::MenorahCandle::EnableCandle(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::EnableCandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableCandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: GorillaTagScripts.MenorahCandle.CandleShouldBeVisible
bool GorillaTagScripts::MenorahCandle::CandleShouldBeVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::CandleShouldBeVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CandleShouldBeVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.MenorahCandle.EnableFlame
void GorillaTagScripts::MenorahCandle::EnableFlame(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::EnableFlame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableFlame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: GorillaTagScripts.MenorahCandle.ShouldLightCandle
bool GorillaTagScripts::MenorahCandle::ShouldLightCandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::ShouldLightCandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldLightCandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.MenorahCandle.ShouldSnuffCandle
bool GorillaTagScripts::MenorahCandle::ShouldSnuffCandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::ShouldSnuffCandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSnuffCandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.MenorahCandle.OnDestroy
void GorillaTagScripts::MenorahCandle::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::MenorahCandle::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.RandomBucketThrowable
#include "GorillaTagScripts/RandomBucketThrowable.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject projectilePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::RandomBucketThrowable::dyn_projectilePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::RandomBucketThrowable::dyn_projectilePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectilePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single weightedChance
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::RandomBucketThrowable::dyn_weightedChance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::RandomBucketThrowable::dyn_weightedChance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weightedChance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.SceneBasedObject
#include "GorillaTagScripts/SceneBasedObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GTZone zone
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GTZone& GorillaTagScripts::SceneBasedObject::dyn_zone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::SceneBasedObject::dyn_zone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zone"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GTZone*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.SceneBasedObject.IsLocalPlayerInScene
bool GorillaTagScripts::SceneBasedObject::IsLocalPlayerInScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::SceneBasedObject::IsLocalPlayerInScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocalPlayerInScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.ObstacleCourse.ObstacleCourse
#include "GorillaTagScripts/ObstacleCourse/ObstacleCourse.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: GorillaTagScripts.ObstacleCourse.WinnerScoreboard
#include "GorillaTagScripts/ObstacleCourse/WinnerScoreboard.hpp"
// Including type: RigContainer
#include "GlobalNamespace/RigContainer.hpp"
// Including type: GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger
#include "GorillaTagScripts/ObstacleCourse/ObstacleCourseZoneTrigger.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: GorillaTagScripts.ObstacleCourse.TappableBell
#include "GorillaTagScripts/ObstacleCourse/TappableBell.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: ZoneBasedObject
#include "GlobalNamespace/ZoneBasedObject.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.ObstacleCourse.WinnerScoreboard scoreboard
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::ObstacleCourse::WinnerScoreboard*& GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_scoreboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_scoreboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoreboard"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::ObstacleCourse::WinnerScoreboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <winnerActorNumber>k__BackingField
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_$winnerActorNumber$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_$winnerActorNumber$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<winnerActorNumber>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RigContainer winnerRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RigContainer*& GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_winnerRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_winnerRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "winnerRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RigContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger[] zoneTriggers
[[deprecated("Use field access instead!")]] ::ArrayW<::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger*>& GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_zoneTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_zoneTriggers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zoneTriggers"))->offset;
  return *reinterpret_cast<::ArrayW<::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.ObstacleCourse.ObstacleCourse/RaceState currentState
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState& GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem confettiParticle
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_confettiParticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_confettiParticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "confettiParticle"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer bannerRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_bannerRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_bannerRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bannerRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.ObstacleCourse.TappableBell TappableBell
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::ObstacleCourse::TappableBell*& GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_TappableBell() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_TappableBell");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TappableBell"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::ObstacleCourse::TappableBell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single cooldownTime
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_cooldownTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_cooldownTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cooldownTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ZoneBasedObject[] zoneBasedVisuals
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ZoneBasedObject*>& GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_zoneBasedVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_zoneBasedVisuals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zoneBasedVisuals"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ZoneBasedObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject leftGate
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_leftGate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_leftGate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftGate"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject rightGate
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_rightGate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_rightGate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightGate"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 numPlayersOnCourse
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_numPlayersOnCourse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_numPlayersOnCourse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numPlayersOnCourse"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single startTime
[[deprecated("Use field access instead!")]] float& GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::dyn_startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourse.get_winnerActorNumber
int GorillaTagScripts::ObstacleCourse::ObstacleCourse::get_winnerActorNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::get_winnerActorNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_winnerActorNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourse.set_winnerActorNumber
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::set_winnerActorNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::set_winnerActorNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_winnerActorNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourse.Awake
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourse.OnDestroy
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourse.Start
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourse.InvokeUpdate
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::InvokeUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::InvokeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourse.OnPlayerEnterZone
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::OnPlayerEnterZone(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::OnPlayerEnterZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayerEnterZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourse.OnPlayerExitZone
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::OnPlayerExitZone(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::OnPlayerExitZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayerExitZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourse.RestartTimer
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::RestartTimer(bool playFx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RestartTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestartTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playFx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playFx);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourse.EndRace
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::EndRace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::EndRace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourse.PlayWinningEffects
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::PlayWinningEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::PlayWinningEffects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayWinningEffects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourse.OnEndLineTrigger
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::OnEndLineTrigger(::GlobalNamespace::VRRig* rig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::OnEndLineTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEndLineTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rig);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourse.Deserialize
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::Deserialize(int _winnerActorNumber, ::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState _currentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_winnerActorNumber), ::il2cpp_utils::ExtractType(_currentState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _winnerActorNumber, _currentState);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourse.UpdateState
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::UpdateState(::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState state, bool playFX) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(playFX)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, playFX);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourse.UpdateStartingGate
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::UpdateStartingGate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::UpdateStartingGate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStartingGate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.ObstacleCourse.ObstacleCourse/RaceState
#include "GorillaTagScripts/ObstacleCourse/ObstacleCourse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.ObstacleCourse.ObstacleCourse/RaceState Started
::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState::_get_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState::_get_Started");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState>("GorillaTagScripts.ObstacleCourse", "ObstacleCourse/RaceState", "Started"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.ObstacleCourse.ObstacleCourse/RaceState Started
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState::_set_Started(::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState::_set_Started");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts.ObstacleCourse", "ObstacleCourse/RaceState", "Started", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.ObstacleCourse.ObstacleCourse/RaceState Waiting
::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState::_get_Waiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState::_get_Waiting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState>("GorillaTagScripts.ObstacleCourse", "ObstacleCourse/RaceState", "Waiting"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.ObstacleCourse.ObstacleCourse/RaceState Waiting
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState::_set_Waiting(::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState::_set_Waiting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts.ObstacleCourse", "ObstacleCourse/RaceState", "Waiting", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagScripts.ObstacleCourse.ObstacleCourse/RaceState Finished
::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState::_get_Finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState::_get_Finished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState>("GorillaTagScripts.ObstacleCourse", "ObstacleCourse/RaceState", "Finished"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagScripts.ObstacleCourse.ObstacleCourse/RaceState Finished
void GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState::_set_Finished(::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState::_set_Finished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts.ObstacleCourse", "ObstacleCourse/RaceState", "Finished", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourse::RaceState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.ObstacleCourse.ObstacleCourseManager
#include "GorillaTagScripts/ObstacleCourse/ObstacleCourseManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaTagScripts.ObstacleCourse.ObstacleCourse
#include "GorillaTagScripts/ObstacleCourse/ObstacleCourse.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private GorillaTagScripts.ObstacleCourse.ObstacleCourseManager <Instance>k__BackingField
::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager* GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager*>("GorillaTagScripts.ObstacleCourse", "ObstacleCourseManager", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private GorillaTagScripts.ObstacleCourse.ObstacleCourseManager <Instance>k__BackingField
void GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::_set_$Instance$k__BackingField(::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaTagScripts.ObstacleCourse", "ObstacleCourseManager", "<Instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaTagScripts.ObstacleCourse.ObstacleCourse> allObstaclesCourses
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::ObstacleCourse::ObstacleCourse*>*& GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::dyn_allObstaclesCourses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::dyn_allObstaclesCourses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allObstaclesCourses"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::ObstacleCourse::ObstacleCourse*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <TickRunning>k__BackingField
[[deprecated("Use field access instead!")]] bool& GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::dyn_$TickRunning$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::dyn_$TickRunning$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TickRunning>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseManager.get_Instance
::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager* GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts.ObstacleCourse", "ObstacleCourseManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseManager.set_Instance
void GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::set_Instance(::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaTagScripts.ObstacleCourse", "ObstacleCourseManager", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseManager.get_TickRunning
bool GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::get_TickRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::get_TickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager*), 57));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseManager.set_TickRunning
void GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::set_TickRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::set_TickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager*), 58));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseManager.Awake
void GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseManager.Tick
void GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::Tick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager*), 59));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseManager.OnDestroy
void GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseManager.OnPhotonSerializeView
void GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseManager.OnEnable
void GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseManager.OnDisable
void GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseManager::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger
#include "GorillaTagScripts/ObstacleCourse/ObstacleCourseZoneTrigger.hpp"
// Including type: GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent
#include "GorillaTagScripts/ObstacleCourse/ObstacleCourseZoneTrigger_ObstacleCourseTriggerEvent.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask bodyLayer
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::dyn_bodyLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::dyn_bodyLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyLayer"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent OnPlayerTriggerEnter
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent*& GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::dyn_OnPlayerTriggerEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::dyn_OnPlayerTriggerEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPlayerTriggerEnter"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent OnPlayerTriggerExit
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent*& GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::dyn_OnPlayerTriggerExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::dyn_OnPlayerTriggerExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPlayerTriggerExit"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger.add_OnPlayerTriggerEnter
void GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::add_OnPlayerTriggerEnter(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::add_OnPlayerTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnPlayerTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger.remove_OnPlayerTriggerEnter
void GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::remove_OnPlayerTriggerEnter(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::remove_OnPlayerTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnPlayerTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger.add_OnPlayerTriggerExit
void GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::add_OnPlayerTriggerExit(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::add_OnPlayerTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnPlayerTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger.remove_OnPlayerTriggerExit
void GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::remove_OnPlayerTriggerExit(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::remove_OnPlayerTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnPlayerTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger.OnTriggerEnter
void GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger.OnTriggerExit
void GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent
#include "GorillaTagScripts/ObstacleCourse/ObstacleCourseZoneTrigger_ObstacleCourseTriggerEvent.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent.Invoke
void GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent::Invoke(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent.BeginInvoke
::System::IAsyncResult* GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent::BeginInvoke(::UnityEngine::Collider* collider, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, collider, callback, object);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleCourseZoneTrigger/ObstacleCourseTriggerEvent.EndInvoke
void GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::ObstacleCourse::ObstacleCourseZoneTrigger::ObstacleCourseTriggerEvent*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.ObstacleCourse.ObstacleEndLineTrigger
#include "GorillaTagScripts/ObstacleCourse/ObstacleEndLineTrigger.hpp"
// Including type: GorillaTagScripts.ObstacleCourse.ObstacleEndLineTrigger/ObstacleCourseTriggerEvent
#include "GorillaTagScripts/ObstacleCourse/ObstacleEndLineTrigger_ObstacleCourseTriggerEvent.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.ObstacleCourse.ObstacleEndLineTrigger/ObstacleCourseTriggerEvent OnPlayerTriggerEnter
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::ObstacleCourseTriggerEvent*& GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::dyn_OnPlayerTriggerEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::dyn_OnPlayerTriggerEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPlayerTriggerEnter"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::ObstacleCourseTriggerEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleEndLineTrigger.add_OnPlayerTriggerEnter
void GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::add_OnPlayerTriggerEnter(::GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::ObstacleCourseTriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::add_OnPlayerTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnPlayerTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleEndLineTrigger.remove_OnPlayerTriggerEnter
void GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::remove_OnPlayerTriggerEnter(::GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::ObstacleCourseTriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::remove_OnPlayerTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnPlayerTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleEndLineTrigger.OnTriggerEnter
void GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaTagScripts.ObstacleCourse.ObstacleEndLineTrigger/ObstacleCourseTriggerEvent
#include "GorillaTagScripts/ObstacleCourse/ObstacleEndLineTrigger_ObstacleCourseTriggerEvent.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleEndLineTrigger/ObstacleCourseTriggerEvent.Invoke
void GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::ObstacleCourseTriggerEvent::Invoke(::GlobalNamespace::VRRig* vrrig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::ObstacleCourseTriggerEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::ObstacleCourseTriggerEvent*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vrrig);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleEndLineTrigger/ObstacleCourseTriggerEvent.BeginInvoke
::System::IAsyncResult* GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::ObstacleCourseTriggerEvent::BeginInvoke(::GlobalNamespace::VRRig* vrrig, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::ObstacleCourseTriggerEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::ObstacleCourseTriggerEvent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, vrrig, callback, object);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.ObstacleEndLineTrigger/ObstacleCourseTriggerEvent.EndInvoke
void GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::ObstacleCourseTriggerEvent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::ObstacleCourseTriggerEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::ObstacleCourse::ObstacleEndLineTrigger::ObstacleCourseTriggerEvent*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagScripts.ObstacleCourse.TappableBell
#include "GorillaTagScripts/ObstacleCourse/TappableBell.hpp"
// Including type: GorillaTagScripts.ObstacleCourse.TappableBell/ObstacleCourseTriggerEvent
#include "GorillaTagScripts/ObstacleCourse/TappableBell_ObstacleCourseTriggerEvent.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: CallLimiter
#include "GlobalNamespace/CallLimiter.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VRRig winnerRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GorillaTagScripts::ObstacleCourse::TappableBell::dyn_winnerRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::TappableBell::dyn_winnerRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "winnerRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.ObstacleCourse.TappableBell/ObstacleCourseTriggerEvent OnTapped
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::ObstacleCourse::TappableBell::ObstacleCourseTriggerEvent*& GorillaTagScripts::ObstacleCourse::TappableBell::dyn_OnTapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::TappableBell::dyn_OnTapped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnTapped"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::ObstacleCourse::TappableBell::ObstacleCourseTriggerEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CallLimiter rpcCooldown
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CallLimiter*& GorillaTagScripts::ObstacleCourse::TappableBell::dyn_rpcCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::TappableBell::dyn_rpcCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rpcCooldown"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CallLimiter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.TappableBell.add_OnTapped
void GorillaTagScripts::ObstacleCourse::TappableBell::add_OnTapped(::GorillaTagScripts::ObstacleCourse::TappableBell::ObstacleCourseTriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::TappableBell::add_OnTapped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnTapped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.TappableBell.remove_OnTapped
void GorillaTagScripts::ObstacleCourse::TappableBell::remove_OnTapped(::GorillaTagScripts::ObstacleCourse::TappableBell::ObstacleCourseTriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::TappableBell::remove_OnTapped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnTapped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.TappableBell.OnTapLocal
void GorillaTagScripts::ObstacleCourse::TappableBell::OnTapLocal(float tapStrength, float tapTime, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::TappableBell::OnTapLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Tappable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tapStrength, tapTime, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaTagScripts.ObstacleCourse.TappableBell/ObstacleCourseTriggerEvent
#include "GorillaTagScripts/ObstacleCourse/TappableBell_ObstacleCourseTriggerEvent.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaTagScripts.ObstacleCourse.TappableBell/ObstacleCourseTriggerEvent.Invoke
void GorillaTagScripts::ObstacleCourse::TappableBell::ObstacleCourseTriggerEvent::Invoke(::GlobalNamespace::VRRig* vrrig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::TappableBell::ObstacleCourseTriggerEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::ObstacleCourse::TappableBell::ObstacleCourseTriggerEvent*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vrrig);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.TappableBell/ObstacleCourseTriggerEvent.BeginInvoke
::System::IAsyncResult* GorillaTagScripts::ObstacleCourse::TappableBell::ObstacleCourseTriggerEvent::BeginInvoke(::GlobalNamespace::VRRig* vrrig, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::TappableBell::ObstacleCourseTriggerEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::ObstacleCourse::TappableBell::ObstacleCourseTriggerEvent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, vrrig, callback, object);
}
// Autogenerated method: GorillaTagScripts.ObstacleCourse.TappableBell/ObstacleCourseTriggerEvent.EndInvoke
void GorillaTagScripts::ObstacleCourse::TappableBell::ObstacleCourseTriggerEvent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaTagScripts::ObstacleCourse::TappableBell::ObstacleCourseTriggerEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaTagScripts::ObstacleCourse::TappableBell::ObstacleCourseTriggerEvent*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
