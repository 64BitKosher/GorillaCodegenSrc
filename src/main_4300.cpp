// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.ServiceReferences.CombinedAudioEventReference
#include "Meta/WitAi/ServiceReferences/CombinedAudioEventReference.hpp"
// Including type: Meta.WitAi.Events.WitMicLevelChangedEvent
#include "Meta/WitAi/Events/WitMicLevelChangedEvent.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: Meta.WitAi.Events.UnityEventListeners.AudioEventListener
#include "Meta/WitAi/Events/UnityEventListeners/AudioEventListener.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitMicLevelChangedEvent _onMicAudioLevelChanged
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitMicLevelChangedEvent*& Meta::WitAi::ServiceReferences::CombinedAudioEventReference::dyn__onMicAudioLevelChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::CombinedAudioEventReference::dyn__onMicAudioLevelChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onMicAudioLevelChanged"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitMicLevelChangedEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _onMicStartedListening
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::ServiceReferences::CombinedAudioEventReference::dyn__onMicStartedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::CombinedAudioEventReference::dyn__onMicStartedListening");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onMicStartedListening"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _onMicStoppedListening
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::ServiceReferences::CombinedAudioEventReference::dyn__onMicStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::CombinedAudioEventReference::dyn__onMicStoppedListening");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onMicStoppedListening"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.UnityEventListeners.AudioEventListener[] _sourceListeners
[[deprecated("Use field access instead!")]] ::ArrayW<::Meta::WitAi::Events::UnityEventListeners::AudioEventListener*>& Meta::WitAi::ServiceReferences::CombinedAudioEventReference::dyn__sourceListeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::CombinedAudioEventReference::dyn__sourceListeners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sourceListeners"))->offset;
  return *reinterpret_cast<::ArrayW<::Meta::WitAi::Events::UnityEventListeners::AudioEventListener*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.ServiceReferences.CombinedAudioEventReference.Awake
void Meta::WitAi::ServiceReferences::CombinedAudioEventReference::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::CombinedAudioEventReference::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.ServiceReferences.CombinedAudioEventReference.OnEnable
void Meta::WitAi::ServiceReferences::CombinedAudioEventReference::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::CombinedAudioEventReference::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.ServiceReferences.CombinedAudioEventReference.OnDisable
void Meta::WitAi::ServiceReferences::CombinedAudioEventReference::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::CombinedAudioEventReference::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.ServiceReferences.CombinedAudioEventReference.get_OnMicAudioLevelChanged
::Meta::WitAi::Events::WitMicLevelChangedEvent* Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_OnMicAudioLevelChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_OnMicAudioLevelChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::ServiceReferences::CombinedAudioEventReference*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitMicLevelChangedEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.ServiceReferences.CombinedAudioEventReference.get_OnMicStartedListening
::UnityEngine::Events::UnityEvent* Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_OnMicStartedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_OnMicStartedListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::ServiceReferences::CombinedAudioEventReference*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.ServiceReferences.CombinedAudioEventReference.get_OnMicStoppedListening
::UnityEngine::Events::UnityEvent* Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_OnMicStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_OnMicStoppedListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::ServiceReferences::CombinedAudioEventReference*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.ServiceReferences.CombinedAudioEventReference.get_AudioEvents
::Meta::WitAi::Interfaces::IAudioInputEvents* Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_AudioEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::CombinedAudioEventReference::get_AudioEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::ServiceReferences::AudioInputServiceReference*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::IAudioInputEvents*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.ServiceReferences.VoiceServiceAudioEventReference
#include "Meta/WitAi/ServiceReferences/VoiceServiceAudioEventReference.hpp"
// Including type: Meta.WitAi.Interfaces.IAudioInputEvents
#include "Meta/WitAi/Interfaces/IAudioInputEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Utilities.VoiceServiceReference _voiceServiceReference
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Utilities::VoiceServiceReference& Meta::WitAi::ServiceReferences::VoiceServiceAudioEventReference::dyn__voiceServiceReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::VoiceServiceAudioEventReference::dyn__voiceServiceReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_voiceServiceReference"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Utilities::VoiceServiceReference*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.ServiceReferences.VoiceServiceAudioEventReference.get_AudioEvents
::Meta::WitAi::Interfaces::IAudioInputEvents* Meta::WitAi::ServiceReferences::VoiceServiceAudioEventReference::get_AudioEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::VoiceServiceAudioEventReference::get_AudioEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::ServiceReferences::AudioInputServiceReference*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::IAudioInputEvents*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VoiceEventToRequestEventMapper
#include "Meta/WitAi/Requests/VoiceEventToRequestEventMapper.hpp"
// Including type: Meta.WitAi.Events.VoiceEvents
#include "Meta/WitAi/Events/VoiceEvents.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.VoiceEvents _voiceEvents
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::VoiceEvents*& Meta::WitAi::Requests::VoiceEventToRequestEventMapper::dyn__voiceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::dyn__voiceEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_voiceEvents"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::VoiceEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceEventToRequestEventMapper.get_VoiceEvents
::Meta::WitAi::Events::VoiceEvents* Meta::WitAi::Requests::VoiceEventToRequestEventMapper::get_VoiceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::get_VoiceEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VoiceEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::VoiceEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceEventToRequestEventMapper.set_VoiceEvents
void Meta::WitAi::Requests::VoiceEventToRequestEventMapper::set_VoiceEvents(::Meta::WitAi::Events::VoiceEvents* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::set_VoiceEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VoiceEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceEventToRequestEventMapper.OnStateChange
void Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnStateChange(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnStateChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceEventToRequestEventMapper.OnStopListening
void Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnStopListening(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnStopListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceEventToRequestEventMapper.OnStartListening
void Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnStartListening(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnStartListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceEventToRequestEventMapper.OnFullTranscription
void Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnFullTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnFullTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceEventToRequestEventMapper.OnPartialTranscription
void Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnPartialTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnPartialTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceEventToRequestEventMapper.OnPartialResponse
void Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnPartialResponse(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnPartialResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceEventToRequestEventMapper.OnFullResponse
void Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnFullResponse(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnFullResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceEventToRequestEventMapper.OnSuccess
void Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnSuccess(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceEventToRequestEventMapper.OnSend
void Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnSend(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnSend");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceEventToRequestEventMapper.OnInit
void Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnInit(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnInit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceEventToRequestEventMapper.OnFailed
void Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnFailed(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceEventToRequestEventMapper.OnComplete
void Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnComplete(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceEventToRequestEventMapper.OnCancel
void Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnCancel(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceEventToRequestEventMapper::OnCancel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest/<>c__DisplayClass5_0
#include "Meta/WitAi/Requests/VoiceServiceRequest_--c__DisplayClass5_0.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest/<PerformMainThreadCallbacks>d__9
#include "Meta/WitAi/Requests/VoiceServiceRequest_-PerformMainThreadCallbacks-d__9.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest/<SimulateResponse>d__5
#include "Meta/WitAi/Requests/VoiceServiceRequest_-SimulateResponse-d__5.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvent
#include "Meta/WitAi/Requests/VoiceServiceRequestEvent.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestResults
#include "Meta/WitAi/Requests/VoiceServiceRequestResults.hpp"
// Including type: System.Collections.Concurrent.ConcurrentQueue`1
#include "System/Collections/Concurrent/ConcurrentQueue_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
// Including type: Meta.WitAi.CoroutineUtility/CoroutinePerformer
#include "Meta/WitAi/CoroutineUtility_CoroutinePerformer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.CoroutineUtility/CoroutinePerformer _performer
[[deprecated("Use field access instead!")]] ::Meta::WitAi::CoroutineUtility::CoroutinePerformer*& Meta::WitAi::Requests::VoiceServiceRequest::dyn__performer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::dyn__performer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_performer"))->offset;
  return *reinterpret_cast<::Meta::WitAi::CoroutineUtility::CoroutinePerformer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Concurrent.ConcurrentQueue`1<System.Action> _mainThreadCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Concurrent::ConcurrentQueue_1<::System::Action*>*& Meta::WitAi::Requests::VoiceServiceRequest::dyn__mainThreadCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::dyn__mainThreadCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainThreadCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Concurrent::ConcurrentQueue_1<::System::Action*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest.get_StatusCode
int Meta::WitAi::Requests::VoiceServiceRequest::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::get_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest.set_StatusCode
void Meta::WitAi::Requests::VoiceServiceRequest::set_StatusCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::set_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest.SimulateResponse
void Meta::WitAi::Requests::VoiceServiceRequest::SimulateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::SimulateResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimulateResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest.WatchMainThreadCallbacks
void Meta::WitAi::Requests::VoiceServiceRequest::WatchMainThreadCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::WatchMainThreadCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WatchMainThreadCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest.PerformMainThreadCallbacks
::System::Collections::IEnumerator* Meta::WitAi::Requests::VoiceServiceRequest::PerformMainThreadCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::PerformMainThreadCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformMainThreadCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest.HasMainThreadCallbacks
bool Meta::WitAi::Requests::VoiceServiceRequest::HasMainThreadCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::HasMainThreadCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasMainThreadCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest.MainThreadCallback
void Meta::WitAi::Requests::VoiceServiceRequest::MainThreadCallback(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::MainThreadCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MainThreadCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest.GetResultsWithMessage
::Meta::WitAi::Requests::VoiceServiceRequestResults* Meta::WitAi::Requests::VoiceServiceRequest::GetResultsWithMessage(::StringW newMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::GetResultsWithMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequest*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequestResults*, false>(this, ___internal__method, newMessage);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest.RaiseEvent
void Meta::WitAi::Requests::VoiceServiceRequest::RaiseEvent(::Meta::WitAi::Requests::VoiceServiceRequestEvent* eventCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::RaiseEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequest*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventCallback);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest.OnSimulateResponse
bool Meta::WitAi::Requests::VoiceServiceRequest::OnSimulateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::OnSimulateResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::VoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 21)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest.ApplyTranscription
void Meta::WitAi::Requests::VoiceServiceRequest::ApplyTranscription(::StringW newTranscription, bool newIsFinal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::ApplyTranscription");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 40)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newTranscription, newIsFinal);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest.ApplyResultResponseData
void Meta::WitAi::Requests::VoiceServiceRequest::ApplyResultResponseData(::Meta::WitAi::Json::WitResponseNode* newData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::ApplyResultResponseData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 52)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VoiceServiceRequest/<>c__DisplayClass5_0
#include "Meta/WitAi/Requests/VoiceServiceRequest_--c__DisplayClass5_0.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
// Including type: System.Diagnostics.StackTrace
#include "System/Diagnostics/StackTrace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Json.WitResponseNode lastResponseData
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Json::WitResponseNode*& Meta::WitAi::Requests::VoiceServiceRequest::$$c__DisplayClass5_0::dyn_lastResponseData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$$c__DisplayClass5_0::dyn_lastResponseData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastResponseData"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Json::WitResponseNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.VoiceServiceRequest <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VoiceServiceRequest*& Meta::WitAi::Requests::VoiceServiceRequest::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VoiceServiceRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String statusDescription
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Requests::VoiceServiceRequest::$$c__DisplayClass5_0::dyn_statusDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$$c__DisplayClass5_0::dyn_statusDescription");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusDescription"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Diagnostics.StackTrace stackTrace
[[deprecated("Use field access instead!")]] ::System::Diagnostics::StackTrace*& Meta::WitAi::Requests::VoiceServiceRequest::$$c__DisplayClass5_0::dyn_stackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$$c__DisplayClass5_0::dyn_stackTrace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stackTrace"))->offset;
  return *reinterpret_cast<::System::Diagnostics::StackTrace**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest/<>c__DisplayClass5_0.<SimulateResponse>b__0
void Meta::WitAi::Requests::VoiceServiceRequest::$$c__DisplayClass5_0::$SimulateResponse$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$$c__DisplayClass5_0::<SimulateResponse>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SimulateResponse>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest/<PerformMainThreadCallbacks>d__9
#include "Meta/WitAi/Requests/VoiceServiceRequest_-PerformMainThreadCallbacks-d__9.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.VoiceServiceRequest <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VoiceServiceRequest*& Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VoiceServiceRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest/<PerformMainThreadCallbacks>d__9.System.IDisposable.Dispose
void Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest/<PerformMainThreadCallbacks>d__9.MoveNext
bool Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest/<PerformMainThreadCallbacks>d__9.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest/<PerformMainThreadCallbacks>d__9.System.Collections.IEnumerator.Reset
void Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest/<PerformMainThreadCallbacks>d__9.System.Collections.IEnumerator.get_Current
::Il2CppObject* Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequest::$PerformMainThreadCallbacks$d__9*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VoiceServiceRequest/<SimulateResponse>d__5
#include "Meta/WitAi/Requests/VoiceServiceRequest_-SimulateResponse-d__5.hpp"
// Including type: Meta.WitAi.Data.SimulatedResponseMessage
#include "Meta/WitAi/Data/SimulatedResponseMessage.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest/<>c__DisplayClass5_0
#include "Meta/WitAi/Requests/VoiceServiceRequest_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.VoiceServiceRequest <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VoiceServiceRequest*& Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VoiceServiceRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Requests.VoiceServiceRequest/<>c__DisplayClass5_0 <>8__1
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VoiceServiceRequest::$$c__DisplayClass5_0*& Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VoiceServiceRequest::$$c__DisplayClass5_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Data.SimulatedResponseMessage <lastMessage>5__2
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::SimulatedResponseMessage*& Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$lastMessage$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$lastMessage$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lastMessage>5__2"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::SimulatedResponseMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__3
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$i$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$i$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Data.SimulatedResponseMessage <message>5__4
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::SimulatedResponseMessage*& Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$message$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$message$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<message>5__4"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::SimulatedResponseMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest/<SimulateResponse>d__5.MoveNext
void Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequest/<SimulateResponse>d__5.SetStateMachine
void Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Meta::WitAi::Requests::VoiceServiceRequest::$SimulateResponse$d__5), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvent
#include "Meta/WitAi/Requests/VoiceServiceRequestEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvent
#include "Meta/WitAi/Requests/VoiceServiceRequestEvent.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper
#include "Meta/WitAi/Requests/VoiceServiceRequestEventsWrapper.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.Wrap
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::Wrap(::Meta::WitAi::Requests::VoiceServiceRequestEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::Wrap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Wrap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.Unwrap
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::Unwrap(::Meta::WitAi::Requests::VoiceServiceRequestEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::Unwrap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unwrap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnAudioInputStateChange
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnAudioInputStateChange(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnAudioInputStateChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnUploadProgressChange
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnUploadProgressChange(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnUploadProgressChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnDownloadProgressChange
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnDownloadProgressChange(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnDownloadProgressChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnStateChange
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnStateChange(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnStateChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnStopListening
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnStopListening(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnStopListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnStartListening
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnStartListening(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnStartListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnFullTranscription
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnFullTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnFullTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnPartialTranscription
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnPartialTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnPartialTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnPartialResponse
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnPartialResponse(::Meta::WitAi::Json::WitResponseNode* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnPartialResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnFullResponse
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnFullResponse(::Meta::WitAi::Json::WitResponseNode* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnFullResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnAudioDeactivation
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnAudioDeactivation(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnAudioDeactivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnAudioActivation
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnAudioActivation(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnAudioActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnSuccess
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnSuccess(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnSend
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnSend(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnSend");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnInit
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnInit(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnInit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnFailed
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnFailed(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnComplete
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnComplete(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestEventsWrapper.OnCancel
void Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnCancel(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper::OnCancel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestEventsWrapper*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VoiceServiceRequestOptions
#include "Meta/WitAi/Requests/VoiceServiceRequestOptions.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestOptions/QueryParam
#include "Meta/WitAi/Requests/VoiceServiceRequestOptions_QueryParam.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <RequestId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Requests::VoiceServiceRequestOptions::dyn_$RequestId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::dyn_$RequestId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RequestId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.String> <QueryParams>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Meta::WitAi::Requests::VoiceServiceRequestOptions::dyn_$QueryParams$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::dyn_$QueryParams$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<QueryParams>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Text>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Requests::VoiceServiceRequestOptions::dyn_$Text$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::dyn_$Text$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Text>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <AudioThreshold>k__BackingField
[[deprecated("Use field access instead!")]] float& Meta::WitAi::Requests::VoiceServiceRequestOptions::dyn_$AudioThreshold$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::dyn_$AudioThreshold$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AudioThreshold>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestOptions.get_RequestId
::StringW Meta::WitAi::Requests::VoiceServiceRequestOptions::get_RequestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::get_RequestId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestOptions*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestOptions.set_RequestId
void Meta::WitAi::Requests::VoiceServiceRequestOptions::set_RequestId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::set_RequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestOptions.get_QueryParams
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Meta::WitAi::Requests::VoiceServiceRequestOptions::get_QueryParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::get_QueryParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QueryParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestOptions.set_QueryParams
void Meta::WitAi::Requests::VoiceServiceRequestOptions::set_QueryParams(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::set_QueryParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_QueryParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestOptions.get_Text
::StringW Meta::WitAi::Requests::VoiceServiceRequestOptions::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::get_Text");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestOptions*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestOptions.set_Text
void Meta::WitAi::Requests::VoiceServiceRequestOptions::set_Text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::set_Text");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestOptions*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestOptions.get_AudioThreshold
float Meta::WitAi::Requests::VoiceServiceRequestOptions::get_AudioThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::get_AudioThreshold");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestOptions*), 5));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestOptions.set_AudioThreshold
void Meta::WitAi::Requests::VoiceServiceRequestOptions::set_AudioThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::set_AudioThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestOptions.GetUniqueRequestId
::StringW Meta::WitAi::Requests::VoiceServiceRequestOptions::GetUniqueRequestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::GetUniqueRequestId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestOptions*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestOptions.ConvertQueryParams
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Meta::WitAi::Requests::VoiceServiceRequestOptions::ConvertQueryParams(::ArrayW<::Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam*> newParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::ConvertQueryParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Requests", "VoiceServiceRequestOptions", "ConvertQueryParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newParams)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newParams);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VoiceServiceRequestOptions/QueryParam
#include "Meta/WitAi/Requests/VoiceServiceRequestOptions_QueryParam.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String key
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String value
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.VoiceServiceRequestResults
#include "Meta/WitAi/Requests/VoiceServiceRequestResults.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <StatusCode>k__BackingField
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Requests::VoiceServiceRequestResults::dyn_$StatusCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::dyn_$StatusCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StatusCode>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Message>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Requests::VoiceServiceRequestResults::dyn_$Message$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::dyn_$Message$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Message>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Transcription>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Requests::VoiceServiceRequestResults::dyn_$Transcription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::dyn_$Transcription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Transcription>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsFinalTranscription>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Requests::VoiceServiceRequestResults::dyn_$IsFinalTranscription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::dyn_$IsFinalTranscription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsFinalTranscription>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] <FinalTranscriptions>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Meta::WitAi::Requests::VoiceServiceRequestResults::dyn_$FinalTranscriptions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::dyn_$FinalTranscriptions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FinalTranscriptions>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Json.WitResponseNode <ResponseData>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Json::WitResponseNode*& Meta::WitAi::Requests::VoiceServiceRequestResults::dyn_$ResponseData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::dyn_$ResponseData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ResponseData>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Json::WitResponseNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestResults.get_StatusCode
int Meta::WitAi::Requests::VoiceServiceRequestResults::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::get_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestResults.set_StatusCode
void Meta::WitAi::Requests::VoiceServiceRequestResults::set_StatusCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::set_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestResults.get_Message
::StringW Meta::WitAi::Requests::VoiceServiceRequestResults::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestResults*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestResults.set_Message
void Meta::WitAi::Requests::VoiceServiceRequestResults::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestResults.get_Transcription
::StringW Meta::WitAi::Requests::VoiceServiceRequestResults::get_Transcription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::get_Transcription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestResults*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestResults.set_Transcription
void Meta::WitAi::Requests::VoiceServiceRequestResults::set_Transcription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::set_Transcription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Transcription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestResults.get_IsFinalTranscription
bool Meta::WitAi::Requests::VoiceServiceRequestResults::get_IsFinalTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::get_IsFinalTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestResults*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestResults.set_IsFinalTranscription
void Meta::WitAi::Requests::VoiceServiceRequestResults::set_IsFinalTranscription(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::set_IsFinalTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsFinalTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestResults.get_FinalTranscriptions
::ArrayW<::StringW> Meta::WitAi::Requests::VoiceServiceRequestResults::get_FinalTranscriptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::get_FinalTranscriptions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestResults*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestResults.set_FinalTranscriptions
void Meta::WitAi::Requests::VoiceServiceRequestResults::set_FinalTranscriptions(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::set_FinalTranscriptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FinalTranscriptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestResults.get_ResponseData
::Meta::WitAi::Json::WitResponseNode* Meta::WitAi::Requests::VoiceServiceRequestResults::get_ResponseData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::get_ResponseData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Requests::VoiceServiceRequestResults*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Json::WitResponseNode*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.VoiceServiceRequestResults.set_ResponseData
void Meta::WitAi::Requests::VoiceServiceRequestResults::set_ResponseData(::Meta::WitAi::Json::WitResponseNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::VoiceServiceRequestResults::set_ResponseData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResponseData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Requests.WitUnityRequest
#include "Meta/WitAi/Requests/WitUnityRequest.hpp"
// Including type: Meta.WitAi.Data.Configuration.WitConfiguration
#include "Meta/WitAi/Data/Configuration/WitConfiguration.hpp"
// Including type: Meta.WitAi.Requests.WitVRequest
#include "Meta/WitAi/Requests/WitVRequest.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Data.Configuration.WitConfiguration <Configuration>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::Configuration::WitConfiguration*& Meta::WitAi::Requests::WitUnityRequest::dyn_$Configuration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::dyn_$Configuration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Configuration>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::Configuration::WitConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Meta.WitAi.Requests.WitVRequest _request
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::WitVRequest*& Meta::WitAi::Requests::WitUnityRequest::dyn__request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::dyn__request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_request"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::WitVRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Endpoint>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Requests::WitUnityRequest::dyn_$Endpoint$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::dyn_$Endpoint$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Endpoint>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ShouldPost>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Requests::WitUnityRequest::dyn_$ShouldPost$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::dyn_$ShouldPost$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ShouldPost>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Requests::WitUnityRequest::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Requests.WitUnityRequest.get_Configuration
::Meta::WitAi::Data::Configuration::WitConfiguration* Meta::WitAi::Requests::WitUnityRequest::get_Configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::get_Configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Configuration::WitConfiguration*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitUnityRequest.set_Configuration
void Meta::WitAi::Requests::WitUnityRequest::set_Configuration(::Meta::WitAi::Data::Configuration::WitConfiguration* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::set_Configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.WitUnityRequest.get_Endpoint
::StringW Meta::WitAi::Requests::WitUnityRequest::get_Endpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::get_Endpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Endpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitUnityRequest.set_Endpoint
void Meta::WitAi::Requests::WitUnityRequest::set_Endpoint(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::set_Endpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Endpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.WitUnityRequest.get_ShouldPost
bool Meta::WitAi::Requests::WitUnityRequest::get_ShouldPost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::get_ShouldPost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShouldPost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitUnityRequest.set_ShouldPost
void Meta::WitAi::Requests::WitUnityRequest::set_ShouldPost(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::set_ShouldPost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ShouldPost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Requests.WitUnityRequest.SetState
void Meta::WitAi::Requests::WitUnityRequest::SetState(::Meta::Voice::VoiceRequestState newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::SetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 14)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState);
}
// Autogenerated method: Meta.WitAi.Requests.WitUnityRequest.GetSendError
::StringW Meta::WitAi::Requests::WitUnityRequest::GetSendError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::GetSendError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 17)));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitUnityRequest.HandleSend
void Meta::WitAi::Requests::WitUnityRequest::HandleSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::HandleSend");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::VoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 20)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitUnityRequest.HandleFinalNlpResponse
void Meta::WitAi::Requests::WitUnityRequest::HandleFinalNlpResponse(::Meta::WitAi::Json::WitResponseNode* responseData, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::HandleFinalNlpResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 54)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, responseData, error);
}
// Autogenerated method: Meta.WitAi.Requests.WitUnityRequest.HandleCancel
void Meta::WitAi::Requests::WitUnityRequest::HandleCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::HandleCancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::VoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 29)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitUnityRequest.GetActivateAudioError
::StringW Meta::WitAi::Requests::WitUnityRequest::GetActivateAudioError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::GetActivateAudioError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 42)));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitUnityRequest.HandleAudioActivation
void Meta::WitAi::Requests::WitUnityRequest::HandleAudioActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::HandleAudioActivation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 45)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Requests.WitUnityRequest.HandleAudioDeactivation
void Meta::WitAi::Requests::WitUnityRequest::HandleAudioDeactivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Requests::WitUnityRequest::HandleAudioDeactivation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 49)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Interfaces.CustomTranscriptionProvider
#include "Meta/WitAi/Interfaces/CustomTranscriptionProvider.hpp"
// Including type: Meta.WitAi.Events.WitTranscriptionEvent
#include "Meta/WitAi/Events/WitTranscriptionEvent.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: Meta.WitAi.Events.WitMicLevelChangedEvent
#include "Meta/WitAi/Events/WitMicLevelChangedEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean overrideMicLevel
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Interfaces::CustomTranscriptionProvider::dyn_overrideMicLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::dyn_overrideMicLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideMicLevel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitTranscriptionEvent onPartialTranscription
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitTranscriptionEvent*& Meta::WitAi::Interfaces::CustomTranscriptionProvider::dyn_onPartialTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::dyn_onPartialTranscription");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPartialTranscription"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitTranscriptionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitTranscriptionEvent onFullTranscription
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitTranscriptionEvent*& Meta::WitAi::Interfaces::CustomTranscriptionProvider::dyn_onFullTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::dyn_onFullTranscription");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFullTranscription"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitTranscriptionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent onStoppedListening
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::Interfaces::CustomTranscriptionProvider::dyn_onStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::dyn_onStoppedListening");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onStoppedListening"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent onStartListening
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::Interfaces::CustomTranscriptionProvider::dyn_onStartListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::dyn_onStartListening");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onStartListening"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitMicLevelChangedEvent onMicLevelChanged
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitMicLevelChangedEvent*& Meta::WitAi::Interfaces::CustomTranscriptionProvider::dyn_onMicLevelChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::dyn_onMicLevelChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onMicLevelChanged"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitMicLevelChangedEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <LastTranscription>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Interfaces::CustomTranscriptionProvider::dyn_$LastTranscription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::dyn_$LastTranscription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LastTranscription>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Interfaces.CustomTranscriptionProvider.get_LastTranscription
::StringW Meta::WitAi::Interfaces::CustomTranscriptionProvider::get_LastTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::get_LastTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::CustomTranscriptionProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.CustomTranscriptionProvider.get_OnPartialTranscription
::Meta::WitAi::Events::WitTranscriptionEvent* Meta::WitAi::Interfaces::CustomTranscriptionProvider::get_OnPartialTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::get_OnPartialTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::CustomTranscriptionProvider*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitTranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.CustomTranscriptionProvider.get_OnFullTranscription
::Meta::WitAi::Events::WitTranscriptionEvent* Meta::WitAi::Interfaces::CustomTranscriptionProvider::get_OnFullTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::get_OnFullTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::CustomTranscriptionProvider*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitTranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.CustomTranscriptionProvider.get_OnStoppedListening
::UnityEngine::Events::UnityEvent* Meta::WitAi::Interfaces::CustomTranscriptionProvider::get_OnStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::get_OnStoppedListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::CustomTranscriptionProvider*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.CustomTranscriptionProvider.get_OnStartListening
::UnityEngine::Events::UnityEvent* Meta::WitAi::Interfaces::CustomTranscriptionProvider::get_OnStartListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::get_OnStartListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::CustomTranscriptionProvider*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.CustomTranscriptionProvider.get_OnMicLevelChanged
::Meta::WitAi::Events::WitMicLevelChangedEvent* Meta::WitAi::Interfaces::CustomTranscriptionProvider::get_OnMicLevelChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::get_OnMicLevelChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::CustomTranscriptionProvider*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitMicLevelChangedEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.CustomTranscriptionProvider.get_OverrideMicLevel
bool Meta::WitAi::Interfaces::CustomTranscriptionProvider::get_OverrideMicLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::get_OverrideMicLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::CustomTranscriptionProvider*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.CustomTranscriptionProvider.Activate
void Meta::WitAi::Interfaces::CustomTranscriptionProvider::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::CustomTranscriptionProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.CustomTranscriptionProvider.Deactivate
void Meta::WitAi::Interfaces::CustomTranscriptionProvider::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::CustomTranscriptionProvider::Deactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::CustomTranscriptionProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Interfaces.IAudioEventProvider
#include "Meta/WitAi/Interfaces/IAudioEventProvider.hpp"
// Including type: Meta.WitAi.Interfaces.IAudioInputEvents
#include "Meta/WitAi/Interfaces/IAudioInputEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Interfaces.IAudioEventProvider.get_AudioEvents
::Meta::WitAi::Interfaces::IAudioInputEvents* Meta::WitAi::Interfaces::IAudioEventProvider::get_AudioEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioEventProvider::get_AudioEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioEventProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::IAudioInputEvents*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Interfaces.IAudioInputEvents
#include "Meta/WitAi/Interfaces/IAudioInputEvents.hpp"
// Including type: Meta.WitAi.Events.WitMicLevelChangedEvent
#include "Meta/WitAi/Events/WitMicLevelChangedEvent.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputEvents.get_OnMicAudioLevelChanged
::Meta::WitAi::Events::WitMicLevelChangedEvent* Meta::WitAi::Interfaces::IAudioInputEvents::get_OnMicAudioLevelChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputEvents::get_OnMicAudioLevelChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputEvents*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitMicLevelChangedEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputEvents.get_OnMicStartedListening
::UnityEngine::Events::UnityEvent* Meta::WitAi::Interfaces::IAudioInputEvents::get_OnMicStartedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputEvents::get_OnMicStartedListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputEvents*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputEvents.get_OnMicStoppedListening
::UnityEngine::Events::UnityEvent* Meta::WitAi::Interfaces::IAudioInputEvents::get_OnMicStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputEvents::get_OnMicStoppedListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputEvents*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Interfaces.IDynamicEntitiesProvider
#include "Meta/WitAi/Interfaces/IDynamicEntitiesProvider.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntities
#include "Meta/WitAi/Data/Entities/WitDynamicEntities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Interfaces.IDynamicEntitiesProvider.GetDynamicEntities
::Meta::WitAi::Data::Entities::WitDynamicEntities* Meta::WitAi::Interfaces::IDynamicEntitiesProvider::GetDynamicEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IDynamicEntitiesProvider::GetDynamicEntities");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Entities::WitDynamicEntities*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Interfaces.ITranscriptionEvent
#include "Meta/WitAi/Interfaces/ITranscriptionEvent.hpp"
// Including type: Meta.WitAi.Events.WitTranscriptionEvent
#include "Meta/WitAi/Events/WitTranscriptionEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Interfaces.ITranscriptionEvent.get_OnPartialTranscription
::Meta::WitAi::Events::WitTranscriptionEvent* Meta::WitAi::Interfaces::ITranscriptionEvent::get_OnPartialTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::ITranscriptionEvent::get_OnPartialTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::ITranscriptionEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitTranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.ITranscriptionEvent.get_OnFullTranscription
::Meta::WitAi::Events::WitTranscriptionEvent* Meta::WitAi::Interfaces::ITranscriptionEvent::get_OnFullTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::ITranscriptionEvent::get_OnFullTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::ITranscriptionEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitTranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Interfaces.ITranscriptionEventProvider
#include "Meta/WitAi/Interfaces/ITranscriptionEventProvider.hpp"
// Including type: Meta.WitAi.Interfaces.ITranscriptionEvent
#include "Meta/WitAi/Interfaces/ITranscriptionEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Interfaces.ITranscriptionEventProvider.get_TranscriptionEvents
::Meta::WitAi::Interfaces::ITranscriptionEvent* Meta::WitAi::Interfaces::ITranscriptionEventProvider::get_TranscriptionEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::ITranscriptionEventProvider::get_TranscriptionEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::ITranscriptionEventProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::ITranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Interfaces.ITranscriptionProvider
#include "Meta/WitAi/Interfaces/ITranscriptionProvider.hpp"
// Including type: Meta.WitAi.Events.WitTranscriptionEvent
#include "Meta/WitAi/Events/WitTranscriptionEvent.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: Meta.WitAi.Events.WitMicLevelChangedEvent
#include "Meta/WitAi/Events/WitMicLevelChangedEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Interfaces.ITranscriptionProvider.get_LastTranscription
::StringW Meta::WitAi::Interfaces::ITranscriptionProvider::get_LastTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::ITranscriptionProvider::get_LastTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::ITranscriptionProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.ITranscriptionProvider.get_OnPartialTranscription
::Meta::WitAi::Events::WitTranscriptionEvent* Meta::WitAi::Interfaces::ITranscriptionProvider::get_OnPartialTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::ITranscriptionProvider::get_OnPartialTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::ITranscriptionProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitTranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.ITranscriptionProvider.get_OnFullTranscription
::Meta::WitAi::Events::WitTranscriptionEvent* Meta::WitAi::Interfaces::ITranscriptionProvider::get_OnFullTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::ITranscriptionProvider::get_OnFullTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::ITranscriptionProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitTranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.ITranscriptionProvider.get_OnStoppedListening
::UnityEngine::Events::UnityEvent* Meta::WitAi::Interfaces::ITranscriptionProvider::get_OnStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::ITranscriptionProvider::get_OnStoppedListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::ITranscriptionProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.ITranscriptionProvider.get_OnStartListening
::UnityEngine::Events::UnityEvent* Meta::WitAi::Interfaces::ITranscriptionProvider::get_OnStartListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::ITranscriptionProvider::get_OnStartListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::ITranscriptionProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.ITranscriptionProvider.get_OnMicLevelChanged
::Meta::WitAi::Events::WitMicLevelChangedEvent* Meta::WitAi::Interfaces::ITranscriptionProvider::get_OnMicLevelChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::ITranscriptionProvider::get_OnMicLevelChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::ITranscriptionProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitMicLevelChangedEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.ITranscriptionProvider.get_OverrideMicLevel
bool Meta::WitAi::Interfaces::ITranscriptionProvider::get_OverrideMicLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::ITranscriptionProvider::get_OverrideMicLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::ITranscriptionProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.ITranscriptionProvider.Activate
void Meta::WitAi::Interfaces::ITranscriptionProvider::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::ITranscriptionProvider::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::ITranscriptionProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.ITranscriptionProvider.Deactivate
void Meta::WitAi::Interfaces::ITranscriptionProvider::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::ITranscriptionProvider::Deactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::ITranscriptionProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Interfaces.IWitConfigurationProvider
#include "Meta/WitAi/Interfaces/IWitConfigurationProvider.hpp"
// Including type: Meta.WitAi.Data.Configuration.WitConfiguration
#include "Meta/WitAi/Data/Configuration/WitConfiguration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Interfaces.IWitConfigurationProvider.get_Configuration
::Meta::WitAi::Data::Configuration::WitConfiguration* Meta::WitAi::Interfaces::IWitConfigurationProvider::get_Configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IWitConfigurationProvider::get_Configuration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IWitConfigurationProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Configuration::WitConfiguration*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Interfaces.IWitRequestProvider
#include "Meta/WitAi/Interfaces/IWitRequestProvider.hpp"
// Including type: Meta.WitAi.WitRequest
#include "Meta/WitAi/WitRequest.hpp"
// Including type: Meta.WitAi.Data.Configuration.WitConfiguration
#include "Meta/WitAi/Data/Configuration/WitConfiguration.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
// Including type: Meta.WitAi.Interfaces.IDynamicEntitiesProvider
#include "Meta/WitAi/Interfaces/IDynamicEntitiesProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Interfaces.IWitRequestProvider.CreateWitRequest
::Meta::WitAi::WitRequest* Meta::WitAi::Interfaces::IWitRequestProvider::CreateWitRequest(::Meta::WitAi::Data::Configuration::WitConfiguration* config, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents, ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*> additionalEntityProviders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IWitRequestProvider::CreateWitRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IWitRequestProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::WitRequest*, false>(this, ___internal__method, config, requestOptions, requestEvents, additionalEntityProviders);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.AudioBufferEvents
#include "Meta/WitAi/Events/AudioBufferEvents.hpp"
// Including type: Meta.WitAi.Events.AudioBufferEvents/OnSampleReadyEvent
#include "Meta/WitAi/Events/AudioBufferEvents_OnSampleReadyEvent.hpp"
// Including type: Meta.WitAi.Events.WitMicLevelChangedEvent
#include "Meta/WitAi/Events/WitMicLevelChangedEvent.hpp"
// Including type: Meta.WitAi.Events.WitByteDataEvent
#include "Meta/WitAi/Events/WitByteDataEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Events.AudioBufferEvents/OnSampleReadyEvent OnSampleReady
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::AudioBufferEvents::OnSampleReadyEvent*& Meta::WitAi::Events::AudioBufferEvents::dyn_OnSampleReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::AudioBufferEvents::dyn_OnSampleReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnSampleReady"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::AudioBufferEvents::OnSampleReadyEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Events.WitMicLevelChangedEvent OnMicLevelChanged
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitMicLevelChangedEvent*& Meta::WitAi::Events::AudioBufferEvents::dyn_OnMicLevelChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::AudioBufferEvents::dyn_OnMicLevelChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnMicLevelChanged"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitMicLevelChangedEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Events.WitByteDataEvent OnByteDataReady
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitByteDataEvent*& Meta::WitAi::Events::AudioBufferEvents::dyn_OnByteDataReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::AudioBufferEvents::dyn_OnByteDataReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnByteDataReady"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitByteDataEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Events.WitByteDataEvent OnByteDataSent
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitByteDataEvent*& Meta::WitAi::Events::AudioBufferEvents::dyn_OnByteDataSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::AudioBufferEvents::dyn_OnByteDataSent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnByteDataSent"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitByteDataEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Events.AudioBufferEvents/OnSampleReadyEvent
#include "Meta/WitAi/Events/AudioBufferEvents_OnSampleReadyEvent.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Meta.WitAi.Data.RingBuffer`1/Marker
#include "Meta/WitAi/Data/RingBuffer_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Events.AudioBufferEvents/OnSampleReadyEvent.Invoke
void Meta::WitAi::Events::AudioBufferEvents::OnSampleReadyEvent::Invoke(typename ::Meta::WitAi::Data::RingBuffer_1<uint8_t>::Marker* marker, float levelMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::AudioBufferEvents::OnSampleReadyEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::AudioBufferEvents::OnSampleReadyEvent*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, marker, levelMax);
}
// Autogenerated method: Meta.WitAi.Events.AudioBufferEvents/OnSampleReadyEvent.BeginInvoke
::System::IAsyncResult* Meta::WitAi::Events::AudioBufferEvents::OnSampleReadyEvent::BeginInvoke(typename ::Meta::WitAi::Data::RingBuffer_1<uint8_t>::Marker* marker, float levelMax, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::AudioBufferEvents::OnSampleReadyEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::AudioBufferEvents::OnSampleReadyEvent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, marker, levelMax, callback, object);
}
// Autogenerated method: Meta.WitAi.Events.AudioBufferEvents/OnSampleReadyEvent.EndInvoke
void Meta::WitAi::Events::AudioBufferEvents::OnSampleReadyEvent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::AudioBufferEvents::OnSampleReadyEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::AudioBufferEvents::OnSampleReadyEvent*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.AudioDurationTrackerFinishedEvent
#include "Meta/WitAi/Events/AudioDurationTrackerFinishedEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.EventCategoryAttribute
#include "Meta/WitAi/Events/EventCategoryAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Category
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Events::EventCategoryAttribute::dyn_Category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::EventCategoryAttribute::dyn_Category");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Category"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.EventRegistry
#include "Meta/WitAi/Events/EventRegistry.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _overriddenCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Meta::WitAi::Events::EventRegistry::dyn__overriddenCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::EventRegistry::dyn__overriddenCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overriddenCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _overriddenCallbacksHash
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& Meta::WitAi::Events::EventRegistry::dyn__overriddenCallbacksHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::EventRegistry::dyn__overriddenCallbacksHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overriddenCallbacksHash"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Events.EventRegistry.get_OverriddenCallbacks
::System::Collections::Generic::HashSet_1<::StringW>* Meta::WitAi::Events::EventRegistry::get_OverriddenCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::EventRegistry::get_OverriddenCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverriddenCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.EventRegistry.RegisterOverriddenCallback
void Meta::WitAi::Events::EventRegistry::RegisterOverriddenCallback(::StringW callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::EventRegistry::RegisterOverriddenCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterOverriddenCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: Meta.WitAi.Events.EventRegistry.RemoveOverriddenCallback
void Meta::WitAi::Events::EventRegistry::RemoveOverriddenCallback(::StringW callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::EventRegistry::RemoveOverriddenCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveOverriddenCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: Meta.WitAi.Events.EventRegistry.IsCallbackOverridden
bool Meta::WitAi::Events::EventRegistry::IsCallbackOverridden(::StringW callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::EventRegistry::IsCallbackOverridden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCallbackOverridden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.TelemetryEvents
#include "Meta/WitAi/Events/TelemetryEvents.hpp"
// Including type: Meta.WitAi.Events.AudioDurationTrackerFinishedEvent
#include "Meta/WitAi/Events/AudioDurationTrackerFinishedEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Events.AudioDurationTrackerFinishedEvent OnAudioTrackerFinished
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::AudioDurationTrackerFinishedEvent*& Meta::WitAi::Events::TelemetryEvents::dyn_OnAudioTrackerFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::TelemetryEvents::dyn_OnAudioTrackerFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnAudioTrackerFinished"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::AudioDurationTrackerFinishedEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.VoiceEvents
#include "Meta/WitAi/Events/VoiceEvents.hpp"
// Including type: Meta.WitAi.Events.WitByteDataEvent
#include "Meta/WitAi/Events/WitByteDataEvent.hpp"
// Including type: Meta.WitAi.Events.WitValidationEvent
#include "Meta/WitAi/Events/WitValidationEvent.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String EVENT_CATEGORY_DATA_EVENTS
::StringW Meta::WitAi::Events::VoiceEvents::_get_EVENT_CATEGORY_DATA_EVENTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceEvents::_get_EVENT_CATEGORY_DATA_EVENTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi.Events", "VoiceEvents", "EVENT_CATEGORY_DATA_EVENTS"));
}
// Autogenerated static field setter
// Set static field: static private System.String EVENT_CATEGORY_DATA_EVENTS
void Meta::WitAi::Events::VoiceEvents::_set_EVENT_CATEGORY_DATA_EVENTS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceEvents::_set_EVENT_CATEGORY_DATA_EVENTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "VoiceEvents", "EVENT_CATEGORY_DATA_EVENTS", value));
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitByteDataEvent _onByteDataReady
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitByteDataEvent*& Meta::WitAi::Events::VoiceEvents::dyn__onByteDataReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceEvents::dyn__onByteDataReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onByteDataReady"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitByteDataEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitByteDataEvent _onByteDataSent
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitByteDataEvent*& Meta::WitAi::Events::VoiceEvents::dyn__onByteDataSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceEvents::dyn__onByteDataSent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onByteDataSent"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitByteDataEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitValidationEvent _onValidatePartialResponse
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitValidationEvent*& Meta::WitAi::Events::VoiceEvents::dyn__onValidatePartialResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceEvents::dyn__onValidatePartialResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onValidatePartialResponse"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitValidationEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Events.VoiceEvents.get_OnByteDataReady
::Meta::WitAi::Events::WitByteDataEvent* Meta::WitAi::Events::VoiceEvents::get_OnByteDataReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceEvents::get_OnByteDataReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnByteDataReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitByteDataEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.VoiceEvents.get_OnByteDataSent
::Meta::WitAi::Events::WitByteDataEvent* Meta::WitAi::Events::VoiceEvents::get_OnByteDataSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceEvents::get_OnByteDataSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnByteDataSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitByteDataEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.VoiceEvents.get_OnValidatePartialResponse
::Meta::WitAi::Events::WitValidationEvent* Meta::WitAi::Events::VoiceEvents::get_OnValidatePartialResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceEvents::get_OnValidatePartialResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnValidatePartialResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitValidationEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.VoiceServiceRequestEvent
#include "Meta/WitAi/Events/VoiceServiceRequestEvent.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.VoiceState
#include "Meta/WitAi/Events/VoiceState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.Events.VoiceState MicOff
::Meta::WitAi::Events::VoiceState Meta::WitAi::Events::VoiceState::_get_MicOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceState::_get_MicOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Events::VoiceState>("Meta.WitAi.Events", "VoiceState", "MicOff"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.Events.VoiceState MicOff
void Meta::WitAi::Events::VoiceState::_set_MicOff(::Meta::WitAi::Events::VoiceState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceState::_set_MicOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "VoiceState", "MicOff", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.Events.VoiceState MicOn
::Meta::WitAi::Events::VoiceState Meta::WitAi::Events::VoiceState::_get_MicOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceState::_get_MicOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Events::VoiceState>("Meta.WitAi.Events", "VoiceState", "MicOn"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.Events.VoiceState MicOn
void Meta::WitAi::Events::VoiceState::_set_MicOn(::Meta::WitAi::Events::VoiceState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceState::_set_MicOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "VoiceState", "MicOn", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.Events.VoiceState Listening
::Meta::WitAi::Events::VoiceState Meta::WitAi::Events::VoiceState::_get_Listening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceState::_get_Listening");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Events::VoiceState>("Meta.WitAi.Events", "VoiceState", "Listening"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.Events.VoiceState Listening
void Meta::WitAi::Events::VoiceState::_set_Listening(::Meta::WitAi::Events::VoiceState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceState::_set_Listening");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "VoiceState", "Listening", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.Events.VoiceState StartProcessing
::Meta::WitAi::Events::VoiceState Meta::WitAi::Events::VoiceState::_get_StartProcessing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceState::_get_StartProcessing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Events::VoiceState>("Meta.WitAi.Events", "VoiceState", "StartProcessing"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.Events.VoiceState StartProcessing
void Meta::WitAi::Events::VoiceState::_set_StartProcessing(::Meta::WitAi::Events::VoiceState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceState::_set_StartProcessing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "VoiceState", "StartProcessing", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.Events.VoiceState Response
::Meta::WitAi::Events::VoiceState Meta::WitAi::Events::VoiceState::_get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceState::_get_Response");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Events::VoiceState>("Meta.WitAi.Events", "VoiceState", "Response"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.Events.VoiceState Response
void Meta::WitAi::Events::VoiceState::_set_Response(::Meta::WitAi::Events::VoiceState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceState::_set_Response");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "VoiceState", "Response", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.Events.VoiceState Error
::Meta::WitAi::Events::VoiceState Meta::WitAi::Events::VoiceState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Events::VoiceState>("Meta.WitAi.Events", "VoiceState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.Events.VoiceState Error
void Meta::WitAi::Events::VoiceState::_set_Error(::Meta::WitAi::Events::VoiceState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "VoiceState", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Events::VoiceState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::VoiceState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.WitByteDataEvent
#include "Meta/WitAi/Events/WitByteDataEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.IWitByteDataReadyHandler
#include "Meta/WitAi/Events/IWitByteDataReadyHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Events.IWitByteDataReadyHandler.OnWitDataReady
void Meta::WitAi::Events::IWitByteDataReadyHandler::OnWitDataReady(::ArrayW<uint8_t> data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::IWitByteDataReadyHandler::OnWitDataReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::IWitByteDataReadyHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, offset, length);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.IWitByteDataSentHandler
#include "Meta/WitAi/Events/IWitByteDataSentHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Events.IWitByteDataSentHandler.OnWitDataSent
void Meta::WitAi::Events::IWitByteDataSentHandler::OnWitDataSent(::ArrayW<uint8_t> data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::IWitByteDataSentHandler::OnWitDataSent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::IWitByteDataSentHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, offset, length);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.WitErrorEvent
#include "Meta/WitAi/Events/WitErrorEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.WitMicLevelChangedEvent
#include "Meta/WitAi/Events/WitMicLevelChangedEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.WitObjectEvent
#include "Meta/WitAi/Events/WitObjectEvent.hpp"
// Including type: Meta.WitAi.Json.WitResponseClass
#include "Meta/WitAi/Json/WitResponseClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.WitRequestCreatedEvent
#include "Meta/WitAi/Events/WitRequestCreatedEvent.hpp"
// Including type: Meta.WitAi.WitRequest
#include "Meta/WitAi/WitRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.WitRequestOptionsEvent
#include "Meta/WitAi/Events/WitRequestOptionsEvent.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.WitResponseEvent
#include "Meta/WitAi/Events/WitResponseEvent.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.WitTranscriptionEvent
#include "Meta/WitAi/Events/WitTranscriptionEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.WitValidationEvent
#include "Meta/WitAi/Events/WitValidationEvent.hpp"
// Including type: Meta.WitAi.Data.VoiceSession
#include "Meta/WitAi/Data/VoiceSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.SpeechEvents
#include "Meta/WitAi/Events/SpeechEvents.hpp"
// Including type: Meta.WitAi.Events.SpeechEvents/<>c
#include "Meta/WitAi/Events/SpeechEvents_--c.hpp"
// Including type: Meta.WitAi.Events.SpeechEvents/<>c__DisplayClass86_0
#include "Meta/WitAi/Events/SpeechEvents_--c__DisplayClass86_0.hpp"
// Including type: Meta.WitAi.Events.SpeechEvents/<>c__DisplayClass87_0`1
#include "Meta/WitAi/Events/SpeechEvents_--c__DisplayClass87_0_1.hpp"
// Including type: Meta.WitAi.Events.SpeechEvents/<>c__DisplayClass88_0`2
#include "Meta/WitAi/Events/SpeechEvents_--c__DisplayClass88_0_2.hpp"
// Including type: Meta.WitAi.Events.WitRequestOptionsEvent
#include "Meta/WitAi/Events/WitRequestOptionsEvent.hpp"
// Including type: Meta.WitAi.Events.VoiceServiceRequestEvent
#include "Meta/WitAi/Events/VoiceServiceRequestEvent.hpp"
// Including type: Meta.WitAi.Events.WitRequestCreatedEvent
#include "Meta/WitAi/Events/WitRequestCreatedEvent.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: Meta.WitAi.Events.WitTranscriptionEvent
#include "Meta/WitAi/Events/WitTranscriptionEvent.hpp"
// Including type: Meta.WitAi.Events.WitResponseEvent
#include "Meta/WitAi/Events/WitResponseEvent.hpp"
// Including type: Meta.WitAi.Events.WitErrorEvent
#include "Meta/WitAi/Events/WitErrorEvent.hpp"
// Including type: Meta.WitAi.Events.WitMicLevelChangedEvent
#include "Meta/WitAi/Events/WitMicLevelChangedEvent.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.Events.UnityEvent`1
#include "UnityEngine/Events/UnityEvent_1.hpp"
// Including type: UnityEngine.Events.UnityEvent`2
#include "UnityEngine/Events/UnityEvent_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.String EVENT_CATEGORY_ACTIVATION_SETUP
::StringW Meta::WitAi::Events::SpeechEvents::_get_EVENT_CATEGORY_ACTIVATION_SETUP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::_get_EVENT_CATEGORY_ACTIVATION_SETUP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi.Events", "SpeechEvents", "EVENT_CATEGORY_ACTIVATION_SETUP"));
}
// Autogenerated static field setter
// Set static field: static protected System.String EVENT_CATEGORY_ACTIVATION_SETUP
void Meta::WitAi::Events::SpeechEvents::_set_EVENT_CATEGORY_ACTIVATION_SETUP(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::_set_EVENT_CATEGORY_ACTIVATION_SETUP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents", "EVENT_CATEGORY_ACTIVATION_SETUP", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String EVENT_CATEGORY_ACTIVATION_INFO
::StringW Meta::WitAi::Events::SpeechEvents::_get_EVENT_CATEGORY_ACTIVATION_INFO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::_get_EVENT_CATEGORY_ACTIVATION_INFO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi.Events", "SpeechEvents", "EVENT_CATEGORY_ACTIVATION_INFO"));
}
// Autogenerated static field setter
// Set static field: static protected System.String EVENT_CATEGORY_ACTIVATION_INFO
void Meta::WitAi::Events::SpeechEvents::_set_EVENT_CATEGORY_ACTIVATION_INFO(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::_set_EVENT_CATEGORY_ACTIVATION_INFO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents", "EVENT_CATEGORY_ACTIVATION_INFO", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String EVENT_CATEGORY_ACTIVATION_CANCELATION
::StringW Meta::WitAi::Events::SpeechEvents::_get_EVENT_CATEGORY_ACTIVATION_CANCELATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::_get_EVENT_CATEGORY_ACTIVATION_CANCELATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi.Events", "SpeechEvents", "EVENT_CATEGORY_ACTIVATION_CANCELATION"));
}
// Autogenerated static field setter
// Set static field: static protected System.String EVENT_CATEGORY_ACTIVATION_CANCELATION
void Meta::WitAi::Events::SpeechEvents::_set_EVENT_CATEGORY_ACTIVATION_CANCELATION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::_set_EVENT_CATEGORY_ACTIVATION_CANCELATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents", "EVENT_CATEGORY_ACTIVATION_CANCELATION", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String EVENT_CATEGORY_ACTIVATION_RESPONSE
::StringW Meta::WitAi::Events::SpeechEvents::_get_EVENT_CATEGORY_ACTIVATION_RESPONSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::_get_EVENT_CATEGORY_ACTIVATION_RESPONSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi.Events", "SpeechEvents", "EVENT_CATEGORY_ACTIVATION_RESPONSE"));
}
// Autogenerated static field setter
// Set static field: static protected System.String EVENT_CATEGORY_ACTIVATION_RESPONSE
void Meta::WitAi::Events::SpeechEvents::_set_EVENT_CATEGORY_ACTIVATION_RESPONSE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::_set_EVENT_CATEGORY_ACTIVATION_RESPONSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents", "EVENT_CATEGORY_ACTIVATION_RESPONSE", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String EVENT_CATEGORY_AUDIO_EVENTS
::StringW Meta::WitAi::Events::SpeechEvents::_get_EVENT_CATEGORY_AUDIO_EVENTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::_get_EVENT_CATEGORY_AUDIO_EVENTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi.Events", "SpeechEvents", "EVENT_CATEGORY_AUDIO_EVENTS"));
}
// Autogenerated static field setter
// Set static field: static protected System.String EVENT_CATEGORY_AUDIO_EVENTS
void Meta::WitAi::Events::SpeechEvents::_set_EVENT_CATEGORY_AUDIO_EVENTS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::_set_EVENT_CATEGORY_AUDIO_EVENTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents", "EVENT_CATEGORY_AUDIO_EVENTS", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String EVENT_CATEGORY_TRANSCRIPTION_EVENTS
::StringW Meta::WitAi::Events::SpeechEvents::_get_EVENT_CATEGORY_TRANSCRIPTION_EVENTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::_get_EVENT_CATEGORY_TRANSCRIPTION_EVENTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi.Events", "SpeechEvents", "EVENT_CATEGORY_TRANSCRIPTION_EVENTS"));
}
// Autogenerated static field setter
// Set static field: static protected System.String EVENT_CATEGORY_TRANSCRIPTION_EVENTS
void Meta::WitAi::Events::SpeechEvents::_set_EVENT_CATEGORY_TRANSCRIPTION_EVENTS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::_set_EVENT_CATEGORY_TRANSCRIPTION_EVENTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents", "EVENT_CATEGORY_TRANSCRIPTION_EVENTS", value));
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitRequestOptionsEvent _onRequestOptionSetup
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitRequestOptionsEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onRequestOptionSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onRequestOptionSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onRequestOptionSetup"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitRequestOptionsEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.VoiceServiceRequestEvent _onRequestInitialized
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::VoiceServiceRequestEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onRequestInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onRequestInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onRequestInitialized"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::VoiceServiceRequestEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitRequestCreatedEvent _onRequestCreated
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitRequestCreatedEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onRequestCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onRequestCreated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onRequestCreated"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitRequestCreatedEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.VoiceServiceRequestEvent _onSend
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::VoiceServiceRequestEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onSend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onSend"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::VoiceServiceRequestEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _onMinimumWakeThresholdHit
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onMinimumWakeThresholdHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onMinimumWakeThresholdHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onMinimumWakeThresholdHit"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _onMicDataSent
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onMicDataSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onMicDataSent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onMicDataSent"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _onStoppedListeningDueToDeactivation
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onStoppedListeningDueToDeactivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onStoppedListeningDueToDeactivation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onStoppedListeningDueToDeactivation"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _onStoppedListeningDueToInactivity
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onStoppedListeningDueToInactivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onStoppedListeningDueToInactivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onStoppedListeningDueToInactivity"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _onStoppedListeningDueToTimeout
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onStoppedListeningDueToTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onStoppedListeningDueToTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onStoppedListeningDueToTimeout"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _onAborting
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onAborting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onAborting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onAborting"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _onAborted
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onAborted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onAborted"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitTranscriptionEvent _onCanceled
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitTranscriptionEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onCanceled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onCanceled"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitTranscriptionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitResponseEvent _onPartialResponse
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitResponseEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onPartialResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onPartialResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onPartialResponse"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitResponseEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitResponseEvent _onResponse
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitResponseEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onResponse"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitResponseEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitErrorEvent _onError
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitErrorEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onError"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitErrorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _onRequestCompleted
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onRequestCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onRequestCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onRequestCompleted"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.VoiceServiceRequestEvent _onComplete
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::VoiceServiceRequestEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onComplete"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::VoiceServiceRequestEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _onStartListening
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onStartListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onStartListening");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onStartListening"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _onStoppedListening
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onStoppedListening");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onStoppedListening"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitMicLevelChangedEvent _onMicLevelChanged
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitMicLevelChangedEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onMicLevelChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onMicLevelChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onMicLevelChanged"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitMicLevelChangedEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitTranscriptionEvent _onPartialTranscription
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitTranscriptionEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onPartialTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onPartialTranscription");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onPartialTranscription"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitTranscriptionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitTranscriptionEvent _onFullTranscription
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitTranscriptionEvent*& Meta::WitAi::Events::SpeechEvents::dyn__onFullTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__onFullTranscription");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onFullTranscription"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitTranscriptionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<Meta.WitAi.Events.SpeechEvents> _listeners
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Meta::WitAi::Events::SpeechEvents*>*& Meta::WitAi::Events::SpeechEvents::dyn__listeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::dyn__listeners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listeners"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Meta::WitAi::Events::SpeechEvents*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnRequestOptionSetup
::Meta::WitAi::Events::WitRequestOptionsEvent* Meta::WitAi::Events::SpeechEvents::get_OnRequestOptionSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnRequestOptionSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnRequestOptionSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitRequestOptionsEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnRequestInitialized
::Meta::WitAi::Events::VoiceServiceRequestEvent* Meta::WitAi::Events::SpeechEvents::get_OnRequestInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnRequestInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnRequestInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::VoiceServiceRequestEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnRequestCreated
::Meta::WitAi::Events::WitRequestCreatedEvent* Meta::WitAi::Events::SpeechEvents::get_OnRequestCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnRequestCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnRequestCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitRequestCreatedEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnSend
::Meta::WitAi::Events::VoiceServiceRequestEvent* Meta::WitAi::Events::SpeechEvents::get_OnSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::VoiceServiceRequestEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnMinimumWakeThresholdHit
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::get_OnMinimumWakeThresholdHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnMinimumWakeThresholdHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnMinimumWakeThresholdHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnMicDataSent
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::get_OnMicDataSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnMicDataSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnMicDataSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnStoppedListeningDueToDeactivation
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::get_OnStoppedListeningDueToDeactivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnStoppedListeningDueToDeactivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnStoppedListeningDueToDeactivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnStoppedListeningDueToInactivity
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::get_OnStoppedListeningDueToInactivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnStoppedListeningDueToInactivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnStoppedListeningDueToInactivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnStoppedListeningDueToTimeout
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::get_OnStoppedListeningDueToTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnStoppedListeningDueToTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnStoppedListeningDueToTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnAborting
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::get_OnAborting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnAborting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnAborting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnAborted
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::get_OnAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnAborted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnAborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnCanceled
::Meta::WitAi::Events::WitTranscriptionEvent* Meta::WitAi::Events::SpeechEvents::get_OnCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitTranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnPartialResponse
::Meta::WitAi::Events::WitResponseEvent* Meta::WitAi::Events::SpeechEvents::get_OnPartialResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnPartialResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnPartialResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitResponseEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnResponse
::Meta::WitAi::Events::WitResponseEvent* Meta::WitAi::Events::SpeechEvents::get_OnResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitResponseEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnError
::Meta::WitAi::Events::WitErrorEvent* Meta::WitAi::Events::SpeechEvents::get_OnError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitErrorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnRequestCompleted
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::get_OnRequestCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnRequestCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnRequestCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnComplete
::Meta::WitAi::Events::VoiceServiceRequestEvent* Meta::WitAi::Events::SpeechEvents::get_OnComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::VoiceServiceRequestEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnStartListening
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::get_OnStartListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnStartListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnStartListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnMicStartedListening
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::get_OnMicStartedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnMicStartedListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::SpeechEvents*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnStoppedListening
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::get_OnStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnStoppedListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnStoppedListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnMicStoppedListening
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::get_OnMicStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnMicStoppedListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::SpeechEvents*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnMicLevelChanged
::Meta::WitAi::Events::WitMicLevelChangedEvent* Meta::WitAi::Events::SpeechEvents::get_OnMicLevelChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnMicLevelChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnMicLevelChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitMicLevelChangedEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnMicAudioLevelChanged
::Meta::WitAi::Events::WitMicLevelChangedEvent* Meta::WitAi::Events::SpeechEvents::get_OnMicAudioLevelChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnMicAudioLevelChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::SpeechEvents*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitMicLevelChangedEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnPartialTranscription
::Meta::WitAi::Events::WitTranscriptionEvent* Meta::WitAi::Events::SpeechEvents::get_OnPartialTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnPartialTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::SpeechEvents*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitTranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_onPartialTranscription
::Meta::WitAi::Events::WitTranscriptionEvent* Meta::WitAi::Events::SpeechEvents::get_onPartialTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_onPartialTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onPartialTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitTranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_OnFullTranscription
::Meta::WitAi::Events::WitTranscriptionEvent* Meta::WitAi::Events::SpeechEvents::get_OnFullTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_OnFullTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::SpeechEvents*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitTranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.get_onFullTranscription
::Meta::WitAi::Events::WitTranscriptionEvent* Meta::WitAi::Events::SpeechEvents::get_onFullTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::get_onFullTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onFullTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitTranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.AddListener
void Meta::WitAi::Events::SpeechEvents::AddListener(::Meta::WitAi::Events::SpeechEvents* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::AddListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.RemoveListener
void Meta::WitAi::Events::SpeechEvents::RemoveListener(::Meta::WitAi::Events::SpeechEvents* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::RemoveListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.SetEvents
void Meta::WitAi::Events::SpeechEvents::SetEvents(bool add) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::SetEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::SpeechEvents*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, add);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents.SetEvent
void Meta::WitAi::Events::SpeechEvents::SetEvent(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* getEvent, bool add) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::SetEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getEvent), ::il2cpp_utils::ExtractType(add)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, getEvent, add);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.SpeechEvents/<>c
#include "Meta/WitAi/Events/SpeechEvents_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.Events.UnityEvent`1
#include "UnityEngine/Events/UnityEvent_1.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.WitRequest
#include "Meta/WitAi/WitRequest.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
// Including type: UnityEngine.Events.UnityEvent`2
#include "UnityEngine/Events/UnityEvent_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Meta.WitAi.Events.SpeechEvents/<>c <>9
::Meta::WitAi::Events::SpeechEvents::$$c* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Meta::WitAi::Events::SpeechEvents::$$c*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Meta.WitAi.Events.SpeechEvents/<>c <>9
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9(::Meta::WitAi::Events::SpeechEvents::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<Meta.WitAi.Configuration.WitRequestOptions>> <>9__85_0
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Configuration::WitRequestOptions*>*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Configuration::WitRequestOptions*>*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<Meta.WitAi.Configuration.WitRequestOptions>> <>9__85_0
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_0(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Configuration::WitRequestOptions*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<Meta.WitAi.Requests.VoiceServiceRequest>> <>9__85_1
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<Meta.WitAi.Requests.VoiceServiceRequest>> <>9__85_1
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_1(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<Meta.WitAi.WitRequest>> <>9__85_2
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::WitRequest*>*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::WitRequest*>*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<Meta.WitAi.WitRequest>> <>9__85_2
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_2(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::WitRequest*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<Meta.WitAi.Requests.VoiceServiceRequest>> <>9__85_3
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<Meta.WitAi.Requests.VoiceServiceRequest>> <>9__85_3
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_3(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_3", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_4
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_4")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_4
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_4(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_4", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_5
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_5")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_5
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_5(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_5", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_6
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_6");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_6")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_6
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_6(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_6");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_6", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_7
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_7");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_7")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_7
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_7(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_7");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_7", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_8
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_8");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_8")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_8
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_8(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_8");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_8", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_9
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_9")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_9
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_9(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<System.String>> <>9__85_10
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::StringW>*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_10");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::StringW>*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_10")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<System.String>> <>9__85_10
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_10(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_10");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_10", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<Meta.WitAi.Json.WitResponseNode>> <>9__85_11
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Json::WitResponseNode*>*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_11");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Json::WitResponseNode*>*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_11")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<Meta.WitAi.Json.WitResponseNode>> <>9__85_11
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_11(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Json::WitResponseNode*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_11");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_11", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<Meta.WitAi.Json.WitResponseNode>> <>9__85_12
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Json::WitResponseNode*>*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_12");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Json::WitResponseNode*>*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_12")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<Meta.WitAi.Json.WitResponseNode>> <>9__85_12
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_12(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Json::WitResponseNode*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_12");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_12", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`2<System.String,System.String>> <>9__85_13
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_2<::StringW, ::StringW>*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_13");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_2<::StringW, ::StringW>*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_13")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`2<System.String,System.String>> <>9__85_13
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_13(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_2<::StringW, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_13");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_13", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_14
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_14");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_14")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_14
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_14(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_14");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_14", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<Meta.WitAi.Requests.VoiceServiceRequest>> <>9__85_15
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_15");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_15")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<Meta.WitAi.Requests.VoiceServiceRequest>> <>9__85_15
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_15(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_15");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_15", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_16
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_16");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_16")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_16
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_16(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_16");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_16", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_17
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_17");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_17")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> <>9__85_17
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_17(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_17");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_17", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<System.Single>> <>9__85_18
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<float>*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_18");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<float>*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_18")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<System.Single>> <>9__85_18
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_18(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<float>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_18");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_18", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<System.String>> <>9__85_19
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::StringW>*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_19() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_19");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::StringW>*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_19")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<System.String>> <>9__85_19
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_19(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_19");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_19", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<System.String>> <>9__85_20
::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::StringW>*>* Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_get_$$9__85_20");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::StringW>*>*>("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_20")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent`1<System.String>> <>9__85_20
void Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_20(::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent_1<::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::_set_$$9__85_20");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Events", "SpeechEvents/<>c", "<>9__85_20", value)));
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c..cctor
void Meta::WitAi::Events::SpeechEvents::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Events", "SpeechEvents/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_0
::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Configuration::WitRequestOptions*>* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_0(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Configuration::WitRequestOptions*>*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_1
::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Requests::VoiceServiceRequest*>* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_1(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_2
::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::WitRequest*>* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_2(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::WitRequest*>*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_3
::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Requests::VoiceServiceRequest*>* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_3(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_4
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_4(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_5
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_5(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_6
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_6(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_7
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_7(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_8
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_8(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_9
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_9(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_10
::UnityEngine::Events::UnityEvent_1<::StringW>* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_10(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::StringW>*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_11
::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Json::WitResponseNode*>* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_11(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Json::WitResponseNode*>*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_12
::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Json::WitResponseNode*>* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_12(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Json::WitResponseNode*>*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_13
::UnityEngine::Events::UnityEvent_2<::StringW, ::StringW>* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_13(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_13", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_2<::StringW, ::StringW>*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_14
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_14(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_14");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_14", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_15
::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Requests::VoiceServiceRequest*>* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_15(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_16
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_16(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_17
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_17(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_17");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_17", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_18
::UnityEngine::Events::UnityEvent_1<float>* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_18(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_18");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_18", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<float>*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_19
::UnityEngine::Events::UnityEvent_1<::StringW>* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_19(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_19");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_19", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::StringW>*, false>(this, ___internal__method, events);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c.<SetEvents>b__85_20
::UnityEngine::Events::UnityEvent_1<::StringW>* Meta::WitAi::Events::SpeechEvents::$$c::$SetEvents$b__85_20(::Meta::WitAi::Events::SpeechEvents* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c::<SetEvents>b__85_20");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvents>b__85_20", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::StringW>*, false>(this, ___internal__method, events);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.SpeechEvents/<>c__DisplayClass86_0
#include "Meta/WitAi/Events/SpeechEvents_--c__DisplayClass86_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Events.SpeechEvents <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::SpeechEvents*& Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass86_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass86_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::SpeechEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Meta.WitAi.Events.SpeechEvents,UnityEngine.Events.UnityEvent> getEvent
[[deprecated("Use field access instead!")]] ::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>*& Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass86_0::dyn_getEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass86_0::dyn_getEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getEvent"))->offset;
  return *reinterpret_cast<::System::Func_2<::Meta::WitAi::Events::SpeechEvents*, ::UnityEngine::Events::UnityEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Events.SpeechEvents/<>c__DisplayClass86_0.<SetEvent>b__0
void Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass86_0::$SetEvent$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::SpeechEvents::$$c__DisplayClass86_0::<SetEvent>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetEvent>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.UnityEventListeners.AudioEventListener
#include "Meta/WitAi/Events/UnityEventListeners/AudioEventListener.hpp"
// Including type: Meta.WitAi.Events.WitMicLevelChangedEvent
#include "Meta/WitAi/Events/WitMicLevelChangedEvent.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitMicLevelChangedEvent onMicAudioLevelChanged
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitMicLevelChangedEvent*& Meta::WitAi::Events::UnityEventListeners::AudioEventListener::dyn_onMicAudioLevelChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::AudioEventListener::dyn_onMicAudioLevelChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onMicAudioLevelChanged"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitMicLevelChangedEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent onMicStartedListening
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::Events::UnityEventListeners::AudioEventListener::dyn_onMicStartedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::AudioEventListener::dyn_onMicStartedListening");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onMicStartedListening"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent onMicStoppedListening
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::Events::UnityEventListeners::AudioEventListener::dyn_onMicStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::AudioEventListener::dyn_onMicStoppedListening");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onMicStoppedListening"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Interfaces.IAudioInputEvents _events
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Interfaces::IAudioInputEvents*& Meta::WitAi::Events::UnityEventListeners::AudioEventListener::dyn__events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::AudioEventListener::dyn__events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_events"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Interfaces::IAudioInputEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Events.UnityEventListeners.AudioEventListener.get_OnMicAudioLevelChanged
::Meta::WitAi::Events::WitMicLevelChangedEvent* Meta::WitAi::Events::UnityEventListeners::AudioEventListener::get_OnMicAudioLevelChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::AudioEventListener::get_OnMicAudioLevelChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::UnityEventListeners::AudioEventListener*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitMicLevelChangedEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.UnityEventListeners.AudioEventListener.get_OnMicStartedListening
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::UnityEventListeners::AudioEventListener::get_OnMicStartedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::AudioEventListener::get_OnMicStartedListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::UnityEventListeners::AudioEventListener*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.UnityEventListeners.AudioEventListener.get_OnMicStoppedListening
::UnityEngine::Events::UnityEvent* Meta::WitAi::Events::UnityEventListeners::AudioEventListener::get_OnMicStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::AudioEventListener::get_OnMicStoppedListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::UnityEventListeners::AudioEventListener*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.UnityEventListeners.AudioEventListener.get_AudioInputEvents
::Meta::WitAi::Interfaces::IAudioInputEvents* Meta::WitAi::Events::UnityEventListeners::AudioEventListener::get_AudioInputEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::AudioEventListener::get_AudioInputEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioInputEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::IAudioInputEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.UnityEventListeners.AudioEventListener.OnEnable
void Meta::WitAi::Events::UnityEventListeners::AudioEventListener::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::AudioEventListener::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.UnityEventListeners.AudioEventListener.OnDisable
void Meta::WitAi::Events::UnityEventListeners::AudioEventListener::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::AudioEventListener::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Events.UnityEventListeners.TranscriptionEventListener
#include "Meta/WitAi/Events/UnityEventListeners/TranscriptionEventListener.hpp"
// Including type: Meta.WitAi.Events.WitTranscriptionEvent
#include "Meta/WitAi/Events/WitTranscriptionEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitTranscriptionEvent onPartialTranscription
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitTranscriptionEvent*& Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::dyn_onPartialTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::dyn_onPartialTranscription");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPartialTranscription"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitTranscriptionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.WitTranscriptionEvent onFullTranscription
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::WitTranscriptionEvent*& Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::dyn_onFullTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::dyn_onFullTranscription");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFullTranscription"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::WitTranscriptionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Interfaces.ITranscriptionEvent _events
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Interfaces::ITranscriptionEvent*& Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::dyn__events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::dyn__events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_events"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Interfaces::ITranscriptionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Events.UnityEventListeners.TranscriptionEventListener.get_OnPartialTranscription
::Meta::WitAi::Events::WitTranscriptionEvent* Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::get_OnPartialTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::get_OnPartialTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitTranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.UnityEventListeners.TranscriptionEventListener.get_OnFullTranscription
::Meta::WitAi::Events::WitTranscriptionEvent* Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::get_OnFullTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::get_OnFullTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::WitTranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.UnityEventListeners.TranscriptionEventListener.get_TranscriptionEvents
::Meta::WitAi::Interfaces::ITranscriptionEvent* Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::get_TranscriptionEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::get_TranscriptionEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TranscriptionEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::ITranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.UnityEventListeners.TranscriptionEventListener.OnEnable
void Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Events.UnityEventListeners.TranscriptionEventListener.OnDisable
void Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Events::UnityEventListeners::TranscriptionEventListener::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Configuration.WitEndpointConfig
#include "Meta/WitAi/Configuration/WitEndpointConfig.hpp"
// Including type: Meta.WitAi.Data.Configuration.WitConfiguration
#include "Meta/WitAi/Data/Configuration/WitConfiguration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Meta.WitAi.Configuration.WitEndpointConfig defaultEndpointConfig
::Meta::WitAi::Configuration::WitEndpointConfig* Meta::WitAi::Configuration::WitEndpointConfig::_get_defaultEndpointConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::_get_defaultEndpointConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Configuration::WitEndpointConfig*>("Meta.WitAi.Configuration", "WitEndpointConfig", "defaultEndpointConfig"));
}
// Autogenerated static field setter
// Set static field: static private Meta.WitAi.Configuration.WitEndpointConfig defaultEndpointConfig
void Meta::WitAi::Configuration::WitEndpointConfig::_set_defaultEndpointConfig(::Meta::WitAi::Configuration::WitEndpointConfig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::_set_defaultEndpointConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Configuration", "WitEndpointConfig", "defaultEndpointConfig", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _uriScheme
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Configuration::WitEndpointConfig::dyn__uriScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::dyn__uriScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uriScheme"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _authority
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Configuration::WitEndpointConfig::dyn__authority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::dyn__authority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authority"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _port
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Configuration::WitEndpointConfig::dyn__port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::dyn__port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _witApiVersion
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Configuration::WitEndpointConfig::dyn__witApiVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::dyn__witApiVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_witApiVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _message
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Configuration::WitEndpointConfig::dyn__message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::dyn__message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _speech
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Configuration::WitEndpointConfig::dyn__speech() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::dyn__speech");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speech"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _dictation
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Configuration::WitEndpointConfig::dyn__dictation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::dyn__dictation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dictation"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _synthesize
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Configuration::WitEndpointConfig::dyn__synthesize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::dyn__synthesize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_synthesize"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _event
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Configuration::WitEndpointConfig::dyn__event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::dyn__event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_event"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _converse
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Configuration::WitEndpointConfig::dyn__converse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::dyn__converse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_converse"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Configuration.WitEndpointConfig.get_UriScheme
::StringW Meta::WitAi::Configuration::WitEndpointConfig::get_UriScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::get_UriScheme");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Configuration::WitEndpointConfig*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Configuration.WitEndpointConfig.get_Authority
::StringW Meta::WitAi::Configuration::WitEndpointConfig::get_Authority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::get_Authority");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Configuration::WitEndpointConfig*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Configuration.WitEndpointConfig.get_Port
int Meta::WitAi::Configuration::WitEndpointConfig::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::get_Port");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Configuration::WitEndpointConfig*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Configuration.WitEndpointConfig.get_WitApiVersion
::StringW Meta::WitAi::Configuration::WitEndpointConfig::get_WitApiVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::get_WitApiVersion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Configuration::WitEndpointConfig*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Configuration.WitEndpointConfig.get_Message
::StringW Meta::WitAi::Configuration::WitEndpointConfig::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Configuration::WitEndpointConfig*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Configuration.WitEndpointConfig.get_Speech
::StringW Meta::WitAi::Configuration::WitEndpointConfig::get_Speech() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::get_Speech");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Configuration::WitEndpointConfig*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Configuration.WitEndpointConfig.get_Dictation
::StringW Meta::WitAi::Configuration::WitEndpointConfig::get_Dictation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::get_Dictation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Configuration::WitEndpointConfig*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Configuration.WitEndpointConfig.get_Synthesize
::StringW Meta::WitAi::Configuration::WitEndpointConfig::get_Synthesize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::get_Synthesize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Configuration::WitEndpointConfig*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Configuration.WitEndpointConfig.get_Event
::StringW Meta::WitAi::Configuration::WitEndpointConfig::get_Event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::get_Event");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Configuration::WitEndpointConfig*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Configuration.WitEndpointConfig.get_Converse
::StringW Meta::WitAi::Configuration::WitEndpointConfig::get_Converse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::get_Converse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Configuration::WitEndpointConfig*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Configuration.WitEndpointConfig.GetEndpointConfig
::Meta::WitAi::Configuration::WitEndpointConfig* Meta::WitAi::Configuration::WitEndpointConfig::GetEndpointConfig(::Meta::WitAi::Data::Configuration::WitConfiguration* witConfig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::GetEndpointConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Configuration", "WitEndpointConfig", "GetEndpointConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witConfig)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Configuration::WitEndpointConfig*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witConfig);
}
// Autogenerated method: Meta.WitAi.Configuration.WitEndpointConfig..cctor
void Meta::WitAi::Configuration::WitEndpointConfig::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitEndpointConfig::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Configuration", "WitEndpointConfig", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Interfaces.IDynamicEntitiesProvider
#include "Meta/WitAi/Interfaces/IDynamicEntitiesProvider.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Meta.WitAi.WitRequest
#include "Meta/WitAi/WitRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Interfaces.IDynamicEntitiesProvider dynamicEntities
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*& Meta::WitAi::Configuration::WitRequestOptions::dyn_dynamicEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRequestOptions::dyn_dynamicEntities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dynamicEntities"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 nBestIntents
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Configuration::WitRequestOptions::dyn_nBestIntents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRequestOptions::dyn_nBestIntents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nBestIntents"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String tag
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Configuration::WitRequestOptions::dyn_tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRequestOptions::dyn_tag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tag"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Meta.WitAi.WitRequest> onResponse
[[deprecated("Use field access instead!")]] ::System::Action_1<::Meta::WitAi::WitRequest*>*& Meta::WitAi::Configuration::WitRequestOptions::dyn_onResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRequestOptions::dyn_onResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onResponse"))->offset;
  return *reinterpret_cast<::System::Action_1<::Meta::WitAi::WitRequest*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Configuration.WitRequestOptions.get_requestID
::StringW Meta::WitAi::Configuration::WitRequestOptions::get_requestID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRequestOptions::get_requestID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requestID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Configuration.WitRequestOptions.ToJsonString
::StringW Meta::WitAi::Configuration::WitRequestOptions::ToJsonString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRequestOptions::ToJsonString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJsonString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Configuration.WitRuntimeConfiguration
#include "Meta/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: Meta.WitAi.Data.Configuration.WitConfiguration
#include "Meta/WitAi/Data/Configuration/WitConfiguration.hpp"
// Including type: Meta.WitAi.Interfaces.CustomTranscriptionProvider
#include "Meta/WitAi/Interfaces/CustomTranscriptionProvider.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Data.Configuration.WitConfiguration witConfiguration
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::Configuration::WitConfiguration*& Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_witConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_witConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "witConfiguration"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::Configuration::WitConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minKeepAliveVolume
[[deprecated("Use field access instead!")]] float& Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_minKeepAliveVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_minKeepAliveVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minKeepAliveVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minKeepAliveTimeInSeconds
[[deprecated("Use field access instead!")]] float& Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_minKeepAliveTimeInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_minKeepAliveTimeInSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minKeepAliveTimeInSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minTranscriptionKeepAliveTimeInSeconds
[[deprecated("Use field access instead!")]] float& Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_minTranscriptionKeepAliveTimeInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_minTranscriptionKeepAliveTimeInSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minTranscriptionKeepAliveTimeInSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxRecordingTime
[[deprecated("Use field access instead!")]] float& Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_maxRecordingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_maxRecordingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRecordingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single soundWakeThreshold
[[deprecated("Use field access instead!")]] float& Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_soundWakeThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_soundWakeThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundWakeThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sampleLengthInMs
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_sampleLengthInMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_sampleLengthInMs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sampleLengthInMs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single micBufferLengthInSeconds
[[deprecated("Use field access instead!")]] float& Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_micBufferLengthInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_micBufferLengthInSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micBufferLengthInSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxConcurrentRequests
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_maxConcurrentRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_maxConcurrentRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxConcurrentRequests"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sendAudioToWit
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_sendAudioToWit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_sendAudioToWit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sendAudioToWit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Interfaces.CustomTranscriptionProvider customTranscriptionProvider
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Interfaces::CustomTranscriptionProvider*& Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_customTranscriptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_customTranscriptionProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customTranscriptionProvider"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Interfaces::CustomTranscriptionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean alwaysRecord
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_alwaysRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_alwaysRecord");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alwaysRecord"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single preferredActivationOffset
[[deprecated("Use field access instead!")]] float& Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_preferredActivationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRuntimeConfiguration::dyn_preferredActivationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preferredActivationOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Configuration.WitRuntimeConfiguration.get_RecordingTimeRange
::UnityEngine::Vector2 Meta::WitAi::Configuration::WitRuntimeConfiguration::get_RecordingTimeRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Configuration::WitRuntimeConfiguration::get_RecordingTimeRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Configuration::WitRuntimeConfiguration*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.AudioBuffer
#include "Meta/WitAi/Data/AudioBuffer.hpp"
// Including type: Meta.WitAi.Data.AudioBuffer/<WaitForMicToStart>d__30
#include "Meta/WitAi/Data/AudioBuffer_-WaitForMicToStart-d__30.hpp"
// Including type: Meta.WitAi.Data.AudioBufferConfiguration
#include "Meta/WitAi/Data/AudioBufferConfiguration.hpp"
// Including type: Meta.WitAi.Events.AudioBufferEvents
#include "Meta/WitAi/Events/AudioBufferEvents.hpp"
// Including type: Meta.WitAi.Interfaces.IAudioInputSource
#include "Meta/WitAi/Interfaces/IAudioInputSource.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Meta.WitAi.Data.AudioEncoding
#include "Meta/WitAi/Data/AudioEncoding.hpp"
// Including type: Meta.WitAi.Data.RingBuffer`1/Marker
#include "Meta/WitAi/Data/RingBuffer_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Meta.WitAi.Data.AudioBuffer _instance
::Meta::WitAi::Data::AudioBuffer* Meta::WitAi::Data::AudioBuffer::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Data::AudioBuffer*>("Meta.WitAi.Data", "AudioBuffer", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Meta.WitAi.Data.AudioBuffer _instance
void Meta::WitAi::Data::AudioBuffer::_set__instance(::Meta::WitAi::Data::AudioBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Data", "AudioBuffer", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean alwaysRecording
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Data::AudioBuffer::dyn_alwaysRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::dyn_alwaysRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alwaysRecording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Data.AudioBufferConfiguration audioBufferConfiguration
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::AudioBufferConfiguration*& Meta::WitAi::Data::AudioBuffer::dyn_audioBufferConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::dyn_audioBufferConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioBufferConfiguration"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::AudioBufferConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.AudioBufferEvents events
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::AudioBufferEvents*& Meta::WitAi::Data::AudioBuffer::dyn_events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::dyn_events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "events"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::AudioBufferEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Interfaces.IAudioInputSource _micInput
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Interfaces::IAudioInputSource*& Meta::WitAi::Data::AudioBuffer::dyn__micInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::dyn__micInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_micInput"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Interfaces::IAudioInputSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Data.RingBuffer`1<System.Byte> _micDataBuffer
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::RingBuffer_1<uint8_t>*& Meta::WitAi::Data::AudioBuffer::dyn__micDataBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::dyn__micDataBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_micDataBuffer"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::RingBuffer_1<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _byteDataBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Meta::WitAi::Data::AudioBuffer::dyn__byteDataBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::dyn__byteDataBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_byteDataBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<UnityEngine.Component> _waitingRecorders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::Component*>*& Meta::WitAi::Data::AudioBuffer::dyn__waitingRecorders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::dyn__waitingRecorders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitingRecorders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::Component*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<UnityEngine.Component> _activeRecorders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::Component*>*& Meta::WitAi::Data::AudioBuffer::dyn__activeRecorders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::dyn__activeRecorders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeRecorders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::Component*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.get_Instance
::Meta::WitAi::Data::AudioBuffer* Meta::WitAi::Data::AudioBuffer::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data", "AudioBuffer", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::AudioBuffer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.get_Events
::Meta::WitAi::Events::AudioBufferEvents* Meta::WitAi::Data::AudioBuffer::get_Events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::get_Events");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::AudioBufferEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.get_MicInput
::Meta::WitAi::Interfaces::IAudioInputSource* Meta::WitAi::Data::AudioBuffer::get_MicInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::get_MicInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::IAudioInputSource*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.IsRecording
bool Meta::WitAi::Data::AudioBuffer::IsRecording(::UnityEngine::Component* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::IsRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, component);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.get_IsInputAvailable
bool Meta::WitAi::Data::AudioBuffer::get_IsInputAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::get_IsInputAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInputAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.CheckForInput
void Meta::WitAi::Data::AudioBuffer::CheckForInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::CheckForInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.get_AudioEncoding
::Meta::WitAi::Data::AudioEncoding* Meta::WitAi::Data::AudioBuffer::get_AudioEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::get_AudioEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::AudioEncoding*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.Awake
void Meta::WitAi::Data::AudioBuffer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.OnEnable
void Meta::WitAi::Data::AudioBuffer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.OnDisable
void Meta::WitAi::Data::AudioBuffer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.OnMicSampleReady
void Meta::WitAi::Data::AudioBuffer::OnMicSampleReady(int sampleCount, ::ArrayW<float> sample, float levelMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::OnMicSampleReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMicSampleReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleCount), ::il2cpp_utils::ExtractType(sample), ::il2cpp_utils::ExtractType(levelMax)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampleCount, sample, levelMax);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.InitializeMicDataBuffer
void Meta::WitAi::Data::AudioBuffer::InitializeMicDataBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::InitializeMicDataBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeMicDataBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.Convert
void Meta::WitAi::Data::AudioBuffer::Convert(::ArrayW<float> samples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, samples);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.CreateMarker
typename ::Meta::WitAi::Data::RingBuffer_1<uint8_t>::Marker* Meta::WitAi::Data::AudioBuffer::CreateMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::CreateMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<typename ::Meta::WitAi::Data::RingBuffer_1<uint8_t>::Marker*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.CreateMarker
typename ::Meta::WitAi::Data::RingBuffer_1<uint8_t>::Marker* Meta::WitAi::Data::AudioBuffer::CreateMarker(float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::CreateMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<typename ::Meta::WitAi::Data::RingBuffer_1<uint8_t>::Marker*, false>(this, ___internal__method, offset);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.StartRecording
void Meta::WitAi::Data::AudioBuffer::StartRecording(::UnityEngine::Component* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::StartRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.WaitForMicToStart
::System::Collections::IEnumerator* Meta::WitAi::Data::AudioBuffer::WaitForMicToStart(::UnityEngine::Component* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::WaitForMicToStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForMicToStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, component);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.StopRecording
void Meta::WitAi::Data::AudioBuffer::StopRecording(::UnityEngine::Component* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::StopRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer.<WaitForMicToStart>b__30_0
bool Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$b__30_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::<WaitForMicToStart>b__30_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WaitForMicToStart>b__30_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Data.AudioBuffer/<WaitForMicToStart>d__30
#include "Meta/WitAi/Data/AudioBuffer_-WaitForMicToStart-d__30.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Data.AudioBuffer <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::AudioBuffer*& Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::AudioBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Component component
[[deprecated("Use field access instead!")]] ::UnityEngine::Component*& Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::dyn_component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::dyn_component");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "component"))->offset;
  return *reinterpret_cast<::UnityEngine::Component**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer/<WaitForMicToStart>d__30.System.IDisposable.Dispose
void Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer/<WaitForMicToStart>d__30.MoveNext
bool Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer/<WaitForMicToStart>d__30.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer/<WaitForMicToStart>d__30.System.Collections.IEnumerator.Reset
void Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.AudioBuffer/<WaitForMicToStart>d__30.System.Collections.IEnumerator.get_Current
::Il2CppObject* Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::AudioBuffer::$WaitForMicToStart$d__30*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.AudioBufferConfiguration
#include "Meta/WitAi/Data/AudioBufferConfiguration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 sampleLengthInMs
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Data::AudioBufferConfiguration::dyn_sampleLengthInMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBufferConfiguration::dyn_sampleLengthInMs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sampleLengthInMs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single micBufferLengthInSeconds
[[deprecated("Use field access instead!")]] float& Meta::WitAi::Data::AudioBufferConfiguration::dyn_micBufferLengthInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioBufferConfiguration::dyn_micBufferLengthInSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micBufferLengthInSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.VoiceSession
#include "Meta/WitAi/Data/VoiceSession.hpp"
// Including type: Meta.WitAi.VoiceService
#include "Meta/WitAi/VoiceService.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.VoiceService service
[[deprecated("Use field access instead!")]] ::Meta::WitAi::VoiceService*& Meta::WitAi::Data::VoiceSession::dyn_service() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::VoiceSession::dyn_service");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "service"))->offset;
  return *reinterpret_cast<::Meta::WitAi::VoiceService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Json.WitResponseNode response
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Json::WitResponseNode*& Meta::WitAi::Data::VoiceSession::dyn_response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::VoiceSession::dyn_response");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "response"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Json::WitResponseNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean validResponse
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Data::VoiceSession::dyn_validResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::VoiceSession::dyn_validResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validResponse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Data.WitFloatValue
#include "Meta/WitAi/Data/WitFloatValue.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single equalityTolerance
[[deprecated("Use field access instead!")]] float& Meta::WitAi::Data::WitFloatValue::dyn_equalityTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitFloatValue::dyn_equalityTolerance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "equalityTolerance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.WitFloatValue.GetFloatValue
float Meta::WitAi::Data::WitFloatValue::GetFloatValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitFloatValue::GetFloatValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloatValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.Data.WitFloatValue.GetValue
::Il2CppObject* Meta::WitAi::Data::WitFloatValue::GetValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitFloatValue::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::WitValue*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.Data.WitFloatValue.Equals
bool Meta::WitAi::Data::WitFloatValue::Equals(::Meta::WitAi::Json::WitResponseNode* response, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitFloatValue::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::WitValue*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, response, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Data.WitIntValue
#include "Meta/WitAi/Data/WitIntValue.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Data.WitIntValue.GetIntValue
int Meta::WitAi::Data::WitIntValue::GetIntValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitIntValue::GetIntValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIntValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.Data.WitIntValue.GetValue
::Il2CppObject* Meta::WitAi::Data::WitIntValue::GetValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitIntValue::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::WitValue*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.Data.WitIntValue.Equals
bool Meta::WitAi::Data::WitIntValue::Equals(::Meta::WitAi::Json::WitResponseNode* response, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitIntValue::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::WitValue*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, response, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Data.WitStringValue
#include "Meta/WitAi/Data/WitStringValue.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Data.WitStringValue.GetStringValue
::StringW Meta::WitAi::Data::WitStringValue::GetStringValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitStringValue::GetStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.Data.WitStringValue.GetValue
::Il2CppObject* Meta::WitAi::Data::WitStringValue::GetValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitStringValue::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::WitValue*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.Data.WitStringValue.Equals
bool Meta::WitAi::Data::WitStringValue::Equals(::Meta::WitAi::Json::WitResponseNode* response, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitStringValue::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::WitValue*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, response, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Data.WitValue
#include "Meta/WitAi/Data/WitValue.hpp"
// Including type: Meta.WitAi.WitResponseReference
#include "Meta/WitAi/WitResponseReference.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String path
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Data::WitValue::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitValue::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.WitResponseReference reference
[[deprecated("Use field access instead!")]] ::Meta::WitAi::WitResponseReference*& Meta::WitAi::Data::WitValue::dyn_reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitValue::dyn_reference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reference"))->offset;
  return *reinterpret_cast<::Meta::WitAi::WitResponseReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.WitValue.get_Reference
::Meta::WitAi::WitResponseReference* Meta::WitAi::Data::WitValue::get_Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitValue::get_Reference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::WitResponseReference*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.WitValue.GetValue
::Il2CppObject* Meta::WitAi::Data::WitValue::GetValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitValue::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::WitValue*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.Data.WitValue.Equals
bool Meta::WitAi::Data::WitValue::Equals(::Meta::WitAi::Json::WitResponseNode* response, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitValue::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::WitValue*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, response, value);
}
// Autogenerated method: Meta.WitAi.Data.WitValue.ToString
::StringW Meta::WitAi::Data::WitValue::ToString(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::WitValue::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, response);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.ValueReferences.IStringReference
#include "Meta/WitAi/Data/ValueReferences/IStringReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Data.ValueReferences.IStringReference.get_Value
::StringW Meta::WitAi::Data::ValueReferences::IStringReference::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::ValueReferences::IStringReference::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::ValueReferences::IStringReference*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.ValueReferences.IStringReference.set_Value
void Meta::WitAi::Data::ValueReferences::IStringReference::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::ValueReferences::IStringReference::set_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::ValueReferences::IStringReference*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.Intents.WitIntentData
#include "Meta/WitAi/Data/Intents/WitIntentData.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Json.WitResponseNode responseNode
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Json::WitResponseNode*& Meta::WitAi::Data::Intents::WitIntentData::dyn_responseNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Intents::WitIntentData::dyn_responseNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "responseNode"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Json::WitResponseNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String id
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Data::Intents::WitIntentData::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Intents::WitIntentData::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Data::Intents::WitIntentData::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Intents::WitIntentData::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single confidence
[[deprecated("Use field access instead!")]] float& Meta::WitAi::Data::Intents::WitIntentData::dyn_confidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Intents::WitIntentData::dyn_confidence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "confidence"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.Intents.WitIntentData.FromIntentWitResponseNode
::Meta::WitAi::Data::Intents::WitIntentData* Meta::WitAi::Data::Intents::WitIntentData::FromIntentWitResponseNode(::Meta::WitAi::Json::WitResponseNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Intents::WitIntentData::FromIntentWitResponseNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromIntentWitResponseNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Intents::WitIntentData*, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.Entities.DynamicEntityDataProvider
#include "Meta/WitAi/Data/Entities/DynamicEntityDataProvider.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntitiesData
#include "Meta/WitAi/Data/Entities/WitDynamicEntitiesData.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntities
#include "Meta/WitAi/Data/Entities/WitDynamicEntities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Meta.WitAi.Data.Entities.WitDynamicEntitiesData[] entitiesDefinition
[[deprecated("Use field access instead!")]] ::ArrayW<::Meta::WitAi::Data::Entities::WitDynamicEntitiesData*>& Meta::WitAi::Data::Entities::DynamicEntityDataProvider::dyn_entitiesDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::DynamicEntityDataProvider::dyn_entitiesDefinition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entitiesDefinition"))->offset;
  return *reinterpret_cast<::ArrayW<::Meta::WitAi::Data::Entities::WitDynamicEntitiesData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.Entities.DynamicEntityDataProvider.GetDynamicEntities
::Meta::WitAi::Data::Entities::WitDynamicEntities* Meta::WitAi::Data::Entities::DynamicEntityDataProvider::GetDynamicEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::DynamicEntityDataProvider::GetDynamicEntities");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Entities::DynamicEntityDataProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Entities::WitDynamicEntities*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.Entities.DynamicEntityProvider
#include "Meta/WitAi/Data/Entities/DynamicEntityProvider.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntities
#include "Meta/WitAi/Data/Entities/WitDynamicEntities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected Meta.WitAi.Data.Entities.WitDynamicEntities entities
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::Entities::WitDynamicEntities*& Meta::WitAi::Data::Entities::DynamicEntityProvider::dyn_entities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::DynamicEntityProvider::dyn_entities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entities"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::Entities::WitDynamicEntities**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.Entities.DynamicEntityProvider.GetDynamicEntities
::Meta::WitAi::Data::Entities::WitDynamicEntities* Meta::WitAi::Data::Entities::DynamicEntityProvider::GetDynamicEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::DynamicEntityProvider::GetDynamicEntities");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Entities::DynamicEntityProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Entities::WitDynamicEntities*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.Entities.DynamicEntityKeywordRegistry
#include "Meta/WitAi/Data/Entities/DynamicEntityKeywordRegistry.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntities
#include "Meta/WitAi/Data/Entities/WitDynamicEntities.hpp"
// Including type: Meta.WitAi.Data.Info.WitEntityKeywordInfo
#include "Meta/WitAi/Data/Info/WitEntityKeywordInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Meta.WitAi.Data.Entities.DynamicEntityKeywordRegistry instance
::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry* Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry*>("Meta.WitAi.Data.Entities", "DynamicEntityKeywordRegistry", "instance"));
}
// Autogenerated static field setter
// Set static field: static private Meta.WitAi.Data.Entities.DynamicEntityKeywordRegistry instance
void Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::_set_instance(::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Data.Entities", "DynamicEntityKeywordRegistry", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Data.Entities.WitDynamicEntities entities
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::Entities::WitDynamicEntities*& Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::dyn_entities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::dyn_entities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entities"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::Entities::WitDynamicEntities**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.Entities.DynamicEntityKeywordRegistry.get_HasDynamicEntityRegistry
bool Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::get_HasDynamicEntityRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::get_HasDynamicEntityRegistry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "DynamicEntityKeywordRegistry", "get_HasDynamicEntityRegistry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Entities.DynamicEntityKeywordRegistry.get_Instance
::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry* Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "DynamicEntityKeywordRegistry", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Entities.DynamicEntityKeywordRegistry.OnEnable
void Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Entities.DynamicEntityKeywordRegistry.OnDisable
void Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Entities.DynamicEntityKeywordRegistry.RegisterDynamicEntity
void Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::RegisterDynamicEntity(::StringW entity, ::Meta::WitAi::Data::Info::WitEntityKeywordInfo keyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::RegisterDynamicEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDynamicEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity), ::il2cpp_utils::ExtractType(keyword)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entity, keyword);
}
// Autogenerated method: Meta.WitAi.Data.Entities.DynamicEntityKeywordRegistry.UnregisterDynamicEntity
void Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::UnregisterDynamicEntity(::StringW entity, ::Meta::WitAi::Data::Info::WitEntityKeywordInfo keyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::UnregisterDynamicEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterDynamicEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity), ::il2cpp_utils::ExtractType(keyword)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entity, keyword);
}
// Autogenerated method: Meta.WitAi.Data.Entities.DynamicEntityKeywordRegistry.GetDynamicEntities
::Meta::WitAi::Data::Entities::WitDynamicEntities* Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::GetDynamicEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry::GetDynamicEntities");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Entities::DynamicEntityKeywordRegistry*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Entities::WitDynamicEntities*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.Entities.RegisteredDynamicEntityKeyword
#include "Meta/WitAi/Data/Entities/RegisteredDynamicEntityKeyword.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String entity
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Data::Entities::RegisteredDynamicEntityKeyword::dyn_entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::RegisteredDynamicEntityKeyword::dyn_entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entity"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Data.Info.WitEntityKeywordInfo keyword
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::Info::WitEntityKeywordInfo& Meta::WitAi::Data::Entities::RegisteredDynamicEntityKeyword::dyn_keyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::RegisteredDynamicEntityKeyword::dyn_keyword");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyword"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::Info::WitEntityKeywordInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.Entities.RegisteredDynamicEntityKeyword.OnEnable
void Meta::WitAi::Data::Entities::RegisteredDynamicEntityKeyword::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::RegisteredDynamicEntityKeyword::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Entities.RegisteredDynamicEntityKeyword.OnDisable
void Meta::WitAi::Data::Entities::RegisteredDynamicEntityKeyword::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::RegisteredDynamicEntityKeyword::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntities
#include "Meta/WitAi/Data/Entities/WitDynamicEntities.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntities/<>c__DisplayClass12_0
#include "Meta/WitAi/Data/Entities/WitDynamicEntities_--c__DisplayClass12_0.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntities/<>c__DisplayClass14_0
#include "Meta/WitAi/Data/Entities/WitDynamicEntities_--c__DisplayClass14_0.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntities/<>c__DisplayClass15_0
#include "Meta/WitAi/Data/Entities/WitDynamicEntities_--c__DisplayClass15_0.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntity
#include "Meta/WitAi/Data/Entities/WitDynamicEntity.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Meta.WitAi.Json.WitResponseClass
#include "Meta/WitAi/Json/WitResponseClass.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Meta.WitAi.Data.Info.WitEntityKeywordInfo
#include "Meta/WitAi/Data/Info/WitEntityKeywordInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Meta.WitAi.Data.Entities.WitDynamicEntity> entities
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Meta::WitAi::Data::Entities::WitDynamicEntity*>*& Meta::WitAi::Data::Entities::WitDynamicEntities::dyn_entities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::dyn_entities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entities"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Meta::WitAi::Data::Entities::WitDynamicEntity*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntities.get_AsJson
::Meta::WitAi::Json::WitResponseClass* Meta::WitAi::Data::Entities::WitDynamicEntities::get_AsJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::get_AsJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Json::WitResponseClass*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntities.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Meta::WitAi::Data::Entities::WitDynamicEntity*>* Meta::WitAi::Data::Entities::WitDynamicEntities::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Entities::WitDynamicEntities*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Meta::WitAi::Data::Entities::WitDynamicEntity*>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntities.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Meta::WitAi::Data::Entities::WitDynamicEntities::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Entities::WitDynamicEntities*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntities.GetDynamicEntities
::Meta::WitAi::Data::Entities::WitDynamicEntities* Meta::WitAi::Data::Entities::WitDynamicEntities::GetDynamicEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::GetDynamicEntities");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Entities::WitDynamicEntities*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Entities::WitDynamicEntities*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntities.Merge
void Meta::WitAi::Data::Entities::WitDynamicEntities::Merge(::Meta::WitAi::Interfaces::IDynamicEntitiesProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::Merge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Merge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, provider);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntities.Merge
void Meta::WitAi::Data::Entities::WitDynamicEntities::Merge(::System::Collections::Generic::IEnumerable_1<::Meta::WitAi::Data::Entities::WitDynamicEntity*>* mergeEntities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::Merge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Merge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mergeEntities)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mergeEntities);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntities.Add
void Meta::WitAi::Data::Entities::WitDynamicEntities::Add(::Meta::WitAi::Data::Entities::WitDynamicEntity* dynamicEntity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dynamicEntity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dynamicEntity);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntities.Remove
void Meta::WitAi::Data::Entities::WitDynamicEntities::Remove(::Meta::WitAi::Data::Entities::WitDynamicEntity* dynamicEntity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dynamicEntity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dynamicEntity);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntities.AddKeyword
void Meta::WitAi::Data::Entities::WitDynamicEntities::AddKeyword(::StringW entityName, ::Meta::WitAi::Data::Info::WitEntityKeywordInfo keyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::AddKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entityName), ::il2cpp_utils::ExtractType(keyword)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entityName, keyword);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntities.RemoveKeyword
void Meta::WitAi::Data::Entities::WitDynamicEntities::RemoveKeyword(::StringW entityName, ::Meta::WitAi::Data::Info::WitEntityKeywordInfo keyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::RemoveKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entityName), ::il2cpp_utils::ExtractType(keyword)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entityName, keyword);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntities.ToString
::StringW Meta::WitAi::Data::Entities::WitDynamicEntities::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntities/<>c__DisplayClass12_0
#include "Meta/WitAi/Data/Entities/WitDynamicEntities_--c__DisplayClass12_0.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntity
#include "Meta/WitAi/Data/Entities/WitDynamicEntity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Data.Entities.WitDynamicEntity dynamicEntity
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::Entities::WitDynamicEntity*& Meta::WitAi::Data::Entities::WitDynamicEntities::$$c__DisplayClass12_0::dyn_dynamicEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::$$c__DisplayClass12_0::dyn_dynamicEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dynamicEntity"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::Entities::WitDynamicEntity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntities/<>c__DisplayClass12_0.<Add>b__0
bool Meta::WitAi::Data::Entities::WitDynamicEntities::$$c__DisplayClass12_0::$Add$b__0(::Meta::WitAi::Data::Entities::WitDynamicEntity* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::$$c__DisplayClass12_0::<Add>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Add>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, e);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntities/<>c__DisplayClass14_0
#include "Meta/WitAi/Data/Entities/WitDynamicEntities_--c__DisplayClass14_0.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntity
#include "Meta/WitAi/Data/Entities/WitDynamicEntity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String entityName
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Data::Entities::WitDynamicEntities::$$c__DisplayClass14_0::dyn_entityName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::$$c__DisplayClass14_0::dyn_entityName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entityName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntities/<>c__DisplayClass14_0.<AddKeyword>b__0
bool Meta::WitAi::Data::Entities::WitDynamicEntities::$$c__DisplayClass14_0::$AddKeyword$b__0(::Meta::WitAi::Data::Entities::WitDynamicEntity* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::$$c__DisplayClass14_0::<AddKeyword>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddKeyword>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, e);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntities/<>c__DisplayClass15_0
#include "Meta/WitAi/Data/Entities/WitDynamicEntities_--c__DisplayClass15_0.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntity
#include "Meta/WitAi/Data/Entities/WitDynamicEntity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String entityName
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Data::Entities::WitDynamicEntities::$$c__DisplayClass15_0::dyn_entityName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::$$c__DisplayClass15_0::dyn_entityName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entityName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntities/<>c__DisplayClass15_0.<RemoveKeyword>b__0
bool Meta::WitAi::Data::Entities::WitDynamicEntities::$$c__DisplayClass15_0::$RemoveKeyword$b__0(::Meta::WitAi::Data::Entities::WitDynamicEntity* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntities::$$c__DisplayClass15_0::<RemoveKeyword>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RemoveKeyword>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, e);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntitiesData
#include "Meta/WitAi/Data/Entities/WitDynamicEntitiesData.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntities
#include "Meta/WitAi/Data/Entities/WitDynamicEntities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Data.Entities.WitDynamicEntities entities
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::Entities::WitDynamicEntities*& Meta::WitAi::Data::Entities::WitDynamicEntitiesData::dyn_entities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntitiesData::dyn_entities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entities"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::Entities::WitDynamicEntities**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntitiesData.GetDynamicEntities
::Meta::WitAi::Data::Entities::WitDynamicEntities* Meta::WitAi::Data::Entities::WitDynamicEntitiesData::GetDynamicEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntitiesData::GetDynamicEntities");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Entities::WitDynamicEntitiesData*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Entities::WitDynamicEntities*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntity
#include "Meta/WitAi/Data/Entities/WitDynamicEntity.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Meta.WitAi.Json.WitResponseArray
#include "Meta/WitAi/Json/WitResponseArray.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntities
#include "Meta/WitAi/Data/Entities/WitDynamicEntities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String entity
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Data::Entities::WitDynamicEntity::dyn_entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntity::dyn_entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entity"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Meta.WitAi.Data.Info.WitEntityKeywordInfo> keywords
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Meta::WitAi::Data::Info::WitEntityKeywordInfo>*& Meta::WitAi::Data::Entities::WitDynamicEntity::dyn_keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntity::dyn_keywords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keywords"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Meta::WitAi::Data::Info::WitEntityKeywordInfo>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntity.get_AsJson
::Meta::WitAi::Json::WitResponseArray* Meta::WitAi::Data::Entities::WitDynamicEntity::get_AsJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntity::get_AsJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Json::WitResponseArray*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitDynamicEntity.GetDynamicEntities
::Meta::WitAi::Data::Entities::WitDynamicEntities* Meta::WitAi::Data::Entities::WitDynamicEntity::GetDynamicEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitDynamicEntity::GetDynamicEntities");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Entities::WitDynamicEntity*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Entities::WitDynamicEntities*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Data.Entities.WitEntityData
#include "Meta/WitAi/Data/Entities/WitEntityData.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityData.Equals
bool Meta::WitAi::Data::Entities::WitEntityData::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityData::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityData.GetHashCode
int Meta::WitAi::Data::Entities::WitEntityData::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityData::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityData.op_Equality
bool Meta::WitAi::Data::Entities::operator ==(::Meta::WitAi::Data::Entities::WitEntityData* data, ::Il2CppObject& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityData::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "WitEntityData", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(&value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, &value);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityData.op_Inequality
bool Meta::WitAi::Data::Entities::operator !=(::Meta::WitAi::Data::Entities::WitEntityData* data, ::Il2CppObject& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityData::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "WitEntityData", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(&value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, &value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Data.Entities.WitEntityFloatData
#include "Meta/WitAi/Data/Entities/WitEntityFloatData.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityFloatData.Approximately
bool Meta::WitAi::Data::Entities::WitEntityFloatData::Approximately(float v, float tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityFloatData::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(tolerance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, v, tolerance);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityFloatData.Equals
bool Meta::WitAi::Data::Entities::WitEntityFloatData::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityFloatData::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityFloatData.GetHashCode
int Meta::WitAi::Data::Entities::WitEntityFloatData::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityFloatData::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityFloatData.op_Equality
bool Meta::WitAi::Data::Entities::operator ==(::Meta::WitAi::Data::Entities::WitEntityFloatData& data, const float& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityFloatData::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "WitEntityFloatData", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&data), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &data, value);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityFloatData.op_Inequality
bool Meta::WitAi::Data::Entities::operator !=(::Meta::WitAi::Data::Entities::WitEntityFloatData& data, const float& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityFloatData::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "WitEntityFloatData", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&data), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &data, value);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityFloatData.op_Equality
bool Meta::WitAi::Data::Entities::operator ==(::Meta::WitAi::Data::Entities::WitEntityFloatData& data, const int& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityFloatData::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "WitEntityFloatData", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&data), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &data, value);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityFloatData.op_Inequality
bool Meta::WitAi::Data::Entities::operator !=(::Meta::WitAi::Data::Entities::WitEntityFloatData& data, const int& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityFloatData::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "WitEntityFloatData", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&data), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &data, value);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityFloatData.op_Equality
bool Meta::WitAi::Data::Entities::operator ==(const float& value, ::Meta::WitAi::Data::Entities::WitEntityFloatData& data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityFloatData::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "WitEntityFloatData", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(&data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, &data);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityFloatData.op_Inequality
bool Meta::WitAi::Data::Entities::operator !=(const float& value, ::Meta::WitAi::Data::Entities::WitEntityFloatData& data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityFloatData::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "WitEntityFloatData", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(&data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, &data);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityFloatData.op_Equality
bool Meta::WitAi::Data::Entities::operator ==(const int& value, ::Meta::WitAi::Data::Entities::WitEntityFloatData& data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityFloatData::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "WitEntityFloatData", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(&data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, &data);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityFloatData.op_Inequality
bool Meta::WitAi::Data::Entities::operator !=(const int& value, ::Meta::WitAi::Data::Entities::WitEntityFloatData& data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityFloatData::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "WitEntityFloatData", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(&data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, &data);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Data.Entities.WitEntityIntData
#include "Meta/WitAi/Data/Entities/WitEntityIntData.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityIntData.Equals
bool Meta::WitAi::Data::Entities::WitEntityIntData::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityIntData::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityIntData.GetHashCode
int Meta::WitAi::Data::Entities::WitEntityIntData::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityIntData::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityIntData.op_Equality
bool Meta::WitAi::Data::Entities::operator ==(::Meta::WitAi::Data::Entities::WitEntityIntData& data, const int& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityIntData::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "WitEntityIntData", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&data), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &data, value);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityIntData.op_Inequality
bool Meta::WitAi::Data::Entities::operator !=(::Meta::WitAi::Data::Entities::WitEntityIntData& data, const int& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityIntData::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "WitEntityIntData", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&data), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &data, value);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityIntData.op_Equality
bool Meta::WitAi::Data::Entities::operator ==(const int& value, ::Meta::WitAi::Data::Entities::WitEntityIntData& data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityIntData::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "WitEntityIntData", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(&data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, &data);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitEntityIntData.op_Inequality
bool Meta::WitAi::Data::Entities::operator !=(const int& value, ::Meta::WitAi::Data::Entities::WitEntityIntData& data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitEntityIntData::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Data.Entities", "WitEntityIntData", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(&data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, &data);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.Entities.WitSimpleDynamicEntity
#include "Meta/WitAi/Data/Entities/WitSimpleDynamicEntity.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntities
#include "Meta/WitAi/Data/Entities/WitDynamicEntities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String entityName
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Data::Entities::WitSimpleDynamicEntity::dyn_entityName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitSimpleDynamicEntity::dyn_entityName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entityName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] keywords
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Meta::WitAi::Data::Entities::WitSimpleDynamicEntity::dyn_keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitSimpleDynamicEntity::dyn_keywords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keywords"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.Entities.WitSimpleDynamicEntity.GetDynamicEntities
::Meta::WitAi::Data::Entities::WitDynamicEntities* Meta::WitAi::Data::Entities::WitSimpleDynamicEntity::GetDynamicEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Entities::WitSimpleDynamicEntity::GetDynamicEntities");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Entities::WitSimpleDynamicEntity*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Entities::WitDynamicEntities*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.Configuration.WitConfiguration
#include "Meta/WitAi/Data/Configuration/WitConfiguration.hpp"
// Including type: Meta.WitAi.Data.Configuration.WitConfigurationAssetData
#include "Meta/WitAi/Data/Configuration/WitConfigurationAssetData.hpp"
// Including type: Meta.WitAi.Configuration.WitEndpointConfig
#include "Meta/WitAi/Configuration/WitEndpointConfig.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Meta.WitAi.IWitRequestEndpointInfo
#include "Meta/WitAi/IWitRequestEndpointInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String INVALID_APP_ID_NO_CLIENT_TOKEN
::StringW Meta::WitAi::Data::Configuration::WitConfiguration::_get_INVALID_APP_ID_NO_CLIENT_TOKEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::_get_INVALID_APP_ID_NO_CLIENT_TOKEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi.Data.Configuration", "WitConfiguration", "INVALID_APP_ID_NO_CLIENT_TOKEN"));
}
// Autogenerated static field setter
// Set static field: static private System.String INVALID_APP_ID_NO_CLIENT_TOKEN
void Meta::WitAi::Data::Configuration::WitConfiguration::_set_INVALID_APP_ID_NO_CLIENT_TOKEN(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::_set_INVALID_APP_ID_NO_CLIENT_TOKEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Data.Configuration", "WitConfiguration", "INVALID_APP_ID_NO_CLIENT_TOKEN", value));
}
// Autogenerated static field getter
// Get static field: static private System.String INVALID_APP_ID_WITH_CLIENT_TOKEN
::StringW Meta::WitAi::Data::Configuration::WitConfiguration::_get_INVALID_APP_ID_WITH_CLIENT_TOKEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::_get_INVALID_APP_ID_WITH_CLIENT_TOKEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi.Data.Configuration", "WitConfiguration", "INVALID_APP_ID_WITH_CLIENT_TOKEN"));
}
// Autogenerated static field setter
// Set static field: static private System.String INVALID_APP_ID_WITH_CLIENT_TOKEN
void Meta::WitAi::Data::Configuration::WitConfiguration::_set_INVALID_APP_ID_WITH_CLIENT_TOKEN(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::_set_INVALID_APP_ID_WITH_CLIENT_TOKEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Data.Configuration", "WitConfiguration", "INVALID_APP_ID_WITH_CLIENT_TOKEN", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _clientAccessToken
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Data::Configuration::WitConfiguration::dyn__clientAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::dyn__clientAccessToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clientAccessToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Data.Info.WitAppInfo _appInfo
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::Info::WitAppInfo& Meta::WitAi::Data::Configuration::WitConfiguration::dyn__appInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::dyn__appInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appInfo"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::Info::WitAppInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Data.Configuration.WitConfigurationAssetData[] _configData
[[deprecated("Use field access instead!")]] ::ArrayW<::Meta::WitAi::Data::Configuration::WitConfigurationAssetData*>& Meta::WitAi::Data::Configuration::WitConfiguration::dyn__configData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::dyn__configData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_configData"))->offset;
  return *reinterpret_cast<::ArrayW<::Meta::WitAi::Data::Configuration::WitConfigurationAssetData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _configurationId
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Data::Configuration::WitConfiguration::dyn__configurationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::dyn__configurationId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_configurationId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 timeoutMS
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Data::Configuration::WitConfiguration::dyn_timeoutMS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::dyn_timeoutMS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeoutMS"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Configuration.WitEndpointConfig endpointConfiguration
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Configuration::WitEndpointConfig*& Meta::WitAi::Data::Configuration::WitConfiguration::dyn_endpointConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::dyn_endpointConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endpointConfiguration"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Configuration::WitEndpointConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isDemoOnly
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Data::Configuration::WitConfiguration::dyn_isDemoOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::dyn_isDemoOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDemoOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useConduit
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Data::Configuration::WitConfiguration::dyn_useConduit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::dyn_useConduit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useConduit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _manifestLocalPath
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Data::Configuration::WitConfiguration::dyn__manifestLocalPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::dyn__manifestLocalPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_manifestLocalPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> excludedAssemblies
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Meta::WitAi::Data::Configuration::WitConfiguration::dyn_excludedAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::dyn_excludedAssemblies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "excludedAssemblies"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean relaxedResolution
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Data::Configuration::WitConfiguration::dyn_relaxedResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::dyn_relaxedResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "relaxedResolution"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.Configuration.WitConfiguration.get_ManifestLocalPath
::StringW Meta::WitAi::Data::Configuration::WitConfiguration::get_ManifestLocalPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::get_ManifestLocalPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ManifestLocalPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Configuration.WitConfiguration.ResetData
void Meta::WitAi::Data::Configuration::WitConfiguration::ResetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::ResetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Configuration.WitConfiguration.UpdateDataAssets
void Meta::WitAi::Data::Configuration::WitConfiguration::UpdateDataAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::UpdateDataAssets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Configuration::WitConfiguration*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Configuration.WitConfiguration.GetLoggerAppId
::StringW Meta::WitAi::Data::Configuration::WitConfiguration::GetLoggerAppId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::GetLoggerAppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoggerAppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Configuration.WitConfiguration.GetConfigurationId
::StringW Meta::WitAi::Data::Configuration::WitConfiguration::GetConfigurationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::GetConfigurationId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Configuration::WitConfiguration*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Configuration.WitConfiguration.GetApplicationId
::StringW Meta::WitAi::Data::Configuration::WitConfiguration::GetApplicationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::GetApplicationId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Configuration::WitConfiguration*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Configuration.WitConfiguration.GetApplicationInfo
::Meta::WitAi::Data::Info::WitAppInfo Meta::WitAi::Data::Configuration::WitConfiguration::GetApplicationInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::GetApplicationInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Configuration::WitConfiguration*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Info::WitAppInfo, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Configuration.WitConfiguration.GetConfigData
::ArrayW<::Meta::WitAi::Data::Configuration::WitConfigurationAssetData*> Meta::WitAi::Data::Configuration::WitConfiguration::GetConfigData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::GetConfigData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Configuration::WitConfiguration*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Meta::WitAi::Data::Configuration::WitConfigurationAssetData*>, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Configuration.WitConfiguration.GetEndpointInfo
::Meta::WitAi::IWitRequestEndpointInfo* Meta::WitAi::Data::Configuration::WitConfiguration::GetEndpointInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::GetEndpointInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Configuration::WitConfiguration*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::IWitRequestEndpointInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Data.Configuration.WitConfiguration.GetClientAccessToken
::StringW Meta::WitAi::Data::Configuration::WitConfiguration::GetClientAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::Configuration::WitConfiguration::GetClientAccessToken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Data::Configuration::WitConfiguration*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.ConfidenceRange
#include "Meta/WitAi/CallbackHandlers/ConfidenceRange.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single minConfidence
[[deprecated("Use field access instead!")]] float& Meta::WitAi::CallbackHandlers::ConfidenceRange::dyn_minConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ConfidenceRange::dyn_minConfidence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minConfidence"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxConfidence
[[deprecated("Use field access instead!")]] float& Meta::WitAi::CallbackHandlers::ConfidenceRange::dyn_maxConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ConfidenceRange::dyn_maxConfidence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxConfidence"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent onWithinConfidenceRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::CallbackHandlers::ConfidenceRange::dyn_onWithinConfidenceRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ConfidenceRange::dyn_onWithinConfidenceRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onWithinConfidenceRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent onOutsideConfidenceRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::CallbackHandlers::ConfidenceRange::dyn_onOutsideConfidenceRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ConfidenceRange::dyn_onOutsideConfidenceRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onOutsideConfidenceRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.OutOfScopeUtteranceHandler
#include "Meta/WitAi/CallbackHandlers/OutOfScopeUtteranceHandler.hpp"
// Including type: Meta.WitAi.Utilities.StringEvent
#include "Meta/WitAi/Utilities/StringEvent.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single confidenceThreshold
[[deprecated("Use field access instead!")]] float& Meta::WitAi::CallbackHandlers::OutOfScopeUtteranceHandler::dyn_confidenceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::OutOfScopeUtteranceHandler::dyn_confidenceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "confidenceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Utilities.StringEvent onOutOfDomain
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Utilities::StringEvent*& Meta::WitAi::CallbackHandlers::OutOfScopeUtteranceHandler::dyn_onOutOfDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::OutOfScopeUtteranceHandler::dyn_onOutOfDomain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onOutOfDomain"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Utilities::StringEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.OutOfScopeUtteranceHandler.OnValidateResponse
::StringW Meta::WitAi::CallbackHandlers::OutOfScopeUtteranceHandler::OnValidateResponse(::Meta::WitAi::Json::WitResponseNode* response, bool isEarlyResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::OutOfScopeUtteranceHandler::OnValidateResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, response, isEarlyResponse);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.OutOfScopeUtteranceHandler.OnResponseInvalid
void Meta::WitAi::CallbackHandlers::OutOfScopeUtteranceHandler::OnResponseInvalid(::Meta::WitAi::Json::WitResponseNode* response, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::OutOfScopeUtteranceHandler::OnResponseInvalid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response, error);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.OutOfScopeUtteranceHandler.OnResponseSuccess
void Meta::WitAi::CallbackHandlers::OutOfScopeUtteranceHandler::OnResponseSuccess(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::OutOfScopeUtteranceHandler::OnResponseSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.SimpleIntentHandler
#include "Meta/WitAi/CallbackHandlers/SimpleIntentHandler.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: Meta.WitAi.CallbackHandlers.ConfidenceRange
#include "Meta/WitAi/CallbackHandlers/ConfidenceRange.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent onIntentTriggered
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Meta::WitAi::CallbackHandlers::SimpleIntentHandler::dyn_onIntentTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::SimpleIntentHandler::dyn_onIntentTriggered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onIntentTriggered"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean allowConfidenceOverlap
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::CallbackHandlers::SimpleIntentHandler::dyn_allowConfidenceOverlap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::SimpleIntentHandler::dyn_allowConfidenceOverlap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowConfidenceOverlap"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.CallbackHandlers.ConfidenceRange[] confidenceRanges
[[deprecated("Use field access instead!")]] ::ArrayW<::Meta::WitAi::CallbackHandlers::ConfidenceRange*>& Meta::WitAi::CallbackHandlers::SimpleIntentHandler::dyn_confidenceRanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::SimpleIntentHandler::dyn_confidenceRanges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "confidenceRanges"))->offset;
  return *reinterpret_cast<::ArrayW<::Meta::WitAi::CallbackHandlers::ConfidenceRange*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.SimpleIntentHandler.get_OnIntentTriggered
::UnityEngine::Events::UnityEvent* Meta::WitAi::CallbackHandlers::SimpleIntentHandler::get_OnIntentTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::SimpleIntentHandler::get_OnIntentTriggered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnIntentTriggered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.SimpleIntentHandler.UpdateRanges
void Meta::WitAi::CallbackHandlers::SimpleIntentHandler::UpdateRanges(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::SimpleIntentHandler::UpdateRanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.SimpleIntentHandler.OnResponseSuccess
void Meta::WitAi::CallbackHandlers::SimpleIntentHandler::OnResponseSuccess(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::SimpleIntentHandler::OnResponseSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.SimpleIntentHandler.OnResponseInvalid
void Meta::WitAi::CallbackHandlers::SimpleIntentHandler::OnResponseInvalid(::Meta::WitAi::Json::WitResponseNode* response, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::SimpleIntentHandler::OnResponseInvalid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response, error);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.SimpleStringEntityHandler
#include "Meta/WitAi/CallbackHandlers/SimpleStringEntityHandler.hpp"
// Including type: Meta.WitAi.CallbackHandlers.StringEntityMatchEvent
#include "Meta/WitAi/CallbackHandlers/StringEntityMatchEvent.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String entity
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::CallbackHandlers::SimpleStringEntityHandler::dyn_entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::SimpleStringEntityHandler::dyn_entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entity"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String format
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::CallbackHandlers::SimpleStringEntityHandler::dyn_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::SimpleStringEntityHandler::dyn_format");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "format"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.CallbackHandlers.StringEntityMatchEvent onIntentEntityTriggered
[[deprecated("Use field access instead!")]] ::Meta::WitAi::CallbackHandlers::StringEntityMatchEvent*& Meta::WitAi::CallbackHandlers::SimpleStringEntityHandler::dyn_onIntentEntityTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::SimpleStringEntityHandler::dyn_onIntentEntityTriggered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onIntentEntityTriggered"))->offset;
  return *reinterpret_cast<::Meta::WitAi::CallbackHandlers::StringEntityMatchEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.SimpleStringEntityHandler.get_OnIntentEntityTriggered
::Meta::WitAi::CallbackHandlers::StringEntityMatchEvent* Meta::WitAi::CallbackHandlers::SimpleStringEntityHandler::get_OnIntentEntityTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::SimpleStringEntityHandler::get_OnIntentEntityTriggered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnIntentEntityTriggered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::CallbackHandlers::StringEntityMatchEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.SimpleStringEntityHandler.OnValidateResponse
::StringW Meta::WitAi::CallbackHandlers::SimpleStringEntityHandler::OnValidateResponse(::Meta::WitAi::Json::WitResponseNode* response, bool isEarlyResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::SimpleStringEntityHandler::OnValidateResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitIntentMatcher*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, response, isEarlyResponse);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.SimpleStringEntityHandler.OnResponseInvalid
void Meta::WitAi::CallbackHandlers::SimpleStringEntityHandler::OnResponseInvalid(::Meta::WitAi::Json::WitResponseNode* response, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::SimpleStringEntityHandler::OnResponseInvalid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response, error);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.SimpleStringEntityHandler.OnResponseSuccess
void Meta::WitAi::CallbackHandlers::SimpleStringEntityHandler::OnResponseSuccess(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::SimpleStringEntityHandler::OnResponseSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.StringEntityMatchEvent
#include "Meta/WitAi/CallbackHandlers/StringEntityMatchEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.WitIntentMatcher
#include "Meta/WitAi/CallbackHandlers/WitIntentMatcher.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String intent
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::CallbackHandlers::WitIntentMatcher::dyn_intent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitIntentMatcher::dyn_intent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intent"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single confidenceThreshold
[[deprecated("Use field access instead!")]] float& Meta::WitAi::CallbackHandlers::WitIntentMatcher::dyn_confidenceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitIntentMatcher::dyn_confidenceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "confidenceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitIntentMatcher.OnValidateResponse
::StringW Meta::WitAi::CallbackHandlers::WitIntentMatcher::OnValidateResponse(::Meta::WitAi::Json::WitResponseNode* response, bool isEarlyResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitIntentMatcher::OnValidateResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, response, isEarlyResponse);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitIntentMatcher.OnEnable
void Meta::WitAi::CallbackHandlers::WitIntentMatcher::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitIntentMatcher::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitIntentMatcher.OnDisable
void Meta::WitAi::CallbackHandlers::WitIntentMatcher::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitIntentMatcher::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.WitResponseEvent
#include "Meta/WitAi/CallbackHandlers/WitResponseEvent.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.WitResponseErrorEvent
#include "Meta/WitAi/CallbackHandlers/WitResponseErrorEvent.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.WitResponseHandler
#include "Meta/WitAi/CallbackHandlers/WitResponseHandler.hpp"
// Including type: Meta.WitAi.VoiceService
#include "Meta/WitAi/VoiceService.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Data.VoiceSession
#include "Meta/WitAi/Data/VoiceSession.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
// Including type: Meta.WitAi.CallbackHandlers.ConfidenceRange
#include "Meta/WitAi/CallbackHandlers/ConfidenceRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.VoiceService Voice
[[deprecated("Use field access instead!")]] ::Meta::WitAi::VoiceService*& Meta::WitAi::CallbackHandlers::WitResponseHandler::dyn_Voice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseHandler::dyn_Voice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Voice"))->offset;
  return *reinterpret_cast<::Meta::WitAi::VoiceService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ValidateEarly
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::CallbackHandlers::WitResponseHandler::dyn_ValidateEarly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseHandler::dyn_ValidateEarly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ValidateEarly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _validated
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::CallbackHandlers::WitResponseHandler::dyn__validated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseHandler::dyn__validated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_validated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseHandler.OnValidate
void Meta::WitAi::CallbackHandlers::WitResponseHandler::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseHandler::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseHandler.OnEnable
void Meta::WitAi::CallbackHandlers::WitResponseHandler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseHandler::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseHandler.OnDisable
void Meta::WitAi::CallbackHandlers::WitResponseHandler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseHandler::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseHandler.OnRequestSend
void Meta::WitAi::CallbackHandlers::WitResponseHandler::OnRequestSend(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseHandler::OnRequestSend");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseHandler.HandleValidateEarlyResponse
void Meta::WitAi::CallbackHandlers::WitResponseHandler::HandleValidateEarlyResponse(::Meta::WitAi::Data::VoiceSession* session) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseHandler::HandleValidateEarlyResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, session);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseHandler.HandleFinalResponse
void Meta::WitAi::CallbackHandlers::WitResponseHandler::HandleFinalResponse(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseHandler::HandleFinalResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseHandler.OnValidateResponse
::StringW Meta::WitAi::CallbackHandlers::WitResponseHandler::OnValidateResponse(::Meta::WitAi::Json::WitResponseNode* response, bool isEarlyResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseHandler::OnValidateResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, response, isEarlyResponse);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseHandler.OnResponseInvalid
void Meta::WitAi::CallbackHandlers::WitResponseHandler::OnResponseInvalid(::Meta::WitAi::Json::WitResponseNode* response, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseHandler::OnResponseInvalid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response, error);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseHandler.OnResponseSuccess
void Meta::WitAi::CallbackHandlers::WitResponseHandler::OnResponseSuccess(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseHandler::OnResponseSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseHandler.RefreshConfidenceRange
bool Meta::WitAi::CallbackHandlers::WitResponseHandler::RefreshConfidenceRange(float confidence, ::ArrayW<::Meta::WitAi::CallbackHandlers::ConfidenceRange*> confidenceRanges, bool allowConfidenceOverlap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseHandler::RefreshConfidenceRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.CallbackHandlers", "WitResponseHandler", "RefreshConfidenceRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(confidence), ::il2cpp_utils::ExtractType(confidenceRanges), ::il2cpp_utils::ExtractType(allowConfidenceOverlap)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, confidence, confidenceRanges, allowConfidenceOverlap);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.WitResponseMatcher
#include "Meta/WitAi/CallbackHandlers/WitResponseMatcher.hpp"
// Including type: Meta.WitAi.CallbackHandlers.ValuePathMatcher
#include "Meta/WitAi/CallbackHandlers/ValuePathMatcher.hpp"
// Including type: Meta.WitAi.CallbackHandlers.FormattedValueEvents
#include "Meta/WitAi/CallbackHandlers/FormattedValueEvents.hpp"
// Including type: Meta.WitAi.CallbackHandlers.MultiValueEvent
#include "Meta/WitAi/CallbackHandlers/MultiValueEvent.hpp"
// Including type: Meta.WitAi.Utilities.StringEvent
#include "Meta/WitAi/Utilities/StringEvent.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex valueRegex
::System::Text::RegularExpressions::Regex* Meta::WitAi::CallbackHandlers::WitResponseMatcher::_get_valueRegex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::_get_valueRegex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex*>("Meta.WitAi.CallbackHandlers", "WitResponseMatcher", "valueRegex"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex valueRegex
void Meta::WitAi::CallbackHandlers::WitResponseMatcher::_set_valueRegex(::System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::_set_valueRegex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.CallbackHandlers", "WitResponseMatcher", "valueRegex", value));
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.CallbackHandlers.ValuePathMatcher[] valueMatchers
[[deprecated("Use field access instead!")]] ::ArrayW<::Meta::WitAi::CallbackHandlers::ValuePathMatcher*>& Meta::WitAi::CallbackHandlers::WitResponseMatcher::dyn_valueMatchers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::dyn_valueMatchers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueMatchers"))->offset;
  return *reinterpret_cast<::ArrayW<::Meta::WitAi::CallbackHandlers::ValuePathMatcher*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.CallbackHandlers.FormattedValueEvents[] formattedValueEvents
[[deprecated("Use field access instead!")]] ::ArrayW<::Meta::WitAi::CallbackHandlers::FormattedValueEvents*>& Meta::WitAi::CallbackHandlers::WitResponseMatcher::dyn_formattedValueEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::dyn_formattedValueEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "formattedValueEvents"))->offset;
  return *reinterpret_cast<::ArrayW<::Meta::WitAi::CallbackHandlers::FormattedValueEvents*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.CallbackHandlers.MultiValueEvent onMultiValueEvent
[[deprecated("Use field access instead!")]] ::Meta::WitAi::CallbackHandlers::MultiValueEvent*& Meta::WitAi::CallbackHandlers::WitResponseMatcher::dyn_onMultiValueEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::dyn_onMultiValueEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onMultiValueEvent"))->offset;
  return *reinterpret_cast<::Meta::WitAi::CallbackHandlers::MultiValueEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Utilities.StringEvent onDidNotMatch
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Utilities::StringEvent*& Meta::WitAi::CallbackHandlers::WitResponseMatcher::dyn_onDidNotMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::dyn_onDidNotMatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDidNotMatch"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Utilities::StringEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Utilities.StringEvent onOutOfDomain
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Utilities::StringEvent*& Meta::WitAi::CallbackHandlers::WitResponseMatcher::dyn_onOutOfDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::dyn_onOutOfDomain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onOutOfDomain"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Utilities::StringEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseMatcher.ValueMatches
bool Meta::WitAi::CallbackHandlers::WitResponseMatcher::ValueMatches(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::ValueMatches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueMatches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseMatcher.ValueMatches
bool Meta::WitAi::CallbackHandlers::WitResponseMatcher::ValueMatches(::Meta::WitAi::Json::WitResponseNode* response, ::Meta::WitAi::CallbackHandlers::ValuePathMatcher* matcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::ValueMatches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueMatches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(matcher)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, response, matcher);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseMatcher.CompareDouble
bool Meta::WitAi::CallbackHandlers::WitResponseMatcher::CompareDouble(::StringW value, ::Meta::WitAi::CallbackHandlers::ValuePathMatcher* matcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::CompareDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(matcher)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, matcher);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseMatcher.CompareFloat
bool Meta::WitAi::CallbackHandlers::WitResponseMatcher::CompareFloat(::StringW value, ::Meta::WitAi::CallbackHandlers::ValuePathMatcher* matcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::CompareFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(matcher)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, matcher);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseMatcher.CompareInt
bool Meta::WitAi::CallbackHandlers::WitResponseMatcher::CompareInt(::StringW value, ::Meta::WitAi::CallbackHandlers::ValuePathMatcher* matcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::CompareInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(matcher)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, matcher);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseMatcher..cctor
void Meta::WitAi::CallbackHandlers::WitResponseMatcher::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.CallbackHandlers", "WitResponseMatcher", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseMatcher.OnValidateResponse
::StringW Meta::WitAi::CallbackHandlers::WitResponseMatcher::OnValidateResponse(::Meta::WitAi::Json::WitResponseNode* response, bool isEarlyResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::OnValidateResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitIntentMatcher*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, response, isEarlyResponse);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseMatcher.OnResponseInvalid
void Meta::WitAi::CallbackHandlers::WitResponseMatcher::OnResponseInvalid(::Meta::WitAi::Json::WitResponseNode* response, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::OnResponseInvalid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response, error);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.WitResponseMatcher.OnResponseSuccess
void Meta::WitAi::CallbackHandlers::WitResponseMatcher::OnResponseSuccess(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::WitResponseMatcher::OnResponseSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::CallbackHandlers::WitResponseHandler*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.MultiValueEvent
#include "Meta/WitAi/CallbackHandlers/MultiValueEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.ValueEvent
#include "Meta/WitAi/CallbackHandlers/ValueEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.FormattedValueEvents
#include "Meta/WitAi/CallbackHandlers/FormattedValueEvents.hpp"
// Including type: Meta.WitAi.CallbackHandlers.ValueEvent
#include "Meta/WitAi/CallbackHandlers/ValueEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String format
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::CallbackHandlers::FormattedValueEvents::dyn_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::FormattedValueEvents::dyn_format");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "format"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.CallbackHandlers.ValueEvent onFormattedValueEvent
[[deprecated("Use field access instead!")]] ::Meta::WitAi::CallbackHandlers::ValueEvent*& Meta::WitAi::CallbackHandlers::FormattedValueEvents::dyn_onFormattedValueEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::FormattedValueEvents::dyn_onFormattedValueEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFormattedValueEvent"))->offset;
  return *reinterpret_cast<::Meta::WitAi::CallbackHandlers::ValueEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.ValuePathMatcher
#include "Meta/WitAi/CallbackHandlers/ValuePathMatcher.hpp"
// Including type: Meta.WitAi.Data.WitValue
#include "Meta/WitAi/Data/WitValue.hpp"
// Including type: Meta.WitAi.CallbackHandlers.ConfidenceRange
#include "Meta/WitAi/CallbackHandlers/ConfidenceRange.hpp"
// Including type: Meta.WitAi.WitResponseReference
#include "Meta/WitAi/WitResponseReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String path
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Data.WitValue witValueReference
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::WitValue*& Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_witValueReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_witValueReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "witValueReference"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::WitValue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean contentRequired
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_contentRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_contentRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.CallbackHandlers.MatchMethod matchMethod
[[deprecated("Use field access instead!")]] ::Meta::WitAi::CallbackHandlers::MatchMethod& Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_matchMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_matchMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matchMethod"))->offset;
  return *reinterpret_cast<::Meta::WitAi::CallbackHandlers::MatchMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.CallbackHandlers.ComparisonMethod comparisonMethod
[[deprecated("Use field access instead!")]] ::Meta::WitAi::CallbackHandlers::ComparisonMethod& Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_comparisonMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_comparisonMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comparisonMethod"))->offset;
  return *reinterpret_cast<::Meta::WitAi::CallbackHandlers::ComparisonMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String matchValue
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_matchValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_matchValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matchValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double floatingPointComparisonTolerance
[[deprecated("Use field access instead!")]] double& Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_floatingPointComparisonTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_floatingPointComparisonTolerance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floatingPointComparisonTolerance"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean allowConfidenceOverlap
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_allowConfidenceOverlap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_allowConfidenceOverlap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowConfidenceOverlap"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.CallbackHandlers.ConfidenceRange[] confidenceRanges
[[deprecated("Use field access instead!")]] ::ArrayW<::Meta::WitAi::CallbackHandlers::ConfidenceRange*>& Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_confidenceRanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_confidenceRanges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "confidenceRanges"))->offset;
  return *reinterpret_cast<::ArrayW<::Meta::WitAi::CallbackHandlers::ConfidenceRange*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.WitResponseReference pathReference
[[deprecated("Use field access instead!")]] ::Meta::WitAi::WitResponseReference*& Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_pathReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_pathReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathReference"))->offset;
  return *reinterpret_cast<::Meta::WitAi::WitResponseReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.WitResponseReference confidencePathReference
[[deprecated("Use field access instead!")]] ::Meta::WitAi::WitResponseReference*& Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_confidencePathReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ValuePathMatcher::dyn_confidencePathReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "confidencePathReference"))->offset;
  return *reinterpret_cast<::Meta::WitAi::WitResponseReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.ValuePathMatcher.get_ConfidenceReference
::Meta::WitAi::WitResponseReference* Meta::WitAi::CallbackHandlers::ValuePathMatcher::get_ConfidenceReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ValuePathMatcher::get_ConfidenceReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConfidenceReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::WitResponseReference*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.CallbackHandlers.ValuePathMatcher.get_Reference
::Meta::WitAi::WitResponseReference* Meta::WitAi::CallbackHandlers::ValuePathMatcher::get_Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ValuePathMatcher::get_Reference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::WitResponseReference*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.CallbackHandlers.ComparisonMethod
#include "Meta/WitAi/CallbackHandlers/ComparisonMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.CallbackHandlers.ComparisonMethod Equals
::Meta::WitAi::CallbackHandlers::ComparisonMethod Meta::WitAi::CallbackHandlers::ComparisonMethod::_get_Equals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ComparisonMethod::_get_Equals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::CallbackHandlers::ComparisonMethod>("Meta.WitAi.CallbackHandlers", "ComparisonMethod", "Equals"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.CallbackHandlers.ComparisonMethod Equals
void Meta::WitAi::CallbackHandlers::ComparisonMethod::_set_Equals(::Meta::WitAi::CallbackHandlers::ComparisonMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ComparisonMethod::_set_Equals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.CallbackHandlers", "ComparisonMethod", "Equals", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.CallbackHandlers.ComparisonMethod NotEquals
::Meta::WitAi::CallbackHandlers::ComparisonMethod Meta::WitAi::CallbackHandlers::ComparisonMethod::_get_NotEquals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ComparisonMethod::_get_NotEquals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::CallbackHandlers::ComparisonMethod>("Meta.WitAi.CallbackHandlers", "ComparisonMethod", "NotEquals"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.CallbackHandlers.ComparisonMethod NotEquals
void Meta::WitAi::CallbackHandlers::ComparisonMethod::_set_NotEquals(::Meta::WitAi::CallbackHandlers::ComparisonMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ComparisonMethod::_set_NotEquals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.CallbackHandlers", "ComparisonMethod", "NotEquals", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.CallbackHandlers.ComparisonMethod Greater
::Meta::WitAi::CallbackHandlers::ComparisonMethod Meta::WitAi::CallbackHandlers::ComparisonMethod::_get_Greater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ComparisonMethod::_get_Greater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::CallbackHandlers::ComparisonMethod>("Meta.WitAi.CallbackHandlers", "ComparisonMethod", "Greater"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.CallbackHandlers.ComparisonMethod Greater
void Meta::WitAi::CallbackHandlers::ComparisonMethod::_set_Greater(::Meta::WitAi::CallbackHandlers::ComparisonMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ComparisonMethod::_set_Greater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.CallbackHandlers", "ComparisonMethod", "Greater", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.CallbackHandlers.ComparisonMethod GreaterThanOrEqualTo
::Meta::WitAi::CallbackHandlers::ComparisonMethod Meta::WitAi::CallbackHandlers::ComparisonMethod::_get_GreaterThanOrEqualTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ComparisonMethod::_get_GreaterThanOrEqualTo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::CallbackHandlers::ComparisonMethod>("Meta.WitAi.CallbackHandlers", "ComparisonMethod", "GreaterThanOrEqualTo"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.CallbackHandlers.ComparisonMethod GreaterThanOrEqualTo
void Meta::WitAi::CallbackHandlers::ComparisonMethod::_set_GreaterThanOrEqualTo(::Meta::WitAi::CallbackHandlers::ComparisonMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ComparisonMethod::_set_GreaterThanOrEqualTo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.CallbackHandlers", "ComparisonMethod", "GreaterThanOrEqualTo", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.CallbackHandlers.ComparisonMethod Less
::Meta::WitAi::CallbackHandlers::ComparisonMethod Meta::WitAi::CallbackHandlers::ComparisonMethod::_get_Less() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ComparisonMethod::_get_Less");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::CallbackHandlers::ComparisonMethod>("Meta.WitAi.CallbackHandlers", "ComparisonMethod", "Less"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.CallbackHandlers.ComparisonMethod Less
void Meta::WitAi::CallbackHandlers::ComparisonMethod::_set_Less(::Meta::WitAi::CallbackHandlers::ComparisonMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ComparisonMethod::_set_Less");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.CallbackHandlers", "ComparisonMethod", "Less", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.CallbackHandlers.ComparisonMethod LessThanOrEqualTo
::Meta::WitAi::CallbackHandlers::ComparisonMethod Meta::WitAi::CallbackHandlers::ComparisonMethod::_get_LessThanOrEqualTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ComparisonMethod::_get_LessThanOrEqualTo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::CallbackHandlers::ComparisonMethod>("Meta.WitAi.CallbackHandlers", "ComparisonMethod", "LessThanOrEqualTo"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.CallbackHandlers.ComparisonMethod LessThanOrEqualTo
void Meta::WitAi::CallbackHandlers::ComparisonMethod::_set_LessThanOrEqualTo(::Meta::WitAi::CallbackHandlers::ComparisonMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ComparisonMethod::_set_LessThanOrEqualTo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.CallbackHandlers", "ComparisonMethod", "LessThanOrEqualTo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Meta::WitAi::CallbackHandlers::ComparisonMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::CallbackHandlers::ComparisonMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
