// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: HandTapArgs
#include "GlobalNamespace/HandTapArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 soundIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HandTapArgs::dyn_soundIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandTapArgs::dyn_soundIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isLeftHand
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HandTapArgs::dyn_isLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandTapArgs::dyn_isLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isLeftHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tapVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandTapArgs::dyn_tapVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandTapArgs::dyn_tapVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tapVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GeoSoundArg
#include "GlobalNamespace/GeoSoundArg.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GeoSoundArg::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GeoSoundArg::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VRRigSerializer
#include "GlobalNamespace/VRRigSerializer.hpp"
// Including type: HandTapArgs
#include "GlobalNamespace/HandTapArgs.hpp"
// Including type: GeoSoundArg
#include "GlobalNamespace/GeoSoundArg.hpp"
// Including type: Photon.Voice.PUN.PhotonVoiceView
#include "Photon/Voice/PUN/PhotonVoiceView.hpp"
// Including type: Photon.Voice.Fusion.VoiceNetworkObject
#include "Photon/Voice/Fusion/VoiceNetworkObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: RigContainer
#include "GlobalNamespace/RigContainer.hpp"
// Including type: Fusion.ChangedDelegate`1
#include "Fusion/ChangedDelegate_1.hpp"
// Including type: Fusion.NetworkBehaviourCallbacks`1
#include "Fusion/NetworkBehaviourCallbacks_1.hpp"
// Including type: FXSystemSettings
#include "GlobalNamespace/FXSystemSettings.hpp"
// Including type: Fusion.RpcInfo
#include "Fusion/RpcInfo.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: Fusion.NetworkBehaviour
#include "Fusion/NetworkBehaviour.hpp"
// Including type: Fusion.SimulationMessage
#include "Fusion/SimulationMessage.hpp"
// Including type: PhotonMessageInfoWrapped
#include "GlobalNamespace/PhotonMessageInfoWrapped.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static Fusion.Changed`1<VRRigSerializer> $IL2CPP_CHANGED
::Fusion::Changed_1<::GlobalNamespace::VRRigSerializer*> GlobalNamespace::VRRigSerializer::_get_$IL2CPP_CHANGED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::_get_$IL2CPP_CHANGED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Changed_1<::GlobalNamespace::VRRigSerializer*>>("", "VRRigSerializer", "$IL2CPP_CHANGED"));
}
// Autogenerated static field setter
// Set static field: static Fusion.Changed`1<VRRigSerializer> $IL2CPP_CHANGED
void GlobalNamespace::VRRigSerializer::_set_$IL2CPP_CHANGED(::Fusion::Changed_1<::GlobalNamespace::VRRigSerializer*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::_set_$IL2CPP_CHANGED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRRigSerializer", "$IL2CPP_CHANGED", value));
}
// Autogenerated static field getter
// Get static field: static Fusion.ChangedDelegate`1<VRRigSerializer> $IL2CPP_CHANGED_DELEGATE
::Fusion::ChangedDelegate_1<::GlobalNamespace::VRRigSerializer*>* GlobalNamespace::VRRigSerializer::_get_$IL2CPP_CHANGED_DELEGATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::_get_$IL2CPP_CHANGED_DELEGATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::ChangedDelegate_1<::GlobalNamespace::VRRigSerializer*>*>("", "VRRigSerializer", "$IL2CPP_CHANGED_DELEGATE"));
}
// Autogenerated static field setter
// Set static field: static Fusion.ChangedDelegate`1<VRRigSerializer> $IL2CPP_CHANGED_DELEGATE
void GlobalNamespace::VRRigSerializer::_set_$IL2CPP_CHANGED_DELEGATE(::Fusion::ChangedDelegate_1<::GlobalNamespace::VRRigSerializer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::_set_$IL2CPP_CHANGED_DELEGATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRRigSerializer", "$IL2CPP_CHANGED_DELEGATE", value));
}
// Autogenerated static field getter
// Get static field: static Fusion.NetworkBehaviourCallbacks`1<VRRigSerializer> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS
::Fusion::NetworkBehaviourCallbacks_1<::GlobalNamespace::VRRigSerializer*>* GlobalNamespace::VRRigSerializer::_get_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::_get_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::NetworkBehaviourCallbacks_1<::GlobalNamespace::VRRigSerializer*>*>("", "VRRigSerializer", "$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS"));
}
// Autogenerated static field setter
// Set static field: static Fusion.NetworkBehaviourCallbacks`1<VRRigSerializer> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS
void GlobalNamespace::VRRigSerializer::_set_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS(::Fusion::NetworkBehaviourCallbacks_1<::GlobalNamespace::VRRigSerializer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::_set_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRRigSerializer", "$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS", value));
}
// Autogenerated instance field getter
// Get instance field: private Fusion.NetworkString`1<Fusion._16> _nickName
[[deprecated("Use field access instead!")]] ::Fusion::NetworkString_1<::Fusion::_16>& GlobalNamespace::VRRigSerializer::dyn__nickName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::dyn__nickName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nickName"))->offset;
  return *reinterpret_cast<::Fusion::NetworkString_1<::Fusion::_16>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.NetworkString`1<Fusion._16> _defaultName
[[deprecated("Use field access instead!")]] ::Fusion::NetworkString_1<::Fusion::_16>& GlobalNamespace::VRRigSerializer::dyn__defaultName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::dyn__defaultName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultName"))->offset;
  return *reinterpret_cast<::Fusion::NetworkString_1<::Fusion::_16>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _tutorialComplete
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRRigSerializer::dyn__tutorialComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::dyn__tutorialComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialComplete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.PUN.PhotonVoiceView voiceView
[[deprecated("Use field access instead!")]] ::Photon::Voice::PUN::PhotonVoiceView*& GlobalNamespace::VRRigSerializer::dyn_voiceView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::dyn_voiceView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceView"))->offset;
  return *reinterpret_cast<::Photon::Voice::PUN::PhotonVoiceView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Fusion.VoiceNetworkObject fusionVoiceView
[[deprecated("Use field access instead!")]] ::Photon::Voice::Fusion::VoiceNetworkObject*& GlobalNamespace::VRRigSerializer::dyn_fusionVoiceView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::dyn_fusionVoiceView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fusionVoiceView"))->offset;
  return *reinterpret_cast<::Photon::Voice::Fusion::VoiceNetworkObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform networkSpeaker
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRRigSerializer::dyn_networkSpeaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::dyn_networkSpeaker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "networkSpeaker"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig vrrig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::VRRigSerializer::dyn_vrrig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::dyn_vrrig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrrig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RigContainer rigContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RigContainer*& GlobalNamespace::VRRigSerializer::dyn_rigContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::dyn_rigContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RigContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HandTapArgs handTapArgs
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HandTapArgs*& GlobalNamespace::VRRigSerializer::dyn_handTapArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::dyn_handTapArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handTapArgs"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandTapArgs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GeoSoundArg geoSoundArg
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GeoSoundArg*& GlobalNamespace::VRRigSerializer::dyn_geoSoundArg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::dyn_geoSoundArg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "geoSoundArg"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GeoSoundArg**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRRigSerializer.get_nickName
::Fusion::NetworkString_1<::Fusion::_16> GlobalNamespace::VRRigSerializer::get_nickName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::get_nickName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nickName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkString_1<::Fusion::_16>, false>(this, ___internal__method);
}
// Autogenerated method: VRRigSerializer.set_nickName
void GlobalNamespace::VRRigSerializer::set_nickName(::Fusion::NetworkString_1<::Fusion::_16> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::set_nickName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_nickName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRRigSerializer.get_defaultName
::Fusion::NetworkString_1<::Fusion::_16> GlobalNamespace::VRRigSerializer::get_defaultName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::get_defaultName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkString_1<::Fusion::_16>, false>(this, ___internal__method);
}
// Autogenerated method: VRRigSerializer.set_defaultName
void GlobalNamespace::VRRigSerializer::set_defaultName(::Fusion::NetworkString_1<::Fusion::_16> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::set_defaultName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_defaultName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRRigSerializer.get_tutorialComplete
bool GlobalNamespace::VRRigSerializer::get_tutorialComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::get_tutorialComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tutorialComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRRigSerializer.set_tutorialComplete
void GlobalNamespace::VRRigSerializer::set_tutorialComplete(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::set_tutorialComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tutorialComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRRigSerializer.get_settings
::GlobalNamespace::FXSystemSettings* GlobalNamespace::VRRigSerializer::get_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::get_settings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRRigSerializer*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FXSystemSettings*, false>(this, ___internal__method);
}
// Autogenerated method: VRRigSerializer.CleanUp
void GlobalNamespace::VRRigSerializer::CleanUp(bool netDestroy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::CleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(netDestroy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, netDestroy);
}
// Autogenerated method: VRRigSerializer.OnDisable
void GlobalNamespace::VRRigSerializer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRigSerializer.OnDestroy
void GlobalNamespace::VRRigSerializer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRigSerializer.RPC_InitializeNoobMaterial
void GlobalNamespace::VRRigSerializer::RPC_InitializeNoobMaterial(float red, float green, float blue, ::Fusion::RpcInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::RPC_InitializeNoobMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RPC_InitializeNoobMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(red), ::il2cpp_utils::ExtractType(green), ::il2cpp_utils::ExtractType(blue), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, red, green, blue, info);
}
// Autogenerated method: VRRigSerializer.InitializeNoobMaterial
void GlobalNamespace::VRRigSerializer::InitializeNoobMaterial(float red, float green, float blue, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::InitializeNoobMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeNoobMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(red), ::il2cpp_utils::ExtractType(green), ::il2cpp_utils::ExtractType(blue), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, red, green, blue, info);
}
// Autogenerated method: VRRigSerializer.RPC_RequestMaterialColor
void GlobalNamespace::VRRigSerializer::RPC_RequestMaterialColor(int askingPlayerID, ::Fusion::RpcInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::RPC_RequestMaterialColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RPC_RequestMaterialColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(askingPlayerID), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, askingPlayerID, info);
}
// Autogenerated method: VRRigSerializer.RequestMaterialColor
void GlobalNamespace::VRRigSerializer::RequestMaterialColor(::Photon::Realtime::Player* askingPlayer, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::RequestMaterialColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestMaterialColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(askingPlayer), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, askingPlayer, info);
}
// Autogenerated method: VRRigSerializer.RequestCosmetics
void GlobalNamespace::VRRigSerializer::RequestCosmetics(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::RequestCosmetics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestCosmetics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: VRRigSerializer.PlayDrum
void GlobalNamespace::VRRigSerializer::PlayDrum(int drumIndex, float drumVolume, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::PlayDrum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayDrum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(drumIndex), ::il2cpp_utils::ExtractType(drumVolume), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, drumIndex, drumVolume, info);
}
// Autogenerated method: VRRigSerializer.PlaySelfOnlyInstrument
void GlobalNamespace::VRRigSerializer::PlaySelfOnlyInstrument(int selfOnlyIndex, int noteIndex, float instrumentVol, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::PlaySelfOnlyInstrument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySelfOnlyInstrument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selfOnlyIndex), ::il2cpp_utils::ExtractType(noteIndex), ::il2cpp_utils::ExtractType(instrumentVol), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selfOnlyIndex, noteIndex, instrumentVol, info);
}
// Autogenerated method: VRRigSerializer.RPC_PlayHandTap
void GlobalNamespace::VRRigSerializer::RPC_PlayHandTap(int soundIndex, bool isLeftHand, float tapVolume, ::Fusion::RpcInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::RPC_PlayHandTap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RPC_PlayHandTap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundIndex), ::il2cpp_utils::ExtractType(isLeftHand), ::il2cpp_utils::ExtractType(tapVolume), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundIndex, isLeftHand, tapVolume, info);
}
// Autogenerated method: VRRigSerializer.PlayHandTap
void GlobalNamespace::VRRigSerializer::PlayHandTap(int soundIndex, bool isLeftHand, float tapVolume, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::PlayHandTap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayHandTap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundIndex), ::il2cpp_utils::ExtractType(isLeftHand), ::il2cpp_utils::ExtractType(tapVolume), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundIndex, isLeftHand, tapVolume, info);
}
// Autogenerated method: VRRigSerializer.IFXContextParems<HandTapArgs>.OnPlayFX
void GlobalNamespace::VRRigSerializer::IFXContextParems$HandTapArgs$_OnPlayFX(::GlobalNamespace::HandTapArgs* parems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::IFXContextParems<HandTapArgs>.OnPlayFX");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRRigSerializer*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parems);
}
// Autogenerated method: VRRigSerializer.UpdateCosmetics
void GlobalNamespace::VRRigSerializer::UpdateCosmetics(::ArrayW<::StringW> currentItems, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::UpdateCosmetics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCosmetics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentItems), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentItems, info);
}
// Autogenerated method: VRRigSerializer.UpdateCosmeticsWithTryon
void GlobalNamespace::VRRigSerializer::UpdateCosmeticsWithTryon(::ArrayW<::StringW> currentItems, ::ArrayW<::StringW> tryOnItems, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::UpdateCosmeticsWithTryon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCosmeticsWithTryon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentItems), ::il2cpp_utils::ExtractType(tryOnItems), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentItems, tryOnItems, info);
}
// Autogenerated method: VRRigSerializer.PlaySplashEffect
void GlobalNamespace::VRRigSerializer::PlaySplashEffect(::UnityEngine::Vector3 splashPosition, ::UnityEngine::Quaternion splashRotation, float splashScale, float boundingRadius, bool bigSplash, bool enteringWater, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::PlaySplashEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySplashEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(splashPosition), ::il2cpp_utils::ExtractType(splashRotation), ::il2cpp_utils::ExtractType(splashScale), ::il2cpp_utils::ExtractType(boundingRadius), ::il2cpp_utils::ExtractType(bigSplash), ::il2cpp_utils::ExtractType(enteringWater), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, splashPosition, splashRotation, splashScale, boundingRadius, bigSplash, enteringWater, info);
}
// Autogenerated method: VRRigSerializer.PlayGeodeEffect
void GlobalNamespace::VRRigSerializer::PlayGeodeEffect(::UnityEngine::Vector3 hitPosition, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::PlayGeodeEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayGeodeEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hitPosition), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hitPosition, info);
}
// Autogenerated method: VRRigSerializer.IFXContextParems<GeoSoundArg>.OnPlayFX
void GlobalNamespace::VRRigSerializer::IFXContextParems$GeoSoundArg$_OnPlayFX(::GlobalNamespace::GeoSoundArg* parems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::IFXContextParems<GeoSoundArg>.OnPlayFX");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRRigSerializer*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parems);
}
// Autogenerated method: VRRigSerializer.EnableNonCosmeticHandItemRPC
void GlobalNamespace::VRRigSerializer::EnableNonCosmeticHandItemRPC(bool enable, bool isLeftHand, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::EnableNonCosmeticHandItemRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableNonCosmeticHandItemRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable), ::il2cpp_utils::ExtractType(isLeftHand), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable, isLeftHand, info);
}
// Autogenerated method: VRRigSerializer.RPC_InitializeNoobMaterial@Invoker
void GlobalNamespace::VRRigSerializer::RPC_InitializeNoobMaterial@Invoker(::Fusion::NetworkBehaviour* behaviour, ::Fusion::SimulationMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::RPC_InitializeNoobMaterial@Invoker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRRigSerializer", "RPC_InitializeNoobMaterial@Invoker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviour), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, behaviour, message);
}
// Autogenerated method: VRRigSerializer.RPC_RequestMaterialColor@Invoker
void GlobalNamespace::VRRigSerializer::RPC_RequestMaterialColor@Invoker(::Fusion::NetworkBehaviour* behaviour, ::Fusion::SimulationMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::RPC_RequestMaterialColor@Invoker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRRigSerializer", "RPC_RequestMaterialColor@Invoker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviour), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, behaviour, message);
}
// Autogenerated method: VRRigSerializer.RPC_PlayHandTap@Invoker
void GlobalNamespace::VRRigSerializer::RPC_PlayHandTap@Invoker(::Fusion::NetworkBehaviour* behaviour, ::Fusion::SimulationMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::RPC_PlayHandTap@Invoker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRRigSerializer", "RPC_PlayHandTap@Invoker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviour), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, behaviour, message);
}
// Autogenerated method: VRRigSerializer.OnSpawnSetupCheck
bool GlobalNamespace::VRRigSerializer::OnSpawnSetupCheck(::GlobalNamespace::PhotonMessageInfoWrapped wrappedInfo, ByRef<::UnityEngine::GameObject*> outTargetObject, ByRef<::System::Type*> outTargetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::OnSpawnSetupCheck");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaWrappedSerializer_1<T>*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, wrappedInfo, byref(outTargetObject), byref(outTargetType));
}
// Autogenerated method: VRRigSerializer.OnSuccesfullySpawned
void GlobalNamespace::VRRigSerializer::OnSuccesfullySpawned(::GlobalNamespace::PhotonMessageInfoWrapped info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::OnSuccesfullySpawned");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaWrappedSerializer_1<T>*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: VRRigSerializer.OnFailedSpawn
void GlobalNamespace::VRRigSerializer::OnFailedSpawn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::OnFailedSpawn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaWrappedSerializer_1<T>*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRigSerializer.OnBeforeDespawn
void GlobalNamespace::VRRigSerializer::OnBeforeDespawn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::OnBeforeDespawn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaWrappedSerializer_1<T>*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRigSerializer.CopyBackingFieldsToState
void GlobalNamespace::VRRigSerializer::CopyBackingFieldsToState(bool param_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::CopyBackingFieldsToState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaWrappedSerializer_1<T>*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, param_0);
}
// Autogenerated method: VRRigSerializer.CopyStateToBackingFields
void GlobalNamespace::VRRigSerializer::CopyStateToBackingFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigSerializer::CopyStateToBackingFields");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaWrappedSerializer_1<T>*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaBallWall
#include "GlobalNamespace/GorillaBallWall.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaBallWall instance
::GlobalNamespace::GorillaBallWall* GlobalNamespace::GorillaBallWall::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBallWall::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBallWall*>("", "GorillaBallWall", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBallWall instance
void GlobalNamespace::GorillaBallWall::_set_instance(::GlobalNamespace::GorillaBallWall* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBallWall::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBallWall", "instance", value));
}
// Autogenerated method: GorillaBallWall.Awake
void GlobalNamespace::GorillaBallWall::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBallWall::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBallWall.Update
void GlobalNamespace::GorillaBallWall::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBallWall::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaBattleManager
#include "GlobalNamespace/GorillaBattleManager.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: GorillaBattleManager/<>c__DisplayClass81_0
#include "GlobalNamespace/GorillaBattleManager_--c__DisplayClass81_0.hpp"
// Including type: GorillaBattleManager/<StartBattleCountdown>d__45
#include "GlobalNamespace/GorillaBattleManager_-StartBattleCountdown-d__45.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: GorillaGameModes.GameModeType
#include "GorillaGameModes/GameModeType.hpp"
// Including type: GameModeSerializer
#include "GlobalNamespace/GameModeSerializer.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String ssString
::StringW GlobalNamespace::GorillaBattleManager::_get_ssString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::_get_ssString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GorillaBattleManager", "ssString"));
}
// Autogenerated static field setter
// Set static field: static System.String ssString
void GlobalNamespace::GorillaBattleManager::_set_ssString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::_set_ssString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager", "ssString", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single playerMin
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaBattleManager::dyn_playerMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_playerMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagCoolDown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaBattleManager::dyn_tagCoolDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_tagCoolDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagCoolDown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> playerLives
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, int>*& GlobalNamespace::GorillaBattleManager::dyn_playerLives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_playerLives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerLives"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.Int32,GorillaBattleManager/BattleStatus> playerStatusDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::GorillaBattleManager::BattleStatus>*& GlobalNamespace::GorillaBattleManager::dyn_playerStatusDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_playerStatusDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerStatusDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::GorillaBattleManager::BattleStatus>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.Int32,System.Single> playerHitTimes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, float>*& GlobalNamespace::GorillaBattleManager::dyn_playerHitTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_playerHitTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerHitTimes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.Int32,System.Single> playerStunTimes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, float>*& GlobalNamespace::GorillaBattleManager::dyn_playerStunTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_playerStunTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerStunTimes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] playerActorNumberArray
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::GorillaBattleManager::dyn_playerActorNumberArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_playerActorNumberArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerActorNumberArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] playerLivesArray
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::GorillaBattleManager::dyn_playerLivesArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_playerLivesArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerLivesArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaBattleManager/BattleStatus[] playerStatusArray
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaBattleManager::BattleStatus>& GlobalNamespace::GorillaBattleManager::dyn_playerStatusArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_playerStatusArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerStatusArray"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GorillaBattleManager::BattleStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean teamBattle
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaBattleManager::dyn_teamBattle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_teamBattle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teamBattle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 countDownTime
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaBattleManager::dyn_countDownTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_countDownTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "countDownTime"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timeBattleEnded
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaBattleManager::dyn_timeBattleEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_timeBattleEnded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeBattleEnded"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hitCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaBattleManager::dyn_hitCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_hitCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hitCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stunGracePeriod
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaBattleManager::dyn_stunGracePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_stunGracePeriod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stunGracePeriod"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object objRef
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaBattleManager::dyn_objRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_objRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objRef"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean playerInList
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaBattleManager::dyn_playerInList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_playerInList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerInList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean coroutineRunning
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaBattleManager::dyn_coroutineRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_coroutineRunning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutineRunning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lives
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaBattleManager::dyn_lives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_lives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lives"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 outLives
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaBattleManager::dyn_outLives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_outLives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outLives"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bcount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaBattleManager::dyn_bcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_bcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bcount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 rcount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaBattleManager::dyn_rcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_rcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rcount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 randInt
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaBattleManager::dyn_randInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_randInt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randInt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single outHitTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaBattleManager::dyn_outHitTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_outHitTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outHitTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonView tempView
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& GlobalNamespace::GorillaBattleManager::dyn_tempView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_tempView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempView"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.KeyValuePair`2<System.Int32,System.Int32>[] keyValuePairs
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Collections::Generic::KeyValuePair_2<int, int>>& GlobalNamespace::GorillaBattleManager::dyn_keyValuePairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_keyValuePairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyValuePairs"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Collections::Generic::KeyValuePair_2<int, int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.KeyValuePair`2<System.Int32,GorillaBattleManager/BattleStatus>[] keyValuePairsStatus
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Collections::Generic::KeyValuePair_2<int, ::GlobalNamespace::GorillaBattleManager::BattleStatus>>& GlobalNamespace::GorillaBattleManager::dyn_keyValuePairsStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_keyValuePairsStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyValuePairsStatus"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Collections::Generic::KeyValuePair_2<int, ::GlobalNamespace::GorillaBattleManager::BattleStatus>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaBattleManager/BattleStatus tempStatus
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaBattleManager::BattleStatus& GlobalNamespace::GorillaBattleManager::dyn_tempStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_tempStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempStatus"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaBattleManager::BattleStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaBattleManager/BattleState currentState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaBattleManager::BattleState& GlobalNamespace::GorillaBattleManager::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaBattleManager::BattleState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaBattleManager.ActivateBattleBalloons
void GlobalNamespace::GorillaBattleManager::ActivateBattleBalloons(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::ActivateBattleBalloons");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateBattleBalloons", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: GorillaBattleManager.HasFlag
bool GlobalNamespace::GorillaBattleManager::HasFlag(::GlobalNamespace::GorillaBattleManager::BattleStatus state, ::GlobalNamespace::GorillaBattleManager::BattleStatus statusFlag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::HasFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(statusFlag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, state, statusFlag);
}
// Autogenerated method: GorillaBattleManager.ActivateDefaultSlingShot
void GlobalNamespace::GorillaBattleManager::ActivateDefaultSlingShot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::ActivateDefaultSlingShot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateDefaultSlingShot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.Transition
void GlobalNamespace::GorillaBattleManager::Transition(::GlobalNamespace::GorillaBattleManager::BattleState newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::Transition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState);
}
// Autogenerated method: GorillaBattleManager.UpdateBattleState
void GlobalNamespace::GorillaBattleManager::UpdateBattleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::UpdateBattleState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBattleState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.CheckForGameEnd
bool GlobalNamespace::GorillaBattleManager::CheckForGameEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::CheckForGameEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForGameEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.StartBattleCountdown
::System::Collections::IEnumerator* GlobalNamespace::GorillaBattleManager::StartBattleCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::StartBattleCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBattleCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.StartBattle
void GlobalNamespace::GorillaBattleManager::StartBattle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::StartBattle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBattle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.EndBattleGame
bool GlobalNamespace::GorillaBattleManager::EndBattleGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::EndBattleGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndBattleGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.BattleEnd
bool GlobalNamespace::GorillaBattleManager::BattleEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BattleEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.SlingshotHit
bool GlobalNamespace::GorillaBattleManager::SlingshotHit(::Photon::Realtime::Player* myPlayer, ::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::SlingshotHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SlingshotHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(myPlayer), ::il2cpp_utils::ExtractType(otherPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, myPlayer, otherPlayer);
}
// Autogenerated method: GorillaBattleManager.ReportSlingshotHit
void GlobalNamespace::GorillaBattleManager::ReportSlingshotHit(::Photon::Realtime::Player* taggedPlayer, ::UnityEngine::Vector3 hitLocation, int projectileCount, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::ReportSlingshotHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportSlingshotHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taggedPlayer), ::il2cpp_utils::ExtractType(hitLocation), ::il2cpp_utils::ExtractType(projectileCount), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, taggedPlayer, hitLocation, projectileCount, info);
}
// Autogenerated method: GorillaBattleManager.GetPlayerLives
int GlobalNamespace::GorillaBattleManager::GetPlayerLives(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::GetPlayerLives");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerLives", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaBattleManager.PlayerInHitCooldown
bool GlobalNamespace::GorillaBattleManager::PlayerInHitCooldown(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::PlayerInHitCooldown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerInHitCooldown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaBattleManager.PlayerInStunCooldown
bool GlobalNamespace::GorillaBattleManager::PlayerInStunCooldown(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::PlayerInStunCooldown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerInStunCooldown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaBattleManager.GetPlayerStatus
::GlobalNamespace::GorillaBattleManager::BattleStatus GlobalNamespace::GorillaBattleManager::GetPlayerStatus(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::GetPlayerStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GorillaBattleManager::BattleStatus, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaBattleManager.OnRedTeam
bool GlobalNamespace::GorillaBattleManager::OnRedTeam(::GlobalNamespace::GorillaBattleManager::BattleStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::OnRedTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRedTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, status);
}
// Autogenerated method: GorillaBattleManager.OnRedTeam
bool GlobalNamespace::GorillaBattleManager::OnRedTeam(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::OnRedTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRedTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaBattleManager.OnBlueTeam
bool GlobalNamespace::GorillaBattleManager::OnBlueTeam(::GlobalNamespace::GorillaBattleManager::BattleStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::OnBlueTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBlueTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, status);
}
// Autogenerated method: GorillaBattleManager.OnBlueTeam
bool GlobalNamespace::GorillaBattleManager::OnBlueTeam(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::OnBlueTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBlueTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaBattleManager.OnNoTeam
bool GlobalNamespace::GorillaBattleManager::OnNoTeam(::GlobalNamespace::GorillaBattleManager::BattleStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::OnNoTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNoTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, status);
}
// Autogenerated method: GorillaBattleManager.OnNoTeam
bool GlobalNamespace::GorillaBattleManager::OnNoTeam(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::OnNoTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNoTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaBattleManager.OnSameTeam
bool GlobalNamespace::GorillaBattleManager::OnSameTeam(::GlobalNamespace::GorillaBattleManager::BattleStatus playerA, ::GlobalNamespace::GorillaBattleManager::BattleStatus playerB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::OnSameTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSameTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerA), ::il2cpp_utils::ExtractType(playerB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, playerA, playerB);
}
// Autogenerated method: GorillaBattleManager.OnSameTeam
bool GlobalNamespace::GorillaBattleManager::OnSameTeam(::Photon::Realtime::Player* myPlayer, ::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::OnSameTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSameTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(myPlayer), ::il2cpp_utils::ExtractType(otherPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, myPlayer, otherPlayer);
}
// Autogenerated method: GorillaBattleManager.LocalCanHit
bool GlobalNamespace::GorillaBattleManager::LocalCanHit(::Photon::Realtime::Player* myPlayer, ::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::LocalCanHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalCanHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(myPlayer), ::il2cpp_utils::ExtractType(otherPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, myPlayer, otherPlayer);
}
// Autogenerated method: GorillaBattleManager.CopyBattleDictToArray
void GlobalNamespace::GorillaBattleManager::CopyBattleDictToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::CopyBattleDictToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyBattleDictToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.CopyArrayToBattleDict
void GlobalNamespace::GorillaBattleManager::CopyArrayToBattleDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::CopyArrayToBattleDict");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyArrayToBattleDict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.SetFlag
::GlobalNamespace::GorillaBattleManager::BattleStatus GlobalNamespace::GorillaBattleManager::SetFlag(::GlobalNamespace::GorillaBattleManager::BattleStatus currState, ::GlobalNamespace::GorillaBattleManager::BattleStatus flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::SetFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currState), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GorillaBattleManager::BattleStatus, false>(this, ___internal__method, currState, flag);
}
// Autogenerated method: GorillaBattleManager.SetFlagExclusive
::GlobalNamespace::GorillaBattleManager::BattleStatus GlobalNamespace::GorillaBattleManager::SetFlagExclusive(::GlobalNamespace::GorillaBattleManager::BattleStatus currState, ::GlobalNamespace::GorillaBattleManager::BattleStatus flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::SetFlagExclusive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFlagExclusive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currState), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GorillaBattleManager::BattleStatus, false>(this, ___internal__method, currState, flag);
}
// Autogenerated method: GorillaBattleManager.ClearFlag
::GlobalNamespace::GorillaBattleManager::BattleStatus GlobalNamespace::GorillaBattleManager::ClearFlag(::GlobalNamespace::GorillaBattleManager::BattleStatus currState, ::GlobalNamespace::GorillaBattleManager::BattleStatus flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::ClearFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currState), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GorillaBattleManager::BattleStatus, false>(this, ___internal__method, currState, flag);
}
// Autogenerated method: GorillaBattleManager.FlagIsSet
bool GlobalNamespace::GorillaBattleManager::FlagIsSet(::GlobalNamespace::GorillaBattleManager::BattleStatus currState, ::GlobalNamespace::GorillaBattleManager::BattleStatus flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::FlagIsSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlagIsSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currState), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, currState, flag);
}
// Autogenerated method: GorillaBattleManager.RandomizeTeams
void GlobalNamespace::GorillaBattleManager::RandomizeTeams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::RandomizeTeams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomizeTeams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.AddPlayerToCorrectTeam
void GlobalNamespace::GorillaBattleManager::AddPlayerToCorrectTeam(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::AddPlayerToCorrectTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPlayerToCorrectTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: GorillaBattleManager.InitializePlayerStatus
void GlobalNamespace::GorillaBattleManager::InitializePlayerStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::InitializePlayerStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializePlayerStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.UpdatePlayerStatus
void GlobalNamespace::GorillaBattleManager::UpdatePlayerStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::UpdatePlayerStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlayerStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager..cctor
void GlobalNamespace::GorillaBattleManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaBattleManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaBattleManager.GameType
::GorillaGameModes::GameModeType GlobalNamespace::GorillaBattleManager::GameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::GameType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaGameModes::GameModeType, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.GameModeName
::StringW GlobalNamespace::GorillaBattleManager::GameModeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::GameModeName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.Awake
void GlobalNamespace::GorillaBattleManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.StartPlaying
void GlobalNamespace::GorillaBattleManager::StartPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::StartPlaying");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.StopPlaying
void GlobalNamespace::GorillaBattleManager::StopPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::StopPlaying");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.Reset
void GlobalNamespace::GorillaBattleManager::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.NetworkLinkSetup
void GlobalNamespace::GorillaBattleManager::NetworkLinkSetup(::GlobalNamespace::GameModeSerializer* netSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::NetworkLinkSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, netSerializer);
}
// Autogenerated method: GorillaBattleManager.HitPlayer
void GlobalNamespace::GorillaBattleManager::HitPlayer(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::HitPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaBattleManager.CanAffectPlayer
bool GlobalNamespace::GorillaBattleManager::CanAffectPlayer(::Photon::Realtime::Player* player, bool thisFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::CanAffectPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player, thisFrame);
}
// Autogenerated method: GorillaBattleManager.OnPlayerEnteredRoom
void GlobalNamespace::GorillaBattleManager::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: GorillaBattleManager.OnPlayerLeftRoom
void GlobalNamespace::GorillaBattleManager::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: GorillaBattleManager.OnSerializeWrite
void GlobalNamespace::GorillaBattleManager::OnSerializeWrite(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::OnSerializeWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaBattleManager.OnSerializeRead
void GlobalNamespace::GorillaBattleManager::OnSerializeRead(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::OnSerializeRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaBattleManager.MyMatIndex
int GlobalNamespace::GorillaBattleManager::MyMatIndex(::Photon::Realtime::Player* forPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::MyMatIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, forPlayer);
}
// Autogenerated method: GorillaBattleManager.LocalPlayerSpeed
::ArrayW<float> GlobalNamespace::GorillaBattleManager::LocalPlayerSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::LocalPlayerSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.Tick
void GlobalNamespace::GorillaBattleManager::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::Tick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.InfrequentUpdate
void GlobalNamespace::GorillaBattleManager::InfrequentUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::InfrequentUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager.LocalCanTag
bool GlobalNamespace::GorillaBattleManager::LocalCanTag(::Photon::Realtime::Player* myPlayer, ::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::LocalCanTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, myPlayer, otherPlayer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaBattleManager/BattleStatus
#include "GlobalNamespace/GorillaBattleManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaBattleManager/BattleStatus RedTeam
::GlobalNamespace::GorillaBattleManager::BattleStatus GlobalNamespace::GorillaBattleManager::BattleStatus::_get_RedTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_get_RedTeam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBattleManager::BattleStatus>("", "GorillaBattleManager/BattleStatus", "RedTeam"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBattleManager/BattleStatus RedTeam
void GlobalNamespace::GorillaBattleManager::BattleStatus::_set_RedTeam(::GlobalNamespace::GorillaBattleManager::BattleStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_set_RedTeam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager/BattleStatus", "RedTeam", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaBattleManager/BattleStatus BlueTeam
::GlobalNamespace::GorillaBattleManager::BattleStatus GlobalNamespace::GorillaBattleManager::BattleStatus::_get_BlueTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_get_BlueTeam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBattleManager::BattleStatus>("", "GorillaBattleManager/BattleStatus", "BlueTeam"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBattleManager/BattleStatus BlueTeam
void GlobalNamespace::GorillaBattleManager::BattleStatus::_set_BlueTeam(::GlobalNamespace::GorillaBattleManager::BattleStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_set_BlueTeam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager/BattleStatus", "BlueTeam", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaBattleManager/BattleStatus Normal
::GlobalNamespace::GorillaBattleManager::BattleStatus GlobalNamespace::GorillaBattleManager::BattleStatus::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBattleManager::BattleStatus>("", "GorillaBattleManager/BattleStatus", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBattleManager/BattleStatus Normal
void GlobalNamespace::GorillaBattleManager::BattleStatus::_set_Normal(::GlobalNamespace::GorillaBattleManager::BattleStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager/BattleStatus", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaBattleManager/BattleStatus Hit
::GlobalNamespace::GorillaBattleManager::BattleStatus GlobalNamespace::GorillaBattleManager::BattleStatus::_get_Hit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_get_Hit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBattleManager::BattleStatus>("", "GorillaBattleManager/BattleStatus", "Hit"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBattleManager/BattleStatus Hit
void GlobalNamespace::GorillaBattleManager::BattleStatus::_set_Hit(::GlobalNamespace::GorillaBattleManager::BattleStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_set_Hit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager/BattleStatus", "Hit", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaBattleManager/BattleStatus Stunned
::GlobalNamespace::GorillaBattleManager::BattleStatus GlobalNamespace::GorillaBattleManager::BattleStatus::_get_Stunned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_get_Stunned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBattleManager::BattleStatus>("", "GorillaBattleManager/BattleStatus", "Stunned"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBattleManager/BattleStatus Stunned
void GlobalNamespace::GorillaBattleManager::BattleStatus::_set_Stunned(::GlobalNamespace::GorillaBattleManager::BattleStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_set_Stunned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager/BattleStatus", "Stunned", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaBattleManager/BattleStatus Grace
::GlobalNamespace::GorillaBattleManager::BattleStatus GlobalNamespace::GorillaBattleManager::BattleStatus::_get_Grace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_get_Grace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBattleManager::BattleStatus>("", "GorillaBattleManager/BattleStatus", "Grace"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBattleManager/BattleStatus Grace
void GlobalNamespace::GorillaBattleManager::BattleStatus::_set_Grace(::GlobalNamespace::GorillaBattleManager::BattleStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_set_Grace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager/BattleStatus", "Grace", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaBattleManager/BattleStatus Eliminated
::GlobalNamespace::GorillaBattleManager::BattleStatus GlobalNamespace::GorillaBattleManager::BattleStatus::_get_Eliminated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_get_Eliminated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBattleManager::BattleStatus>("", "GorillaBattleManager/BattleStatus", "Eliminated"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBattleManager/BattleStatus Eliminated
void GlobalNamespace::GorillaBattleManager::BattleStatus::_set_Eliminated(::GlobalNamespace::GorillaBattleManager::BattleStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_set_Eliminated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager/BattleStatus", "Eliminated", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaBattleManager/BattleStatus None
::GlobalNamespace::GorillaBattleManager::BattleStatus GlobalNamespace::GorillaBattleManager::BattleStatus::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBattleManager::BattleStatus>("", "GorillaBattleManager/BattleStatus", "None"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBattleManager/BattleStatus None
void GlobalNamespace::GorillaBattleManager::BattleStatus::_set_None(::GlobalNamespace::GorillaBattleManager::BattleStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager/BattleStatus", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaBattleManager::BattleStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaBattleManager/BattleState
#include "GlobalNamespace/GorillaBattleManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaBattleManager/BattleState NotEnoughPlayers
::GlobalNamespace::GorillaBattleManager::BattleState GlobalNamespace::GorillaBattleManager::BattleState::_get_NotEnoughPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleState::_get_NotEnoughPlayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBattleManager::BattleState>("", "GorillaBattleManager/BattleState", "NotEnoughPlayers"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBattleManager/BattleState NotEnoughPlayers
void GlobalNamespace::GorillaBattleManager::BattleState::_set_NotEnoughPlayers(::GlobalNamespace::GorillaBattleManager::BattleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleState::_set_NotEnoughPlayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager/BattleState", "NotEnoughPlayers", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaBattleManager/BattleState GameEnd
::GlobalNamespace::GorillaBattleManager::BattleState GlobalNamespace::GorillaBattleManager::BattleState::_get_GameEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleState::_get_GameEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBattleManager::BattleState>("", "GorillaBattleManager/BattleState", "GameEnd"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBattleManager/BattleState GameEnd
void GlobalNamespace::GorillaBattleManager::BattleState::_set_GameEnd(::GlobalNamespace::GorillaBattleManager::BattleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleState::_set_GameEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager/BattleState", "GameEnd", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaBattleManager/BattleState GameEndWaiting
::GlobalNamespace::GorillaBattleManager::BattleState GlobalNamespace::GorillaBattleManager::BattleState::_get_GameEndWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleState::_get_GameEndWaiting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBattleManager::BattleState>("", "GorillaBattleManager/BattleState", "GameEndWaiting"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBattleManager/BattleState GameEndWaiting
void GlobalNamespace::GorillaBattleManager::BattleState::_set_GameEndWaiting(::GlobalNamespace::GorillaBattleManager::BattleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleState::_set_GameEndWaiting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager/BattleState", "GameEndWaiting", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaBattleManager/BattleState StartCountdown
::GlobalNamespace::GorillaBattleManager::BattleState GlobalNamespace::GorillaBattleManager::BattleState::_get_StartCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleState::_get_StartCountdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBattleManager::BattleState>("", "GorillaBattleManager/BattleState", "StartCountdown"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBattleManager/BattleState StartCountdown
void GlobalNamespace::GorillaBattleManager::BattleState::_set_StartCountdown(::GlobalNamespace::GorillaBattleManager::BattleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleState::_set_StartCountdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager/BattleState", "StartCountdown", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaBattleManager/BattleState CountingDownToStart
::GlobalNamespace::GorillaBattleManager::BattleState GlobalNamespace::GorillaBattleManager::BattleState::_get_CountingDownToStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleState::_get_CountingDownToStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBattleManager::BattleState>("", "GorillaBattleManager/BattleState", "CountingDownToStart"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBattleManager/BattleState CountingDownToStart
void GlobalNamespace::GorillaBattleManager::BattleState::_set_CountingDownToStart(::GlobalNamespace::GorillaBattleManager::BattleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleState::_set_CountingDownToStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager/BattleState", "CountingDownToStart", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaBattleManager/BattleState GameStart
::GlobalNamespace::GorillaBattleManager::BattleState GlobalNamespace::GorillaBattleManager::BattleState::_get_GameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleState::_get_GameStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBattleManager::BattleState>("", "GorillaBattleManager/BattleState", "GameStart"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBattleManager/BattleState GameStart
void GlobalNamespace::GorillaBattleManager::BattleState::_set_GameStart(::GlobalNamespace::GorillaBattleManager::BattleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleState::_set_GameStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager/BattleState", "GameStart", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaBattleManager/BattleState GameRunning
::GlobalNamespace::GorillaBattleManager::BattleState GlobalNamespace::GorillaBattleManager::BattleState::_get_GameRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleState::_get_GameRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBattleManager::BattleState>("", "GorillaBattleManager/BattleState", "GameRunning"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBattleManager/BattleState GameRunning
void GlobalNamespace::GorillaBattleManager::BattleState::_set_GameRunning(::GlobalNamespace::GorillaBattleManager::BattleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleState::_set_GameRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBattleManager/BattleState", "GameRunning", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaBattleManager::BattleState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::BattleState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaBattleManager/<>c__DisplayClass81_0
#include "GlobalNamespace/GorillaBattleManager_--c__DisplayClass81_0.hpp"
// Including type: System.Random
#include "System/Random.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Random rand
[[deprecated("Use field access instead!")]] ::System::Random*& GlobalNamespace::GorillaBattleManager::$$c__DisplayClass81_0::dyn_rand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::$$c__DisplayClass81_0::dyn_rand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rand"))->offset;
  return *reinterpret_cast<::System::Random**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaBattleManager/<>c__DisplayClass81_0.<RandomizeTeams>b__0
int GlobalNamespace::GorillaBattleManager::$$c__DisplayClass81_0::$RandomizeTeams$b__0(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::$$c__DisplayClass81_0::<RandomizeTeams>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RandomizeTeams>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaBattleManager/<StartBattleCountdown>d__45
#include "GlobalNamespace/GorillaBattleManager_-StartBattleCountdown-d__45.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaBattleManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaBattleManager*& GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaBattleManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaBattleManager/<StartBattleCountdown>d__45.System.IDisposable.Dispose
void GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager/<StartBattleCountdown>d__45.MoveNext
bool GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager/<StartBattleCountdown>d__45.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager/<StartBattleCountdown>d__45.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBattleManager/<StartBattleCountdown>d__45.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaBattleManager::$StartBattleCountdown$d__45*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: CrystalNote
#include "GlobalNamespace/CrystalNote.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public CrystalNote C
::GlobalNamespace::CrystalNote GlobalNamespace::CrystalNote::_get_C() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalNote::_get_C");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CrystalNote>("", "CrystalNote", "C"));
}
// Autogenerated static field setter
// Set static field: static public CrystalNote C
void GlobalNamespace::CrystalNote::_set_C(::GlobalNamespace::CrystalNote value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalNote::_set_C");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CrystalNote", "C", value));
}
// Autogenerated static field getter
// Get static field: static public CrystalNote D
::GlobalNamespace::CrystalNote GlobalNamespace::CrystalNote::_get_D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalNote::_get_D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CrystalNote>("", "CrystalNote", "D"));
}
// Autogenerated static field setter
// Set static field: static public CrystalNote D
void GlobalNamespace::CrystalNote::_set_D(::GlobalNamespace::CrystalNote value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalNote::_set_D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CrystalNote", "D", value));
}
// Autogenerated static field getter
// Get static field: static public CrystalNote E
::GlobalNamespace::CrystalNote GlobalNamespace::CrystalNote::_get_E() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalNote::_get_E");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CrystalNote>("", "CrystalNote", "E"));
}
// Autogenerated static field setter
// Set static field: static public CrystalNote E
void GlobalNamespace::CrystalNote::_set_E(::GlobalNamespace::CrystalNote value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalNote::_set_E");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CrystalNote", "E", value));
}
// Autogenerated static field getter
// Get static field: static public CrystalNote F
::GlobalNamespace::CrystalNote GlobalNamespace::CrystalNote::_get_F() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalNote::_get_F");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CrystalNote>("", "CrystalNote", "F"));
}
// Autogenerated static field setter
// Set static field: static public CrystalNote F
void GlobalNamespace::CrystalNote::_set_F(::GlobalNamespace::CrystalNote value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalNote::_set_F");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CrystalNote", "F", value));
}
// Autogenerated static field getter
// Get static field: static public CrystalNote G
::GlobalNamespace::CrystalNote GlobalNamespace::CrystalNote::_get_G() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalNote::_get_G");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CrystalNote>("", "CrystalNote", "G"));
}
// Autogenerated static field setter
// Set static field: static public CrystalNote G
void GlobalNamespace::CrystalNote::_set_G(::GlobalNamespace::CrystalNote value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalNote::_set_G");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CrystalNote", "G", value));
}
// Autogenerated static field getter
// Get static field: static public CrystalNote A
::GlobalNamespace::CrystalNote GlobalNamespace::CrystalNote::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalNote::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CrystalNote>("", "CrystalNote", "A"));
}
// Autogenerated static field setter
// Set static field: static public CrystalNote A
void GlobalNamespace::CrystalNote::_set_A(::GlobalNamespace::CrystalNote value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalNote::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CrystalNote", "A", value));
}
// Autogenerated static field getter
// Get static field: static public CrystalNote B
::GlobalNamespace::CrystalNote GlobalNamespace::CrystalNote::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalNote::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CrystalNote>("", "CrystalNote", "B"));
}
// Autogenerated static field setter
// Set static field: static public CrystalNote B
void GlobalNamespace::CrystalNote::_set_B(::GlobalNamespace::CrystalNote value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalNote::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CrystalNote", "B", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CrystalNote::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalNote::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: CrystalOctave
#include "GlobalNamespace/CrystalOctave.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public CrystalOctave Low
::GlobalNamespace::CrystalOctave GlobalNamespace::CrystalOctave::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalOctave::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CrystalOctave>("", "CrystalOctave", "Low"));
}
// Autogenerated static field setter
// Set static field: static public CrystalOctave Low
void GlobalNamespace::CrystalOctave::_set_Low(::GlobalNamespace::CrystalOctave value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalOctave::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CrystalOctave", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public CrystalOctave Middle
::GlobalNamespace::CrystalOctave GlobalNamespace::CrystalOctave::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalOctave::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CrystalOctave>("", "CrystalOctave", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public CrystalOctave Middle
void GlobalNamespace::CrystalOctave::_set_Middle(::GlobalNamespace::CrystalOctave value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalOctave::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CrystalOctave", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public CrystalOctave High
::GlobalNamespace::CrystalOctave GlobalNamespace::CrystalOctave::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalOctave::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CrystalOctave>("", "CrystalOctave", "High"));
}
// Autogenerated static field setter
// Set static field: static public CrystalOctave High
void GlobalNamespace::CrystalOctave::_set_High(::GlobalNamespace::CrystalOctave value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalOctave::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CrystalOctave", "High", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CrystalOctave::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrystalOctave::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaCaveCrystal
#include "GlobalNamespace/GorillaCaveCrystal.hpp"
// Including type: GorillaCaveCrystal/GorillaCaveCrystalManager
#include "GlobalNamespace/GorillaCaveCrystal_GorillaCaveCrystalManager.hpp"
// Including type: GorillaCaveCrystal/<>c__DisplayClass14_0
#include "GlobalNamespace/GorillaCaveCrystal_--c__DisplayClass14_0.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: GorillaCaveCrystalVisuals
#include "GlobalNamespace/GorillaCaveCrystalVisuals.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideSoundAndMaterial
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaCaveCrystal::dyn_overrideSoundAndMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::dyn_overrideSoundAndMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideSoundAndMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CrystalOctave octave
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CrystalOctave& GlobalNamespace::GorillaCaveCrystal::dyn_octave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::dyn_octave");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "octave"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CrystalOctave*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CrystalNote note
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CrystalNote& GlobalNamespace::GorillaCaveCrystal::dyn_note() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::dyn_note");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "note"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CrystalNote*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _crystalRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::GorillaCaveCrystal::dyn__crystalRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::dyn__crystalRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_crystalRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaCaveCrystalVisuals visuals
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaCaveCrystalVisuals*& GlobalNamespace::GorillaCaveCrystal::dyn_visuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::dyn_visuals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visuals"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaCaveCrystalVisuals**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _tapAnimLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaCaveCrystal::dyn__tapAnimLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::dyn__tapAnimLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tapAnimLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lerpMidpoint
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaCaveCrystal::dyn__lerpMidpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::dyn__lerpMidpoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lerpMidpoint"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _lerpInCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::GorillaCaveCrystal::dyn__lerpInCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::dyn__lerpInCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lerpInCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _lerpOutCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::GorillaCaveCrystal::dyn__lerpOutCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::dyn__lerpOutCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lerpOutCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _animating
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaCaveCrystal::dyn__animating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::dyn__animating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animating"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _tapStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaCaveCrystal::dyn__tapStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::dyn__tapStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tapStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TimeSince _timeSinceLastTap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TimeSince& GlobalNamespace::GorillaCaveCrystal::dyn__timeSinceLastTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::dyn__timeSinceLastTap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeSinceLastTap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TimeSince*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaCaveCrystal.Awake
void GlobalNamespace::GorillaCaveCrystal::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCaveCrystal.SetUnderwaterVisuals
void GlobalNamespace::GorillaCaveCrystal::SetUnderwaterVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::SetUnderwaterVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUnderwaterVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCaveCrystal.AddVisuals
void GlobalNamespace::GorillaCaveCrystal::AddVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::AddVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCaveCrystal.AnimateCrystal
void GlobalNamespace::GorillaCaveCrystal::AnimateCrystal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::AnimateCrystal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateCrystal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCaveCrystal.InvokeUpdate
void GlobalNamespace::GorillaCaveCrystal::InvokeUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::InvokeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCaveCrystal.OnTapLocal
void GlobalNamespace::GorillaCaveCrystal::OnTapLocal(float tapStrength, float tapTime, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::OnTapLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Tappable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tapStrength, tapTime, info);
}
// Autogenerated method: GorillaCaveCrystal.OnEnable
void GlobalNamespace::GorillaCaveCrystal::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Tappable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCaveCrystal.OnDisable
void GlobalNamespace::GorillaCaveCrystal::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Tappable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaCaveCrystal/GorillaCaveCrystalManager
#include "GlobalNamespace/GorillaCaveCrystal_GorillaCaveCrystalManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaCaveCrystal/GorillaCaveCrystalManager instance
::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager* GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager*>("", "GorillaCaveCrystal/GorillaCaveCrystalManager", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaCaveCrystal/GorillaCaveCrystalManager instance
void GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::_set_instance(::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaCaveCrystal/GorillaCaveCrystalManager", "instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean hasInstance
bool GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::_get_hasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::_get_hasInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "GorillaCaveCrystal/GorillaCaveCrystalManager", "hasInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean hasInstance
void GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::_set_hasInstance(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::_set_hasInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaCaveCrystal/GorillaCaveCrystalManager", "hasInstance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<GorillaCaveCrystal> allCrystals
::System::Collections::Generic::List_1<::GlobalNamespace::GorillaCaveCrystal*>* GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::_get_allCrystals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::_get_allCrystals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::GorillaCaveCrystal*>*>("", "GorillaCaveCrystal/GorillaCaveCrystalManager", "allCrystals"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<GorillaCaveCrystal> allCrystals
void GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::_set_allCrystals(::System::Collections::Generic::List_1<::GlobalNamespace::GorillaCaveCrystal*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::_set_allCrystals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaCaveCrystal/GorillaCaveCrystalManager", "allCrystals", value));
}
// Autogenerated method: GorillaCaveCrystal/GorillaCaveCrystalManager.Awake
void GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCaveCrystal/GorillaCaveCrystalManager.CreateManager
void GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::CreateManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::CreateManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaCaveCrystal/GorillaCaveCrystalManager", "CreateManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaCaveCrystal/GorillaCaveCrystalManager.SetInstance
void GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::SetInstance(::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::SetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaCaveCrystal/GorillaCaveCrystalManager", "SetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, manager);
}
// Autogenerated method: GorillaCaveCrystal/GorillaCaveCrystalManager.RegisterGorillaCaveCrystal
void GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::RegisterGorillaCaveCrystal(::GlobalNamespace::GorillaCaveCrystal* gCC) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::RegisterGorillaCaveCrystal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaCaveCrystal/GorillaCaveCrystalManager", "RegisterGorillaCaveCrystal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gCC)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gCC);
}
// Autogenerated method: GorillaCaveCrystal/GorillaCaveCrystalManager.UnregisterGorillaCaveCrystal
void GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::UnregisterGorillaCaveCrystal(::GlobalNamespace::GorillaCaveCrystal* gCC) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::UnregisterGorillaCaveCrystal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaCaveCrystal/GorillaCaveCrystalManager", "UnregisterGorillaCaveCrystal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gCC)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gCC);
}
// Autogenerated method: GorillaCaveCrystal/GorillaCaveCrystalManager.Update
void GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCaveCrystal/GorillaCaveCrystalManager..cctor
void GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::GorillaCaveCrystalManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaCaveCrystal/GorillaCaveCrystalManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaCaveCrystal/<>c__DisplayClass14_0
#include "GlobalNamespace/GorillaCaveCrystal_--c__DisplayClass14_0.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: GorillaTagScripts.GorillaCaveCrystalSetup/CrystalDef
#include "GorillaTagScripts/GorillaCaveCrystalSetup_CrystalDef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material crystalMat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaCaveCrystal::$$c__DisplayClass14_0::dyn_crystalMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::$$c__DisplayClass14_0::dyn_crystalMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crystalMat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaCaveCrystal/<>c__DisplayClass14_0.<AddVisuals>b__0
bool GlobalNamespace::GorillaCaveCrystal::$$c__DisplayClass14_0::$AddVisuals$b__0(::GorillaTagScripts::GorillaCaveCrystalSetup::CrystalDef* cd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystal::$$c__DisplayClass14_0::<AddVisuals>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddVisuals>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cd)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cd);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaCaveCrystalVisuals
#include "GlobalNamespace/GorillaCaveCrystalVisuals.hpp"
// Including type: GorillaTagScripts.CrystalVisualsPreset
#include "GorillaTagScripts/CrystalVisualsPreset.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: GorillaTagScripts.GorillaCaveCrystalSetup
#include "GorillaTagScripts/GorillaCaveCrystalSetup.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.CrystalVisualsPreset crysalPreset
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::CrystalVisualsPreset*& GlobalNamespace::GorillaCaveCrystalVisuals::dyn_crysalPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::dyn_crysalPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crysalPreset"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::CrystalVisualsPreset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lerp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaCaveCrystalVisuals::dyn__lerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::dyn__lerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lerp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer _renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::GorillaCaveCrystalVisuals::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material _sharedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaCaveCrystalVisuals::dyn__sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::dyn__sharedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sharedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D instanceAlbedo
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::GorillaCaveCrystalVisuals::dyn_instanceAlbedo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::dyn_instanceAlbedo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instanceAlbedo"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaCaveCrystalVisuals::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastState
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaCaveCrystalVisuals::dyn__lastState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::dyn__lastState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastState"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagScripts.GorillaCaveCrystalSetup _setup
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::GorillaCaveCrystalSetup*& GlobalNamespace::GorillaCaveCrystalVisuals::dyn__setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::dyn__setup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setup"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::GorillaCaveCrystalSetup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock _block
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& GlobalNamespace::GorillaCaveCrystalVisuals::dyn__block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::dyn__block");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_block"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ranSetupOnce
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaCaveCrystalVisuals::dyn__ranSetupOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::dyn__ranSetupOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ranSetupOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaCaveCrystalVisuals.get_lerp
float GlobalNamespace::GorillaCaveCrystalVisuals::get_lerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::get_lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCaveCrystalVisuals.set_lerp
void GlobalNamespace::GorillaCaveCrystalVisuals::set_lerp(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::set_lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaCaveCrystalVisuals.Setup
void GlobalNamespace::GorillaCaveCrystalVisuals::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCaveCrystalVisuals.Start
void GlobalNamespace::GorillaCaveCrystalVisuals::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCaveCrystalVisuals.UpdateAlbedo
void GlobalNamespace::GorillaCaveCrystalVisuals::UpdateAlbedo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::UpdateAlbedo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAlbedo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCaveCrystalVisuals.Awake
void GlobalNamespace::GorillaCaveCrystalVisuals::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCaveCrystalVisuals.Update
void GlobalNamespace::GorillaCaveCrystalVisuals::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCaveCrystalVisuals.ForceUpdate
void GlobalNamespace::GorillaCaveCrystalVisuals::ForceUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::ForceUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCaveCrystalVisuals.InitializeCrystals
void GlobalNamespace::GorillaCaveCrystalVisuals::InitializeCrystals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCaveCrystalVisuals::InitializeCrystals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaCaveCrystalVisuals", "InitializeCrystals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaColor
#include "GlobalNamespace/GorillaColor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean setRandomly
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaColor::dyn_setRandomly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColor::dyn_setRandomly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setRandomly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaColorizableBase
#include "GlobalNamespace/GorillaColorizableBase.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaColorizableBase.SetColor
void GlobalNamespace::GorillaColorizableBase::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorizableBase::SetColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaColorizableBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaColorizableParticle
#include "GlobalNamespace/GorillaColorizableParticle.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem particleSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::GorillaColorizableParticle::dyn_particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorizableParticle::dyn_particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gradientColorPower
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaColorizableParticle::dyn_gradientColorPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorizableParticle::dyn_gradientColorPower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gradientColorPower"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useLinearColor
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaColorizableParticle::dyn_useLinearColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorizableParticle::dyn_useLinearColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useLinearColor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaColorizableParticle.SetColor
void GlobalNamespace::GorillaColorizableParticle::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorizableParticle::SetColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaColorizableBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaConstants
#include "GlobalNamespace/GorillaConstants.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single PlayerColorMin
float GlobalNamespace::GorillaConstants::_get_PlayerColorMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaConstants::_get_PlayerColorMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GorillaConstants", "PlayerColorMin"));
}
// Autogenerated static field setter
// Set static field: static public System.Single PlayerColorMin
void GlobalNamespace::GorillaConstants::_set_PlayerColorMin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaConstants::_set_PlayerColorMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaConstants", "PlayerColorMin", value));
}
// Autogenerated static field getter
// Get static field: static public System.String PlayerLocalRigName
::StringW GlobalNamespace::GorillaConstants::_get_PlayerLocalRigName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaConstants::_get_PlayerLocalRigName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GorillaConstants", "PlayerLocalRigName"));
}
// Autogenerated static field setter
// Set static field: static public System.String PlayerLocalRigName
void GlobalNamespace::GorillaConstants::_set_PlayerLocalRigName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaConstants::_set_PlayerLocalRigName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaConstants", "PlayerLocalRigName", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaCTFUI
#include "GlobalNamespace/GorillaCTFUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaCTFUI.Start
void GlobalNamespace::GorillaCTFUI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCTFUI::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCTFUI.Update
void GlobalNamespace::GorillaCTFUI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCTFUI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaDayNight
#include "GlobalNamespace/GorillaDayNight.hpp"
// Including type: GorillaDayNight/<LightMapSet>d__25
#include "GlobalNamespace/GorillaDayNight_-LightMapSet-d__25.hpp"
// Including type: GorillaLightmapData
#include "GlobalNamespace/GorillaLightmapData.hpp"
// Including type: UnityEngine.LightmapData
#include "UnityEngine/LightmapData.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaDayNight instance
::GlobalNamespace::GorillaDayNight* GlobalNamespace::GorillaDayNight::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaDayNight*>("", "GorillaDayNight", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaDayNight instance
void GlobalNamespace::GorillaDayNight::_set_instance(::GlobalNamespace::GorillaDayNight* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaDayNight", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public GorillaLightmapData[] lightmapDatas
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaLightmapData*>& GlobalNamespace::GorillaDayNight::dyn_lightmapDatas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_lightmapDatas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightmapDatas"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GorillaLightmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LightmapData[] workingLightMapDatas
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::LightmapData*>& GlobalNamespace::GorillaDayNight::dyn_workingLightMapDatas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_workingLightMapDatas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workingLightMapDatas"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::LightmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LightmapData workingLightMapData
[[deprecated("Use field access instead!")]] ::UnityEngine::LightmapData*& GlobalNamespace::GorillaDayNight::dyn_workingLightMapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_workingLightMapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workingLightMapData"))->offset;
  return *reinterpret_cast<::UnityEngine::LightmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaDayNight::dyn_lerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_lerpValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean done
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaDayNight::dyn_done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_done");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "done"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean finishedStep
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaDayNight::dyn_finishedStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_finishedStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedStep"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] fromPixels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::GorillaDayNight::dyn_fromPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_fromPixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromPixels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] toPixels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::GorillaDayNight::dyn_toPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_toPixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPixels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] mixedPixels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::GorillaDayNight::dyn_mixedPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_mixedPixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixedPixels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 firstData
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::dyn_firstData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_firstData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstData"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 secondData
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::dyn_secondData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_secondData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondData"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 i
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::dyn_i() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_i");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "i"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 j
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::dyn_j() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_j");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "j"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 k
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::dyn_k() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_k");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "k"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 l
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::dyn_l() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_l");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Thread lightsThread
[[deprecated("Use field access instead!")]] ::System::Threading::Thread*& GlobalNamespace::GorillaDayNight::dyn_lightsThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_lightsThread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightsThread"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Thread dirsThread
[[deprecated("Use field access instead!")]] ::System::Threading::Thread*& GlobalNamespace::GorillaDayNight::dyn_dirsThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_dirsThread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirsThread"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean test
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaDayNight::dyn_test() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_test");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "test"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean working
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaDayNight::dyn_working() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_working");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "working"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaDayNight.Awake
void GlobalNamespace::GorillaDayNight::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight.Update
void GlobalNamespace::GorillaDayNight::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight.DoWork
void GlobalNamespace::GorillaDayNight::DoWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::DoWork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight.DoLightsStep
void GlobalNamespace::GorillaDayNight::DoLightsStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::DoLightsStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoLightsStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight.DoDirsStep
void GlobalNamespace::GorillaDayNight::DoDirsStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::DoDirsStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoDirsStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight.LightMapSet
::System::Collections::IEnumerator* GlobalNamespace::GorillaDayNight::LightMapSet(int setFirstData, int setSecondData, float setLerp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::LightMapSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LightMapSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(setFirstData), ::il2cpp_utils::ExtractType(setSecondData), ::il2cpp_utils::ExtractType(setLerp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, setFirstData, setSecondData, setLerp);
}
// Autogenerated method: GorillaDayNight.<LightMapSet>b__25_0
bool GlobalNamespace::GorillaDayNight::$LightMapSet$b__25_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::<LightMapSet>b__25_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LightMapSet>b__25_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight.<LightMapSet>b__25_1
bool GlobalNamespace::GorillaDayNight::$LightMapSet$b__25_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::<LightMapSet>b__25_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LightMapSet>b__25_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaDayNight/<LightMapSet>d__25
#include "GlobalNamespace/GorillaDayNight_-LightMapSet-d__25.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaDayNight <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaDayNight*& GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaDayNight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 setFirstData
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_setFirstData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_setFirstData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setFirstData"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 setSecondData
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_setSecondData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_setSecondData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setSecondData"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single setLerp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_setLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_setLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setLerp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaDayNight/<LightMapSet>d__25.System.IDisposable.Dispose
void GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight/<LightMapSet>d__25.MoveNext
bool GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight/<LightMapSet>d__25.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight/<LightMapSet>d__25.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight/<LightMapSet>d__25.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaEyeExpressions
#include "GlobalNamespace/GorillaEyeExpressions.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaSpeakerLoudness
#include "GlobalNamespace/GorillaSpeakerLoudness.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject targetFace
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaEyeExpressions::dyn_targetFace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEyeExpressions::dyn_targetFace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetFace"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single screamVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaEyeExpressions::dyn_screamVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEyeExpressions::dyn_screamVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screamVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single screamDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaEyeExpressions::dyn_screamDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEyeExpressions::dyn_screamDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screamDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 ScreamUV
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::GorillaEyeExpressions::dyn_ScreamUV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEyeExpressions::dyn_ScreamUV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScreamUV"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaSpeakerLoudness loudness
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaSpeakerLoudness*& GlobalNamespace::GorillaEyeExpressions::dyn_loudness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEyeExpressions::dyn_loudness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loudness"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaSpeakerLoudness**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean IsEyeExpressionOverriden
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaEyeExpressions::dyn_IsEyeExpressionOverriden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEyeExpressions::dyn_IsEyeExpressionOverriden");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsEyeExpressionOverriden"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single overrideDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaEyeExpressions::dyn_overrideDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEyeExpressions::dyn_overrideDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 overrideUV
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::GorillaEyeExpressions::dyn_overrideUV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEyeExpressions::dyn_overrideUV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideUV"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ShaderHashId _EyeOverrideUV
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ShaderHashId& GlobalNamespace::GorillaEyeExpressions::dyn__EyeOverrideUV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEyeExpressions::dyn__EyeOverrideUV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_EyeOverrideUV"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ShaderHashId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ShaderHashId _EyeOverrideUVTransform
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ShaderHashId& GlobalNamespace::GorillaEyeExpressions::dyn__EyeOverrideUVTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEyeExpressions::dyn__EyeOverrideUVTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_EyeOverrideUVTransform"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ShaderHashId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaEyeExpressions.Start
void GlobalNamespace::GorillaEyeExpressions::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEyeExpressions::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaEyeExpressions.InvokeUpdate
void GlobalNamespace::GorillaEyeExpressions::InvokeUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEyeExpressions::InvokeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaEyeExpressions.CheckEyeEffects
void GlobalNamespace::GorillaEyeExpressions::CheckEyeEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEyeExpressions::CheckEyeEffects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckEyeEffects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaEyeExpressions.UpdateEyeExpression
void GlobalNamespace::GorillaEyeExpressions::UpdateEyeExpression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEyeExpressions::UpdateEyeExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEyeExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaGameManager
#include "GlobalNamespace/GorillaGameManager.hpp"
// Including type: GorillaGameManager/OnTouchDelegate
#include "GlobalNamespace/GorillaGameManager_OnTouchDelegate.hpp"
// Including type: GorillaGameManager/<>c__DisplayClass57_0
#include "GlobalNamespace/GorillaGameManager_--c__DisplayClass57_0.hpp"
// Including type: Photon.Realtime.Room
#include "Photon/Realtime/Room.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: RigContainer
#include "GlobalNamespace/RigContainer.hpp"
// Including type: GameModeSerializer
#include "GlobalNamespace/GameModeSerializer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: NetPlayer
#include "GlobalNamespace/NetPlayer.hpp"
// Including type: GorillaGameModes.GameModeType
#include "GorillaGameModes/GameModeType.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private GorillaGameManager/OnTouchDelegate OnTouch
::GlobalNamespace::GorillaGameManager::OnTouchDelegate* GlobalNamespace::GorillaGameManager::_get_OnTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::_get_OnTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaGameManager::OnTouchDelegate*>("", "GorillaGameManager", "OnTouch"));
}
// Autogenerated static field setter
// Set static field: static private GorillaGameManager/OnTouchDelegate OnTouch
void GlobalNamespace::GorillaGameManager::_set_OnTouch(::GlobalNamespace::GorillaGameManager::OnTouchDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::_set_OnTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaGameManager", "OnTouch", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action onInstanceReady
::System::Action* GlobalNamespace::GorillaGameManager::_get_onInstanceReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::_get_onInstanceReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "GorillaGameManager", "onInstanceReady"));
}
// Autogenerated static field setter
// Set static field: static private System.Action onInstanceReady
void GlobalNamespace::GorillaGameManager::_set_onInstanceReady(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::_set_onInstanceReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaGameManager", "onInstanceReady", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean replicatedClientReady
bool GlobalNamespace::GorillaGameManager::_get_replicatedClientReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::_get_replicatedClientReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "GorillaGameManager", "replicatedClientReady"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean replicatedClientReady
void GlobalNamespace::GorillaGameManager::_set_replicatedClientReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::_set_replicatedClientReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaGameManager", "replicatedClientReady", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action onReplicatedClientReady
::System::Action* GlobalNamespace::GorillaGameManager::_get_onReplicatedClientReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::_get_onReplicatedClientReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "GorillaGameManager", "onReplicatedClientReady"));
}
// Autogenerated static field setter
// Set static field: static private System.Action onReplicatedClientReady
void GlobalNamespace::GorillaGameManager::_set_onReplicatedClientReady(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::_set_onReplicatedClientReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaGameManager", "onReplicatedClientReady", value));
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Room currentRoom
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Room*& GlobalNamespace::GorillaGameManager::dyn_currentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_currentRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentRoom"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object obj
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaGameManager::dyn_obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_obj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obj"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fastJumpLimit
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_fastJumpLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_fastJumpLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fastJumpLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fastJumpMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_fastJumpMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_fastJumpMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fastJumpMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slowJumpLimit
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_slowJumpLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_slowJumpLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slowJumpLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slowJumpMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_slowJumpMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_slowJumpMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slowJumpMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastCheck
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_lastCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_lastCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCheck"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single checkCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_checkCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_checkCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single userDecayTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_userDecayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_userDecayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userDecayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.Single> expectedUsersDecay
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, float>*& GlobalNamespace::GorillaGameManager::dyn_expectedUsersDecay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_expectedUsersDecay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expectedUsersDecay"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startingToLookForFriend
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_startingToLookForFriend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_startingToLookForFriend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingToLookForFriend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeToSpendLookingForFriend
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_timeToSpendLookingForFriend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_timeToSpendLookingForFriend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeToSpendLookingForFriend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean successfullyFoundFriend
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaGameManager::dyn_successfullyFoundFriend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_successfullyFoundFriend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "successfullyFoundFriend"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single maxHitDeltaSlop
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_maxHitDeltaSlop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_maxHitDeltaSlop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxHitDeltaSlop"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagDistanceThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_tagDistanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_tagDistanceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagDistanceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testAssault
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaGameManager::dyn_testAssault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_testAssault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testAssault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean endGameManually
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaGameManager::dyn_endGameManually() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_endGameManually");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endGameManually"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player currentMasterClient
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaGameManager::dyn_currentMasterClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_currentMasterClient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentMasterClient"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonView returnPhotonView
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& GlobalNamespace::GorillaGameManager::dyn_returnPhotonView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_returnPhotonView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "returnPhotonView"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig returnRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaGameManager::dyn_returnRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_returnRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "returnRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player outPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaGameManager::dyn_outPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_outPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 outInt
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaGameManager::dyn_outInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_outInt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outInt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig tempRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaGameManager::dyn_tempRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_tempRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player[] currentPlayerArray
[[deprecated("Use field access instead!")]] ::ArrayW<::Photon::Realtime::Player*>& GlobalNamespace::GorillaGameManager::dyn_currentPlayerArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_currentPlayerArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPlayerArray"))->offset;
  return *reinterpret_cast<::ArrayW<::Photon::Realtime::Player*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] playerSpeed
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::GorillaGameManager::dyn_playerSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_playerSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpeed"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RigContainer outContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RigContainer*& GlobalNamespace::GorillaGameManager::dyn_outContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_outContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RigContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player playerTemp
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaGameManager::dyn_playerTemp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_playerTemp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerTemp"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RigContainer tempRC
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RigContainer*& GlobalNamespace::GorillaGameManager::dyn_tempRC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_tempRC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempRC"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RigContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ITickSystemTick.TickRunning>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaGameManager::dyn_$ITickSystemTick_TickRunning$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_$ITickSystemTick_TickRunning$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ITickSystemTick.TickRunning>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameModeSerializer serializer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameModeSerializer*& GlobalNamespace::GorillaGameManager::dyn_serializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_serializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameModeSerializer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaGameManager.add_OnTouch
void GlobalNamespace::GorillaGameManager::add_OnTouch(::GlobalNamespace::GorillaGameManager::OnTouchDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::add_OnTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaGameManager", "add_OnTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: GorillaGameManager.remove_OnTouch
void GlobalNamespace::GorillaGameManager::remove_OnTouch(::GlobalNamespace::GorillaGameManager::OnTouchDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::remove_OnTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaGameManager", "remove_OnTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: GorillaGameManager.get_instance
::GlobalNamespace::GorillaGameManager* GlobalNamespace::GorillaGameManager::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaGameManager", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GorillaGameManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaGameManager.ITickSystemTick.get_TickRunning
bool GlobalNamespace::GorillaGameManager::ITickSystemTick_get_TickRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::ITickSystemTick.get_TickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.ITickSystemTick.set_TickRunning
void GlobalNamespace::GorillaGameManager::ITickSystemTick_set_TickRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::ITickSystemTick.set_TickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaGameManager.Awake
void GlobalNamespace::GorillaGameManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.Tick
void GlobalNamespace::GorillaGameManager::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::Tick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.InfrequentUpdate
void GlobalNamespace::GorillaGameManager::InfrequentUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::InfrequentUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.GameModeName
::StringW GlobalNamespace::GorillaGameManager::GameModeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::GameModeName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.ReportTag
void GlobalNamespace::GorillaGameManager::ReportTag(::Photon::Realtime::Player* taggedPlayer, ::Photon::Realtime::Player* taggingPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::ReportTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, taggedPlayer, taggingPlayer);
}
// Autogenerated method: GorillaGameManager.HitPlayer
void GlobalNamespace::GorillaGameManager::HitPlayer(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::HitPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaGameManager.CanAffectPlayer
bool GlobalNamespace::GorillaGameManager::CanAffectPlayer(::Photon::Realtime::Player* player, bool thisFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::CanAffectPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player, thisFrame);
}
// Autogenerated method: GorillaGameManager.NewVRRig
void GlobalNamespace::GorillaGameManager::NewVRRig(::Photon::Realtime::Player* player, int vrrigPhotonViewID, bool didTutorial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::NewVRRig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, vrrigPhotonViewID, didTutorial);
}
// Autogenerated method: GorillaGameManager.LocalCanTag
bool GlobalNamespace::GorillaGameManager::LocalCanTag(::Photon::Realtime::Player* myPlayer, ::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::LocalCanTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, myPlayer, otherPlayer);
}
// Autogenerated method: GorillaGameManager.FindVRRigForPlayer
::Photon::Pun::PhotonView* GlobalNamespace::GorillaGameManager::FindVRRigForPlayer(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::FindVRRigForPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaGameManager.FindPlayerVRRig
::GlobalNamespace::VRRig* GlobalNamespace::GorillaGameManager::FindPlayerVRRig(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::FindPlayerVRRig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRRig*, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaGameManager.StaticFindRigForPlayer
::GlobalNamespace::VRRig* GlobalNamespace::GorillaGameManager::StaticFindRigForPlayer(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::StaticFindRigForPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaGameManager", "StaticFindRigForPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRRig*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: GorillaGameManager.IsPlayerBanned
bool GlobalNamespace::GorillaGameManager::IsPlayerBanned(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::IsPlayerBanned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaGameManager", "IsPlayerBanned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: GorillaGameManager.IsPlayerBanned
bool GlobalNamespace::GorillaGameManager::IsPlayerBanned(::GlobalNamespace::NetPlayer* netPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::IsPlayerBanned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaGameManager", "IsPlayerBanned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(netPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, netPlayer);
}
// Autogenerated method: GorillaGameManager.IsPlayerInitialized
bool GlobalNamespace::GorillaGameManager::IsPlayerInitialized(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::IsPlayerInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaGameManager", "IsPlayerInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: GorillaGameManager.LocalPlayerSpeed
::ArrayW<float> GlobalNamespace::GorillaGameManager::LocalPlayerSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::LocalPlayerSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.MyMatIndex
int GlobalNamespace::GorillaGameManager::MyMatIndex(::Photon::Realtime::Player* forPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::MyMatIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, forPlayer);
}
// Autogenerated method: GorillaGameManager.ValidGameMode
bool GlobalNamespace::GorillaGameManager::ValidGameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::ValidGameMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.OnInstanceReady
void GlobalNamespace::GorillaGameManager::OnInstanceReady(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::OnInstanceReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaGameManager", "OnInstanceReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action);
}
// Autogenerated method: GorillaGameManager.ReplicatedClientReady
void GlobalNamespace::GorillaGameManager::ReplicatedClientReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::ReplicatedClientReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaGameManager", "ReplicatedClientReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaGameManager.OnReplicatedClientReady
void GlobalNamespace::GorillaGameManager::OnReplicatedClientReady(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::OnReplicatedClientReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaGameManager", "OnReplicatedClientReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action);
}
// Autogenerated method: GorillaGameManager.get_Serializer
::GlobalNamespace::GameModeSerializer* GlobalNamespace::GorillaGameManager::get_Serializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::get_Serializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Serializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameModeSerializer*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.NetworkLinkSetup
void GlobalNamespace::GorillaGameManager::NetworkLinkSetup(::GlobalNamespace::GameModeSerializer* netSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::NetworkLinkSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, netSerializer);
}
// Autogenerated method: GorillaGameManager.NetworkLinkDestroyed
void GlobalNamespace::GorillaGameManager::NetworkLinkDestroyed(::GlobalNamespace::GameModeSerializer* netSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::NetworkLinkDestroyed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, netSerializer);
}
// Autogenerated method: GorillaGameManager.GameType
::GorillaGameModes::GameModeType GlobalNamespace::GorillaGameManager::GameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::GameType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaGameModes::GameModeType, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.OnSerializeRead
void GlobalNamespace::GorillaGameManager::OnSerializeRead(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::OnSerializeRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaGameManager.OnSerializeWrite
void GlobalNamespace::GorillaGameManager::OnSerializeWrite(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::OnSerializeWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaGameManager.Reset
void GlobalNamespace::GorillaGameManager::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.StartPlaying
void GlobalNamespace::GorillaGameManager::StartPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::StartPlaying");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.StopPlaying
void GlobalNamespace::GorillaGameManager::StopPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::StopPlaying");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.OnPlayerLeftRoom
void GlobalNamespace::GorillaGameManager::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: GorillaGameManager.OnPlayerEnteredRoom
void GlobalNamespace::GorillaGameManager::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: GorillaGameManager.OnMasterClientSwitched
void GlobalNamespace::GorillaGameManager::OnMasterClientSwitched(::Photon::Realtime::Player* newMaster) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMaster);
}
// Autogenerated method: GorillaGameManager.OnRoomPropertiesUpdate
void GlobalNamespace::GorillaGameManager::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: GorillaGameManager.OnPlayerPropertiesUpdate
void GlobalNamespace::GorillaGameManager::OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated method: GorillaGameManager.ForceStopGame_DisconnectAndDestroy
void GlobalNamespace::GorillaGameManager::ForceStopGame_DisconnectAndDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::ForceStopGame_DisconnectAndDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaGameManager", "ForceStopGame_DisconnectAndDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaGameManager/OnTouchDelegate
#include "GlobalNamespace/GorillaGameManager_OnTouchDelegate.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaGameManager/OnTouchDelegate.Invoke
void GlobalNamespace::GorillaGameManager::OnTouchDelegate::Invoke(::Photon::Realtime::Player* taggedPlayer, ::Photon::Realtime::Player* taggingPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::OnTouchDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager::OnTouchDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, taggedPlayer, taggingPlayer);
}
// Autogenerated method: GorillaGameManager/OnTouchDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::GorillaGameManager::OnTouchDelegate::BeginInvoke(::Photon::Realtime::Player* taggedPlayer, ::Photon::Realtime::Player* taggingPlayer, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::OnTouchDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager::OnTouchDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, taggedPlayer, taggingPlayer, callback, object);
}
// Autogenerated method: GorillaGameManager/OnTouchDelegate.EndInvoke
void GlobalNamespace::GorillaGameManager::OnTouchDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::OnTouchDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager::OnTouchDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaGameManager/<>c__DisplayClass57_0
#include "GlobalNamespace/GorillaGameManager_--c__DisplayClass57_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action action
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::GorillaGameManager::$$c__DisplayClass57_0::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::$$c__DisplayClass57_0::dyn_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaGameManager/<>c__DisplayClass57_0.<OnInstanceReady>b__0
void GlobalNamespace::GorillaGameManager::$$c__DisplayClass57_0::$OnInstanceReady$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::$$c__DisplayClass57_0::<OnInstanceReady>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnInstanceReady>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaGeoHideShowTrigger
#include "GlobalNamespace/GorillaGeoHideShowTrigger.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaTag.GuidedRefs.GuidedRefTryResolveInfo
#include "GorillaTag/GuidedRefs/GuidedRefTryResolveInfo.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] makeSureThisIsDisabled
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::GorillaGeoHideShowTrigger::dyn_makeSureThisIsDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::dyn_makeSureThisIsDisabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makeSureThisIsDisabled"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTag.GuidedRefs.GuidedRefReceiverArrayInfo makeSureThisIsDisabled_gRefs
[[deprecated("Use field access instead!")]] ::GorillaTag::GuidedRefs::GuidedRefReceiverArrayInfo& GlobalNamespace::GorillaGeoHideShowTrigger::dyn_makeSureThisIsDisabled_gRefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::dyn_makeSureThisIsDisabled_gRefs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makeSureThisIsDisabled_gRefs"))->offset;
  return *reinterpret_cast<::GorillaTag::GuidedRefs::GuidedRefReceiverArrayInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] makeSureThisIsEnabled
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::GorillaGeoHideShowTrigger::dyn_makeSureThisIsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::dyn_makeSureThisIsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makeSureThisIsEnabled"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTag.GuidedRefs.GuidedRefReceiverArrayInfo makeSureThisIsEnabled_gRefs
[[deprecated("Use field access instead!")]] ::GorillaTag::GuidedRefs::GuidedRefReceiverArrayInfo& GlobalNamespace::GorillaGeoHideShowTrigger::dyn_makeSureThisIsEnabled_gRefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::dyn_makeSureThisIsEnabled_gRefs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makeSureThisIsEnabled_gRefs"))->offset;
  return *reinterpret_cast<::GorillaTag::GuidedRefs::GuidedRefReceiverArrayInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _guidedRefsAreFullyResolved
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaGeoHideShowTrigger::dyn__guidedRefsAreFullyResolved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::dyn__guidedRefsAreFullyResolved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_guidedRefsAreFullyResolved"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <GorillaTag.GuidedRefs.IGuidedRefReceiverMono.GuidedRefsWaitingToResolveCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaGeoHideShowTrigger::dyn_$GorillaTag_GuidedRefs_IGuidedRefReceiverMono_GuidedRefsWaitingToResolveCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::dyn_$GorillaTag_GuidedRefs_IGuidedRefReceiverMono_GuidedRefsWaitingToResolveCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GorillaTag.GuidedRefs.IGuidedRefReceiverMono.GuidedRefsWaitingToResolveCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaGeoHideShowTrigger.Awake
void GlobalNamespace::GorillaGeoHideShowTrigger::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGeoHideShowTrigger.GorillaTag.GuidedRefs.IGuidedRefObject.GuidedRefInitialize
void GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag_GuidedRefs_IGuidedRefObject_GuidedRefInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag.GuidedRefs.IGuidedRefObject.GuidedRefInitialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGeoHideShowTrigger*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGeoHideShowTrigger.GorillaTag.GuidedRefs.IGuidedRefReceiverMono.GuidedRefTryResolveReference
bool GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag_GuidedRefs_IGuidedRefReceiverMono_GuidedRefTryResolveReference(::GorillaTag::GuidedRefs::GuidedRefTryResolveInfo target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag.GuidedRefs.IGuidedRefReceiverMono.GuidedRefTryResolveReference");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGeoHideShowTrigger*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target);
}
// Autogenerated method: GorillaGeoHideShowTrigger.GorillaTag.GuidedRefs.IGuidedRefReceiverMono.OnAllGuidedRefsResolved
void GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag_GuidedRefs_IGuidedRefReceiverMono_OnAllGuidedRefsResolved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag.GuidedRefs.IGuidedRefReceiverMono.OnAllGuidedRefsResolved");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGeoHideShowTrigger*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGeoHideShowTrigger.GorillaTag.GuidedRefs.IGuidedRefReceiverMono.OnGuidedRefTargetDestroyed
void GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag_GuidedRefs_IGuidedRefReceiverMono_OnGuidedRefTargetDestroyed(int fieldId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag.GuidedRefs.IGuidedRefReceiverMono.OnGuidedRefTargetDestroyed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGeoHideShowTrigger*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fieldId);
}
// Autogenerated method: GorillaGeoHideShowTrigger.GorillaTag.GuidedRefs.IGuidedRefReceiverMono.get_GuidedRefsWaitingToResolveCount
int GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag_GuidedRefs_IGuidedRefReceiverMono_get_GuidedRefsWaitingToResolveCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag.GuidedRefs.IGuidedRefReceiverMono.get_GuidedRefsWaitingToResolveCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGeoHideShowTrigger*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGeoHideShowTrigger.GorillaTag.GuidedRefs.IGuidedRefReceiverMono.set_GuidedRefsWaitingToResolveCount
void GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag_GuidedRefs_IGuidedRefReceiverMono_set_GuidedRefsWaitingToResolveCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag.GuidedRefs.IGuidedRefReceiverMono.set_GuidedRefsWaitingToResolveCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGeoHideShowTrigger*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaGeoHideShowTrigger.GorillaTag.GuidedRefs.IGuidedRefMonoBehaviour.get_transform
::UnityEngine::Transform* GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag_GuidedRefs_IGuidedRefMonoBehaviour_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag.GuidedRefs.IGuidedRefMonoBehaviour.get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGeoHideShowTrigger*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGeoHideShowTrigger.GorillaTag.GuidedRefs.IGuidedRefObject.GetInstanceID
int GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag_GuidedRefs_IGuidedRefObject_GetInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::GorillaTag.GuidedRefs.IGuidedRefObject.GetInstanceID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGeoHideShowTrigger*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGeoHideShowTrigger.OnBoxTriggered
void GlobalNamespace::GorillaGeoHideShowTrigger::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaHasUITransformFollow
#include "GlobalNamespace/GorillaHasUITransformFollow.hpp"
// Including type: GorillaUITransformFollow
#include "GlobalNamespace/GorillaUITransformFollow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaUITransformFollow[] transformFollowers
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaUITransformFollow*>& GlobalNamespace::GorillaHasUITransformFollow::dyn_transformFollowers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHasUITransformFollow::dyn_transformFollowers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformFollowers"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GorillaUITransformFollow*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHasUITransformFollow.Awake
void GlobalNamespace::GorillaHasUITransformFollow::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHasUITransformFollow::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHasUITransformFollow.OnDestroy
void GlobalNamespace::GorillaHasUITransformFollow::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHasUITransformFollow::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHasUITransformFollow.OnEnable
void GlobalNamespace::GorillaHasUITransformFollow::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHasUITransformFollow::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHasUITransformFollow.OnDisable
void GlobalNamespace::GorillaHasUITransformFollow::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHasUITransformFollow::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaHatButton
#include "GlobalNamespace/GorillaHatButton.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: GorillaHatButtonParent
#include "GlobalNamespace/GorillaHatButtonParent.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaHatButtonParent buttonParent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaHatButtonParent*& GlobalNamespace::GorillaHatButton::dyn_buttonParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_buttonParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonParent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaHatButtonParent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaHatButton/HatButtonType buttonType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaHatButton::HatButtonType& GlobalNamespace::GorillaHatButton::dyn_buttonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_buttonType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaHatButton::HatButtonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaHatButton::dyn_isOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_isOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material offMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaHatButton::dyn_offMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_offMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material onMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaHatButton::dyn_onMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_onMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String offText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButton::dyn_offText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_offText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String onText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButton::dyn_onText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_onText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text myText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaHatButton::dyn_myText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_myText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debounceTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaHatButton::dyn_debounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_debounceTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debounceTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single touchTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaHatButton::dyn_touchTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_touchTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "touchTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String cosmeticName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButton::dyn_cosmeticName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_cosmeticName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cosmeticName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testPress
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaHatButton::dyn_testPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_testPress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testPress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHatButton.Update
void GlobalNamespace::GorillaHatButton::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHatButton.OnTriggerEnter
void GlobalNamespace::GorillaHatButton::OnTriggerEnter(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: GorillaHatButton.UpdateColor
void GlobalNamespace::GorillaHatButton::UpdateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::UpdateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaHatButton/HatButtonType
#include "GlobalNamespace/GorillaHatButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaHatButton/HatButtonType Hat
::GlobalNamespace::GorillaHatButton::HatButtonType GlobalNamespace::GorillaHatButton::HatButtonType::_get_Hat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::HatButtonType::_get_Hat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaHatButton::HatButtonType>("", "GorillaHatButton/HatButtonType", "Hat"));
}
// Autogenerated static field setter
// Set static field: static public GorillaHatButton/HatButtonType Hat
void GlobalNamespace::GorillaHatButton::HatButtonType::_set_Hat(::GlobalNamespace::GorillaHatButton::HatButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::HatButtonType::_set_Hat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaHatButton/HatButtonType", "Hat", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaHatButton/HatButtonType Face
::GlobalNamespace::GorillaHatButton::HatButtonType GlobalNamespace::GorillaHatButton::HatButtonType::_get_Face() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::HatButtonType::_get_Face");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaHatButton::HatButtonType>("", "GorillaHatButton/HatButtonType", "Face"));
}
// Autogenerated static field setter
// Set static field: static public GorillaHatButton/HatButtonType Face
void GlobalNamespace::GorillaHatButton::HatButtonType::_set_Face(::GlobalNamespace::GorillaHatButton::HatButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::HatButtonType::_set_Face");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaHatButton/HatButtonType", "Face", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaHatButton/HatButtonType Badge
::GlobalNamespace::GorillaHatButton::HatButtonType GlobalNamespace::GorillaHatButton::HatButtonType::_get_Badge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::HatButtonType::_get_Badge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaHatButton::HatButtonType>("", "GorillaHatButton/HatButtonType", "Badge"));
}
// Autogenerated static field setter
// Set static field: static public GorillaHatButton/HatButtonType Badge
void GlobalNamespace::GorillaHatButton::HatButtonType::_set_Badge(::GlobalNamespace::GorillaHatButton::HatButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::HatButtonType::_set_Badge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaHatButton/HatButtonType", "Badge", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHatButton::HatButtonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::HatButtonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaHatButtonParent
#include "GlobalNamespace/GorillaHatButtonParent.hpp"
// Including type: GorillaHatButton/HatButtonType
#include "GlobalNamespace/GorillaHatButton.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaLevelScreen
#include "GlobalNamespace/GorillaLevelScreen.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaHatButton[] hatButtons
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaHatButton*>& GlobalNamespace::GorillaHatButtonParent::dyn_hatButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_hatButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hatButtons"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GorillaHatButton*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] adminObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::GorillaHatButtonParent::dyn_adminObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_adminObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "adminObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String hat
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButtonParent::dyn_hat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_hat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hat"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String face
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButtonParent::dyn_face() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_face");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "face"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String badge
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButtonParent::dyn_badge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_badge");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "badge"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String leftHandHold
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButtonParent::dyn_leftHandHold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_leftHandHold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandHold"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String rightHandHold
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButtonParent::dyn_rightHandHold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_rightHandHold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandHold"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaHatButtonParent::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaLevelScreen screen
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaLevelScreen*& GlobalNamespace::GorillaHatButtonParent::dyn_screen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_screen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screen"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaLevelScreen**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHatButtonParent.Start
void GlobalNamespace::GorillaHatButtonParent::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHatButtonParent.LateUpdate
void GlobalNamespace::GorillaHatButtonParent::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHatButtonParent.PressButton
void GlobalNamespace::GorillaHatButtonParent::PressButton(bool isOn, ::GlobalNamespace::GorillaHatButton::HatButtonType buttonType, ::StringW buttonValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::PressButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn), ::il2cpp_utils::ExtractType(buttonType), ::il2cpp_utils::ExtractType(buttonValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn, buttonType, buttonValue);
}
// Autogenerated method: GorillaHatButtonParent.UpdateButtonState
void GlobalNamespace::GorillaHatButtonParent::UpdateButtonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::UpdateButtonState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateButtonState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaHuntComputer
#include "GlobalNamespace/GorillaHuntComputer.hpp"
// Including type: GorillaHuntComputer/<>c
#include "GlobalNamespace/GorillaHuntComputer_--c.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaHuntComputer::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image material
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::GorillaHuntComputer::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image hat
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::GorillaHuntComputer::dyn_hat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_hat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hat"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image face
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::GorillaHuntComputer::dyn_face() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_face");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "face"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image badge
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::GorillaHuntComputer::dyn_badge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_badge");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "badge"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::GorillaHuntComputer::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image rightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::GorillaHuntComputer::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player myTarget
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaHuntComputer::dyn_myTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_myTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myTarget"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player tempTarget
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaHuntComputer::dyn_tempTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_tempTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempTarget"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig myRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaHuntComputer::dyn_myRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_myRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Sprite tempSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::GorillaHuntComputer::dyn_tempSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_tempSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController/CosmeticItem tempItem
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& GlobalNamespace::GorillaHuntComputer::dyn_tempItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_tempItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempItem"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::CosmeticItem*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHuntComputer.Update
void GlobalNamespace::GorillaHuntComputer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntComputer.SetImage
void GlobalNamespace::GorillaHuntComputer::SetImage(::StringW itemDisplayName, ByRef<::UnityEngine::UI::Image*> image) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::SetImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(itemDisplayName), ::il2cpp_utils::ExtractType(image)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, itemDisplayName, byref(image));
}
// Autogenerated method: GorillaHuntComputer.NormalizeName
::StringW GlobalNamespace::GorillaHuntComputer::NormalizeName(bool doIt, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::NormalizeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NormalizeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doIt), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, doIt, text);
}
// Autogenerated method: GorillaHuntComputer.GetPrioritizedItemForHand
::GorillaNetworking::CosmeticsController::CosmeticItem GlobalNamespace::GorillaHuntComputer::GetPrioritizedItemForHand(::GlobalNamespace::VRRig* targetRig, bool forLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::GetPrioritizedItemForHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrioritizedItemForHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetRig), ::il2cpp_utils::ExtractType(forLeftHand)})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaNetworking::CosmeticsController::CosmeticItem, false>(this, ___internal__method, targetRig, forLeftHand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaHuntComputer/<>c
#include "GlobalNamespace/GorillaHuntComputer_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GorillaHuntComputer/<>c <>9
::GlobalNamespace::GorillaHuntComputer::$$c* GlobalNamespace::GorillaHuntComputer::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaHuntComputer::$$c*>("", "GorillaHuntComputer/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GorillaHuntComputer/<>c <>9
void GlobalNamespace::GorillaHuntComputer::$$c::_set_$$9(::GlobalNamespace::GorillaHuntComputer::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaHuntComputer/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Char> <>9__14_0
::System::Predicate_1<::Il2CppChar>* GlobalNamespace::GorillaHuntComputer::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::Il2CppChar>*>("", "GorillaHuntComputer/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Char> <>9__14_0
void GlobalNamespace::GorillaHuntComputer::$$c::_set_$$9__14_0(::System::Predicate_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaHuntComputer/<>c", "<>9__14_0", value)));
}
// Autogenerated method: GorillaHuntComputer/<>c..cctor
void GlobalNamespace::GorillaHuntComputer::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaHuntComputer/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaHuntComputer/<>c.<NormalizeName>b__14_0
bool GlobalNamespace::GorillaHuntComputer::$$c::$NormalizeName$b__14_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::$$c::<NormalizeName>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<NormalizeName>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaHuntManager
#include "GlobalNamespace/GorillaHuntManager.hpp"
// Including type: GorillaHuntManager/<HuntEnd>d__31
#include "GlobalNamespace/GorillaHuntManager_-HuntEnd-d__31.hpp"
// Including type: GorillaHuntManager/<StartHuntCountdown>d__28
#include "GlobalNamespace/GorillaHuntManager_-StartHuntCountdown-d__28.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: GorillaGameModes.GameModeType
#include "GorillaGameModes/GameModeType.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single tagCoolDown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaHuntManager::dyn_tagCoolDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_tagCoolDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagCoolDown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] currentHuntedArray
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::GorillaHuntManager::dyn_currentHuntedArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_currentHuntedArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentHuntedArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Photon.Realtime.Player> currentHunted
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*& GlobalNamespace::GorillaHuntManager::dyn_currentHunted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_currentHunted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentHunted"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Realtime::Player*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] currentTargetArray
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::GorillaHuntManager::dyn_currentTargetArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_currentTargetArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTargetArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Photon.Realtime.Player> currentTarget
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*& GlobalNamespace::GorillaHuntManager::dyn_currentTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_currentTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTarget"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Realtime::Player*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean huntStarted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaHuntManager::dyn_huntStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_huntStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "huntStarted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean waitingToStartNextHuntGame
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaHuntManager::dyn_waitingToStartNextHuntGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_waitingToStartNextHuntGame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitingToStartNextHuntGame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean inStartCountdown
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaHuntManager::dyn_inStartCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_inStartCountdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inStartCountdown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 countDownTime
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::dyn_countDownTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_countDownTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "countDownTime"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double timeHuntGameEnded
[[deprecated("Use field access instead!")]] double& GlobalNamespace::GorillaHuntManager::dyn_timeHuntGameEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_timeHuntGameEnded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeHuntGameEnded"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeLastSlowTagged
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaHuntManager::dyn_timeLastSlowTagged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_timeLastSlowTagged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeLastSlowTagged"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object objRef
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaHuntManager::dyn_objRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_objRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objRef"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iterator1
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::dyn_iterator1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_iterator1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iterator1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player tempRandPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaHuntManager::dyn_tempRandPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_tempRandPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempRandPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tempRandIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::dyn_tempRandIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_tempRandIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempRandIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 notHuntedCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::dyn_notHuntedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_notHuntedCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notHuntedCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tempTargetIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::dyn_tempTargetIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_tempTargetIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempTargetIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player tempPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaHuntManager::dyn_tempPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_tempPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 copyListToArrayIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::dyn_copyListToArrayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_copyListToArrayIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "copyListToArrayIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 copyArrayToListIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::dyn_copyArrayToListIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_copyArrayToListIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "copyArrayToListIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHuntManager.UpdateState
void GlobalNamespace::GorillaHuntManager::UpdateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.CleanUpHunt
void GlobalNamespace::GorillaHuntManager::CleanUpHunt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::CleanUpHunt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUpHunt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.StartHuntCountdown
::System::Collections::IEnumerator* GlobalNamespace::GorillaHuntManager::StartHuntCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::StartHuntCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartHuntCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.StartHunt
void GlobalNamespace::GorillaHuntManager::StartHunt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::StartHunt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartHunt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.RandomizePlayerList
void GlobalNamespace::GorillaHuntManager::RandomizePlayerList(ByRef<::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*> listToRandomize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::RandomizePlayerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomizePlayerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listToRandomize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(listToRandomize));
}
// Autogenerated method: GorillaHuntManager.HuntEnd
::System::Collections::IEnumerator* GlobalNamespace::GorillaHuntManager::HuntEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::HuntEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HuntEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.UpdateHuntState
void GlobalNamespace::GorillaHuntManager::UpdateHuntState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::UpdateHuntState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateHuntState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.EndHuntGame
void GlobalNamespace::GorillaHuntManager::EndHuntGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::EndHuntGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndHuntGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.IsTargetOf
bool GlobalNamespace::GorillaHuntManager::IsTargetOf(::Photon::Realtime::Player* huntingPlayer, ::Photon::Realtime::Player* huntedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::IsTargetOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTargetOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(huntingPlayer), ::il2cpp_utils::ExtractType(huntedPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, huntingPlayer, huntedPlayer);
}
// Autogenerated method: GorillaHuntManager.GetTargetOf
::Photon::Realtime::Player* GlobalNamespace::GorillaHuntManager::GetTargetOf(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::GetTargetOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTargetOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaHuntManager.CopyHuntDataListToArray
void GlobalNamespace::GorillaHuntManager::CopyHuntDataListToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::CopyHuntDataListToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyHuntDataListToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.CopyHuntDataArrayToList
void GlobalNamespace::GorillaHuntManager::CopyHuntDataArrayToList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::CopyHuntDataArrayToList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyHuntDataArrayToList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.CopyRoomDataToLocalData
void GlobalNamespace::GorillaHuntManager::CopyRoomDataToLocalData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::CopyRoomDataToLocalData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyRoomDataToLocalData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.GameType
::GorillaGameModes::GameModeType GlobalNamespace::GorillaHuntManager::GameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::GameType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaGameModes::GameModeType, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.GameModeName
::StringW GlobalNamespace::GorillaHuntManager::GameModeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::GameModeName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.Awake
void GlobalNamespace::GorillaHuntManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.StartPlaying
void GlobalNamespace::GorillaHuntManager::StartPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::StartPlaying");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.StopPlaying
void GlobalNamespace::GorillaHuntManager::StopPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::StopPlaying");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.Reset
void GlobalNamespace::GorillaHuntManager::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.LocalCanTag
bool GlobalNamespace::GorillaHuntManager::LocalCanTag(::Photon::Realtime::Player* myPlayer, ::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::LocalCanTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, myPlayer, otherPlayer);
}
// Autogenerated method: GorillaHuntManager.ReportTag
void GlobalNamespace::GorillaHuntManager::ReportTag(::Photon::Realtime::Player* taggedPlayer, ::Photon::Realtime::Player* taggingPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::ReportTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, taggedPlayer, taggingPlayer);
}
// Autogenerated method: GorillaHuntManager.HitPlayer
void GlobalNamespace::GorillaHuntManager::HitPlayer(::Photon::Realtime::Player* taggedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::HitPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, taggedPlayer);
}
// Autogenerated method: GorillaHuntManager.CanAffectPlayer
bool GlobalNamespace::GorillaHuntManager::CanAffectPlayer(::Photon::Realtime::Player* player, bool thisFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::CanAffectPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player, thisFrame);
}
// Autogenerated method: GorillaHuntManager.OnPlayerEnteredRoom
void GlobalNamespace::GorillaHuntManager::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: GorillaHuntManager.NewVRRig
void GlobalNamespace::GorillaHuntManager::NewVRRig(::Photon::Realtime::Player* player, int vrrigPhotonViewID, bool didntDoTutorial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::NewVRRig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, vrrigPhotonViewID, didntDoTutorial);
}
// Autogenerated method: GorillaHuntManager.OnPlayerLeftRoom
void GlobalNamespace::GorillaHuntManager::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: GorillaHuntManager.OnMasterClientSwitched
void GlobalNamespace::GorillaHuntManager::OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated method: GorillaHuntManager.OnSerializeWrite
void GlobalNamespace::GorillaHuntManager::OnSerializeWrite(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::OnSerializeWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaHuntManager.OnSerializeRead
void GlobalNamespace::GorillaHuntManager::OnSerializeRead(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::OnSerializeRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaHuntManager.MyMatIndex
int GlobalNamespace::GorillaHuntManager::MyMatIndex(::Photon::Realtime::Player* forPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::MyMatIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, forPlayer);
}
// Autogenerated method: GorillaHuntManager.LocalPlayerSpeed
::ArrayW<float> GlobalNamespace::GorillaHuntManager::LocalPlayerSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::LocalPlayerSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.InfrequentUpdate
void GlobalNamespace::GorillaHuntManager::InfrequentUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::InfrequentUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaHuntManager/<HuntEnd>d__31
#include "GlobalNamespace/GorillaHuntManager_-HuntEnd-d__31.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaHuntManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaHuntManager*& GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaHuntManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHuntManager/<HuntEnd>d__31.System.IDisposable.Dispose
void GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<HuntEnd>d__31.MoveNext
bool GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<HuntEnd>d__31.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<HuntEnd>d__31.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<HuntEnd>d__31.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__31*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaHuntManager/<StartHuntCountdown>d__28
#include "GlobalNamespace/GorillaHuntManager_-StartHuntCountdown-d__28.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaHuntManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaHuntManager*& GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaHuntManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHuntManager/<StartHuntCountdown>d__28.System.IDisposable.Dispose
void GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<StartHuntCountdown>d__28.MoveNext
bool GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<StartHuntCountdown>d__28.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<StartHuntCountdown>d__28.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<StartHuntCountdown>d__28.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__28*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaIK
#include "GlobalNamespace/GorillaIK.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform headBone
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaIK::dyn_headBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_headBone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headBone"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftUpperArm
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaIK::dyn_leftUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_leftUpperArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftUpperArm"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftLowerArm
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaIK::dyn_leftLowerArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_leftLowerArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftLowerArm"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaIK::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightUpperArm
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaIK::dyn_rightUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_rightUpperArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightUpperArm"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightLowerArm
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaIK::dyn_rightLowerArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_rightLowerArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightLowerArm"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaIK::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform targetLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaIK::dyn_targetLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_targetLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform targetRight
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaIK::dyn_targetRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_targetRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform targetHead
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaIK::dyn_targetHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_targetHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetHead"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion initialUpperLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GorillaIK::dyn_initialUpperLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_initialUpperLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialUpperLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion initialLowerLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GorillaIK::dyn_initialLowerLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_initialLowerLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialLowerLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion initialUpperRight
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GorillaIK::dyn_initialUpperRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_initialUpperRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialUpperRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion initialLowerRight
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GorillaIK::dyn_initialLowerRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_initialLowerRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialLowerRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion newRotationUpper
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GorillaIK::dyn_newRotationUpper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_newRotationUpper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newRotationUpper"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion newRotationLower
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GorillaIK::dyn_newRotationLower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_newRotationLower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newRotationLower"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single dU
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaIK::dyn_dU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_dU");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dU"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single dL
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaIK::dyn_dL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_dL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dL"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single dMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaIK::dyn_dMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_dMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testInEditor
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaIK::dyn_testInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_testInEditor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testInEditor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean reset
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaIK::dyn_reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_reset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testDefineRot
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaIK::dyn_testDefineRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_testDefineRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testDefineRot"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean moveOnce
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaIK::dyn_moveOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_moveOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single eps
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaIK::dyn_eps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_eps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eps"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single upperArmAngle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaIK::dyn_upperArmAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_upperArmAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upperArmAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single elbowAngle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaIK::dyn_elbowAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::dyn_elbowAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elbowAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaIK.Awake
void GlobalNamespace::GorillaIK::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaIK.OnEnable
void GlobalNamespace::GorillaIK::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaIK.OnDisable
void GlobalNamespace::GorillaIK::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaIK.ArmIK
void GlobalNamespace::GorillaIK::ArmIK(ByRef<::UnityEngine::Transform*> upperArm, ByRef<::UnityEngine::Transform*> lowerArm, ByRef<::UnityEngine::Transform*> hand, ::UnityEngine::Quaternion initRotUpper, ::UnityEngine::Quaternion initRotLower, ::UnityEngine::Transform* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIK::ArmIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ArmIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(upperArm), ::il2cpp_utils::ExtractType(lowerArm), ::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(initRotUpper), ::il2cpp_utils::ExtractType(initRotLower), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(upperArm), byref(lowerArm), byref(hand), initRotUpper, initRotLower, target);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaIKMgr
#include "GlobalNamespace/GorillaIKMgr.hpp"
// Including type: GorillaIKMgr/IKJob
#include "GlobalNamespace/GorillaIKMgr_IKJob.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaIK
#include "GlobalNamespace/GorillaIK.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private GorillaIKMgr _instance
::GlobalNamespace::GorillaIKMgr* GlobalNamespace::GorillaIKMgr::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaIKMgr*>("", "GorillaIKMgr", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private GorillaIKMgr _instance
void GlobalNamespace::GorillaIKMgr::_set__instance(::GlobalNamespace::GorillaIKMgr* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaIKMgr", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxSize
int GlobalNamespace::GorillaIKMgr::_get_MaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::_get_MaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "GorillaIKMgr", "MaxSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxSize
void GlobalNamespace::GorillaIKMgr::_set_MaxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::_set_MaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaIKMgr", "MaxSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<GorillaIK> ikList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::GorillaIK*>*& GlobalNamespace::GorillaIKMgr::dyn_ikList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::dyn_ikList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ikList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::GorillaIK*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Collections.NativeArray`1<GorillaIKMgr/IKInput> cachedInput
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::GlobalNamespace::GorillaIKMgr::IKInput>& GlobalNamespace::GorillaIKMgr::dyn_cachedInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::dyn_cachedInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedInput"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::GlobalNamespace::GorillaIKMgr::IKInput>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Collections.NativeArray`1<GorillaIKMgr/IKOutput> cachedOutput
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::GlobalNamespace::GorillaIKMgr::IKOutput>& GlobalNamespace::GorillaIKMgr::dyn_cachedOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::dyn_cachedOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedOutput"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::GlobalNamespace::GorillaIKMgr::IKOutput>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 actualListSz
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaIKMgr::dyn_actualListSz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::dyn_actualListSz");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "actualListSz"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Jobs.JobHandle jobHandle
[[deprecated("Use field access instead!")]] ::Unity::Jobs::JobHandle& GlobalNamespace::GorillaIKMgr::dyn_jobHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::dyn_jobHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jobHandle"))->offset;
  return *reinterpret_cast<::Unity::Jobs::JobHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean firstFrame
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaIKMgr::dyn_firstFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::dyn_firstFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaIKMgr.get_Instance
::GlobalNamespace::GorillaIKMgr* GlobalNamespace::GorillaIKMgr::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaIKMgr", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GorillaIKMgr*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaIKMgr.Awake
void GlobalNamespace::GorillaIKMgr::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaIKMgr.OnDestroy
void GlobalNamespace::GorillaIKMgr::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaIKMgr.RegisterIK
void GlobalNamespace::GorillaIKMgr::RegisterIK(::GlobalNamespace::GorillaIK* ik) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::RegisterIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ik)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ik);
}
// Autogenerated method: GorillaIKMgr.DeregisterIK
void GlobalNamespace::GorillaIKMgr::DeregisterIK(::GlobalNamespace::GorillaIK* ik) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::DeregisterIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeregisterIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ik)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ik);
}
// Autogenerated method: GorillaIKMgr.CopyInput
void GlobalNamespace::GorillaIKMgr::CopyInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::CopyInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaIKMgr.CopyOutput
void GlobalNamespace::GorillaIKMgr::CopyOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::CopyOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaIKMgr.LateUpdate
void GlobalNamespace::GorillaIKMgr::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaIKMgr/IKOutput
#include "GlobalNamespace/GorillaIKMgr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion upperArmLocalRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GorillaIKMgr::IKOutput::dyn_upperArmLocalRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::IKOutput::dyn_upperArmLocalRot");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upperArmLocalRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion lowerArmLocalRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GorillaIKMgr::IKOutput::dyn_lowerArmLocalRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::IKOutput::dyn_lowerArmLocalRot");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowerArmLocalRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaIKMgr/IKOutput..ctor
// ABORTED elsewhere.  GlobalNamespace::GorillaIKMgr::IKOutput::IKOutput(::UnityEngine::Quaternion upperArmLocalRot_, ::UnityEngine::Quaternion lowerArmLocalRot_)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaIKMgr/IKJob
#include "GlobalNamespace/GorillaIKMgr_IKJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<GorillaIKMgr/IKInput> input
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::GlobalNamespace::GorillaIKMgr::IKInput>& GlobalNamespace::GorillaIKMgr::IKJob::dyn_input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::IKJob::dyn_input");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "input"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::GlobalNamespace::GorillaIKMgr::IKInput>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<GorillaIKMgr/IKOutput> output
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::GlobalNamespace::GorillaIKMgr::IKOutput>& GlobalNamespace::GorillaIKMgr::IKJob::dyn_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::IKJob::dyn_output");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "output"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::GlobalNamespace::GorillaIKMgr::IKOutput>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaIKMgr/IKJob.Execute
void GlobalNamespace::GorillaIKMgr::IKJob::Execute(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKMgr::IKJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::GorillaIKMgr::IKJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaJoinTeamBox
#include "GlobalNamespace/GorillaJoinTeamBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean joinRedTeam
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaJoinTeamBox::dyn_joinRedTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaJoinTeamBox::dyn_joinRedTeam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinRedTeam"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaJoinTeamBox.OnBoxTriggered
void GlobalNamespace::GorillaJoinTeamBox::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaJoinTeamBox::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLevelScreen
#include "GlobalNamespace/GorillaLevelScreen.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String startingText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaLevelScreen::dyn_startingText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLevelScreen::dyn_startingText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material goodMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaLevelScreen::dyn_goodMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLevelScreen::dyn_goodMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goodMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material badMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaLevelScreen::dyn_badMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLevelScreen::dyn_badMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "badMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text myText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaLevelScreen::dyn_myText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLevelScreen::dyn_myText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLevelScreen.Awake
void GlobalNamespace::GorillaLevelScreen::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLevelScreen::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLevelScreen.UpdateText
void GlobalNamespace::GorillaLevelScreen::UpdateText(::StringW newText, bool setToGoodMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLevelScreen::UpdateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newText), ::il2cpp_utils::ExtractType(setToGoodMaterial)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newText, setToGoodMaterial);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaLightmapData
#include "GlobalNamespace/GorillaLightmapData.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D[] dirTextures
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& GlobalNamespace::GorillaLightmapData::dyn_dirTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLightmapData::dyn_dirTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirTextures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D[] lightTextures
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& GlobalNamespace::GorillaLightmapData::dyn_lightTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLightmapData::dyn_lightTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightTextures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color[][] lights
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<::UnityEngine::Color>>& GlobalNamespace::GorillaLightmapData::dyn_lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLightmapData::dyn_lights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lights"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<::UnityEngine::Color>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color[][] dirs
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<::UnityEngine::Color>>& GlobalNamespace::GorillaLightmapData::dyn_dirs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLightmapData::dyn_dirs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirs"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<::UnityEngine::Color>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean done
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaLightmapData::dyn_done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLightmapData::dyn_done");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "done"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLightmapData.Awake
void GlobalNamespace::GorillaLightmapData::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLightmapData::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaModeSelector
#include "GlobalNamespace/GorillaModeSelector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaModeSelector.Start
void GlobalNamespace::GorillaModeSelector::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaModeSelector::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaModeSelector.Update
void GlobalNamespace::GorillaModeSelector::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaModeSelector::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaMouthFlap
#include "GlobalNamespace/GorillaMouthFlap.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaSpeakerLoudness
#include "GlobalNamespace/GorillaSpeakerLoudness.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject targetFace
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaMouthFlap::dyn_targetFace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaMouthFlap::dyn_targetFace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetFace"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MouthFlapLevel[] mouthFlapLevels
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MouthFlapLevel>& GlobalNamespace::GorillaMouthFlap::dyn_mouthFlapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaMouthFlap::dyn_mouthFlapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mouthFlapLevels"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MouthFlapLevel>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MouthFlapLevel noMicFace
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MouthFlapLevel& GlobalNamespace::GorillaMouthFlap::dyn_noMicFace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaMouthFlap::dyn_noMicFace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noMicFace"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MouthFlapLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useMicEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaMouthFlap::dyn_useMicEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaMouthFlap::dyn_useMicEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useMicEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 activeFlipbookIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaMouthFlap::dyn_activeFlipbookIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaMouthFlap::dyn_activeFlipbookIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeFlipbookIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single activeFlipbookPlayTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaMouthFlap::dyn_activeFlipbookPlayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaMouthFlap::dyn_activeFlipbookPlayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeFlipbookPlayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaSpeakerLoudness speaker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaSpeakerLoudness*& GlobalNamespace::GorillaMouthFlap::dyn_speaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaMouthFlap::dyn_speaker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speaker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaSpeakerLoudness**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ShaderHashId _MouthMap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ShaderHashId& GlobalNamespace::GorillaMouthFlap::dyn__MouthMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaMouthFlap::dyn__MouthMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MouthMap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ShaderHashId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaMouthFlap.Start
void GlobalNamespace::GorillaMouthFlap::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaMouthFlap::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaMouthFlap.InvokeUpdate
void GlobalNamespace::GorillaMouthFlap::InvokeUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaMouthFlap::InvokeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaMouthFlap.CheckMouthflapChange
void GlobalNamespace::GorillaMouthFlap::CheckMouthflapChange(bool isMicEnabled, float currentLoudness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaMouthFlap::CheckMouthflapChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckMouthflapChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isMicEnabled), ::il2cpp_utils::ExtractType(currentLoudness)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isMicEnabled, currentLoudness);
}
// Autogenerated method: GorillaMouthFlap.UpdateMouthFlapFlipbook
void GlobalNamespace::GorillaMouthFlap::UpdateMouthFlapFlipbook(::GlobalNamespace::MouthFlapLevel mouthFlap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaMouthFlap::UpdateMouthFlapFlipbook");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMouthFlapFlipbook", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mouthFlap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mouthFlap);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Gorillanalytics
#include "GlobalNamespace/Gorillanalytics.hpp"
// Including type: Gorillanalytics/UploadData
#include "GlobalNamespace/Gorillanalytics_UploadData.hpp"
// Including type: Gorillanalytics/<>c
#include "GlobalNamespace/Gorillanalytics_--c.hpp"
// Including type: Gorillanalytics/<>c__DisplayClass10_0
#include "GlobalNamespace/Gorillanalytics_--c__DisplayClass10_0.hpp"
// Including type: Gorillanalytics/<Start>d__8
#include "GlobalNamespace/Gorillanalytics_-Start-d__8.hpp"
// Including type: GorillaNetworking.PhotonNetworkController
#include "GorillaNetworking/PhotonNetworkController.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single interval
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Gorillanalytics::dyn_interval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::dyn_interval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double oneOverChance
[[deprecated("Use field access instead!")]] double& GlobalNamespace::Gorillanalytics::dyn_oneOverChance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::dyn_oneOverChance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oneOverChance"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.PhotonNetworkController photonNetworkController
[[deprecated("Use field access instead!")]] ::GorillaNetworking::PhotonNetworkController*& GlobalNamespace::Gorillanalytics::dyn_photonNetworkController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::dyn_photonNetworkController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonNetworkController"))->offset;
  return *reinterpret_cast<::GorillaNetworking::PhotonNetworkController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> maps
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::Gorillanalytics::dyn_maps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::dyn_maps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maps"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> modes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::Gorillanalytics::dyn_modes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::dyn_modes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> queues
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::Gorillanalytics::dyn_queues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::dyn_queues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queues"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Gorillanalytics/UploadData uploadData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Gorillanalytics::UploadData*& GlobalNamespace::Gorillanalytics::dyn_uploadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::dyn_uploadData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uploadData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Gorillanalytics::UploadData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Gorillanalytics.Start
::System::Collections::IEnumerator* GlobalNamespace::Gorillanalytics::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Gorillanalytics.UploadGorillanalytics
void GlobalNamespace::Gorillanalytics::UploadGorillanalytics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::UploadGorillanalytics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadGorillanalytics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Gorillanalytics.GetMapModeQueue
void GlobalNamespace::Gorillanalytics::GetMapModeQueue(ByRef<::StringW> map, ByRef<::StringW> mode, ByRef<::StringW> queue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::GetMapModeQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMapModeQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(map), byref(mode), byref(queue));
}
// Autogenerated method: Gorillanalytics.<Start>b__8_0
void GlobalNamespace::Gorillanalytics::$Start$b__8_0(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::<Start>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Gorillanalytics/UploadData
#include "GlobalNamespace/Gorillanalytics_UploadData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String version
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Gorillanalytics::UploadData::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::UploadData::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double upload_chance
[[deprecated("Use field access instead!")]] double& GlobalNamespace::Gorillanalytics::UploadData::dyn_upload_chance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::UploadData::dyn_upload_chance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upload_chance"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String map
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Gorillanalytics::UploadData::dyn_map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::UploadData::dyn_map");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "map"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String mode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Gorillanalytics::UploadData::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::UploadData::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String queue
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Gorillanalytics::UploadData::dyn_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::UploadData::dyn_queue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 player_count
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Gorillanalytics::UploadData::dyn_player_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::UploadData::dyn_player_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pos_x
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Gorillanalytics::UploadData::dyn_pos_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::UploadData::dyn_pos_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos_x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pos_y
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Gorillanalytics::UploadData::dyn_pos_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::UploadData::dyn_pos_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos_y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pos_z
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Gorillanalytics::UploadData::dyn_pos_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::UploadData::dyn_pos_z");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos_z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single vel_x
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Gorillanalytics::UploadData::dyn_vel_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::UploadData::dyn_vel_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vel_x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single vel_y
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Gorillanalytics::UploadData::dyn_vel_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::UploadData::dyn_vel_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vel_y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single vel_z
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Gorillanalytics::UploadData::dyn_vel_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::UploadData::dyn_vel_z");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vel_z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String cosmetics_owned
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Gorillanalytics::UploadData::dyn_cosmetics_owned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::UploadData::dyn_cosmetics_owned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cosmetics_owned"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String cosmetics_worn
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Gorillanalytics::UploadData::dyn_cosmetics_worn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::UploadData::dyn_cosmetics_worn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cosmetics_worn"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Gorillanalytics/<>c
#include "GlobalNamespace/Gorillanalytics_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Gorillanalytics/<>c <>9
::GlobalNamespace::Gorillanalytics::$$c* GlobalNamespace::Gorillanalytics::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::Gorillanalytics::$$c*>("", "Gorillanalytics/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Gorillanalytics/<>c <>9
void GlobalNamespace::Gorillanalytics::$$c::_set_$$9(::GlobalNamespace::Gorillanalytics::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "Gorillanalytics/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<PlayFab.PlayFabError> <>9__8_1
::System::Action_1<::PlayFab::PlayFabError*>* GlobalNamespace::Gorillanalytics::$$c::_get_$$9__8_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c::_get_$$9__8_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::PlayFab::PlayFabError*>*>("", "Gorillanalytics/<>c", "<>9__8_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<PlayFab.PlayFabError> <>9__8_1
void GlobalNamespace::Gorillanalytics::$$c::_set_$$9__8_1(::System::Action_1<::PlayFab::PlayFabError*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c::_set_$$9__8_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "Gorillanalytics/<>c", "<>9__8_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<GorillaNetworking.CosmeticsController/CosmeticItem,System.String> <>9__9_0
::System::Func_2<::GorillaNetworking::CosmeticsController::CosmeticItem, ::StringW>* GlobalNamespace::Gorillanalytics::$$c::_get_$$9__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c::_get_$$9__9_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GorillaNetworking::CosmeticsController::CosmeticItem, ::StringW>*>("", "Gorillanalytics/<>c", "<>9__9_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<GorillaNetworking.CosmeticsController/CosmeticItem,System.String> <>9__9_0
void GlobalNamespace::Gorillanalytics::$$c::_set_$$9__9_0(::System::Func_2<::GorillaNetworking::CosmeticsController::CosmeticItem, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c::_set_$$9__9_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "Gorillanalytics/<>c", "<>9__9_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<GorillaNetworking.CosmeticsController/CosmeticItem,System.String> <>9__9_1
::System::Func_2<::GorillaNetworking::CosmeticsController::CosmeticItem, ::StringW>* GlobalNamespace::Gorillanalytics::$$c::_get_$$9__9_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c::_get_$$9__9_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GorillaNetworking::CosmeticsController::CosmeticItem, ::StringW>*>("", "Gorillanalytics/<>c", "<>9__9_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<GorillaNetworking.CosmeticsController/CosmeticItem,System.String> <>9__9_1
void GlobalNamespace::Gorillanalytics::$$c::_set_$$9__9_1(::System::Func_2<::GorillaNetworking::CosmeticsController::CosmeticItem, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c::_set_$$9__9_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "Gorillanalytics/<>c", "<>9__9_1", value)));
}
// Autogenerated method: Gorillanalytics/<>c..cctor
void GlobalNamespace::Gorillanalytics::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Gorillanalytics/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Gorillanalytics/<>c.<Start>b__8_1
void GlobalNamespace::Gorillanalytics::$$c::$Start$b__8_1(::PlayFab::PlayFabError* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c::<Start>b__8_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__8_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: Gorillanalytics/<>c.<UploadGorillanalytics>b__9_0
::StringW GlobalNamespace::Gorillanalytics::$$c::$UploadGorillanalytics$b__9_0(::GorillaNetworking::CosmeticsController::CosmeticItem c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c::<UploadGorillanalytics>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UploadGorillanalytics>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, c);
}
// Autogenerated method: Gorillanalytics/<>c.<UploadGorillanalytics>b__9_1
::StringW GlobalNamespace::Gorillanalytics::$$c::$UploadGorillanalytics$b__9_1(::GorillaNetworking::CosmeticsController::CosmeticItem c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c::<UploadGorillanalytics>b__9_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UploadGorillanalytics>b__9_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Gorillanalytics/<>c__DisplayClass10_0
#include "GlobalNamespace/Gorillanalytics_--c__DisplayClass10_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String gameMode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Gorillanalytics::$$c__DisplayClass10_0::dyn_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c__DisplayClass10_0::dyn_gameMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameMode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Gorillanalytics/<>c__DisplayClass10_0.<GetMapModeQueue>b__0
bool GlobalNamespace::Gorillanalytics::$$c__DisplayClass10_0::$GetMapModeQueue$b__0(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c__DisplayClass10_0::<GetMapModeQueue>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMapModeQueue>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s);
}
// Autogenerated method: Gorillanalytics/<>c__DisplayClass10_0.<GetMapModeQueue>b__1
bool GlobalNamespace::Gorillanalytics::$$c__DisplayClass10_0::$GetMapModeQueue$b__1(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c__DisplayClass10_0::<GetMapModeQueue>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMapModeQueue>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s);
}
// Autogenerated method: Gorillanalytics/<>c__DisplayClass10_0.<GetMapModeQueue>b__2
bool GlobalNamespace::Gorillanalytics::$$c__DisplayClass10_0::$GetMapModeQueue$b__2(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$$c__DisplayClass10_0::<GetMapModeQueue>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMapModeQueue>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Gorillanalytics/<Start>d__8
#include "GlobalNamespace/Gorillanalytics_-Start-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Gorillanalytics::$Start$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$Start$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::Gorillanalytics::$Start$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$Start$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Gorillanalytics <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Gorillanalytics*& GlobalNamespace::Gorillanalytics::$Start$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$Start$d__8::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Gorillanalytics**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Gorillanalytics/<Start>d__8.System.IDisposable.Dispose
void GlobalNamespace::Gorillanalytics::$Start$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$Start$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Gorillanalytics::$Start$d__8*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Gorillanalytics/<Start>d__8.MoveNext
bool GlobalNamespace::Gorillanalytics::$Start$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$Start$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Gorillanalytics::$Start$d__8*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Gorillanalytics/<Start>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::Gorillanalytics::$Start$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$Start$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Gorillanalytics::$Start$d__8*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Gorillanalytics/<Start>d__8.System.Collections.IEnumerator.Reset
void GlobalNamespace::Gorillanalytics::$Start$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$Start$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Gorillanalytics::$Start$d__8*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Gorillanalytics/<Start>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::Gorillanalytics::$Start$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Gorillanalytics::$Start$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Gorillanalytics::$Start$d__8*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ReportInfo
#include "GlobalNamespace/ReportInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String SusName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ReportInfo::dyn_SusName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReportInfo::dyn_SusName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SusName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String SusId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ReportInfo::dyn_SusId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReportInfo::dyn_SusId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SusId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String SusReason
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ReportInfo::dyn_SusReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReportInfo::dyn_SusReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SusReason"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 hashCode
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ReportInfo::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReportInfo::dyn_hashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ReportInfo.Equals
bool GlobalNamespace::ReportInfo::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReportInfo::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: ReportInfo.GetHashCode
int GlobalNamespace::ReportInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReportInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ReportInfo.ToString
::StringW GlobalNamespace::ReportInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReportInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ReportInfo.op_Inequality
bool GlobalNamespace::operator !=(::GlobalNamespace::ReportInfo* lhs, ::GlobalNamespace::ReportInfo& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReportInfo::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ReportInfo", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(&rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, &rhs);
}
// Autogenerated method: ReportInfo.op_Equality
bool GlobalNamespace::operator ==(::GlobalNamespace::ReportInfo* lhs, ::GlobalNamespace::ReportInfo& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReportInfo::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ReportInfo", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(&rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, &rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaNot
#include "GlobalNamespace/GorillaNot.hpp"
// Including type: GorillaNot/RPCCallTracker
#include "GlobalNamespace/GorillaNot_RPCCallTracker.hpp"
// Including type: GorillaNot/<>c
#include "GlobalNamespace/GorillaNot_--c.hpp"
// Including type: GorillaNot/<CheckDirtyRoom>d__75
#include "GlobalNamespace/GorillaNot_-CheckDirtyRoom-d__75.hpp"
// Including type: GorillaNot/<CheckReports>d__53
#include "GlobalNamespace/GorillaNot_-CheckReports-d__53.hpp"
// Including type: GorillaNot/<QuitDelay>d__64
#include "GlobalNamespace/GorillaNot_-QuitDelay-d__64.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: ReportInfo
#include "GlobalNamespace/ReportInfo.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: PhotonMessageInfoWrapped
#include "GlobalNamespace/PhotonMessageInfoWrapped.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
// Including type: Photon.Voice.Unity.RemoteVoiceLink
#include "Photon/Voice/Unity/RemoteVoiceLink.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaNot instance
::GlobalNamespace::GorillaNot* GlobalNamespace::GorillaNot::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaNot*>("", "GorillaNot", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNot instance
void GlobalNamespace::GorillaNot::_set_instance(::GlobalNamespace::GorillaNot* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaNot", "instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte ReportAssault
uint8_t GlobalNamespace::GorillaNot::_get_ReportAssault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::_get_ReportAssault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "GorillaNot", "ReportAssault"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte ReportAssault
void GlobalNamespace::GorillaNot::_set_ReportAssault(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::_set_ReportAssault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaNot", "ReportAssault", value));
}
// Autogenerated static field getter
// Get static field: static private System.String InvalidRPC
::StringW GlobalNamespace::GorillaNot::_get_InvalidRPC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::_get_InvalidRPC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GorillaNot", "InvalidRPC"));
}
// Autogenerated static field setter
// Set static field: static private System.String InvalidRPC
void GlobalNamespace::GorillaNot::_set_InvalidRPC(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::_set_InvalidRPC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaNot", "InvalidRPC", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32[] targetActors
::ArrayW<int> GlobalNamespace::GorillaNot::_get_targetActors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::_get_targetActors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("", "GorillaNot", "targetActors"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32[] targetActors
void GlobalNamespace::GorillaNot::_set_targetActors(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::_set_targetActors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaNot", "targetActors", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sendReport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaNot::dyn__sendReport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn__sendReport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sendReport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _suspiciousPlayerId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaNot::dyn__suspiciousPlayerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn__suspiciousPlayerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suspiciousPlayerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _suspiciousPlayerName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaNot::dyn__suspiciousPlayerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn__suspiciousPlayerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suspiciousPlayerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _suspiciousReason
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaNot::dyn__suspiciousReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn__suspiciousReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suspiciousReason"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.String> reportedPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::GorillaNot::dyn_reportedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_reportedPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reportedPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte roomSize
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::GorillaNot::dyn_roomSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_roomSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomSize"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastCheck
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaNot::dyn_lastCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_lastCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCheck"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single checkCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaNot::dyn_checkCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_checkCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single userDecayTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaNot::dyn_userDecayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_userDecayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userDecayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player currentMasterClient
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaNot::dyn_currentMasterClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_currentMasterClient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentMasterClient"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testAssault
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaNot::dyn_testAssault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_testAssault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testAssault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lowestActorNumber
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaNot::dyn_lowestActorNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_lowestActorNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowestActorNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 calls
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaNot::dyn_calls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_calls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calls"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 rpcCallLimit
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaNot::dyn_rpcCallLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_rpcCallLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rpcCallLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 logErrorMax
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaNot::dyn_logErrorMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_logErrorMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logErrorMax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 rpcErrorMax
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaNot::dyn_rpcErrorMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_rpcErrorMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rpcErrorMax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object outObj
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaNot::dyn_outObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_outObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outObj"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player tempPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaNot::dyn_tempPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_tempPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 logErrorCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaNot::dyn_logErrorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_logErrorCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logErrorCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 stringIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaNot::dyn_stringIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_stringIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String playerID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaNot::dyn_playerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_playerID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String playerNick
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaNot::dyn_playerNick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_playerNick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerNick"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastServerTimestamp
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaNot::dyn_lastServerTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_lastServerTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastServerTimestamp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player[] cachedPlayerList
[[deprecated("Use field access instead!")]] ::ArrayW<::Photon::Realtime::Player*>& GlobalNamespace::GorillaNot::dyn_cachedPlayerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_cachedPlayerList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedPlayerList"))->offset;
  return *reinterpret_cast<::ArrayW<::Photon::Realtime::Player*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,GorillaNot/RPCCallTracker>> userRPCCalls
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::GorillaNot::RPCCallTracker*>*>*& GlobalNamespace::GorillaNot::dyn_userRPCCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_userRPCCalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userRPCCalls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::GorillaNot::RPCCallTracker*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String roomGameMode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaNot::dyn_roomGameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_roomGameMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomGameMode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<ReportInfo> reportQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GlobalNamespace::ReportInfo*>*& GlobalNamespace::GorillaNot::dyn_reportQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_reportQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reportQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::ReportInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.HashSet`1<ReportInfo>> queuedReports
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::HashSet_1<::GlobalNamespace::ReportInfo*>*>*& GlobalNamespace::GorillaNot::dyn_queuedReports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_queuedReports");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queuedReports"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::HashSet_1<::GlobalNamespace::ReportInfo*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean closeDirty
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaNot::dyn_closeDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_closeDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.Hashtable hashTable
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Hashtable*& GlobalNamespace::GorillaNot::dyn_hashTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::dyn_hashTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashTable"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNot.get_sendReport
bool GlobalNamespace::GorillaNot::get_sendReport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::get_sendReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sendReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.set_sendReport
void GlobalNamespace::GorillaNot::set_sendReport(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::set_sendReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sendReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaNot.get_suspiciousPlayerId
::StringW GlobalNamespace::GorillaNot::get_suspiciousPlayerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::get_suspiciousPlayerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_suspiciousPlayerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.set_suspiciousPlayerId
void GlobalNamespace::GorillaNot::set_suspiciousPlayerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::set_suspiciousPlayerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_suspiciousPlayerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaNot.get_suspiciousPlayerName
::StringW GlobalNamespace::GorillaNot::get_suspiciousPlayerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::get_suspiciousPlayerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_suspiciousPlayerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.set_suspiciousPlayerName
void GlobalNamespace::GorillaNot::set_suspiciousPlayerName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::set_suspiciousPlayerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_suspiciousPlayerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaNot.get_suspiciousReason
::StringW GlobalNamespace::GorillaNot::get_suspiciousReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::get_suspiciousReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_suspiciousReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.set_suspiciousReason
void GlobalNamespace::GorillaNot::set_suspiciousReason(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::set_suspiciousReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_suspiciousReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaNot.Start
void GlobalNamespace::GorillaNot::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.OnApplicationPause
void GlobalNamespace::GorillaNot::OnApplicationPause(bool paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paused)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, paused);
}
// Autogenerated method: GorillaNot.LogErrorCount
void GlobalNamespace::GorillaNot::LogErrorCount(::StringW logString, ::StringW stackTrace, ::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::LogErrorCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogErrorCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logString), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logString, stackTrace, type);
}
// Autogenerated method: GorillaNot.SendReport
void GlobalNamespace::GorillaNot::SendReport(::StringW susReason, ::StringW susId, ::StringW susNick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::SendReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(susReason), ::il2cpp_utils::ExtractType(susId), ::il2cpp_utils::ExtractType(susNick)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, susReason, susId, susNick);
}
// Autogenerated method: GorillaNot.SendReportImediately
void GlobalNamespace::GorillaNot::SendReportImediately(::StringW susReason, ::StringW susId, ::StringW susNick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::SendReportImediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReportImediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(susReason), ::il2cpp_utils::ExtractType(susId), ::il2cpp_utils::ExtractType(susNick)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, susReason, susId, susNick);
}
// Autogenerated method: GorillaNot.DispatchReport
void GlobalNamespace::GorillaNot::DispatchReport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::DispatchReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DispatchReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.CheckReports
::System::Collections::IEnumerator* GlobalNamespace::GorillaNot::CheckReports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::CheckReports");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckReports", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.RefreshRPCs
void GlobalNamespace::GorillaNot::RefreshRPCs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::RefreshRPCs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshRPCs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.LowestActorNumber
int GlobalNamespace::GorillaNot::LowestActorNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::LowestActorNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LowestActorNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.IncrementRPCCall
void GlobalNamespace::GorillaNot::IncrementRPCCall(::Photon::Pun::PhotonMessageInfo info, ::StringW callingMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::IncrementRPCCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaNot", "IncrementRPCCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(callingMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, info, callingMethod);
}
// Autogenerated method: GorillaNot.IncrementRPCCall
void GlobalNamespace::GorillaNot::IncrementRPCCall(::GlobalNamespace::PhotonMessageInfoWrapped infoWrapped, ::StringW callingMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::IncrementRPCCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaNot", "IncrementRPCCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infoWrapped), ::il2cpp_utils::ExtractType(callingMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, infoWrapped, callingMethod);
}
// Autogenerated method: GorillaNot.IncrementRPCCallLocal
void GlobalNamespace::GorillaNot::IncrementRPCCallLocal(::GlobalNamespace::PhotonMessageInfoWrapped infoWrapped, ::StringW rpcFunction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::IncrementRPCCallLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementRPCCallLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infoWrapped), ::il2cpp_utils::ExtractType(rpcFunction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, infoWrapped, rpcFunction);
}
// Autogenerated method: GorillaNot.IncrementRPCTracker
bool GlobalNamespace::GorillaNot::IncrementRPCTracker(ByRef<::Photon::Realtime::Player*> sender, ByRef<::StringW> rpcFunction, ByRef<int> callLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::IncrementRPCTracker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementRPCTracker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(rpcFunction), ::il2cpp_utils::ExtractType(callLimit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(sender), byref(rpcFunction), byref(callLimit));
}
// Autogenerated method: GorillaNot.IncrementRPCTracker
bool GlobalNamespace::GorillaNot::IncrementRPCTracker(ByRef<::StringW> userId, ByRef<::StringW> rpcFunction, ByRef<int> callLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::IncrementRPCTracker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementRPCTracker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(rpcFunction), ::il2cpp_utils::ExtractType(callLimit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(userId), byref(rpcFunction), byref(callLimit));
}
// Autogenerated method: GorillaNot.GetRPCCallTracker
::GlobalNamespace::GorillaNot::RPCCallTracker* GlobalNamespace::GorillaNot::GetRPCCallTracker(::StringW userID, ::StringW rpcFunction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::GetRPCCallTracker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRPCCallTracker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(rpcFunction)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GorillaNot::RPCCallTracker*, false>(this, ___internal__method, userID, rpcFunction);
}
// Autogenerated method: GorillaNot.QuitDelay
::System::Collections::IEnumerator* GlobalNamespace::GorillaNot::QuitDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::QuitDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QuitDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.SetToRoomCreatorIfHere
void GlobalNamespace::GorillaNot::SetToRoomCreatorIfHere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::SetToRoomCreatorIfHere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToRoomCreatorIfHere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.ShouldDisconnectFromRoom
bool GlobalNamespace::GorillaNot::ShouldDisconnectFromRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::ShouldDisconnectFromRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldDisconnectFromRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.CloseInvalidRoom
void GlobalNamespace::GorillaNot::CloseInvalidRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::CloseInvalidRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseInvalidRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.Photon.Realtime.IOnEventCallback.OnEvent
void GlobalNamespace::GorillaNot::Photon_Realtime_IOnEventCallback_OnEvent(::ExitGames::Client::Photon::EventData* photonEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::Photon.Realtime.IOnEventCallback.OnEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, photonEvent);
}
// Autogenerated method: GorillaNot.ValidRoomName
bool GlobalNamespace::GorillaNot::ValidRoomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::ValidRoomName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidRoomName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.ShouldRoomBeClosed
bool GlobalNamespace::GorillaNot::ShouldRoomBeClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::ShouldRoomBeClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldRoomBeClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.ValidateRemoteVoiceLink
void GlobalNamespace::GorillaNot::ValidateRemoteVoiceLink(::Photon::Voice::Unity::RemoteVoiceLink* voiceLink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::ValidateRemoteVoiceLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateRemoteVoiceLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voiceLink)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, voiceLink);
}
// Autogenerated method: GorillaNot.CheckAndUpdateReportData
bool GlobalNamespace::GorillaNot::CheckAndUpdateReportData(::GlobalNamespace::ReportInfo* newReport) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::CheckAndUpdateReportData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAndUpdateReportData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newReport)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, newReport);
}
// Autogenerated method: GorillaNot.CheckDirtyRoom
::System::Collections::IEnumerator* GlobalNamespace::GorillaNot::CheckDirtyRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::CheckDirtyRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDirtyRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot..cctor
void GlobalNamespace::GorillaNot::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaNot", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaNot.<Start>b__47_0
void GlobalNamespace::GorillaNot::$Start$b__47_0(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::<Start>b__47_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__47_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: GorillaNot.OnPlayerEnteredRoom
void GlobalNamespace::GorillaNot::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: GorillaNot.OnPlayerLeftRoom
void GlobalNamespace::GorillaNot::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: GorillaNot.OnLeftRoom
void GlobalNamespace::GorillaNot::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot.OnJoinedRoom
void GlobalNamespace::GorillaNot::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaNot/RPCCallTracker
#include "GlobalNamespace/GorillaNot_RPCCallTracker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 RPCCalls
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaNot::RPCCallTracker::dyn_RPCCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::RPCCallTracker::dyn_RPCCalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RPCCalls"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 RPCCallsMax
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaNot::RPCCallTracker::dyn_RPCCallsMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::RPCCallTracker::dyn_RPCCallsMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RPCCallsMax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaNot/<>c
#include "GlobalNamespace/GorillaNot_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GorillaNot/<>c <>9
::GlobalNamespace::GorillaNot::$$c* GlobalNamespace::GorillaNot::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaNot::$$c*>("", "GorillaNot/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GorillaNot/<>c <>9
void GlobalNamespace::GorillaNot::$$c::_set_$$9(::GlobalNamespace::GorillaNot::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaNot/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<PlayFab.PlayFabError> <>9__47_1
::System::Action_1<::PlayFab::PlayFabError*>* GlobalNamespace::GorillaNot::$$c::_get_$$9__47_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$$c::_get_$$9__47_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::PlayFab::PlayFabError*>*>("", "GorillaNot/<>c", "<>9__47_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<PlayFab.PlayFabError> <>9__47_1
void GlobalNamespace::GorillaNot::$$c::_set_$$9__47_1(::System::Action_1<::PlayFab::PlayFabError*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$$c::_set_$$9__47_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaNot/<>c", "<>9__47_1", value)));
}
// Autogenerated method: GorillaNot/<>c..cctor
void GlobalNamespace::GorillaNot::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaNot/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaNot/<>c.<Start>b__47_1
void GlobalNamespace::GorillaNot::$$c::$Start$b__47_1(::PlayFab::PlayFabError* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$$c::<Start>b__47_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__47_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaNot/<CheckDirtyRoom>d__75
#include "GlobalNamespace/GorillaNot_-CheckDirtyRoom-d__75.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNot <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaNot*& GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaNot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNot/<CheckDirtyRoom>d__75.System.IDisposable.Dispose
void GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot/<CheckDirtyRoom>d__75.MoveNext
bool GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot/<CheckDirtyRoom>d__75.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot/<CheckDirtyRoom>d__75.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot/<CheckDirtyRoom>d__75.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot::$CheckDirtyRoom$d__75*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaNot/<CheckReports>d__53
#include "GlobalNamespace/GorillaNot_-CheckReports-d__53.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaNot::$CheckReports$d__53::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckReports$d__53::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaNot::$CheckReports$d__53::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckReports$d__53::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNot <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaNot*& GlobalNamespace::GorillaNot::$CheckReports$d__53::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckReports$d__53::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaNot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNot/<CheckReports>d__53.System.IDisposable.Dispose
void GlobalNamespace::GorillaNot::$CheckReports$d__53::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckReports$d__53::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot::$CheckReports$d__53*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot/<CheckReports>d__53.MoveNext
bool GlobalNamespace::GorillaNot::$CheckReports$d__53::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckReports$d__53::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot::$CheckReports$d__53*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot/<CheckReports>d__53.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaNot::$CheckReports$d__53::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckReports$d__53::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot::$CheckReports$d__53*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot/<CheckReports>d__53.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaNot::$CheckReports$d__53::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckReports$d__53::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot::$CheckReports$d__53*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot/<CheckReports>d__53.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaNot::$CheckReports$d__53::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$CheckReports$d__53::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot::$CheckReports$d__53*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaNot/<QuitDelay>d__64
#include "GlobalNamespace/GorillaNot_-QuitDelay-d__64.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaNot::$QuitDelay$d__64::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$QuitDelay$d__64::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaNot::$QuitDelay$d__64::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$QuitDelay$d__64::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNot/<QuitDelay>d__64.System.IDisposable.Dispose
void GlobalNamespace::GorillaNot::$QuitDelay$d__64::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$QuitDelay$d__64::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot::$QuitDelay$d__64*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot/<QuitDelay>d__64.MoveNext
bool GlobalNamespace::GorillaNot::$QuitDelay$d__64::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$QuitDelay$d__64::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot::$QuitDelay$d__64*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot/<QuitDelay>d__64.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaNot::$QuitDelay$d__64::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$QuitDelay$d__64::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot::$QuitDelay$d__64*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot/<QuitDelay>d__64.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaNot::$QuitDelay$d__64::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$QuitDelay$d__64::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot::$QuitDelay$d__64*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNot/<QuitDelay>d__64.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaNot::$QuitDelay$d__64::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNot::$QuitDelay$d__64::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNot::$QuitDelay$d__64*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaParent
#include "GlobalNamespace/GorillaParent.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: NetPlayer
#include "GlobalNamespace/NetPlayer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaParent instance
::GlobalNamespace::GorillaParent* GlobalNamespace::GorillaParent::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaParent*>("", "GorillaParent", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaParent instance
void GlobalNamespace::GorillaParent::_set_instance(::GlobalNamespace::GorillaParent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaParent", "instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean hasInstance
bool GlobalNamespace::GorillaParent::_get_hasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::_get_hasInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "GorillaParent", "hasInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean hasInstance
void GlobalNamespace::GorillaParent::_set_hasInstance(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::_set_hasInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaParent", "hasInstance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean replicatedClientReady
bool GlobalNamespace::GorillaParent::_get_replicatedClientReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::_get_replicatedClientReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "GorillaParent", "replicatedClientReady"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean replicatedClientReady
void GlobalNamespace::GorillaParent::_set_replicatedClientReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::_set_replicatedClientReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaParent", "replicatedClientReady", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action onReplicatedClientReady
::System::Action* GlobalNamespace::GorillaParent::_get_onReplicatedClientReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::_get_onReplicatedClientReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "GorillaParent", "onReplicatedClientReady"));
}
// Autogenerated static field setter
// Set static field: static private System.Action onReplicatedClientReady
void GlobalNamespace::GorillaParent::_set_onReplicatedClientReady(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::_set_onReplicatedClientReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaParent", "onReplicatedClientReady", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject tagUI
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaParent::dyn_tagUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::dyn_tagUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagUI"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject playerParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaParent::dyn_playerParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::dyn_playerParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject vrrigParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaParent::dyn_vrrigParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::dyn_vrrigParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrrigParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<VRRig> vrrigs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::VRRig*>*& GlobalNamespace::GorillaParent::dyn_vrrigs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::dyn_vrrigs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrrigs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::VRRig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<NetPlayer,VRRig> vrrigDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::NetPlayer*, ::GlobalNamespace::VRRig*>*& GlobalNamespace::GorillaParent::dyn_vrrigDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::dyn_vrrigDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrrigDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::NetPlayer*, ::GlobalNamespace::VRRig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 i
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaParent::dyn_i() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::dyn_i");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "i"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean joinedRoom
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaParent::dyn_joinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::dyn_joinedRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinedRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaParent.Awake
void GlobalNamespace::GorillaParent::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaParent.OnDestroy
void GlobalNamespace::GorillaParent::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaParent.LateUpdate
void GlobalNamespace::GorillaParent::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaParent.ReplicatedClientReady
void GlobalNamespace::GorillaParent::ReplicatedClientReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::ReplicatedClientReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaParent", "ReplicatedClientReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaParent.OnReplicatedClientReady
void GlobalNamespace::GorillaParent::OnReplicatedClientReady(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::OnReplicatedClientReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaParent", "OnReplicatedClientReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaScoreBoard
#include "GlobalNamespace/GorillaScoreBoard.hpp"
// Including type: GorillaScoreBoard/<>c
#include "GlobalNamespace/GorillaScoreBoard_--c.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaGameManager
#include "GlobalNamespace/GorillaGameManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaPlayerScoreboardLine
#include "GlobalNamespace/GorillaPlayerScoreboardLine.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String error
::StringW GlobalNamespace::GorillaScoreBoard::_get_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::_get_error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GorillaScoreBoard", "error"));
}
// Autogenerated static field setter
// Set static field: static private System.String error
void GlobalNamespace::GorillaScoreBoard::_set_error(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::_set_error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaScoreBoard", "error", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject scoreBoardLinePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaScoreBoard::dyn_scoreBoardLinePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_scoreBoardLinePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoreBoardLinePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 startingYValue
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaScoreBoard::dyn_startingYValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_startingYValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingYValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lineHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaScoreBoard::dyn_lineHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_lineHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaGameManager gameManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaGameManager*& GlobalNamespace::GorillaScoreBoard::dyn_gameManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_gameManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaGameManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String gameType
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaScoreBoard::dyn_gameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_gameType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeMMR
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreBoard::dyn_includeMMR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_includeMMR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeMMR"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreBoard::dyn_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject linesParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaScoreBoard::dyn_linesParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_linesParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linesParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaPlayerScoreboardLine> lines
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::GorillaPlayerScoreboardLine*>*& GlobalNamespace::GorillaScoreBoard::dyn_lines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_lines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lines"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::GorillaPlayerScoreboardLine*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text boardText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaScoreBoard::dyn_boardText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_boardText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boardText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text buttonText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaScoreBoard::dyn_buttonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_buttonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean needsUpdate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreBoard::dyn_needsUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_needsUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "needsUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text notInRoomText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaScoreBoard::dyn_notInRoomText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_notInRoomText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notInRoomText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String initialGameMode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaScoreBoard::dyn_initialGameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_initialGameMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialGameMode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String tempGmName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaScoreBoard::dyn_tempGmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_tempGmName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempGmName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String gmName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaScoreBoard::dyn_gmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_gmName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gmName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> gmNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::GorillaScoreBoard::dyn_gmNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_gmNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gmNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder stringBuilder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& GlobalNamespace::GorillaScoreBoard::dyn_stringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_stringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringBuilder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder buttonStringBuilder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& GlobalNamespace::GorillaScoreBoard::dyn_buttonStringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_buttonStringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonStringBuilder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaScoreBoard.SetSleepState
void GlobalNamespace::GorillaScoreBoard::SetSleepState(bool awake) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::SetSleepState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSleepState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(awake)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, awake);
}
// Autogenerated method: GorillaScoreBoard.OnDestroy
void GlobalNamespace::GorillaScoreBoard::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard.GetBeginningString
::StringW GlobalNamespace::GorillaScoreBoard::GetBeginningString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::GetBeginningString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeginningString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard.RoomType
::StringW GlobalNamespace::GorillaScoreBoard::RoomType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::RoomType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RoomType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard.RedrawPlayerLines
void GlobalNamespace::GorillaScoreBoard::RedrawPlayerLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::RedrawPlayerLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RedrawPlayerLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard.NormalizeName
::StringW GlobalNamespace::GorillaScoreBoard::NormalizeName(bool doIt, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::NormalizeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NormalizeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doIt), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, doIt, text);
}
// Autogenerated method: GorillaScoreBoard.Start
void GlobalNamespace::GorillaScoreBoard::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard.OnEnable
void GlobalNamespace::GorillaScoreBoard::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard.OnDisable
void GlobalNamespace::GorillaScoreBoard::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaScoreBoard/<>c
#include "GlobalNamespace/GorillaScoreBoard_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GorillaScoreBoard/<>c <>9
::GlobalNamespace::GorillaScoreBoard::$$c* GlobalNamespace::GorillaScoreBoard::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaScoreBoard::$$c*>("", "GorillaScoreBoard/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GorillaScoreBoard/<>c <>9
void GlobalNamespace::GorillaScoreBoard::$$c::_set_$$9(::GlobalNamespace::GorillaScoreBoard::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaScoreBoard/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Char> <>9__25_0
::System::Predicate_1<::Il2CppChar>* GlobalNamespace::GorillaScoreBoard::$$c::_get_$$9__25_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$$c::_get_$$9__25_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::Il2CppChar>*>("", "GorillaScoreBoard/<>c", "<>9__25_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Char> <>9__25_0
void GlobalNamespace::GorillaScoreBoard::$$c::_set_$$9__25_0(::System::Predicate_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$$c::_set_$$9__25_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaScoreBoard/<>c", "<>9__25_0", value)));
}
// Autogenerated method: GorillaScoreBoard/<>c..cctor
void GlobalNamespace::GorillaScoreBoard::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaScoreBoard/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaScoreBoard/<>c.<NormalizeName>b__25_0
bool GlobalNamespace::GorillaScoreBoard::$$c::$NormalizeName$b__25_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$$c::<NormalizeName>b__25_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<NormalizeName>b__25_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaSpeakerLoudness
#include "GlobalNamespace/GorillaSpeakerLoudness.hpp"
// Including type: RigContainer
#include "GlobalNamespace/RigContainer.hpp"
// Including type: Photon.Voice.Unity.Speaker
#include "Photon/Voice/Unity/Speaker.hpp"
// Including type: SpeakerVoiceToLoudness
#include "GlobalNamespace/SpeakerVoiceToLoudness.hpp"
// Including type: Photon.Voice.Unity.Recorder
#include "Photon/Voice/Unity/Recorder.hpp"
// Including type: GorillaTag.Audio.VoiceToLoudness
#include "GorillaTag/Audio/VoiceToLoudness.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isSpeaking
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaSpeakerLoudness::dyn_isSpeaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_isSpeaking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isSpeaking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single loudness
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaSpeakerLoudness::dyn_loudness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_loudness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loudness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single normalizedMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaSpeakerLoudness::dyn_normalizedMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_normalizedMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalizedMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isMicEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaSpeakerLoudness::dyn_isMicEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_isMicEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isMicEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RigContainer rigContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RigContainer*& GlobalNamespace::GorillaSpeakerLoudness::dyn_rigContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_rigContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RigContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.Speaker speaker
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Speaker*& GlobalNamespace::GorillaSpeakerLoudness::dyn_speaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_speaker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speaker"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Speaker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SpeakerVoiceToLoudness speakerVoiceToLoudness
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SpeakerVoiceToLoudness*& GlobalNamespace::GorillaSpeakerLoudness::dyn_speakerVoiceToLoudness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_speakerVoiceToLoudness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speakerVoiceToLoudness"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SpeakerVoiceToLoudness**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.Recorder recorder
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Recorder*& GlobalNamespace::GorillaSpeakerLoudness::dyn_recorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_recorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recorder"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Recorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTag.Audio.VoiceToLoudness voiceToLoudness
[[deprecated("Use field access instead!")]] ::GorillaTag::Audio::VoiceToLoudness*& GlobalNamespace::GorillaSpeakerLoudness::dyn_voiceToLoudness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_voiceToLoudness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceToLoudness"))->offset;
  return *reinterpret_cast<::GorillaTag::Audio::VoiceToLoudness**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single smoothedLoudness
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaSpeakerLoudness::dyn_smoothedLoudness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_smoothedLoudness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothedLoudness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastLoudness
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaSpeakerLoudness::dyn_lastLoudness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_lastLoudness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLoudness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timeSinceLoudnessChange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaSpeakerLoudness::dyn_timeSinceLoudnessChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_timeSinceLoudnessChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeSinceLoudnessChange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single loudnessUpdateCheckRate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaSpeakerLoudness::dyn_loudnessUpdateCheckRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_loudnessUpdateCheckRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loudnessUpdateCheckRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single loudnessBlendStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaSpeakerLoudness::dyn_loudnessBlendStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_loudnessBlendStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loudnessBlendStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean permission
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaSpeakerLoudness::dyn_permission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_permission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "permission"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean micConnected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaSpeakerLoudness::dyn_micConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::dyn_micConnected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micConnected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaSpeakerLoudness.get_IsSpeaking
bool GlobalNamespace::GorillaSpeakerLoudness::get_IsSpeaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::get_IsSpeaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSpeaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSpeakerLoudness.get_Loudness
float GlobalNamespace::GorillaSpeakerLoudness::get_Loudness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::get_Loudness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Loudness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSpeakerLoudness.get_LoudnessNormalized
float GlobalNamespace::GorillaSpeakerLoudness::get_LoudnessNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::get_LoudnessNormalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoudnessNormalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSpeakerLoudness.get_floatValue
float GlobalNamespace::GorillaSpeakerLoudness::get_floatValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::get_floatValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSpeakerLoudness*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSpeakerLoudness.get_IsMicEnabled
bool GlobalNamespace::GorillaSpeakerLoudness::get_IsMicEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::get_IsMicEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMicEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSpeakerLoudness.get_SmoothedLoudness
float GlobalNamespace::GorillaSpeakerLoudness::get_SmoothedLoudness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::get_SmoothedLoudness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SmoothedLoudness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSpeakerLoudness.Start
void GlobalNamespace::GorillaSpeakerLoudness::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSpeakerLoudness.InvokeUpdate
void GlobalNamespace::GorillaSpeakerLoudness::InvokeUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::InvokeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSpeakerLoudness.UpdateMicEnabled
void GlobalNamespace::GorillaSpeakerLoudness::UpdateMicEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::UpdateMicEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMicEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSpeakerLoudness.UpdateLoudness
void GlobalNamespace::GorillaSpeakerLoudness::UpdateLoudness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::UpdateLoudness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLoudness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSpeakerLoudness.UpdateSmoothedLoudness
void GlobalNamespace::GorillaSpeakerLoudness::UpdateSmoothedLoudness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSpeakerLoudness::UpdateSmoothedLoudness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSmoothedLoudness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagger
#include "GlobalNamespace/GorillaTagger.hpp"
// Including type: Photon.Voice.Unity.Recorder
#include "Photon/Voice/Unity/Recorder.hpp"
// Including type: GorillaTagger/<HapticPulses>d__102
#include "GlobalNamespace/GorillaTagger_-HapticPulses-d__102.hpp"
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Watchable`1
#include "GlobalNamespace/Watchable_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: VRRigSerializer
#include "GlobalNamespace/VRRigSerializer.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: GorillaTag.GuidedRefs.GuidedRefTryResolveInfo
#include "GorillaTag/GuidedRefs/GuidedRefTryResolveInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private GorillaTagger _instance
::GlobalNamespace::GorillaTagger* GlobalNamespace::GorillaTagger::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaTagger*>("", "GorillaTagger", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private GorillaTagger _instance
void GlobalNamespace::GorillaTagger::_set__instance(::GlobalNamespace::GorillaTagger* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean hasInstance
bool GlobalNamespace::GorillaTagger::_get_hasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::_get_hasInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "GorillaTagger", "hasInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean hasInstance
void GlobalNamespace::GorillaTagger::_set_hasInstance(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::_set_hasInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger", "hasInstance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action onPlayerSpawnedRootCallback
::System::Action* GlobalNamespace::GorillaTagger::_get_onPlayerSpawnedRootCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::_get_onPlayerSpawnedRootCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "GorillaTagger", "onPlayerSpawnedRootCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action onPlayerSpawnedRootCallback
void GlobalNamespace::GorillaTagger::_set_onPlayerSpawnedRootCallback(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::_set_onPlayerSpawnedRootCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger", "onPlayerSpawnedRootCallback", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean inCosmeticsRoom
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_inCosmeticsRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_inCosmeticsRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inCosmeticsRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SphereCollider headCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::SphereCollider*& GlobalNamespace::GorillaTagger::dyn_headCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_headCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::SphereCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.CapsuleCollider bodyCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::CapsuleCollider*& GlobalNamespace::GorillaTagger::dyn_bodyCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_bodyCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::CapsuleCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastLeftHandPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_lastLeftHandPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_lastLeftHandPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLeftHandPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastRightHandPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_lastRightHandPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_lastRightHandPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRightHandPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastBodyPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_lastBodyPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_lastBodyPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastBodyPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastHeadPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_lastHeadPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_lastHeadPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastHeadPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaTagger::dyn_rightHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_rightHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaTagger::dyn_leftHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_leftHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticWaitSeconds
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_hapticWaitSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_hapticWaitSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticWaitSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single handTapVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_handTapVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_handTapVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handTapVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tapCoolDown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_tapCoolDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tapCoolDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tapCoolDown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastLeftTap
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_lastLeftTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_lastLeftTap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLeftTap"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastRightTap
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_lastRightTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_lastRightTap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRightTap"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tapHapticDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_tapHapticDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tapHapticDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tapHapticDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tapHapticStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_tapHapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tapHapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tapHapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagHapticDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_tagHapticDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tagHapticDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagHapticDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagHapticStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_tagHapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tagHapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagHapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single taggedHapticDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_taggedHapticDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_taggedHapticDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taggedHapticDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single taggedHapticStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_taggedHapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_taggedHapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taggedHapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean leftHandTouching
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_leftHandTouching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_leftHandTouching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandTouching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean rightHandTouching
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_rightHandTouching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_rightHandTouching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandTouching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single taggedTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_taggedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_taggedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taggedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_tagCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tagCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slowCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_slowCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_slowCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slowCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig offlineVRRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaTagger::dyn_offlineVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_offlineVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offlineVRRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTag.GuidedRefs.GuidedRefReceiverFieldInfo offlineVRRig_gRef
[[deprecated("Use field access instead!")]] ::GorillaTag::GuidedRefs::GuidedRefReceiverFieldInfo& GlobalNamespace::GorillaTagger::dyn_offlineVRRig_gRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_offlineVRRig_gRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offlineVRRig_gRef"))->offset;
  return *reinterpret_cast<::GorillaTag::GuidedRefs::GuidedRefReceiverFieldInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject thirdPersonCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaTagger::dyn_thirdPersonCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_thirdPersonCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thirdPersonCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject mainCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaTagger::dyn_mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testTutorial
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_testTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_testTutorial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testTutorial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableTutorial
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_disableTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_disableTutorial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableTutorial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean frameRateUpdated
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_frameRateUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_frameRateUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameRateUpdated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject leftHandTriggerCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaTagger::dyn_leftHandTriggerCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_leftHandTriggerCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandTriggerCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject rightHandTriggerCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaTagger::dyn_rightHandTriggerCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_rightHandTriggerCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandTriggerCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource leftHandSlideSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::GorillaTagger::dyn_leftHandSlideSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_leftHandSlideSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandSlideSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource rightHandSlideSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::GorillaTagger::dyn_rightHandSlideSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_rightHandSlideSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandSlideSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideNotInFocus
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_overrideNotInFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_overrideNotInFocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideNotInFocus"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody <rigidbody>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaTagger::dyn_$rigidbody$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_$rigidbody$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rigidbody>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 leftRaycastSweep
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_leftRaycastSweep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_leftRaycastSweep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftRaycastSweep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 leftHeadRaycastSweep
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_leftHeadRaycastSweep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_leftHeadRaycastSweep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHeadRaycastSweep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 rightRaycastSweep
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_rightRaycastSweep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_rightRaycastSweep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightRaycastSweep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 rightHeadRaycastSweep
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_rightHeadRaycastSweep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_rightHeadRaycastSweep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHeadRaycastSweep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 headRaycastSweep
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_headRaycastSweep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_headRaycastSweep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headRaycastSweep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 bodyRaycastSweep
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_bodyRaycastSweep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_bodyRaycastSweep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyRaycastSweep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice rightDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaTagger::dyn_rightDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_rightDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice leftDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaTagger::dyn_leftDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_leftDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean primaryButtonPressRight
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_primaryButtonPressRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_primaryButtonPressRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "primaryButtonPressRight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean secondaryButtonPressRight
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_secondaryButtonPressRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_secondaryButtonPressRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondaryButtonPressRight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean primaryButtonPressLeft
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_primaryButtonPressLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_primaryButtonPressLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "primaryButtonPressLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean secondaryButtonPressLeft
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_secondaryButtonPressLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_secondaryButtonPressLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondaryButtonPressLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit hitInfo
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& GlobalNamespace::GorillaTagger::dyn_hitInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_hitInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hitInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player otherPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaTagger::dyn_otherPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_otherPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "otherPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player tryPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaTagger::dyn_tryPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tryPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tryPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player touchedPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaTagger::dyn_touchedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_touchedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "touchedPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 topVector
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_topVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_topVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topVector"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 bottomVector
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_bottomVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_bottomVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bottomVector"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 bodyVector
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_bodyVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_bodyVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyVector"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tempInt
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagger::dyn_tempInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tempInt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempInt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice inputDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaTagger::dyn_inputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_inputDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean wasInOverlay
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_wasInOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_wasInOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasInOverlay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonView tempView
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& GlobalNamespace::GorillaTagger::dyn_tempView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tempView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempView"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player tempCreator
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaTagger::dyn_tempCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tempCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempCreator"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagger/StatusEffect currentStatus
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTagger::StatusEffect& GlobalNamespace::GorillaTagger::dyn_currentStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_currentStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentStatus"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTagger::StatusEffect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single statusStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_statusStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_statusStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single statusEndTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_statusEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_statusEndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusEndTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single refreshRate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_refreshRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_refreshRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "refreshRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single baseSlideControl
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_baseSlideControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_baseSlideControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseSlideControl"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 gorillaTagColliderLayerMask
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagger::dyn_gorillaTagColliderLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_gorillaTagColliderLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gorillaTagColliderLayerMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] nonAllocRaycastHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& GlobalNamespace::GorillaTagger::dyn_nonAllocRaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_nonAllocRaycastHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nonAllocRaycastHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nonAllocHits
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagger::dyn_nonAllocHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_nonAllocHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nonAllocHits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.Recorder <myRecorder>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Recorder*& GlobalNamespace::GorillaTagger::dyn_$myRecorder$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_$myRecorder$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<myRecorder>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Recorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean xrSubsystemIsActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_xrSubsystemIsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_xrSubsystemIsActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xrSubsystemIsActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String loadedDeviceName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaTagger::dyn_loadedDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_loadedDeviceName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadedDeviceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask BaseMirrorCameraCullingMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::GorillaTagger::dyn_BaseMirrorCameraCullingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_BaseMirrorCameraCullingMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BaseMirrorCameraCullingMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Watchable`1<System.Int32> MirrorCameraCullingMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Watchable_1<int>*& GlobalNamespace::GorillaTagger::dyn_MirrorCameraCullingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_MirrorCameraCullingMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MirrorCameraCullingMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Watchable_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Single> tagRadiusOverride
[[deprecated("Use field access instead!")]] ::System::Nullable_1<float>& GlobalNamespace::GorillaTagger::dyn_tagRadiusOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tagRadiusOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagRadiusOverride"))->offset;
  return *reinterpret_cast<::System::Nullable_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tagRadiusOverrideFrame
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagger::dyn_tagRadiusOverrideFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tagRadiusOverrideFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagRadiusOverrideFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <GorillaTag.GuidedRefs.IGuidedRefReceiverMono.GuidedRefsWaitingToResolveCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagger::dyn_$GorillaTag_GuidedRefs_IGuidedRefReceiverMono_GuidedRefsWaitingToResolveCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_$GorillaTag_GuidedRefs_IGuidedRefReceiverMono_GuidedRefsWaitingToResolveCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GorillaTag.GuidedRefs.IGuidedRefReceiverMono.GuidedRefsWaitingToResolveCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagger.get_Instance
::GlobalNamespace::GorillaTagger* GlobalNamespace::GorillaTagger::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaTagger", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GorillaTagger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaTagger.get_myVRRig
::Photon::Pun::PhotonView* GlobalNamespace::GorillaTagger::get_myVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::get_myVRRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_myVRRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.get_rigSerializer
::GlobalNamespace::VRRigSerializer* GlobalNamespace::GorillaTagger::get_rigSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::get_rigSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rigSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRRigSerializer*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.get_rigidbody
::UnityEngine::Rigidbody* GlobalNamespace::GorillaTagger::get_rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::get_rigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.set_rigidbody
void GlobalNamespace::GorillaTagger::set_rigidbody(::UnityEngine::Rigidbody* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::set_rigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagger.get_myRecorder
::Photon::Voice::Unity::Recorder* GlobalNamespace::GorillaTagger::get_myRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::get_myRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_myRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Unity::Recorder*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.set_myRecorder
void GlobalNamespace::GorillaTagger::set_myRecorder(::Photon::Voice::Unity::Recorder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::set_myRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_myRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagger.get_sphereCastRadius
float GlobalNamespace::GorillaTagger::get_sphereCastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::get_sphereCastRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sphereCastRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.SetTagRadiusOverrideThisFrame
void GlobalNamespace::GorillaTagger::SetTagRadiusOverrideThisFrame(float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::SetTagRadiusOverrideThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTagRadiusOverrideThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, radius);
}
// Autogenerated method: GorillaTagger.Awake
void GlobalNamespace::GorillaTagger::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.OnDestroy
void GlobalNamespace::GorillaTagger::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.IsXRSubsystemActive
void GlobalNamespace::GorillaTagger::IsXRSubsystemActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::IsXRSubsystemActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsXRSubsystemActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.Start
void GlobalNamespace::GorillaTagger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.LateUpdate
void GlobalNamespace::GorillaTagger::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.TryToTag
bool GlobalNamespace::GorillaTagger::TryToTag(::UnityEngine::RaycastHit hitInfo, bool isBodyTag, ByRef<::Photon::Realtime::Player*> taggedPlayer, ByRef<::Photon::Realtime::Player*> touchedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::TryToTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryToTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(isBodyTag), ::il2cpp_utils::ExtractIndependentType<::Photon::Realtime::Player*&>(), ::il2cpp_utils::ExtractIndependentType<::Photon::Realtime::Player*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hitInfo, isBodyTag, byref(taggedPlayer), byref(touchedPlayer));
}
// Autogenerated method: GorillaTagger.StartVibration
void GlobalNamespace::GorillaTagger::StartVibration(bool forLeftController, float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StartVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forLeftController), ::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, forLeftController, amplitude, duration);
}
// Autogenerated method: GorillaTagger.HapticPulses
::System::Collections::IEnumerator* GlobalNamespace::GorillaTagger::HapticPulses(bool forLeftController, float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::HapticPulses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HapticPulses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forLeftController), ::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, forLeftController, amplitude, duration);
}
// Autogenerated method: GorillaTagger.DoVibration
void GlobalNamespace::GorillaTagger::DoVibration(::UnityEngine::XR::XRNode node, float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::DoVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, amplitude, duration);
}
// Autogenerated method: GorillaTagger.UpdateColor
void GlobalNamespace::GorillaTagger::UpdateColor(float red, float green, float blue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::UpdateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(red), ::il2cpp_utils::ExtractType(green), ::il2cpp_utils::ExtractType(blue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, red, green, blue);
}
// Autogenerated method: GorillaTagger.OnTriggerEnter
void GlobalNamespace::GorillaTagger::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaTagger.ShowCosmeticParticles
void GlobalNamespace::GorillaTagger::ShowCosmeticParticles(bool showParticles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::ShowCosmeticParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowCosmeticParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showParticles)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showParticles);
}
// Autogenerated method: GorillaTagger.ApplyStatusEffect
void GlobalNamespace::GorillaTagger::ApplyStatusEffect(::GlobalNamespace::GorillaTagger::StatusEffect newStatus, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::ApplyStatusEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyStatusEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newStatus), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newStatus, duration);
}
// Autogenerated method: GorillaTagger.CheckEndStatusEffect
void GlobalNamespace::GorillaTagger::CheckEndStatusEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::CheckEndStatusEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckEndStatusEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.EndStatusEffect
void GlobalNamespace::GorillaTagger::EndStatusEffect(::GlobalNamespace::GorillaTagger::StatusEffect effectToEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::EndStatusEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndStatusEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effectToEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, effectToEnd);
}
// Autogenerated method: GorillaTagger.CalcSlideControl
float GlobalNamespace::GorillaTagger::CalcSlideControl(float fps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::CalcSlideControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalcSlideControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fps)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, fps);
}
// Autogenerated method: GorillaTagger.OnPlayerSpawned
void GlobalNamespace::GorillaTagger::OnPlayerSpawned(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::OnPlayerSpawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaTagger", "OnPlayerSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action);
}
// Autogenerated method: GorillaTagger.DebugDrawTagCasts
void GlobalNamespace::GorillaTagger::DebugDrawTagCasts(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::DebugDrawTagCasts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugDrawTagCasts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: GorillaTagger.DrawSphereCast
void GlobalNamespace::GorillaTagger::DrawSphereCast(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 dir, float radius, float dist, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::DrawSphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawSphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(dir), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(dist), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, dir, radius, dist, color);
}
// Autogenerated method: GorillaTagger.RecoverMissingRefs
void GlobalNamespace::GorillaTagger::RecoverMissingRefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::RecoverMissingRefs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecoverMissingRefs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.GuidedRefInitialize
void GlobalNamespace::GorillaTagger::GuidedRefInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::GuidedRefInitialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.GorillaTag.GuidedRefs.IGuidedRefReceiverMono.get_GuidedRefsWaitingToResolveCount
int GlobalNamespace::GorillaTagger::GorillaTag_GuidedRefs_IGuidedRefReceiverMono_get_GuidedRefsWaitingToResolveCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::GorillaTag.GuidedRefs.IGuidedRefReceiverMono.get_GuidedRefsWaitingToResolveCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.GorillaTag.GuidedRefs.IGuidedRefReceiverMono.set_GuidedRefsWaitingToResolveCount
void GlobalNamespace::GorillaTagger::GorillaTag_GuidedRefs_IGuidedRefReceiverMono_set_GuidedRefsWaitingToResolveCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::GorillaTag.GuidedRefs.IGuidedRefReceiverMono.set_GuidedRefsWaitingToResolveCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagger.GorillaTag.GuidedRefs.IGuidedRefReceiverMono.GuidedRefTryResolveReference
bool GlobalNamespace::GorillaTagger::GorillaTag_GuidedRefs_IGuidedRefReceiverMono_GuidedRefTryResolveReference(::GorillaTag::GuidedRefs::GuidedRefTryResolveInfo target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::GorillaTag.GuidedRefs.IGuidedRefReceiverMono.GuidedRefTryResolveReference");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target);
}
// Autogenerated method: GorillaTagger.GorillaTag.GuidedRefs.IGuidedRefReceiverMono.OnAllGuidedRefsResolved
void GlobalNamespace::GorillaTagger::GorillaTag_GuidedRefs_IGuidedRefReceiverMono_OnAllGuidedRefsResolved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::GorillaTag.GuidedRefs.IGuidedRefReceiverMono.OnAllGuidedRefsResolved");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.GorillaTag.GuidedRefs.IGuidedRefReceiverMono.OnGuidedRefTargetDestroyed
void GlobalNamespace::GorillaTagger::GorillaTag_GuidedRefs_IGuidedRefReceiverMono_OnGuidedRefTargetDestroyed(int fieldId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::GorillaTag.GuidedRefs.IGuidedRefReceiverMono.OnGuidedRefTargetDestroyed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fieldId);
}
// Autogenerated method: GorillaTagger.GorillaTag.GuidedRefs.IGuidedRefMonoBehaviour.get_transform
::UnityEngine::Transform* GlobalNamespace::GorillaTagger::GorillaTag_GuidedRefs_IGuidedRefMonoBehaviour_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::GorillaTag.GuidedRefs.IGuidedRefMonoBehaviour.get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.GorillaTag.GuidedRefs.IGuidedRefObject.GetInstanceID
int GlobalNamespace::GorillaTagger::GorillaTag_GuidedRefs_IGuidedRefObject_GetInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::GorillaTag.GuidedRefs.IGuidedRefObject.GetInstanceID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.<LateUpdate>g__TryTaggingAllHits|99_0
void GlobalNamespace::GorillaTagger::$LateUpdate$g__TryTaggingAllHits_99_0(bool isBodyTag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::<LateUpdate>g__TryTaggingAllHits|99_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LateUpdate>g__TryTaggingAllHits|99_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isBodyTag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isBodyTag);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagger/StatusEffect
#include "GlobalNamespace/GorillaTagger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaTagger/StatusEffect None
::GlobalNamespace::GorillaTagger::StatusEffect GlobalNamespace::GorillaTagger::StatusEffect::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaTagger::StatusEffect>("", "GorillaTagger/StatusEffect", "None"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagger/StatusEffect None
void GlobalNamespace::GorillaTagger::StatusEffect::_set_None(::GlobalNamespace::GorillaTagger::StatusEffect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger/StatusEffect", "None", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagger/StatusEffect Frozen
::GlobalNamespace::GorillaTagger::StatusEffect GlobalNamespace::GorillaTagger::StatusEffect::_get_Frozen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_get_Frozen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaTagger::StatusEffect>("", "GorillaTagger/StatusEffect", "Frozen"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagger/StatusEffect Frozen
void GlobalNamespace::GorillaTagger::StatusEffect::_set_Frozen(::GlobalNamespace::GorillaTagger::StatusEffect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_set_Frozen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger/StatusEffect", "Frozen", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagger/StatusEffect Slowed
::GlobalNamespace::GorillaTagger::StatusEffect GlobalNamespace::GorillaTagger::StatusEffect::_get_Slowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_get_Slowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaTagger::StatusEffect>("", "GorillaTagger/StatusEffect", "Slowed"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagger/StatusEffect Slowed
void GlobalNamespace::GorillaTagger::StatusEffect::_set_Slowed(::GlobalNamespace::GorillaTagger::StatusEffect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_set_Slowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger/StatusEffect", "Slowed", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagger/StatusEffect Dead
::GlobalNamespace::GorillaTagger::StatusEffect GlobalNamespace::GorillaTagger::StatusEffect::_get_Dead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_get_Dead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaTagger::StatusEffect>("", "GorillaTagger/StatusEffect", "Dead"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagger/StatusEffect Dead
void GlobalNamespace::GorillaTagger::StatusEffect::_set_Dead(::GlobalNamespace::GorillaTagger::StatusEffect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_set_Dead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger/StatusEffect", "Dead", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagger/StatusEffect Infected
::GlobalNamespace::GorillaTagger::StatusEffect GlobalNamespace::GorillaTagger::StatusEffect::_get_Infected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_get_Infected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaTagger::StatusEffect>("", "GorillaTagger/StatusEffect", "Infected"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagger/StatusEffect Infected
void GlobalNamespace::GorillaTagger::StatusEffect::_set_Infected(::GlobalNamespace::GorillaTagger::StatusEffect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_set_Infected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger/StatusEffect", "Infected", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagger/StatusEffect It
::GlobalNamespace::GorillaTagger::StatusEffect GlobalNamespace::GorillaTagger::StatusEffect::_get_It() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_get_It");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaTagger::StatusEffect>("", "GorillaTagger/StatusEffect", "It"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagger/StatusEffect It
void GlobalNamespace::GorillaTagger::StatusEffect::_set_It(::GlobalNamespace::GorillaTagger::StatusEffect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_set_It");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger/StatusEffect", "It", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagger::StatusEffect::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaTagger/<HapticPulses>d__102
#include "GlobalNamespace/GorillaTagger_-HapticPulses-d__102.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean forLeftController
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_forLeftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_forLeftController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forLeftController"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single amplitude
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_amplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_amplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagger <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTagger*& GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTagger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_$startTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_$startTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice <device>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_$device$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_$device$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<device>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <channel>5__4
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_$channel$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__102::dyn_$channel$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<channel>5__4"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagger/<HapticPulses>d__102.System.IDisposable.Dispose
void GlobalNamespace::GorillaTagger::$HapticPulses$d__102::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__102::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger::$HapticPulses$d__102*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger/<HapticPulses>d__102.MoveNext
bool GlobalNamespace::GorillaTagger::$HapticPulses$d__102::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__102::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger::$HapticPulses$d__102*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger/<HapticPulses>d__102.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaTagger::$HapticPulses$d__102::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__102::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger::$HapticPulses$d__102*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger/<HapticPulses>d__102.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaTagger::$HapticPulses$d__102::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__102::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger::$HapticPulses$d__102*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger/<HapticPulses>d__102.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaTagger::$HapticPulses$d__102::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__102::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger::$HapticPulses$d__102*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTagManager
#include "GlobalNamespace/GorillaTagManager.hpp"
// Including type: GorillaTagManager/<InfectionEnd>d__24
#include "GlobalNamespace/GorillaTagManager_-InfectionEnd-d__24.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: GorillaGameModes.GameModeType
#include "GorillaGameModes/GameModeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte ReportTagEvent
uint8_t GlobalNamespace::GorillaTagManager::_get_ReportTagEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::_get_ReportTagEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "GorillaTagManager", "ReportTagEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ReportTagEvent
void GlobalNamespace::GorillaTagManager::_set_ReportTagEvent(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::_set_ReportTagEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagManager", "ReportTagEvent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ReportInfectionTagEvent
uint8_t GlobalNamespace::GorillaTagManager::_get_ReportInfectionTagEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::_get_ReportInfectionTagEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "GorillaTagManager", "ReportInfectionTagEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ReportInfectionTagEvent
void GlobalNamespace::GorillaTagManager::_set_ReportInfectionTagEvent(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::_set_ReportInfectionTagEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagManager", "ReportInfectionTagEvent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagCoolDown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagManager::dyn_tagCoolDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_tagCoolDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagCoolDown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 infectedModeThreshold
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagManager::dyn_infectedModeThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_infectedModeThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "infectedModeThreshold"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Photon.Realtime.Player> currentInfected
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*& GlobalNamespace::GorillaTagManager::dyn_currentInfected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_currentInfected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentInfected"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Realtime::Player*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] currentInfectedArray
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::GorillaTagManager::dyn_currentInfectedArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_currentInfectedArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentInfectedArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player currentIt
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaTagManager::dyn_currentIt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_currentIt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIt"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player lastInfectedPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaTagManager::dyn_lastInfectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_lastInfectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastInfectedPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double lastTag
[[deprecated("Use field access instead!")]] double& GlobalNamespace::GorillaTagManager::dyn_lastTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_lastTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTag"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double timeInfectedGameEnded
[[deprecated("Use field access instead!")]] double& GlobalNamespace::GorillaTagManager::dyn_timeInfectedGameEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_timeInfectedGameEnded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeInfectedGameEnded"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean waitingToStartNextInfectionGame
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagManager::dyn_waitingToStartNextInfectionGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_waitingToStartNextInfectionGame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitingToStartNextInfectionGame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isCurrentlyTag
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagManager::dyn_isCurrentlyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_isCurrentlyTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCurrentlyTag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tempItInt
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagManager::dyn_tempItInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_tempItInt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempItInt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iterator1
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagManager::dyn_iterator1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_iterator1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iterator1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player tempPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaTagManager::dyn_tempPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_tempPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allInfected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagManager::dyn_allInfected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_allInfected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allInfected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] inspectorLocalPlayerSpeed
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::GorillaTagManager::dyn_inspectorLocalPlayerSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_inspectorLocalPlayerSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inspectorLocalPlayerSpeed"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig taggingRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaTagManager::dyn_taggingRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_taggingRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taggingRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig taggedRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaTagManager::dyn_taggedRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_taggedRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taggedRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagManager.UpdateState
void GlobalNamespace::GorillaTagManager::UpdateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.InfectionEnd
::System::Collections::IEnumerator* GlobalNamespace::GorillaTagManager::InfectionEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::InfectionEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InfectionEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.UpdateInfectionState
void GlobalNamespace::GorillaTagManager::UpdateInfectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::UpdateInfectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInfectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.UpdateTagState
void GlobalNamespace::GorillaTagManager::UpdateTagState(bool withTagFreeze) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::UpdateTagState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTagState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(withTagFreeze)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, withTagFreeze);
}
// Autogenerated method: GorillaTagManager.EndInfectionGame
void GlobalNamespace::GorillaTagManager::EndInfectionGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::EndInfectionGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInfectionGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.InterpolatedInfectedJumpMultiplier
float GlobalNamespace::GorillaTagManager::InterpolatedInfectedJumpMultiplier(int infectedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::InterpolatedInfectedJumpMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterpolatedInfectedJumpMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infectedCount)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, infectedCount);
}
// Autogenerated method: GorillaTagManager.InterpolatedInfectedJumpSpeed
float GlobalNamespace::GorillaTagManager::InterpolatedInfectedJumpSpeed(int infectedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::InterpolatedInfectedJumpSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterpolatedInfectedJumpSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infectedCount)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, infectedCount);
}
// Autogenerated method: GorillaTagManager.InterpolatedNoobJumpMultiplier
float GlobalNamespace::GorillaTagManager::InterpolatedNoobJumpMultiplier(int infectedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::InterpolatedNoobJumpMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterpolatedNoobJumpMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infectedCount)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, infectedCount);
}
// Autogenerated method: GorillaTagManager.InterpolatedNoobJumpSpeed
float GlobalNamespace::GorillaTagManager::InterpolatedNoobJumpSpeed(int infectedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::InterpolatedNoobJumpSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterpolatedNoobJumpSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infectedCount)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, infectedCount);
}
// Autogenerated method: GorillaTagManager.IsInfected
bool GlobalNamespace::GorillaTagManager::IsInfected(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::IsInfected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInfected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaTagManager.CopyInfectedListToArray
void GlobalNamespace::GorillaTagManager::CopyInfectedListToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::CopyInfectedListToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyInfectedListToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.CopyInfectedArrayToList
void GlobalNamespace::GorillaTagManager::CopyInfectedArrayToList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::CopyInfectedArrayToList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyInfectedArrayToList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.ChangeCurrentIt
void GlobalNamespace::GorillaTagManager::ChangeCurrentIt(::Photon::Realtime::Player* newCurrentIt, bool withTagFreeze) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::ChangeCurrentIt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeCurrentIt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newCurrentIt), ::il2cpp_utils::ExtractType(withTagFreeze)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newCurrentIt, withTagFreeze);
}
// Autogenerated method: GorillaTagManager.SetisCurrentlyTag
void GlobalNamespace::GorillaTagManager::SetisCurrentlyTag(bool newTagSetting) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::SetisCurrentlyTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetisCurrentlyTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newTagSetting)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newTagSetting);
}
// Autogenerated method: GorillaTagManager.AddInfectedPlayer
void GlobalNamespace::GorillaTagManager::AddInfectedPlayer(::Photon::Realtime::Player* infectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::AddInfectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInfectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, infectedPlayer);
}
// Autogenerated method: GorillaTagManager.AddInfectedPlayer
void GlobalNamespace::GorillaTagManager::AddInfectedPlayer(::Photon::Realtime::Player* infectedPlayer, bool withTagStop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::AddInfectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInfectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infectedPlayer), ::il2cpp_utils::ExtractType(withTagStop)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, infectedPlayer, withTagStop);
}
// Autogenerated method: GorillaTagManager.ClearInfectionState
void GlobalNamespace::GorillaTagManager::ClearInfectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::ClearInfectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearInfectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.CopyRoomDataToLocalData
void GlobalNamespace::GorillaTagManager::CopyRoomDataToLocalData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::CopyRoomDataToLocalData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyRoomDataToLocalData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.StartPlaying
void GlobalNamespace::GorillaTagManager::StartPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::StartPlaying");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.StopPlaying
void GlobalNamespace::GorillaTagManager::StopPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::StopPlaying");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.Reset
void GlobalNamespace::GorillaTagManager::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.InfrequentUpdate
void GlobalNamespace::GorillaTagManager::InfrequentUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::InfrequentUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.LocalCanTag
bool GlobalNamespace::GorillaTagManager::LocalCanTag(::Photon::Realtime::Player* myPlayer, ::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::LocalCanTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, myPlayer, otherPlayer);
}
// Autogenerated method: GorillaTagManager.ReportTag
void GlobalNamespace::GorillaTagManager::ReportTag(::Photon::Realtime::Player* taggedPlayer, ::Photon::Realtime::Player* taggingPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::ReportTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, taggedPlayer, taggingPlayer);
}
// Autogenerated method: GorillaTagManager.HitPlayer
void GlobalNamespace::GorillaTagManager::HitPlayer(::Photon::Realtime::Player* taggedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::HitPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, taggedPlayer);
}
// Autogenerated method: GorillaTagManager.CanAffectPlayer
bool GlobalNamespace::GorillaTagManager::CanAffectPlayer(::Photon::Realtime::Player* player, bool thisFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::CanAffectPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player, thisFrame);
}
// Autogenerated method: GorillaTagManager.OnPlayerEnteredRoom
void GlobalNamespace::GorillaTagManager::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: GorillaTagManager.NewVRRig
void GlobalNamespace::GorillaTagManager::NewVRRig(::Photon::Realtime::Player* player, int vrrigPhotonViewID, bool didTutorial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::NewVRRig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, vrrigPhotonViewID, didTutorial);
}
// Autogenerated method: GorillaTagManager.OnPlayerLeftRoom
void GlobalNamespace::GorillaTagManager::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: GorillaTagManager.OnMasterClientSwitched
void GlobalNamespace::GorillaTagManager::OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated method: GorillaTagManager.OnSerializeWrite
void GlobalNamespace::GorillaTagManager::OnSerializeWrite(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::OnSerializeWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaTagManager.OnSerializeRead
void GlobalNamespace::GorillaTagManager::OnSerializeRead(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::OnSerializeRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaTagManager.GameType
::GorillaGameModes::GameModeType GlobalNamespace::GorillaTagManager::GameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::GameType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaGameModes::GameModeType, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.GameModeName
::StringW GlobalNamespace::GorillaTagManager::GameModeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::GameModeName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.MyMatIndex
int GlobalNamespace::GorillaTagManager::MyMatIndex(::Photon::Realtime::Player* forPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::MyMatIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, forPlayer);
}
// Autogenerated method: GorillaTagManager.LocalPlayerSpeed
::ArrayW<float> GlobalNamespace::GorillaTagManager::LocalPlayerSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::LocalPlayerSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaTagManager/<InfectionEnd>d__24
#include "GlobalNamespace/GorillaTagManager_-InfectionEnd-d__24.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTagManager*& GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTagManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagManager/<InfectionEnd>d__24.System.IDisposable.Dispose
void GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager/<InfectionEnd>d__24.MoveNext
bool GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager/<InfectionEnd>d__24.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager/<InfectionEnd>d__24.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager/<InfectionEnd>d__24.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__24*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GTZoneEventType
#include "GlobalNamespace/GTZoneEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GTZoneEventType zone_enter
::GlobalNamespace::GTZoneEventType GlobalNamespace::GTZoneEventType::_get_zone_enter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTZoneEventType::_get_zone_enter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GTZoneEventType>("", "GTZoneEventType", "zone_enter"));
}
// Autogenerated static field setter
// Set static field: static public GTZoneEventType zone_enter
void GlobalNamespace::GTZoneEventType::_set_zone_enter(::GlobalNamespace::GTZoneEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTZoneEventType::_set_zone_enter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GTZoneEventType", "zone_enter", value));
}
// Autogenerated static field getter
// Get static field: static public GTZoneEventType zone_exit
::GlobalNamespace::GTZoneEventType GlobalNamespace::GTZoneEventType::_get_zone_exit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTZoneEventType::_get_zone_exit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GTZoneEventType>("", "GTZoneEventType", "zone_exit"));
}
// Autogenerated static field setter
// Set static field: static public GTZoneEventType zone_exit
void GlobalNamespace::GTZoneEventType::_set_zone_exit(::GlobalNamespace::GTZoneEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTZoneEventType::_set_zone_exit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GTZoneEventType", "zone_exit", value));
}
// Autogenerated static field getter
// Get static field: static public GTZoneEventType zone_stay
::GlobalNamespace::GTZoneEventType GlobalNamespace::GTZoneEventType::_get_zone_stay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTZoneEventType::_get_zone_stay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GTZoneEventType>("", "GTZoneEventType", "zone_stay"));
}
// Autogenerated static field setter
// Set static field: static public GTZoneEventType zone_stay
void GlobalNamespace::GTZoneEventType::_set_zone_stay(::GlobalNamespace::GTZoneEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTZoneEventType::_set_zone_stay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GTZoneEventType", "zone_stay", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GTZoneEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTZoneEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GTShopEventType
#include "GlobalNamespace/GTShopEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GTShopEventType item_select
::GlobalNamespace::GTShopEventType GlobalNamespace::GTShopEventType::_get_item_select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShopEventType::_get_item_select");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GTShopEventType>("", "GTShopEventType", "item_select"));
}
// Autogenerated static field setter
// Set static field: static public GTShopEventType item_select
void GlobalNamespace::GTShopEventType::_set_item_select(::GlobalNamespace::GTShopEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShopEventType::_set_item_select");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GTShopEventType", "item_select", value));
}
// Autogenerated static field getter
// Get static field: static public GTShopEventType item_try_on
::GlobalNamespace::GTShopEventType GlobalNamespace::GTShopEventType::_get_item_try_on() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShopEventType::_get_item_try_on");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GTShopEventType>("", "GTShopEventType", "item_try_on"));
}
// Autogenerated static field setter
// Set static field: static public GTShopEventType item_try_on
void GlobalNamespace::GTShopEventType::_set_item_try_on(::GlobalNamespace::GTShopEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShopEventType::_set_item_try_on");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GTShopEventType", "item_try_on", value));
}
// Autogenerated static field getter
// Get static field: static public GTShopEventType cart_item_add
::GlobalNamespace::GTShopEventType GlobalNamespace::GTShopEventType::_get_cart_item_add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShopEventType::_get_cart_item_add");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GTShopEventType>("", "GTShopEventType", "cart_item_add"));
}
// Autogenerated static field setter
// Set static field: static public GTShopEventType cart_item_add
void GlobalNamespace::GTShopEventType::_set_cart_item_add(::GlobalNamespace::GTShopEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShopEventType::_set_cart_item_add");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GTShopEventType", "cart_item_add", value));
}
// Autogenerated static field getter
// Get static field: static public GTShopEventType cart_item_remove
::GlobalNamespace::GTShopEventType GlobalNamespace::GTShopEventType::_get_cart_item_remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShopEventType::_get_cart_item_remove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GTShopEventType>("", "GTShopEventType", "cart_item_remove"));
}
// Autogenerated static field setter
// Set static field: static public GTShopEventType cart_item_remove
void GlobalNamespace::GTShopEventType::_set_cart_item_remove(::GlobalNamespace::GTShopEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShopEventType::_set_cart_item_remove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GTShopEventType", "cart_item_remove", value));
}
// Autogenerated static field getter
// Get static field: static public GTShopEventType checkout_start
::GlobalNamespace::GTShopEventType GlobalNamespace::GTShopEventType::_get_checkout_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShopEventType::_get_checkout_start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GTShopEventType>("", "GTShopEventType", "checkout_start"));
}
// Autogenerated static field setter
// Set static field: static public GTShopEventType checkout_start
void GlobalNamespace::GTShopEventType::_set_checkout_start(::GlobalNamespace::GTShopEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShopEventType::_set_checkout_start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GTShopEventType", "checkout_start", value));
}
// Autogenerated static field getter
// Get static field: static public GTShopEventType checkout_cancel
::GlobalNamespace::GTShopEventType GlobalNamespace::GTShopEventType::_get_checkout_cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShopEventType::_get_checkout_cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GTShopEventType>("", "GTShopEventType", "checkout_cancel"));
}
// Autogenerated static field setter
// Set static field: static public GTShopEventType checkout_cancel
void GlobalNamespace::GTShopEventType::_set_checkout_cancel(::GlobalNamespace::GTShopEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShopEventType::_set_checkout_cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GTShopEventType", "checkout_cancel", value));
}
// Autogenerated static field getter
// Get static field: static public GTShopEventType register_visit
::GlobalNamespace::GTShopEventType GlobalNamespace::GTShopEventType::_get_register_visit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShopEventType::_get_register_visit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GTShopEventType>("", "GTShopEventType", "register_visit"));
}
// Autogenerated static field setter
// Set static field: static public GTShopEventType register_visit
void GlobalNamespace::GTShopEventType::_set_register_visit(::GlobalNamespace::GTShopEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShopEventType::_set_register_visit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GTShopEventType", "register_visit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GTShopEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GTShopEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaTelemetry
#include "GlobalNamespace/GorillaTelemetry.hpp"
// Including type: GorillaTelemetry/k
#include "GlobalNamespace/GorillaTelemetry_k.hpp"
// Including type: GorillaNetworking.PlayFabAuthenticator
#include "GorillaNetworking/PlayFabAuthenticator.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: GTZone
#include "GlobalNamespace/GTZone.hpp"
// Including type: GTSubZone
#include "GlobalNamespace/GTSubZone.hpp"
// Including type: GTZoneEventType
#include "GlobalNamespace/GTZoneEventType.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: PlayFab.ClientModels.WriteEventResponse
#include "PlayFab/ClientModels/WriteEventResponse.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: GTShopEventType
#include "GlobalNamespace/GTShopEventType.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private GorillaNetworking.PlayFabAuthenticator gPlayFabAuth
::GorillaNetworking::PlayFabAuthenticator* GlobalNamespace::GorillaTelemetry::_get_gPlayFabAuth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::_get_gPlayFabAuth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PlayFabAuthenticator*>("", "GorillaTelemetry", "gPlayFabAuth"));
}
// Autogenerated static field setter
// Set static field: static private GorillaNetworking.PlayFabAuthenticator gPlayFabAuth
void GlobalNamespace::GorillaTelemetry::_set_gPlayFabAuth(::GorillaNetworking::PlayFabAuthenticator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::_set_gPlayFabAuth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTelemetry", "gPlayFabAuth", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Object> gZoneEventArgs
::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* GlobalNamespace::GorillaTelemetry::_get_gZoneEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::_get_gZoneEventArgs");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>("", "GorillaTelemetry", "gZoneEventArgs")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Object> gZoneEventArgs
void GlobalNamespace::GorillaTelemetry::_set_gZoneEventArgs(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::_set_gZoneEventArgs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTelemetry", "gZoneEventArgs", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Object> gShopEventArgs
::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* GlobalNamespace::GorillaTelemetry::_get_gShopEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::_get_gShopEventArgs");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>("", "GorillaTelemetry", "gShopEventArgs")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Object> gShopEventArgs
void GlobalNamespace::GorillaTelemetry::_set_gShopEventArgs(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::_set_gShopEventArgs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTelemetry", "gShopEventArgs", value));
}
// Autogenerated static field getter
// Get static field: static private GorillaNetworking.CosmeticsController/CosmeticItem[] gSingleItemParam
::ArrayW<::GorillaNetworking::CosmeticsController::CosmeticItem> GlobalNamespace::GorillaTelemetry::_get_gSingleItemParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::_get_gSingleItemParam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GorillaNetworking::CosmeticsController::CosmeticItem>>("", "GorillaTelemetry", "gSingleItemParam"));
}
// Autogenerated static field setter
// Set static field: static private GorillaNetworking.CosmeticsController/CosmeticItem[] gSingleItemParam
void GlobalNamespace::GorillaTelemetry::_set_gSingleItemParam(::ArrayW<::GorillaNetworking::CosmeticsController::CosmeticItem> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::_set_gSingleItemParam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTelemetry", "gSingleItemParam", value));
}
// Autogenerated method: GorillaTelemetry.IsConnected
bool GlobalNamespace::GorillaTelemetry::IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaTelemetry", "IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaTelemetry.PlayFabUserId
::StringW GlobalNamespace::GorillaTelemetry::PlayFabUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::PlayFabUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaTelemetry", "PlayFabUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaTelemetry.PostZoneEvent
void GlobalNamespace::GorillaTelemetry::PostZoneEvent(::GlobalNamespace::GTZone zone, ::GlobalNamespace::GTSubZone subZone, ::GlobalNamespace::GTZoneEventType zoneEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::PostZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaTelemetry", "PostZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(zone), ::il2cpp_utils::ExtractType(subZone), ::il2cpp_utils::ExtractType(zoneEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, zone, subZone, zoneEvent);
}
// Autogenerated method: GorillaTelemetry.PostZoneEvent_OnError
void GlobalNamespace::GorillaTelemetry::PostZoneEvent_OnError(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::PostZoneEvent_OnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaTelemetry", "PostZoneEvent_OnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: GorillaTelemetry.PostZoneEvent_OnResult
void GlobalNamespace::GorillaTelemetry::PostZoneEvent_OnResult(::PlayFab::ClientModels::WriteEventResponse* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::PostZoneEvent_OnResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaTelemetry", "PostZoneEvent_OnResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, result);
}
// Autogenerated method: GorillaTelemetry.PostShopEvent
void GlobalNamespace::GorillaTelemetry::PostShopEvent(::GlobalNamespace::VRRig* playerRig, ::GlobalNamespace::GTShopEventType shopEvent, ::GorillaNetworking::CosmeticsController::CosmeticItem item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::PostShopEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaTelemetry", "PostShopEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerRig), ::il2cpp_utils::ExtractType(shopEvent), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerRig, shopEvent, item);
}
// Autogenerated method: GorillaTelemetry.FetchItemArgs
::ArrayW<::StringW> GlobalNamespace::GorillaTelemetry::FetchItemArgs(::System::Collections::Generic::IList_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* items) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::FetchItemArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaTelemetry", "FetchItemArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(items)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, items);
}
// Autogenerated method: GorillaTelemetry.PostShopEvent
void GlobalNamespace::GorillaTelemetry::PostShopEvent(::GlobalNamespace::VRRig* playerRig, ::GlobalNamespace::GTShopEventType shopEvent, ::System::Collections::Generic::IList_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* items) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::PostShopEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaTelemetry", "PostShopEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerRig), ::il2cpp_utils::ExtractType(shopEvent), ::il2cpp_utils::ExtractType(items)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerRig, shopEvent, items);
}
// Autogenerated method: GorillaTelemetry.PostShopEvent_OnResult
void GlobalNamespace::GorillaTelemetry::PostShopEvent_OnResult(::PlayFab::ClientModels::WriteEventResponse* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::PostShopEvent_OnResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaTelemetry", "PostShopEvent_OnResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, result);
}
// Autogenerated method: GorillaTelemetry.PostShopEvent_OnError
void GlobalNamespace::GorillaTelemetry::PostShopEvent_OnError(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::PostShopEvent_OnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaTelemetry", "PostShopEvent_OnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: GorillaTelemetry..cctor
void GlobalNamespace::GorillaTelemetry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaTelemetry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTelemetry/k
#include "GlobalNamespace/GorillaTelemetry_k.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String User
::StringW GlobalNamespace::GorillaTelemetry::k::_get_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_get_User");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GorillaTelemetry/k", "User"));
}
// Autogenerated static field setter
// Set static field: static public System.String User
void GlobalNamespace::GorillaTelemetry::k::_set_User(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_set_User");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTelemetry/k", "User", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ZoneId
::StringW GlobalNamespace::GorillaTelemetry::k::_get_ZoneId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_get_ZoneId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GorillaTelemetry/k", "ZoneId"));
}
// Autogenerated static field setter
// Set static field: static public System.String ZoneId
void GlobalNamespace::GorillaTelemetry::k::_set_ZoneId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_set_ZoneId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTelemetry/k", "ZoneId", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SubZoneId
::StringW GlobalNamespace::GorillaTelemetry::k::_get_SubZoneId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_get_SubZoneId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GorillaTelemetry/k", "SubZoneId"));
}
// Autogenerated static field setter
// Set static field: static public System.String SubZoneId
void GlobalNamespace::GorillaTelemetry::k::_set_SubZoneId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_set_SubZoneId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTelemetry/k", "SubZoneId", value));
}
// Autogenerated static field getter
// Get static field: static public System.String EventType
::StringW GlobalNamespace::GorillaTelemetry::k::_get_EventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_get_EventType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GorillaTelemetry/k", "EventType"));
}
// Autogenerated static field setter
// Set static field: static public System.String EventType
void GlobalNamespace::GorillaTelemetry::k::_set_EventType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_set_EventType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTelemetry/k", "EventType", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Items
::StringW GlobalNamespace::GorillaTelemetry::k::_get_Items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_get_Items");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GorillaTelemetry/k", "Items"));
}
// Autogenerated static field setter
// Set static field: static public System.String Items
void GlobalNamespace::GorillaTelemetry::k::_set_Items(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_set_Items");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTelemetry/k", "Items", value));
}
// Autogenerated static field getter
// Get static field: static public System.String telemetry_zone_event
::StringW GlobalNamespace::GorillaTelemetry::k::_get_telemetry_zone_event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_get_telemetry_zone_event");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GorillaTelemetry/k", "telemetry_zone_event"));
}
// Autogenerated static field setter
// Set static field: static public System.String telemetry_zone_event
void GlobalNamespace::GorillaTelemetry::k::_set_telemetry_zone_event(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_set_telemetry_zone_event");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTelemetry/k", "telemetry_zone_event", value));
}
// Autogenerated static field getter
// Get static field: static public System.String telemetry_shop_event
::StringW GlobalNamespace::GorillaTelemetry::k::_get_telemetry_shop_event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_get_telemetry_shop_event");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GorillaTelemetry/k", "telemetry_shop_event"));
}
// Autogenerated static field setter
// Set static field: static public System.String telemetry_shop_event
void GlobalNamespace::GorillaTelemetry::k::_set_telemetry_shop_event(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_set_telemetry_shop_event");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTelemetry/k", "telemetry_shop_event", value));
}
// Autogenerated static field getter
// Get static field: static public System.String NOTHING
::StringW GlobalNamespace::GorillaTelemetry::k::_get_NOTHING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_get_NOTHING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GorillaTelemetry/k", "NOTHING"));
}
// Autogenerated static field setter
// Set static field: static public System.String NOTHING
void GlobalNamespace::GorillaTelemetry::k::_set_NOTHING(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTelemetry::k::_set_NOTHING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTelemetry/k", "NOTHING", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTrigger
#include "GlobalNamespace/GorillaTrigger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaTrigger.OnTriggered
void GlobalNamespace::GorillaTrigger::OnTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTrigger::OnTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTrigger*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTurning
#include "GlobalNamespace/GorillaTurning.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn
#include "UnityEngine/XR/Interaction/Toolkit/GorillaSnapTurn.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material redMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaTurning::dyn_redMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_redMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material blueMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaTurning::dyn_blueMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_blueMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blueMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material greenMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaTurning::dyn_greenMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_greenMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "greenMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material transparentBlueMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaTurning::dyn_transparentBlueMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_transparentBlueMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transparentBlueMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material transparentRedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaTurning::dyn_transparentRedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_transparentRedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transparentRedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material transparentGreenMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaTurning::dyn_transparentGreenMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_transparentGreenMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transparentGreenMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer smoothTurnBox
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::GorillaTurning::dyn_smoothTurnBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_smoothTurnBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothTurnBox"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer snapTurnBox
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::GorillaTurning::dyn_snapTurnBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_snapTurnBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapTurnBox"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer noTurnBox
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::GorillaTurning::dyn_noTurnBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_noTurnBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noTurnBox"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn snapTurn
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn*& GlobalNamespace::GorillaTurning::dyn_snapTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_snapTurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapTurn"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String currentChoice
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaTurning::dyn_currentChoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_currentChoice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentChoice"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single currentSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTurning::dyn_currentSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_currentSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTurning.Awake
void GlobalNamespace::GorillaTurning::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTurningChoice
#include "GlobalNamespace/GorillaTurningChoice.hpp"
// Including type: GorillaTurning
#include "GlobalNamespace/GorillaTurning.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String choiceName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaTurningChoice::dyn_choiceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurningChoice::dyn_choiceName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "choiceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTurning parent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTurning*& GlobalNamespace::GorillaTurningChoice::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurningChoice::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTurning**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTurningChoice.OnBoxTriggered
void GlobalNamespace::GorillaTurningChoice::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurningChoice::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaUI
#include "GlobalNamespace/GorillaUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaUI.Start
void GlobalNamespace::GorillaUI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUI::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaUI.Update
void GlobalNamespace::GorillaUI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaUIParent
#include "GlobalNamespace/GorillaUIParent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaUIParent instance
::GlobalNamespace::GorillaUIParent* GlobalNamespace::GorillaUIParent::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUIParent::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaUIParent*>("", "GorillaUIParent", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaUIParent instance
void GlobalNamespace::GorillaUIParent::_set_instance(::GlobalNamespace::GorillaUIParent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUIParent::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaUIParent", "instance", value));
}
// Autogenerated method: GorillaUIParent.Awake
void GlobalNamespace::GorillaUIParent::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUIParent::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaUITransformFollow
#include "GlobalNamespace/GorillaUITransformFollow.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transformToFollow
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaUITransformFollow::dyn_transformToFollow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUITransformFollow::dyn_transformToFollow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformToFollow"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaUITransformFollow::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUITransformFollow::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean doesMove
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaUITransformFollow::dyn_doesMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUITransformFollow::dyn_doesMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doesMove"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaUITransformFollow.Start
void GlobalNamespace::GorillaUITransformFollow::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUITransformFollow::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaUITransformFollow.LateUpdate
void GlobalNamespace::GorillaUITransformFollow::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUITransformFollow::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaVRConstraint
#include "GlobalNamespace/GorillaVRConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isConstrained
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaVRConstraint::dyn_isConstrained() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaVRConstraint::dyn_isConstrained");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isConstrained"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaVRConstraint::dyn_angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaVRConstraint::dyn_angle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaVRConstraint.Update
void GlobalNamespace::GorillaVRConstraint::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaVRConstraint::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GroupJoinButton
#include "GlobalNamespace/GroupJoinButton.hpp"
// Including type: GorillaFriendCollider
#include "GlobalNamespace/GorillaFriendCollider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 gameModeIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GroupJoinButton::dyn_gameModeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinButton::dyn_gameModeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameModeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaFriendCollider friendCollider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaFriendCollider*& GlobalNamespace::GroupJoinButton::dyn_friendCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinButton::dyn_friendCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "friendCollider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaFriendCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean inPrivate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GroupJoinButton::dyn_inPrivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinButton::dyn_inPrivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inPrivate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GroupJoinButton.Update
void GlobalNamespace::GroupJoinButton::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinButton::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupJoinButton.ButtonActivation
void GlobalNamespace::GroupJoinButton::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinButton::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: HalloweenGhostChaser
#include "GlobalNamespace/HalloweenGhostChaser.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: HalloweenGhostChaser/<>c__DisplayClass73_0
#include "GlobalNamespace/HalloweenGhostChaser_--c__DisplayClass73_0.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single navMeshSampleRange
float GlobalNamespace::HalloweenGhostChaser::_get_navMeshSampleRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::_get_navMeshSampleRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "HalloweenGhostChaser", "navMeshSampleRange"));
}
// Autogenerated static field setter
// Set static field: static private System.Single navMeshSampleRange
void GlobalNamespace::HalloweenGhostChaser::_set_navMeshSampleRange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::_set_navMeshSampleRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HalloweenGhostChaser", "navMeshSampleRange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single heightAboveNavmesh
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_heightAboveNavmesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_heightAboveNavmesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightAboveNavmesh"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform followTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HalloweenGhostChaser::dyn_followTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_followTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform childGhost
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HalloweenGhostChaser::dyn_childGhost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_childGhost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "childGhost"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single velocityStep
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_velocityStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_velocityStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single currentSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_currentSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_currentSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single velocityIncreaseTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_velocityIncreaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_velocityIncreaseTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityIncreaseTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single riseDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_riseDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_riseDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "riseDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single summonDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_summonDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_summonDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "summonDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeEncircled
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_timeEncircled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_timeEncircled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeEncircled"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastSummonCheck
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_lastSummonCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_lastSummonCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastSummonCheck"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeGongStarted
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_timeGongStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_timeGongStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeGongStarted"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single summoningDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_summoningDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_summoningDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "summoningDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single summoningCheckCountdown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_summoningCheckCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_summoningCheckCountdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "summoningCheckCountdown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gongDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_gongDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_gongDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gongDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 summonCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HalloweenGhostChaser::dyn_summonCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_summonCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "summonCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean wasSurroundedLastCheck
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HalloweenGhostChaser::dyn_wasSurroundedLastCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_wasSurroundedLastCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasSurroundedLastCheck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource laugh
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::HalloweenGhostChaser::dyn_laugh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_laugh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laugh"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Photon.Realtime.Player> possibleTarget
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*& GlobalNamespace::HalloweenGhostChaser::dyn_possibleTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_possibleTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "possibleTarget"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Realtime::Player*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip defaultLaugh
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::HalloweenGhostChaser::dyn_defaultLaugh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_defaultLaugh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultLaugh"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip deepLaugh
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::HalloweenGhostChaser::dyn_deepLaugh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_deepLaugh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deepLaugh"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip gong
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::HalloweenGhostChaser::dyn_gong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_gong");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gong"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 noisyOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::HalloweenGhostChaser::dyn_noisyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_noisyOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noisyOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 leftArmGrabbingLocal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::HalloweenGhostChaser::dyn_leftArmGrabbingLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_leftArmGrabbingLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftArmGrabbingLocal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rightArmGrabbingLocal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::HalloweenGhostChaser::dyn_rightArmGrabbingLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_rightArmGrabbingLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightArmGrabbingLocal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 leftHandGrabbingLocal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::HalloweenGhostChaser::dyn_leftHandGrabbingLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_leftHandGrabbingLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandGrabbingLocal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rightHandGrabbingLocal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::HalloweenGhostChaser::dyn_rightHandGrabbingLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_rightHandGrabbingLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandGrabbingLocal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 leftHandStartingLocal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::HalloweenGhostChaser::dyn_leftHandStartingLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_leftHandStartingLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandStartingLocal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rightHandStartingLocal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::HalloweenGhostChaser::dyn_rightHandStartingLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_rightHandStartingLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandStartingLocal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 ghostOffsetGrabbingLocal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::HalloweenGhostChaser::dyn_ghostOffsetGrabbingLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_ghostOffsetGrabbingLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ghostOffsetGrabbingLocal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 ghostStartingEulerRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::HalloweenGhostChaser::dyn_ghostStartingEulerRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_ghostStartingEulerRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ghostStartingEulerRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 ghostGrabbingEulerRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::HalloweenGhostChaser::dyn_ghostGrabbingEulerRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_ghostGrabbingEulerRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ghostGrabbingEulerRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxTimeToNextHeadAngle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_maxTimeToNextHeadAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_maxTimeToNextHeadAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTimeToNextHeadAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastHeadAngleTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_lastHeadAngleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_lastHeadAngleTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastHeadAngleTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single nextHeadAngleTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_nextHeadAngleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_nextHeadAngleTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextHeadAngleTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single nextTimeToChasePlayer
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_nextTimeToChasePlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_nextTimeToChasePlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextTimeToChasePlayer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxNextTimeToChasePlayer
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_maxNextTimeToChasePlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_maxNextTimeToChasePlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNextTimeToChasePlayer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeRiseStarted
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_timeRiseStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_timeRiseStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeRiseStarted"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single totalTimeToRise
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_totalTimeToRise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_totalTimeToRise");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalTimeToRise"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single catchDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_catchDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_catchDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "catchDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single grabTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_grabTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_grabTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single grabDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_grabDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_grabDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single grabSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_grabSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_grabSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minGrabCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_minGrabCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_minGrabCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minGrabCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastSpeedIncreased
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_lastSpeedIncreased() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_lastSpeedIncreased");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastSpeedIncreased"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] headEulerAngles
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::HalloweenGhostChaser::dyn_headEulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_headEulerAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headEulerAngles"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform skullTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HalloweenGhostChaser::dyn_skullTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_skullTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skullTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftArm
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HalloweenGhostChaser::dyn_leftArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_leftArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftArm"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightArm
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HalloweenGhostChaser::dyn_rightArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_rightArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightArm"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HalloweenGhostChaser::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HalloweenGhostChaser::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] spawnTransforms
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::HalloweenGhostChaser::dyn_spawnTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_spawnTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spawnTransforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] spawnTransformOffsets
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::HalloweenGhostChaser::dyn_spawnTransformOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_spawnTransformOffsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spawnTransformOffsets"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player targetPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::HalloweenGhostChaser::dyn_targetPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_targetPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject ghostBody
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::HalloweenGhostChaser::dyn_ghostBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_ghostBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ghostBody"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HalloweenGhostChaser/ChaseState currentState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HalloweenGhostChaser::ChaseState& GlobalNamespace::HalloweenGhostChaser::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HalloweenGhostChaser::ChaseState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HalloweenGhostChaser/ChaseState lastState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HalloweenGhostChaser::ChaseState& GlobalNamespace::HalloweenGhostChaser::dyn_lastState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_lastState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HalloweenGhostChaser::ChaseState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 spawnIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HalloweenGhostChaser::dyn_spawnIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_spawnIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spawnIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player grabbedPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::HalloweenGhostChaser::dyn_grabbedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_grabbedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabbedPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material ghostMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::HalloweenGhostChaser::dyn_ghostMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_ghostMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ghostMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color defaultColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::HalloweenGhostChaser::dyn_defaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_defaultColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color summonedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::HalloweenGhostChaser::dyn_summonedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_summonedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "summonedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isSummoned
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HalloweenGhostChaser::dyn_isSummoned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_isSummoned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isSummoned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean targetIsOnNavMesh
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HalloweenGhostChaser::dyn_targetIsOnNavMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_targetIsOnNavMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetIsOnNavMesh"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_hapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_hapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_hapticDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_hapticDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AI.NavMeshPath path
[[deprecated("Use field access instead!")]] ::UnityEngine::AI::NavMeshPath*& GlobalNamespace::HalloweenGhostChaser::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::UnityEngine::AI::NavMeshPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Vector3> points
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::HalloweenGhostChaser::dyn_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "points"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentTargetIdx
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HalloweenGhostChaser::dyn_currentTargetIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_currentTargetIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTargetIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextPathTimestamp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HalloweenGhostChaser::dyn_nextPathTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::dyn_nextPathTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextPathTimestamp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HalloweenGhostChaser.Awake
void GlobalNamespace::HalloweenGhostChaser::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenGhostChaser.InitializeGhost
void GlobalNamespace::HalloweenGhostChaser::InitializeGhost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::InitializeGhost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeGhost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenGhostChaser.LateUpdate
void GlobalNamespace::HalloweenGhostChaser::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenGhostChaser.UpdateState
void GlobalNamespace::HalloweenGhostChaser::UpdateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenGhostChaser.OnChangeState
void GlobalNamespace::HalloweenGhostChaser::OnChangeState(::GlobalNamespace::HalloweenGhostChaser::ChaseState newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::OnChangeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnChangeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState);
}
// Autogenerated method: HalloweenGhostChaser.SetInitialSpawnPoint
void GlobalNamespace::HalloweenGhostChaser::SetInitialSpawnPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::SetInitialSpawnPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInitialSpawnPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenGhostChaser.ChooseRandomTarget
void GlobalNamespace::HalloweenGhostChaser::ChooseRandomTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::ChooseRandomTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChooseRandomTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenGhostChaser.SetInitialRotations
void GlobalNamespace::HalloweenGhostChaser::SetInitialRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::SetInitialRotations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInitialRotations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenGhostChaser.MoveHead
void GlobalNamespace::HalloweenGhostChaser::MoveHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::MoveHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenGhostChaser.RiseHost
void GlobalNamespace::HalloweenGhostChaser::RiseHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::RiseHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RiseHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenGhostChaser.RiseGrabbedLocalPlayer
void GlobalNamespace::HalloweenGhostChaser::RiseGrabbedLocalPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::RiseGrabbedLocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RiseGrabbedLocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenGhostChaser.UpdateFollowPath
void GlobalNamespace::HalloweenGhostChaser::UpdateFollowPath(::UnityEngine::Vector3 destination, float currentSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::UpdateFollowPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFollowPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(currentSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination, currentSpeed);
}
// Autogenerated method: HalloweenGhostChaser.GetNewPath
void GlobalNamespace::HalloweenGhostChaser::GetNewPath(::UnityEngine::Vector3 destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::GetNewPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNewPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination);
}
// Autogenerated method: HalloweenGhostChaser.ResetPath
void GlobalNamespace::HalloweenGhostChaser::ResetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::ResetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenGhostChaser.ChaseHost
void GlobalNamespace::HalloweenGhostChaser::ChaseHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::ChaseHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChaseHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenGhostChaser.MoveBodyShared
void GlobalNamespace::HalloweenGhostChaser::MoveBodyShared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::MoveBodyShared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveBodyShared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenGhostChaser.GrabBodyShared
void GlobalNamespace::HalloweenGhostChaser::GrabBodyShared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::GrabBodyShared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabBodyShared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HalloweenGhostChaser.Photon.Pun.IPunObservable.OnPhotonSerializeView
void GlobalNamespace::HalloweenGhostChaser::Photon_Pun_IPunObservable_OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::Photon.Pun.IPunObservable.OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HalloweenGhostChaser*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: HalloweenGhostChaser.Photon.Pun.IOnPhotonViewOwnerChange.OnOwnerChange
void GlobalNamespace::HalloweenGhostChaser::Photon_Pun_IOnPhotonViewOwnerChange_OnOwnerChange(::Photon::Realtime::Player* newOwner, ::Photon::Realtime::Player* previousOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::Photon.Pun.IOnPhotonViewOwnerChange.OnOwnerChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HalloweenGhostChaser*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newOwner, previousOwner);
}
// Autogenerated method: HalloweenGhostChaser.OnJoinedRoom
void GlobalNamespace::HalloweenGhostChaser::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: HalloweenGhostChaser/ChaseState
#include "GlobalNamespace/HalloweenGhostChaser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HalloweenGhostChaser/ChaseState Dormant
::GlobalNamespace::HalloweenGhostChaser::ChaseState GlobalNamespace::HalloweenGhostChaser::ChaseState::_get_Dormant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::ChaseState::_get_Dormant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HalloweenGhostChaser::ChaseState>("", "HalloweenGhostChaser/ChaseState", "Dormant"));
}
// Autogenerated static field setter
// Set static field: static public HalloweenGhostChaser/ChaseState Dormant
void GlobalNamespace::HalloweenGhostChaser::ChaseState::_set_Dormant(::GlobalNamespace::HalloweenGhostChaser::ChaseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::ChaseState::_set_Dormant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HalloweenGhostChaser/ChaseState", "Dormant", value));
}
// Autogenerated static field getter
// Get static field: static public HalloweenGhostChaser/ChaseState InitialRise
::GlobalNamespace::HalloweenGhostChaser::ChaseState GlobalNamespace::HalloweenGhostChaser::ChaseState::_get_InitialRise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::ChaseState::_get_InitialRise");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HalloweenGhostChaser::ChaseState>("", "HalloweenGhostChaser/ChaseState", "InitialRise"));
}
// Autogenerated static field setter
// Set static field: static public HalloweenGhostChaser/ChaseState InitialRise
void GlobalNamespace::HalloweenGhostChaser::ChaseState::_set_InitialRise(::GlobalNamespace::HalloweenGhostChaser::ChaseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::ChaseState::_set_InitialRise");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HalloweenGhostChaser/ChaseState", "InitialRise", value));
}
// Autogenerated static field getter
// Get static field: static public HalloweenGhostChaser/ChaseState Gong
::GlobalNamespace::HalloweenGhostChaser::ChaseState GlobalNamespace::HalloweenGhostChaser::ChaseState::_get_Gong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::ChaseState::_get_Gong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HalloweenGhostChaser::ChaseState>("", "HalloweenGhostChaser/ChaseState", "Gong"));
}
// Autogenerated static field setter
// Set static field: static public HalloweenGhostChaser/ChaseState Gong
void GlobalNamespace::HalloweenGhostChaser::ChaseState::_set_Gong(::GlobalNamespace::HalloweenGhostChaser::ChaseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::ChaseState::_set_Gong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HalloweenGhostChaser/ChaseState", "Gong", value));
}
// Autogenerated static field getter
// Get static field: static public HalloweenGhostChaser/ChaseState Chasing
::GlobalNamespace::HalloweenGhostChaser::ChaseState GlobalNamespace::HalloweenGhostChaser::ChaseState::_get_Chasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::ChaseState::_get_Chasing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HalloweenGhostChaser::ChaseState>("", "HalloweenGhostChaser/ChaseState", "Chasing"));
}
// Autogenerated static field setter
// Set static field: static public HalloweenGhostChaser/ChaseState Chasing
void GlobalNamespace::HalloweenGhostChaser::ChaseState::_set_Chasing(::GlobalNamespace::HalloweenGhostChaser::ChaseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::ChaseState::_set_Chasing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HalloweenGhostChaser/ChaseState", "Chasing", value));
}
// Autogenerated static field getter
// Get static field: static public HalloweenGhostChaser/ChaseState Grabbing
::GlobalNamespace::HalloweenGhostChaser::ChaseState GlobalNamespace::HalloweenGhostChaser::ChaseState::_get_Grabbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::ChaseState::_get_Grabbing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HalloweenGhostChaser::ChaseState>("", "HalloweenGhostChaser/ChaseState", "Grabbing"));
}
// Autogenerated static field setter
// Set static field: static public HalloweenGhostChaser/ChaseState Grabbing
void GlobalNamespace::HalloweenGhostChaser::ChaseState::_set_Grabbing(::GlobalNamespace::HalloweenGhostChaser::ChaseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::ChaseState::_set_Grabbing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HalloweenGhostChaser/ChaseState", "Grabbing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HalloweenGhostChaser::ChaseState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::ChaseState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: HalloweenGhostChaser/<>c__DisplayClass73_0
#include "GlobalNamespace/HalloweenGhostChaser_--c__DisplayClass73_0.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public HalloweenGhostChaser <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HalloweenGhostChaser*& GlobalNamespace::HalloweenGhostChaser::$$c__DisplayClass73_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::$$c__DisplayClass73_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HalloweenGhostChaser**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 randomTarget
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HalloweenGhostChaser::$$c__DisplayClass73_0::dyn_randomTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::$$c__DisplayClass73_0::dyn_randomTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomTarget"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HalloweenGhostChaser/<>c__DisplayClass73_0.<ChooseRandomTarget>b__0
bool GlobalNamespace::HalloweenGhostChaser::$$c__DisplayClass73_0::$ChooseRandomTarget$b__0(::GlobalNamespace::VRRig* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HalloweenGhostChaser::$$c__DisplayClass73_0::<ChooseRandomTarget>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ChooseRandomTarget>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: HandHold
#include "GlobalNamespace/HandHold.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Events.UnityEvent`1
#include "UnityEngine/Events/UnityEvent_1.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: GorillaGrabber
#include "GlobalNamespace/GorillaGrabber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Transform,UnityEngine.Transform> attached
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Transform*, ::UnityEngine::Transform*>*& GlobalNamespace::HandHold::dyn_attached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandHold::dyn_attached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attached"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Transform*, ::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent`1<UnityEngine.Vector3> OnGrab
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent_1<::UnityEngine::Vector3>*& GlobalNamespace::HandHold::dyn_OnGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandHold::dyn_OnGrab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGrab"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent OnRelease
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& GlobalNamespace::HandHold::dyn_OnRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandHold::dyn_OnRelease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnRelease"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean rotatePlayerWhenHeld
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HandHold::dyn_rotatePlayerWhenHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandHold::dyn_rotatePlayerWhenHeld");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotatePlayerWhenHeld"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandHold.GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabbed
::UnityEngine::Transform* GlobalNamespace::HandHold::GorillaLocomotion_Gameplay_IGorillaGrabable_OnGrabbed(::GlobalNamespace::GorillaGrabber* g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandHold::GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabbed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HandHold*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, g);
}
// Autogenerated method: HandHold.GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabReleased
::UnityEngine::Transform* GlobalNamespace::HandHold::GorillaLocomotion_Gameplay_IGorillaGrabable_OnGrabReleased(::GlobalNamespace::GorillaGrabber* g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandHold::GorillaLocomotion.Gameplay.IGorillaGrabable.OnGrabReleased");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HandHold*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, g);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: HauntedObject
#include "GlobalNamespace/HauntedObject.hpp"
// Including type: HauntedObject/<Shake>d__19
#include "GlobalNamespace/HauntedObject_-Shake-d__19.hpp"
// Including type: HauntedObject/<TurnOff>d__20
#include "GlobalNamespace/HauntedObject_-TurnOff-d__20.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean rattle
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HauntedObject::dyn_rattle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::dyn_rattle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rattle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HauntedObject::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single amount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HauntedObject::dyn_amount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::dyn_amount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HauntedObject::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject FBXprefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::HauntedObject::dyn_FBXprefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::dyn_FBXprefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FBXprefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject TurnOffLight
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::HauntedObject::dyn_TurnOffLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::dyn_TurnOffLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TurnOffLight"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TurnOffDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HauntedObject::dyn_TurnOffDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::dyn_TurnOffDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TurnOffDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 initialPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::HauntedObject::dyn_initialPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::dyn_initialPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single passedTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HauntedObject::dyn_passedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::dyn_passedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lightPassedTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HauntedObject::dyn_lightPassedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::dyn_lightPassedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightPassedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject lurkerGhost
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::HauntedObject::dyn_lurkerGhost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::dyn_lurkerGhost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lurkerGhost"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject wanderingGhost
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::HauntedObject::dyn_wanderingGhost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::dyn_wanderingGhost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wanderingGhost"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator[] animators
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Animator*>& GlobalNamespace::HauntedObject::dyn_animators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::dyn_animators");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animators"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Animator*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::HauntedObject::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip hauntedSound
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::HauntedObject::dyn_hauntedSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::dyn_hauntedSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hauntedSound"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HauntedObject.Awake
void GlobalNamespace::HauntedObject::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HauntedObject.OnDestroy
void GlobalNamespace::HauntedObject::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HauntedObject.Start
void GlobalNamespace::HauntedObject::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HauntedObject.TriggerEffects
void GlobalNamespace::HauntedObject::TriggerEffects(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::TriggerEffects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerEffects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, go);
}
// Autogenerated method: HauntedObject.Shake
::System::Collections::IEnumerator* GlobalNamespace::HauntedObject::Shake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::Shake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Shake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: HauntedObject.TurnOff
::System::Collections::IEnumerator* GlobalNamespace::HauntedObject::TurnOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::TurnOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TurnOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HauntedObject/<Shake>d__19
#include "GlobalNamespace/HauntedObject_-Shake-d__19.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HauntedObject::$Shake$d__19::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$Shake$d__19::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::HauntedObject::$Shake$d__19::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$Shake$d__19::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HauntedObject <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HauntedObject*& GlobalNamespace::HauntedObject::$Shake$d__19::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$Shake$d__19::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HauntedObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HauntedObject/<Shake>d__19.System.IDisposable.Dispose
void GlobalNamespace::HauntedObject::$Shake$d__19::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$Shake$d__19::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HauntedObject::$Shake$d__19*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HauntedObject/<Shake>d__19.MoveNext
bool GlobalNamespace::HauntedObject::$Shake$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$Shake$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HauntedObject::$Shake$d__19*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HauntedObject/<Shake>d__19.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::HauntedObject::$Shake$d__19::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$Shake$d__19::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HauntedObject::$Shake$d__19*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HauntedObject/<Shake>d__19.System.Collections.IEnumerator.Reset
void GlobalNamespace::HauntedObject::$Shake$d__19::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$Shake$d__19::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HauntedObject::$Shake$d__19*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HauntedObject/<Shake>d__19.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::HauntedObject::$Shake$d__19::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$Shake$d__19::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HauntedObject::$Shake$d__19*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HauntedObject/<TurnOff>d__20
#include "GlobalNamespace/HauntedObject_-TurnOff-d__20.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HauntedObject::$TurnOff$d__20::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$TurnOff$d__20::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::HauntedObject::$TurnOff$d__20::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$TurnOff$d__20::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HauntedObject <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HauntedObject*& GlobalNamespace::HauntedObject::$TurnOff$d__20::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$TurnOff$d__20::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HauntedObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HauntedObject/<TurnOff>d__20.System.IDisposable.Dispose
void GlobalNamespace::HauntedObject::$TurnOff$d__20::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$TurnOff$d__20::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HauntedObject::$TurnOff$d__20*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HauntedObject/<TurnOff>d__20.MoveNext
bool GlobalNamespace::HauntedObject::$TurnOff$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$TurnOff$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HauntedObject::$TurnOff$d__20*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HauntedObject/<TurnOff>d__20.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::HauntedObject::$TurnOff$d__20::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$TurnOff$d__20::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HauntedObject::$TurnOff$d__20*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HauntedObject/<TurnOff>d__20.System.Collections.IEnumerator.Reset
void GlobalNamespace::HauntedObject::$TurnOff$d__20::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$TurnOff$d__20::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HauntedObject::$TurnOff$d__20*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HauntedObject/<TurnOff>d__20.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::HauntedObject::$TurnOff$d__20::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HauntedObject::$TurnOff$d__20::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HauntedObject::$TurnOff$d__20*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: HeightVolume
#include "GlobalNamespace/HeightVolume.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform heightTop
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HeightVolume::dyn_heightTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::dyn_heightTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightTop"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform heightBottom
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HeightVolume::dyn_heightBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::dyn_heightBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightBottom"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::HeightVolume::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single baseVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HeightVolume::dyn_baseVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::dyn_baseVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HeightVolume::dyn_minVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::dyn_minVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform targetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HeightVolume::dyn_targetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::dyn_targetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean invertHeightVol
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HeightVolume::dyn_invertHeightVol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::dyn_invertHeightVol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invertHeightVol"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HeightVolume.Awake
void GlobalNamespace::HeightVolume::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HeightVolume.Update
void GlobalNamespace::HeightVolume::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: HeldButton
#include "GlobalNamespace/HeldButton.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material pressedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::HeldButton::dyn_pressedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_pressedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pressedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material unpressedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::HeldButton::dyn_unpressedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_unpressedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unpressedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer buttonRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::HeldButton::dyn_buttonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_buttonRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HeldButton::dyn_isOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_isOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debounceTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HeldButton::dyn_debounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_debounceTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debounceTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftHandPressable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HeldButton::dyn_leftHandPressable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_leftHandPressable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandPressable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rightHandPressable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HeldButton::dyn_rightHandPressable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_rightHandPressable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandPressable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pressDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HeldButton::dyn_pressDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_pressDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pressDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent onPressButton
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& GlobalNamespace::HeldButton::dyn_onPressButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_onPressButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPressButton"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String offText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::HeldButton::dyn_offText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_offText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String onText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::HeldButton::dyn_onText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_onText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text myText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::HeldButton::dyn_myText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_myText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single touchTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HeldButton::dyn_touchTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_touchTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "touchTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single releaseTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HeldButton::dyn_releaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_releaseTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "releaseTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean pendingPress
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HeldButton::dyn_pendingPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_pendingPress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pendingPress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider pendingPressCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::HeldButton::dyn_pendingPressCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::dyn_pendingPressCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pendingPressCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HeldButton.OnTriggerEnter
void GlobalNamespace::HeldButton::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: HeldButton.OnTriggerStay
void GlobalNamespace::HeldButton::OnTriggerStay(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::OnTriggerStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: HeldButton.OnTriggerExit
void GlobalNamespace::HeldButton::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: HeldButton.SetOn
void GlobalNamespace::HeldButton::SetOn(bool inOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeldButton::SetOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inOn);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: IBuildValidation
#include "GlobalNamespace/IBuildValidation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBuildValidation.BuildValidationCheck
bool GlobalNamespace::IBuildValidation::BuildValidationCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBuildValidation::BuildValidationCheck");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IBuildValidation*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MagicCauldron
#include "GlobalNamespace/MagicCauldron.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: MagicIngredientType
#include "GlobalNamespace/MagicIngredientType.hpp"
// Including type: MagicCauldron/IngredientArgs
#include "GlobalNamespace/MagicCauldron_IngredientArgs.hpp"
// Including type: MagicCauldron/IngrediantFXContext
#include "GlobalNamespace/MagicCauldron_IngrediantFXContext.hpp"
// Including type: MagicCauldron/<LevitationSpellCoroutine>d__45
#include "GlobalNamespace/MagicCauldron_-LevitationSpellCoroutine-d__45.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: GorillaLocomotion.Gameplay.NoncontrollableBroomstick
#include "GorillaLocomotion/Gameplay/NoncontrollableBroomstick.hpp"
// Including type: MagicCauldronLiquid
#include "GlobalNamespace/MagicCauldronLiquid.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<MagicCauldron/Recipe> recipes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::MagicCauldron::Recipe>*& GlobalNamespace::MagicCauldron::dyn_recipes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_recipes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recipes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::MagicCauldron::Recipe>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxTimeToAddAllIngredients
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldron::dyn_maxTimeToAddAllIngredients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_maxTimeToAddAllIngredients");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTimeToAddAllIngredients"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single summonWitchesDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldron::dyn_summonWitchesDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_summonWitchesDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "summonWitchesDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single recipeFailedDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldron::dyn_recipeFailedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_recipeFailedDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recipeFailedDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cooldownDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldron::dyn_cooldownDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_cooldownDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cooldownDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MagicIngredientType[] allIngredients
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MagicIngredientType*>& GlobalNamespace::MagicCauldron::dyn_allIngredients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_allIngredients");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allIngredients"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MagicIngredientType*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject flyingWitchesContainer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MagicCauldron::dyn_flyingWitchesContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_flyingWitchesContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flyingWitchesContainer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::MagicCauldron::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip ingredientAddedAudio
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::MagicCauldron::dyn_ingredientAddedAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_ingredientAddedAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ingredientAddedAudio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip recipeFailedAudio
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::MagicCauldron::dyn_recipeFailedAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_recipeFailedAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recipeFailedAudio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem bubblesParticle
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::MagicCauldron::dyn_bubblesParticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_bubblesParticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bubblesParticle"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem successParticle
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::MagicCauldron::dyn_successParticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_successParticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "successParticle"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem splashParticle
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::MagicCauldron::dyn_splashParticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_splashParticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "splashParticle"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color CauldronActiveColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MagicCauldron::dyn_CauldronActiveColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_CauldronActiveColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CauldronActiveColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color CauldronFailedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MagicCauldron::dyn_CauldronFailedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_CauldronFailedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CauldronFailedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color CauldronNotReadyColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MagicCauldron::dyn_CauldronNotReadyColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_CauldronNotReadyColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CauldronNotReadyColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<GorillaLocomotion.Gameplay.NoncontrollableBroomstick> witchesComponent
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaLocomotion::Gameplay::NoncontrollableBroomstick*>*& GlobalNamespace::MagicCauldron::dyn_witchesComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_witchesComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "witchesComponent"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaLocomotion::Gameplay::NoncontrollableBroomstick*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<MagicIngredientType> currentIngredients
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::MagicIngredientType*>*& GlobalNamespace::MagicCauldron::dyn_currentIngredients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_currentIngredients");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIngredients"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::MagicIngredientType*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentStateElapsedTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldron::dyn_currentStateElapsedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_currentStateElapsedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentStateElapsedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicCauldron/CauldronState currentState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MagicCauldron::CauldronState& GlobalNamespace::MagicCauldron::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MagicCauldron::CauldronState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer rendr
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& GlobalNamespace::MagicCauldron::dyn_rendr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_rendr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rendr"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color cauldronColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MagicCauldron::dyn_cauldronColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_cauldronColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cauldronColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color currentColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MagicCauldron::dyn_currentColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_currentColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentRecipeIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MagicCauldron::dyn_currentRecipeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_currentRecipeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentRecipeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 ingredientIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MagicCauldron::dyn_ingredientIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_ingredientIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ingredientIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single waitTimeToSummonWitches
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldron::dyn_waitTimeToSummonWitches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_waitTimeToSummonWitches");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitTimeToSummonWitches"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicCauldronLiquid _liquid
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MagicCauldronLiquid*& GlobalNamespace::MagicCauldron::dyn__liquid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn__liquid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_liquid"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MagicCauldronLiquid**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicCauldron/IngrediantFXContext reusableFXContext
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MagicCauldron::IngrediantFXContext*& GlobalNamespace::MagicCauldron::dyn_reusableFXContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_reusableFXContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reusableFXContext"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MagicCauldron::IngrediantFXContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicCauldron/IngredientArgs reusableIngrediantArgs
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MagicCauldron::IngredientArgs*& GlobalNamespace::MagicCauldron::dyn_reusableIngrediantArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_reusableIngrediantArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reusableIngrediantArgs"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MagicCauldron::IngredientArgs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testLevitationAlwaysOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MagicCauldron::dyn_testLevitationAlwaysOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_testLevitationAlwaysOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testLevitationAlwaysOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single levitationRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldron::dyn_levitationRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_levitationRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levitationRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single levitationSpellDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldron::dyn_levitationSpellDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_levitationSpellDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levitationSpellDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single levitationStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldron::dyn_levitationStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_levitationStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levitationStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single levitationDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldron::dyn_levitationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_levitationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levitationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single levitationBlendOutDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldron::dyn_levitationBlendOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_levitationBlendOutDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levitationBlendOutDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single levitationBonusStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldron::dyn_levitationBonusStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_levitationBonusStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levitationBonusStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single levitationBonusOffAtYSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldron::dyn_levitationBonusOffAtYSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_levitationBonusOffAtYSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levitationBonusOffAtYSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single levitationBonusFullAtYSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldron::dyn_levitationBonusFullAtYSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::dyn_levitationBonusFullAtYSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levitationBonusFullAtYSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MagicCauldron.Awake
void GlobalNamespace::MagicCauldron::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldron.Start
void GlobalNamespace::MagicCauldron::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldron.LateUpdate
void GlobalNamespace::MagicCauldron::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldron.LevitationSpellCoroutine
::System::Collections::IEnumerator* GlobalNamespace::MagicCauldron::LevitationSpellCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::LevitationSpellCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevitationSpellCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldron.ChangeState
void GlobalNamespace::MagicCauldron::ChangeState(::GlobalNamespace::MagicCauldron::CauldronState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::ChangeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: MagicCauldron.UpdateState
void GlobalNamespace::MagicCauldron::UpdateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldron.OnEventStart
void GlobalNamespace::MagicCauldron::OnEventStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::OnEventStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEventStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldron.OnEventEnd
void GlobalNamespace::MagicCauldron::OnEventEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::OnEventEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEventEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldron.OnIngredientAdd
void GlobalNamespace::MagicCauldron::OnIngredientAdd(int _ingredientIndex, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::OnIngredientAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnIngredientAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_ingredientIndex), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _ingredientIndex, info);
}
// Autogenerated method: MagicCauldron.OnIngredientAdd
void GlobalNamespace::MagicCauldron::OnIngredientAdd(int _ingredientIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::OnIngredientAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnIngredientAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_ingredientIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _ingredientIndex);
}
// Autogenerated method: MagicCauldron.CheckIngredients
bool GlobalNamespace::MagicCauldron::CheckIngredients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CheckIngredients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIngredients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldron.UpdateCauldronColor
void GlobalNamespace::MagicCauldron::UpdateCauldronColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::UpdateCauldronColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCauldronColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: MagicCauldron.OnTriggerEnter
void GlobalNamespace::MagicCauldron::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: MagicCauldron.OnPhotonSerializeView
void GlobalNamespace::MagicCauldron::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MagicCauldron*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: MagicCauldron.OnDisable
void GlobalNamespace::MagicCauldron::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MagicCauldron/CauldronState
#include "GlobalNamespace/MagicCauldron.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MagicCauldron/CauldronState notReady
::GlobalNamespace::MagicCauldron::CauldronState GlobalNamespace::MagicCauldron::CauldronState::_get_notReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CauldronState::_get_notReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MagicCauldron::CauldronState>("", "MagicCauldron/CauldronState", "notReady"));
}
// Autogenerated static field setter
// Set static field: static public MagicCauldron/CauldronState notReady
void GlobalNamespace::MagicCauldron::CauldronState::_set_notReady(::GlobalNamespace::MagicCauldron::CauldronState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CauldronState::_set_notReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MagicCauldron/CauldronState", "notReady", value));
}
// Autogenerated static field getter
// Get static field: static public MagicCauldron/CauldronState ready
::GlobalNamespace::MagicCauldron::CauldronState GlobalNamespace::MagicCauldron::CauldronState::_get_ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CauldronState::_get_ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MagicCauldron::CauldronState>("", "MagicCauldron/CauldronState", "ready"));
}
// Autogenerated static field setter
// Set static field: static public MagicCauldron/CauldronState ready
void GlobalNamespace::MagicCauldron::CauldronState::_set_ready(::GlobalNamespace::MagicCauldron::CauldronState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CauldronState::_set_ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MagicCauldron/CauldronState", "ready", value));
}
// Autogenerated static field getter
// Get static field: static public MagicCauldron/CauldronState recipeCollecting
::GlobalNamespace::MagicCauldron::CauldronState GlobalNamespace::MagicCauldron::CauldronState::_get_recipeCollecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CauldronState::_get_recipeCollecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MagicCauldron::CauldronState>("", "MagicCauldron/CauldronState", "recipeCollecting"));
}
// Autogenerated static field setter
// Set static field: static public MagicCauldron/CauldronState recipeCollecting
void GlobalNamespace::MagicCauldron::CauldronState::_set_recipeCollecting(::GlobalNamespace::MagicCauldron::CauldronState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CauldronState::_set_recipeCollecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MagicCauldron/CauldronState", "recipeCollecting", value));
}
// Autogenerated static field getter
// Get static field: static public MagicCauldron/CauldronState recipeActivated
::GlobalNamespace::MagicCauldron::CauldronState GlobalNamespace::MagicCauldron::CauldronState::_get_recipeActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CauldronState::_get_recipeActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MagicCauldron::CauldronState>("", "MagicCauldron/CauldronState", "recipeActivated"));
}
// Autogenerated static field setter
// Set static field: static public MagicCauldron/CauldronState recipeActivated
void GlobalNamespace::MagicCauldron::CauldronState::_set_recipeActivated(::GlobalNamespace::MagicCauldron::CauldronState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CauldronState::_set_recipeActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MagicCauldron/CauldronState", "recipeActivated", value));
}
// Autogenerated static field getter
// Get static field: static public MagicCauldron/CauldronState summoned
::GlobalNamespace::MagicCauldron::CauldronState GlobalNamespace::MagicCauldron::CauldronState::_get_summoned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CauldronState::_get_summoned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MagicCauldron::CauldronState>("", "MagicCauldron/CauldronState", "summoned"));
}
// Autogenerated static field setter
// Set static field: static public MagicCauldron/CauldronState summoned
void GlobalNamespace::MagicCauldron::CauldronState::_set_summoned(::GlobalNamespace::MagicCauldron::CauldronState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CauldronState::_set_summoned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MagicCauldron/CauldronState", "summoned", value));
}
// Autogenerated static field getter
// Get static field: static public MagicCauldron/CauldronState failed
::GlobalNamespace::MagicCauldron::CauldronState GlobalNamespace::MagicCauldron::CauldronState::_get_failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CauldronState::_get_failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MagicCauldron::CauldronState>("", "MagicCauldron/CauldronState", "failed"));
}
// Autogenerated static field setter
// Set static field: static public MagicCauldron/CauldronState failed
void GlobalNamespace::MagicCauldron::CauldronState::_set_failed(::GlobalNamespace::MagicCauldron::CauldronState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CauldronState::_set_failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MagicCauldron/CauldronState", "failed", value));
}
// Autogenerated static field getter
// Get static field: static public MagicCauldron/CauldronState cooldown
::GlobalNamespace::MagicCauldron::CauldronState GlobalNamespace::MagicCauldron::CauldronState::_get_cooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CauldronState::_get_cooldown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MagicCauldron::CauldronState>("", "MagicCauldron/CauldronState", "cooldown"));
}
// Autogenerated static field setter
// Set static field: static public MagicCauldron/CauldronState cooldown
void GlobalNamespace::MagicCauldron::CauldronState::_set_cooldown(::GlobalNamespace::MagicCauldron::CauldronState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CauldronState::_set_cooldown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MagicCauldron/CauldronState", "cooldown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MagicCauldron::CauldronState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::CauldronState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MagicCauldron/IngredientArgs
#include "GlobalNamespace/MagicCauldron_IngredientArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 key
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MagicCauldron::IngredientArgs::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::IngredientArgs::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MagicCauldron/IngrediantFXContext
#include "GlobalNamespace/MagicCauldron_IngrediantFXContext.hpp"
// Including type: MagicCauldron/IngrediantFXContext/Callback
#include "GlobalNamespace/MagicCauldron_IngrediantFXContext_Callback.hpp"
// Including type: FXSystemSettings
#include "GlobalNamespace/FXSystemSettings.hpp"
// Including type: MagicCauldron/IngredientArgs
#include "GlobalNamespace/MagicCauldron_IngredientArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public FXSystemSettings playerSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FXSystemSettings*& GlobalNamespace::MagicCauldron::IngrediantFXContext::dyn_playerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::IngrediantFXContext::dyn_playerSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FXSystemSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MagicCauldron/IngrediantFXContext/Callback fxCallBack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MagicCauldron::IngrediantFXContext::Callback*& GlobalNamespace::MagicCauldron::IngrediantFXContext::dyn_fxCallBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::IngrediantFXContext::dyn_fxCallBack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fxCallBack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MagicCauldron::IngrediantFXContext::Callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MagicCauldron/IngrediantFXContext.IFXContextParems<MagicCauldron.IngredientArgs>.get_settings
::GlobalNamespace::FXSystemSettings* GlobalNamespace::MagicCauldron::IngrediantFXContext::IFXContextParems$MagicCauldron_IngredientArgs$_get_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::IngrediantFXContext::IFXContextParems<MagicCauldron.IngredientArgs>.get_settings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MagicCauldron::IngrediantFXContext*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FXSystemSettings*, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldron/IngrediantFXContext.IFXContextParems<MagicCauldron.IngredientArgs>.OnPlayFX
void GlobalNamespace::MagicCauldron::IngrediantFXContext::IFXContextParems$MagicCauldron_IngredientArgs$_OnPlayFX(::GlobalNamespace::MagicCauldron::IngredientArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::IngrediantFXContext::IFXContextParems<MagicCauldron.IngredientArgs>.OnPlayFX");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MagicCauldron::IngrediantFXContext*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MagicCauldron/IngrediantFXContext/Callback
#include "GlobalNamespace/MagicCauldron_IngrediantFXContext_Callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MagicCauldron/IngrediantFXContext/Callback.Invoke
void GlobalNamespace::MagicCauldron::IngrediantFXContext::Callback::Invoke(int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::IngrediantFXContext::Callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MagicCauldron::IngrediantFXContext::Callback*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: MagicCauldron/IngrediantFXContext/Callback.BeginInvoke
::System::IAsyncResult* GlobalNamespace::MagicCauldron::IngrediantFXContext::Callback::BeginInvoke(int key, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::IngrediantFXContext::Callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MagicCauldron::IngrediantFXContext::Callback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, key, callback, object);
}
// Autogenerated method: MagicCauldron/IngrediantFXContext/Callback.EndInvoke
void GlobalNamespace::MagicCauldron::IngrediantFXContext::Callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::IngrediantFXContext::Callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MagicCauldron::IngrediantFXContext::Callback*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MagicCauldron/<LevitationSpellCoroutine>d__45
#include "GlobalNamespace/MagicCauldron_-LevitationSpellCoroutine-d__45.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MagicCauldron <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MagicCauldron*& GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MagicCauldron**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MagicCauldron/<LevitationSpellCoroutine>d__45.System.IDisposable.Dispose
void GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldron/<LevitationSpellCoroutine>d__45.MoveNext
bool GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldron/<LevitationSpellCoroutine>d__45.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldron/<LevitationSpellCoroutine>d__45.System.Collections.IEnumerator.Reset
void GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldron/<LevitationSpellCoroutine>d__45.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MagicCauldron::$LevitationSpellCoroutine$d__45*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MagicCauldronLiquid
#include "GlobalNamespace/MagicCauldronLiquid.hpp"
// Including type: ApplyMaterialProperty
#include "GlobalNamespace/ApplyMaterialProperty.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ApplyMaterialProperty _applyMaterial
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ApplyMaterialProperty*& GlobalNamespace::MagicCauldronLiquid::dyn__applyMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::dyn__applyMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyMaterial"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ApplyMaterialProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _colorStart
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MagicCauldronLiquid::dyn__colorStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::dyn__colorStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorStart"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _colorEnd
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MagicCauldronLiquid::dyn__colorEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::dyn__colorEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorEnd"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _animating
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MagicCauldronLiquid::dyn__animating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::dyn__animating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animating"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animProgress
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldronLiquid::dyn__animProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::dyn__animProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animProgress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _animationCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::MagicCauldronLiquid::dyn__animationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::dyn__animationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _waveCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::MagicCauldronLiquid::dyn__waveCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::dyn__waveCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waveCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single animLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MagicCauldronLiquid::dyn_animLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::dyn_animLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MagicCauldronLiquid/WaveParams waveNormal
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MagicCauldronLiquid::WaveParams& GlobalNamespace::MagicCauldronLiquid::dyn_waveNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::dyn_waveNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waveNormal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MagicCauldronLiquid::WaveParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MagicCauldronLiquid/WaveParams waveAnimating
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MagicCauldronLiquid::WaveParams& GlobalNamespace::MagicCauldronLiquid::dyn_waveAnimating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::dyn_waveAnimating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waveAnimating"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MagicCauldronLiquid::WaveParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MagicCauldronLiquid.Test
void GlobalNamespace::MagicCauldronLiquid::Test() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::Test");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Test", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldronLiquid.AnimateColorFromTo
void GlobalNamespace::MagicCauldronLiquid::AnimateColorFromTo(::UnityEngine::Color a, ::UnityEngine::Color b, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::AnimateColorFromTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateColorFromTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b, length);
}
// Autogenerated method: MagicCauldronLiquid.ApplyColor
void GlobalNamespace::MagicCauldronLiquid::ApplyColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::ApplyColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: MagicCauldronLiquid.ApplyWaveParams
void GlobalNamespace::MagicCauldronLiquid::ApplyWaveParams(float amplitude, float frequency, float scale, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::ApplyWaveParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyWaveParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amplitude, frequency, scale, rotation);
}
// Autogenerated method: MagicCauldronLiquid.OnEnable
void GlobalNamespace::MagicCauldronLiquid::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldronLiquid.OnDisable
void GlobalNamespace::MagicCauldronLiquid::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MagicCauldronLiquid.Update
void GlobalNamespace::MagicCauldronLiquid::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MagicCauldronLiquid::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
