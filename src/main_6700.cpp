// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Linq.JValue/JValueDynamicProxy
#include "Newtonsoft/Json/Linq/JValue_JValueDynamicProxy.hpp"
// Including type: System.Dynamic.ConvertBinder
#include "System/Dynamic/ConvertBinder.hpp"
// Including type: System.Dynamic.BinaryOperationBinder
#include "System/Dynamic/BinaryOperationBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Linq.JValue/JValueDynamicProxy.TryConvert
bool Newtonsoft::Json::Linq::JValue::JValueDynamicProxy::TryConvert(::Newtonsoft::Json::Linq::JValue* instance, ::System::Dynamic::ConvertBinder* binder, ByRef<::Il2CppObject*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::JValueDynamicProxy::TryConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue::JValueDynamicProxy*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance, binder, byref(result));
}
// Autogenerated method: Newtonsoft.Json.Linq.JValue/JValueDynamicProxy.TryBinaryOperation
bool Newtonsoft::Json::Linq::JValue::JValueDynamicProxy::TryBinaryOperation(::Newtonsoft::Json::Linq::JValue* instance, ::System::Dynamic::BinaryOperationBinder* binder, ::Il2CppObject* arg, ByRef<::Il2CppObject*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JValue::JValueDynamicProxy::TryBinaryOperation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Linq::JValue::JValueDynamicProxy*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance, binder, arg, byref(result));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.LineInfoHandling
#include "Newtonsoft/Json/Linq/LineInfoHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.LineInfoHandling Ignore
::Newtonsoft::Json::Linq::LineInfoHandling Newtonsoft::Json::Linq::LineInfoHandling::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::LineInfoHandling::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::LineInfoHandling>("Newtonsoft.Json.Linq", "LineInfoHandling", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.LineInfoHandling Ignore
void Newtonsoft::Json::Linq::LineInfoHandling::_set_Ignore(::Newtonsoft::Json::Linq::LineInfoHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::LineInfoHandling::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "LineInfoHandling", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Linq.LineInfoHandling Load
::Newtonsoft::Json::Linq::LineInfoHandling Newtonsoft::Json::Linq::LineInfoHandling::_get_Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::LineInfoHandling::_get_Load");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Linq::LineInfoHandling>("Newtonsoft.Json.Linq", "LineInfoHandling", "Load"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Linq.LineInfoHandling Load
void Newtonsoft::Json::Linq::LineInfoHandling::_set_Load(::Newtonsoft::Json::Linq::LineInfoHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::LineInfoHandling::_set_Load");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Linq", "LineInfoHandling", "Load", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Linq::LineInfoHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::LineInfoHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.BinaryConverter
#include "Newtonsoft/Json/Converters/BinaryConverter.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject
#include "Newtonsoft/Json/Utilities/ReflectionObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String BinaryTypeName
::StringW Newtonsoft::Json::Converters::BinaryConverter::_get_BinaryTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::_get_BinaryTypeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "BinaryConverter", "BinaryTypeName"));
}
// Autogenerated static field setter
// Set static field: static private System.String BinaryTypeName
void Newtonsoft::Json::Converters::BinaryConverter::_set_BinaryTypeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::_set_BinaryTypeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "BinaryConverter", "BinaryTypeName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String BinaryToArrayName
::StringW Newtonsoft::Json::Converters::BinaryConverter::_get_BinaryToArrayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::_get_BinaryToArrayName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "BinaryConverter", "BinaryToArrayName"));
}
// Autogenerated static field setter
// Set static field: static private System.String BinaryToArrayName
void Newtonsoft::Json::Converters::BinaryConverter::_set_BinaryToArrayName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::_set_BinaryToArrayName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "BinaryConverter", "BinaryToArrayName", value));
}
// Autogenerated static field getter
// Get static field: static private Newtonsoft.Json.Utilities.ReflectionObject _reflectionObject
::Newtonsoft::Json::Utilities::ReflectionObject* Newtonsoft::Json::Converters::BinaryConverter::_get__reflectionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::_get__reflectionObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ReflectionObject*>("Newtonsoft.Json.Converters", "BinaryConverter", "_reflectionObject"));
}
// Autogenerated static field setter
// Set static field: static private Newtonsoft.Json.Utilities.ReflectionObject _reflectionObject
void Newtonsoft::Json::Converters::BinaryConverter::_set__reflectionObject(::Newtonsoft::Json::Utilities::ReflectionObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::_set__reflectionObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "BinaryConverter", "_reflectionObject", value));
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.GetByteArray
::ArrayW<uint8_t> Newtonsoft::Json::Converters::BinaryConverter::GetByteArray(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::GetByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.EnsureReflectionObject
void Newtonsoft::Json::Converters::BinaryConverter::EnsureReflectionObject(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::EnsureReflectionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "BinaryConverter", "EnsureReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.ReadByteArray
::ArrayW<uint8_t> Newtonsoft::Json::Converters::BinaryConverter::ReadByteArray(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::ReadByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.WriteJson
void Newtonsoft::Json::Converters::BinaryConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::BinaryConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.CanConvert
bool Newtonsoft::Json::Converters::BinaryConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.BsonObjectIdConverter
#include "Newtonsoft/Json/Converters/BsonObjectIdConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.BsonObjectIdConverter.WriteJson
void Newtonsoft::Json::Converters::BsonObjectIdConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BsonObjectIdConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BsonObjectIdConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::BsonObjectIdConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BsonObjectIdConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert
bool Newtonsoft::Json::Converters::BsonObjectIdConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BsonObjectIdConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.DataSetConverter
#include "Newtonsoft/Json/Converters/DataSetConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.DataSetConverter.WriteJson
void Newtonsoft::Json::Converters::DataSetConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataSetConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataSetConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::DataSetConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataSetConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataSetConverter.CanConvert
bool Newtonsoft::Json::Converters::DataSetConverter::CanConvert(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataSetConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.DataTableConverter
#include "Newtonsoft/Json/Converters/DataTableConverter.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.DataTableConverter.CreateRow
void Newtonsoft::Json::Converters::DataTableConverter::CreateRow(::Newtonsoft::Json::JsonReader* reader, ::System::Data::DataTable* dt, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataTableConverter::CreateRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "DataTableConverter", "CreateRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(dt), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, dt, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType
::System::Type* Newtonsoft::Json::Converters::DataTableConverter::GetColumnDataType(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataTableConverter::GetColumnDataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "DataTableConverter", "GetColumnDataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataTableConverter.WriteJson
void Newtonsoft::Json::Converters::DataTableConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataTableConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataTableConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::DataTableConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataTableConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DataTableConverter.CanConvert
bool Newtonsoft::Json::Converters::DataTableConverter::CanConvert(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DataTableConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.DateTimeConverterBase
#include "Newtonsoft/Json/Converters/DateTimeConverterBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert
bool Newtonsoft::Json::Converters::DateTimeConverterBase::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DateTimeConverterBase::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Union
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_Union.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/UnionCase
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_UnionCase.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/<>c__DisplayClass8_0
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_--c__DisplayClass8_0.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/<>c__DisplayClass9_0
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_--c__DisplayClass9_0.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Newtonsoft.Json.Utilities.ThreadSafeStore`2
#include "Newtonsoft/Json/Utilities/ThreadSafeStore_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String CasePropertyName
::StringW Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_CasePropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_CasePropertyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "CasePropertyName"));
}
// Autogenerated static field setter
// Set static field: static private System.String CasePropertyName
void Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_CasePropertyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_CasePropertyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "CasePropertyName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FieldsPropertyName
::StringW Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_FieldsPropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_FieldsPropertyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "FieldsPropertyName"));
}
// Autogenerated static field setter
// Set static field: static private System.String FieldsPropertyName
void Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_FieldsPropertyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_FieldsPropertyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "FieldsPropertyName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Union> UnionCache
::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union*>* Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_UnionCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_UnionCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union*>*>("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "UnionCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Union> UnionCache
void Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_UnionCache(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_UnionCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "UnionCache", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,System.Type> UnionTypeLookupCache
::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::System::Type*>* Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_UnionTypeLookupCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_get_UnionTypeLookupCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::System::Type*>*>("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "UnionTypeLookupCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,System.Type> UnionTypeLookupCache
void Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_UnionTypeLookupCache(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_set_UnionTypeLookupCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "UnionTypeLookupCache", value));
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup
::System::Type* Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CreateUnionTypeLookup(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CreateUnionTypeLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "CreateUnionTypeLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion
::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union* Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CreateUnion(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CreateUnion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", "CreateUnion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter..cctor
void Newtonsoft::Json::Converters::DiscriminatedUnionConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "DiscriminatedUnionConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson
void Newtonsoft::Json::Converters::DiscriminatedUnionConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::DiscriminatedUnionConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert
bool Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/Union
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_Union.hpp"
// Including type: Newtonsoft.Json.Utilities.FSharpFunction
#include "Newtonsoft/Json/Utilities/FSharpFunction.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/UnionCase
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_UnionCase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Newtonsoft.Json.Utilities.FSharpFunction TagReader
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::FSharpFunction*& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union::dyn_TagReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union::dyn_TagReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TagReader"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::FSharpFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<Newtonsoft.Json.Converters.DiscriminatedUnionConverter/UnionCase> Cases
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase*>*& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union::dyn_Cases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::Union::dyn_Cases");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Cases"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/UnionCase
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_UnionCase.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: Newtonsoft.Json.Utilities.FSharpFunction
#include "Newtonsoft/Json/Utilities/FSharpFunction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Tag
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Tag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Reflection.PropertyInfo[] Fields
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Reflection::PropertyInfo*>& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Fields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Fields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Fields"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Reflection::PropertyInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Newtonsoft.Json.Utilities.FSharpFunction FieldReader
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::FSharpFunction*& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_FieldReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_FieldReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FieldReader"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::FSharpFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Newtonsoft.Json.Utilities.FSharpFunction Constructor
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::FSharpFunction*& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase::dyn_Constructor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Constructor"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::FSharpFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/<>c__DisplayClass8_0
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_--c__DisplayClass8_0.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/UnionCase
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_UnionCase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 tag
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass8_0::dyn_tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass8_0::dyn_tag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/<>c__DisplayClass8_0.<WriteJson>b__0
bool Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass8_0::$WriteJson$b__0(::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass8_0::<WriteJson>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WriteJson>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/<>c__DisplayClass9_0
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_--c__DisplayClass9_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/UnionCase
#include "Newtonsoft/Json/Converters/DiscriminatedUnionConverter_UnionCase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String caseName
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::dyn_caseName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::dyn_caseName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "caseName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Newtonsoft.Json.Converters.DiscriminatedUnionConverter/UnionCase,System.Boolean> <>9__0
[[deprecated("Use field access instead!")]] ::System::Func_2<::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase*, bool>*& Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::System::Func_2<::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.DiscriminatedUnionConverter/<>c__DisplayClass9_0.<ReadJson>b__0
bool Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::$ReadJson$b__0(::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::UnionCase* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DiscriminatedUnionConverter::$$c__DisplayClass9_0::<ReadJson>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ReadJson>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.EntityKeyMemberConverter
#include "Newtonsoft/Json/Converters/EntityKeyMemberConverter.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject
#include "Newtonsoft/Json/Utilities/ReflectionObject.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String EntityKeyMemberFullTypeName
::StringW Newtonsoft::Json::Converters::EntityKeyMemberConverter::_get_EntityKeyMemberFullTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::_get_EntityKeyMemberFullTypeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "EntityKeyMemberFullTypeName"));
}
// Autogenerated static field setter
// Set static field: static private System.String EntityKeyMemberFullTypeName
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::_set_EntityKeyMemberFullTypeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::_set_EntityKeyMemberFullTypeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "EntityKeyMemberFullTypeName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String KeyPropertyName
::StringW Newtonsoft::Json::Converters::EntityKeyMemberConverter::_get_KeyPropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::_get_KeyPropertyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "KeyPropertyName"));
}
// Autogenerated static field setter
// Set static field: static private System.String KeyPropertyName
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::_set_KeyPropertyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::_set_KeyPropertyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "KeyPropertyName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String TypePropertyName
::StringW Newtonsoft::Json::Converters::EntityKeyMemberConverter::_get_TypePropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::_get_TypePropertyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "TypePropertyName"));
}
// Autogenerated static field setter
// Set static field: static private System.String TypePropertyName
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::_set_TypePropertyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::_set_TypePropertyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "TypePropertyName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ValuePropertyName
::StringW Newtonsoft::Json::Converters::EntityKeyMemberConverter::_get_ValuePropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::_get_ValuePropertyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "ValuePropertyName"));
}
// Autogenerated static field setter
// Set static field: static private System.String ValuePropertyName
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::_set_ValuePropertyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::_set_ValuePropertyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "ValuePropertyName", value));
}
// Autogenerated static field getter
// Get static field: static private Newtonsoft.Json.Utilities.ReflectionObject _reflectionObject
::Newtonsoft::Json::Utilities::ReflectionObject* Newtonsoft::Json::Converters::EntityKeyMemberConverter::_get__reflectionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::_get__reflectionObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ReflectionObject*>("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "_reflectionObject"));
}
// Autogenerated static field setter
// Set static field: static private Newtonsoft.Json.Utilities.ReflectionObject _reflectionObject
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::_set__reflectionObject(::Newtonsoft::Json::Utilities::ReflectionObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::_set__reflectionObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "_reflectionObject", value));
}
// Autogenerated method: Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadAndAssertProperty
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::ReadAndAssertProperty(::Newtonsoft::Json::JsonReader* reader, ::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::ReadAndAssertProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "ReadAndAssertProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(propertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, propertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.EntityKeyMemberConverter.EnsureReflectionObject
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::EnsureReflectionObject(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::EnsureReflectionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "EntityKeyMemberConverter", "EnsureReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson
void Newtonsoft::Json::Converters::EntityKeyMemberConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::EntityKeyMemberConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.EntityKeyMemberConverter.CanConvert
bool Newtonsoft::Json::Converters::EntityKeyMemberConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::EntityKeyMemberConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.ExpandoObjectConverter
#include "Newtonsoft/Json/Converters/ExpandoObjectConverter.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.ReadValue
::Il2CppObject* Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadValue(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.ReadList
::Il2CppObject* Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadList(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.ReadObject
::Il2CppObject* Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadObject(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.WriteJson
void Newtonsoft::Json::Converters::ExpandoObjectConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.CanConvert
bool Newtonsoft::Json::Converters::ExpandoObjectConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Converters.ExpandoObjectConverter.get_CanWrite
bool Newtonsoft::Json::Converters::ExpandoObjectConverter::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::ExpandoObjectConverter::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.IsoDateTimeConverter
#include "Newtonsoft/Json/Converters/IsoDateTimeConverter.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String DefaultDateTimeFormat
::StringW Newtonsoft::Json::Converters::IsoDateTimeConverter::_get_DefaultDateTimeFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::_get_DefaultDateTimeFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "IsoDateTimeConverter", "DefaultDateTimeFormat"));
}
// Autogenerated static field setter
// Set static field: static private System.String DefaultDateTimeFormat
void Newtonsoft::Json::Converters::IsoDateTimeConverter::_set_DefaultDateTimeFormat(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::_set_DefaultDateTimeFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "IsoDateTimeConverter", "DefaultDateTimeFormat", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.DateTimeStyles _dateTimeStyles
[[deprecated("Use field access instead!")]] ::System::Globalization::DateTimeStyles& Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__dateTimeStyles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__dateTimeStyles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateTimeStyles"))->offset;
  return *reinterpret_cast<::System::Globalization::DateTimeStyles*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _dateTimeFormat
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__dateTimeFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__dateTimeFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateTimeFormat"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo _culture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.IsoDateTimeConverter.get_DateTimeStyles
::System::Globalization::DateTimeStyles Newtonsoft::Json::Converters::IsoDateTimeConverter::get_DateTimeStyles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::get_DateTimeStyles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateTimeStyles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeStyles, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IsoDateTimeConverter.set_DateTimeStyles
void Newtonsoft::Json::Converters::IsoDateTimeConverter::set_DateTimeStyles(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::set_DateTimeStyles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DateTimeStyles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.IsoDateTimeConverter.get_DateTimeFormat
::StringW Newtonsoft::Json::Converters::IsoDateTimeConverter::get_DateTimeFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::get_DateTimeFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateTimeFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IsoDateTimeConverter.set_DateTimeFormat
void Newtonsoft::Json::Converters::IsoDateTimeConverter::set_DateTimeFormat(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::set_DateTimeFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DateTimeFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.IsoDateTimeConverter.get_Culture
::System::Globalization::CultureInfo* Newtonsoft::Json::Converters::IsoDateTimeConverter::get_Culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::get_Culture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Culture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IsoDateTimeConverter.set_Culture
void Newtonsoft::Json::Converters::IsoDateTimeConverter::set_Culture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::set_Culture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Culture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson
void Newtonsoft::Json::Converters::IsoDateTimeConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::IsoDateTimeConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.JavaScriptDateTimeConverter
#include "Newtonsoft/Json/Converters/JavaScriptDateTimeConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson
void Newtonsoft::Json::Converters::JavaScriptDateTimeConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::JavaScriptDateTimeConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::JavaScriptDateTimeConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::JavaScriptDateTimeConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.KeyValuePairConverter
#include "Newtonsoft/Json/Converters/KeyValuePairConverter.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Newtonsoft.Json.Utilities.ThreadSafeStore`2
#include "Newtonsoft/Json/Utilities/ThreadSafeStore_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject
#include "Newtonsoft/Json/Utilities/ReflectionObject.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String KeyName
::StringW Newtonsoft::Json::Converters::KeyValuePairConverter::_get_KeyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::_get_KeyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "KeyValuePairConverter", "KeyName"));
}
// Autogenerated static field setter
// Set static field: static private System.String KeyName
void Newtonsoft::Json::Converters::KeyValuePairConverter::_set_KeyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::_set_KeyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "KeyValuePairConverter", "KeyName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ValueName
::StringW Newtonsoft::Json::Converters::KeyValuePairConverter::_get_ValueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::_get_ValueName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "KeyValuePairConverter", "ValueName"));
}
// Autogenerated static field setter
// Set static field: static private System.String ValueName
void Newtonsoft::Json::Converters::KeyValuePairConverter::_set_ValueName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::_set_ValueName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "KeyValuePairConverter", "ValueName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Utilities.ReflectionObject> ReflectionObjectPerType
::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::ReflectionObject*>* Newtonsoft::Json::Converters::KeyValuePairConverter::_get_ReflectionObjectPerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::_get_ReflectionObjectPerType");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::ReflectionObject*>*>("Newtonsoft.Json.Converters", "KeyValuePairConverter", "ReflectionObjectPerType")));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Utilities.ReflectionObject> ReflectionObjectPerType
void Newtonsoft::Json::Converters::KeyValuePairConverter::_set_ReflectionObjectPerType(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::ReflectionObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::_set_ReflectionObjectPerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "KeyValuePairConverter", "ReflectionObjectPerType", value));
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.InitializeReflectionObject
::Newtonsoft::Json::Utilities::ReflectionObject* Newtonsoft::Json::Converters::KeyValuePairConverter::InitializeReflectionObject(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::InitializeReflectionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "KeyValuePairConverter", "InitializeReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::ReflectionObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter..cctor
void Newtonsoft::Json::Converters::KeyValuePairConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "KeyValuePairConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.WriteJson
void Newtonsoft::Json::Converters::KeyValuePairConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::KeyValuePairConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.CanConvert
bool Newtonsoft::Json::Converters::KeyValuePairConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.RegexConverter
#include "Newtonsoft/Json/Converters/RegexConverter.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Text.RegularExpressions.RegexOptions
#include "System/Text/RegularExpressions/RegexOptions.hpp"
// Including type: Newtonsoft.Json.Bson.BsonWriter
#include "Newtonsoft/Json/Bson/BsonWriter.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String PatternName
::StringW Newtonsoft::Json::Converters::RegexConverter::_get_PatternName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::_get_PatternName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "RegexConverter", "PatternName"));
}
// Autogenerated static field setter
// Set static field: static private System.String PatternName
void Newtonsoft::Json::Converters::RegexConverter::_set_PatternName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::_set_PatternName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "RegexConverter", "PatternName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OptionsName
::StringW Newtonsoft::Json::Converters::RegexConverter::_get_OptionsName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::_get_OptionsName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "RegexConverter", "OptionsName"));
}
// Autogenerated static field setter
// Set static field: static private System.String OptionsName
void Newtonsoft::Json::Converters::RegexConverter::_set_OptionsName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::_set_OptionsName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "RegexConverter", "OptionsName", value));
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.HasFlag
bool Newtonsoft::Json::Converters::RegexConverter::HasFlag(::System::Text::RegularExpressions::RegexOptions options, ::System::Text::RegularExpressions::RegexOptions flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::HasFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, options, flag);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.WriteBson
void Newtonsoft::Json::Converters::RegexConverter::WriteBson(::Newtonsoft::Json::Bson::BsonWriter* writer, ::System::Text::RegularExpressions::Regex* regex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::WriteBson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(regex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, regex);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.WriteJson
void Newtonsoft::Json::Converters::RegexConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::System::Text::RegularExpressions::Regex* regex, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::WriteJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, regex, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.ReadRegexString
::Il2CppObject* Newtonsoft::Json::Converters::RegexConverter::ReadRegexString(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::ReadRegexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRegexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject
::System::Text::RegularExpressions::Regex* Newtonsoft::Json::Converters::RegexConverter::ReadRegexObject(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::ReadRegexObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRegexObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Regex*, false>(this, ___internal__method, reader, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.IsRegex
bool Newtonsoft::Json::Converters::RegexConverter::IsRegex(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::IsRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.WriteJson
void Newtonsoft::Json::Converters::RegexConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::RegexConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.CanConvert
bool Newtonsoft::Json::Converters::RegexConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.StringEnumConverter
#include "Newtonsoft/Json/Converters/StringEnumConverter.hpp"
// Including type: Newtonsoft.Json.Serialization.NamingStrategy
#include "Newtonsoft/Json/Serialization/NamingStrategy.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.NamingStrategy <NamingStrategy>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::NamingStrategy*& Newtonsoft::Json::Converters::StringEnumConverter::dyn_$NamingStrategy$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::dyn_$NamingStrategy$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NamingStrategy>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::NamingStrategy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <AllowIntegerValues>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::StringEnumConverter::dyn_$AllowIntegerValues$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::dyn_$AllowIntegerValues$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AllowIntegerValues>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.get_CamelCaseText
bool Newtonsoft::Json::Converters::StringEnumConverter::get_CamelCaseText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::get_CamelCaseText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CamelCaseText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.set_CamelCaseText
void Newtonsoft::Json::Converters::StringEnumConverter::set_CamelCaseText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::set_CamelCaseText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CamelCaseText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.get_NamingStrategy
::Newtonsoft::Json::Serialization::NamingStrategy* Newtonsoft::Json::Converters::StringEnumConverter::get_NamingStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::get_NamingStrategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamingStrategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::NamingStrategy*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.set_NamingStrategy
void Newtonsoft::Json::Converters::StringEnumConverter::set_NamingStrategy(::Newtonsoft::Json::Serialization::NamingStrategy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::set_NamingStrategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NamingStrategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.get_AllowIntegerValues
bool Newtonsoft::Json::Converters::StringEnumConverter::get_AllowIntegerValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::get_AllowIntegerValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowIntegerValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.set_AllowIntegerValues
void Newtonsoft::Json::Converters::StringEnumConverter::set_AllowIntegerValues(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::set_AllowIntegerValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowIntegerValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.WriteJson
void Newtonsoft::Json::Converters::StringEnumConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::StringEnumConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.CanConvert
bool Newtonsoft::Json::Converters::StringEnumConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.UnixDateTimeConverter
#include "Newtonsoft/Json/Converters/UnixDateTimeConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.DateTime UnixEpoch
::System::DateTime Newtonsoft::Json::Converters::UnixDateTimeConverter::_get_UnixEpoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::UnixDateTimeConverter::_get_UnixEpoch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("Newtonsoft.Json.Converters", "UnixDateTimeConverter", "UnixEpoch"));
}
// Autogenerated static field setter
// Set static field: static readonly System.DateTime UnixEpoch
void Newtonsoft::Json::Converters::UnixDateTimeConverter::_set_UnixEpoch(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::UnixDateTimeConverter::_set_UnixEpoch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "UnixDateTimeConverter", "UnixEpoch", value));
}
// Autogenerated method: Newtonsoft.Json.Converters.UnixDateTimeConverter..cctor
void Newtonsoft::Json::Converters::UnixDateTimeConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::UnixDateTimeConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "UnixDateTimeConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson
void Newtonsoft::Json::Converters::UnixDateTimeConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::UnixDateTimeConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::UnixDateTimeConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::UnixDateTimeConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.VersionConverter
#include "Newtonsoft/Json/Converters/VersionConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.VersionConverter.WriteJson
void Newtonsoft::Json::Converters::VersionConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VersionConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.VersionConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::VersionConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VersionConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.VersionConverter.CanConvert
bool Newtonsoft::Json::Converters::VersionConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VersionConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlDocumentWrapper
#include "Newtonsoft/Json/Converters/XmlDocumentWrapper.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlDocument _document
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDocument*& Newtonsoft::Json::Converters::XmlDocumentWrapper::dyn__document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::dyn__document");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_document"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateComment(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateComment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDocumentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement(::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement(::StringW qualifiedName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, qualifiedName, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute(::StringW qualifiedName, ::StringW namespaceUri, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, qualifiedName, namespaceUri, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.get_DocumentElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlDocumentWrapper::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::get_DocumentElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentWrapper*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlElementWrapper
#include "Newtonsoft/Json/Converters/XmlElementWrapper.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlElement _element
[[deprecated("Use field access instead!")]] ::System::Xml::XmlElement*& Newtonsoft::Json::Converters::XmlElementWrapper::dyn__element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::dyn__element");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_element"))->offset;
  return *reinterpret_cast<::System::Xml::XmlElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode
void Newtonsoft::Json::Converters::XmlElementWrapper::SetAttributeNode(::Newtonsoft::Json::Converters::IXmlNode* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlElementWrapper*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace
::StringW Newtonsoft::Json::Converters::XmlElementWrapper::GetPrefixOfNamespace(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlElementWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlElementWrapper.get_IsEmpty
bool Newtonsoft::Json::Converters::XmlElementWrapper::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlElementWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlDeclarationWrapper
#include "Newtonsoft/Json/Converters/XmlDeclarationWrapper.hpp"
// Including type: System.Xml.XmlDeclaration
#include "System/Xml/XmlDeclaration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlDeclaration _declaration
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDeclaration*& Newtonsoft::Json::Converters::XmlDeclarationWrapper::dyn__declaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::dyn__declaration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_declaration"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDeclaration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDeclarationWrapper.get_Version
::StringW Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Version");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDeclarationWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDeclarationWrapper.get_Encoding
::StringW Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Encoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDeclarationWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDeclarationWrapper.get_Standalone
::StringW Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Standalone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDeclarationWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper
#include "Newtonsoft/Json/Converters/XmlDocumentTypeWrapper.hpp"
// Including type: System.Xml.XmlDocumentType
#include "System/Xml/XmlDocumentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlDocumentType _documentType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDocumentType*& Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::dyn__documentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::dyn__documentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_documentType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocumentType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_Name
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_System
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_System");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_Public
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Public");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_InternalSubset
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_InternalSubset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.XmlNodeWrapper
#include "Newtonsoft/Json/Converters/XmlNodeWrapper.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlNode _node
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_node"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _childNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__childNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_WrappedNode
::Il2CppObject* Newtonsoft::Json::Converters::XmlNodeWrapper::get_WrappedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_WrappedNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::XmlNodeWrapper::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XmlNodeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XmlNodeWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeWrapper::WrapNode(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::WrapNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeWrapper", "WrapNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XmlNodeWrapper::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_Attributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_HasAttributes
bool Newtonsoft::Json::Converters::XmlNodeWrapper::get_HasAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_HasAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XmlNodeWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.set_Value
void Newtonsoft::Json::Converters::XmlNodeWrapper::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::set_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XmlNodeWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XmlNodeWrapper*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlDocument
#include "Newtonsoft/Json/Converters/IXmlDocument.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateComment
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateComment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDocumentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::IXmlDocument::CreateElement(::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::IXmlDocument::CreateElement(::StringW qualifiedName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, qualifiedName, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute(::StringW qualifiedName, ::StringW namespaceUri, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, qualifiedName, namespaceUri, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.get_DocumentElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::IXmlDocument::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::get_DocumentElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocument*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlDeclaration
#include "Newtonsoft/Json/Converters/IXmlDeclaration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDeclaration.get_Version
::StringW Newtonsoft::Json::Converters::IXmlDeclaration::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDeclaration::get_Version");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDeclaration*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDeclaration.get_Encoding
::StringW Newtonsoft::Json::Converters::IXmlDeclaration::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDeclaration::get_Encoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDeclaration*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDeclaration.get_Standalone
::StringW Newtonsoft::Json::Converters::IXmlDeclaration::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDeclaration::get_Standalone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDeclaration*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlDocumentType
#include "Newtonsoft/Json/Converters/IXmlDocumentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_Name
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocumentType*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_System
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_System");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocumentType*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_Public
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_Public");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocumentType*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_InternalSubset
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_InternalSubset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlDocumentType*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode
void Newtonsoft::Json::Converters::IXmlElement::SetAttributeNode(::Newtonsoft::Json::Converters::IXmlNode* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlElement::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlElement*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace
::StringW Newtonsoft::Json::Converters::IXmlElement::GetPrefixOfNamespace(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlElement::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlElement.get_IsEmpty
bool Newtonsoft::Json::Converters::IXmlElement::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlElement::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.IXmlNode
#include "Newtonsoft/Json/Converters/IXmlNode.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::IXmlNode::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_LocalName
::StringW Newtonsoft::Json::Converters::IXmlNode::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::IXmlNode::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::IXmlNode::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_Attributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlNode::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_Value
::StringW Newtonsoft::Json::Converters::IXmlNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlNode::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::IXmlNode::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_WrappedNode
::Il2CppObject* Newtonsoft::Json::Converters::IXmlNode::get_WrappedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_WrappedNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::IXmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XDeclarationWrapper
#include "Newtonsoft/Json/Converters/XDeclarationWrapper.hpp"
// Including type: System.Xml.Linq.XDeclaration
#include "System/Xml/Linq/XDeclaration.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.Linq.XDeclaration <Declaration>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XDeclaration*& Newtonsoft::Json::Converters::XDeclarationWrapper::dyn_$Declaration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::dyn_$Declaration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Declaration>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XDeclaration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Declaration
::System::Xml::Linq::XDeclaration* Newtonsoft::Json::Converters::XDeclarationWrapper::get_Declaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Declaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Declaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XDeclaration*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Version
::StringW Newtonsoft::Json::Converters::XDeclarationWrapper::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Version");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDeclarationWrapper*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Encoding
::StringW Newtonsoft::Json::Converters::XDeclarationWrapper::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Encoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDeclarationWrapper*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Standalone
::StringW Newtonsoft::Json::Converters::XDeclarationWrapper::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Standalone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDeclarationWrapper*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::XDeclarationWrapper::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XDocumentTypeWrapper
#include "Newtonsoft/Json/Converters/XDocumentTypeWrapper.hpp"
// Including type: System.Xml.Linq.XDocumentType
#include "System/Xml/Linq/XDocumentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.Linq.XDocumentType _documentType
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XDocumentType*& Newtonsoft::Json::Converters::XDocumentTypeWrapper::dyn__documentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::dyn__documentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_documentType"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XDocumentType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_Name
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentTypeWrapper*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_System
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_System");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentTypeWrapper*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_Public
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Public");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentTypeWrapper*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_InternalSubset
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_InternalSubset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentTypeWrapper*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XDocumentWrapper
#include "Newtonsoft/Json/Converters/XDocumentWrapper.hpp"
// Including type: System.Xml.Linq.XDocument
#include "System/Xml/Linq/XDocument.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_Document
::System::Xml::Linq::XDocument* Newtonsoft::Json::Converters::XDocumentWrapper::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XDocument*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateComment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDocumentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement(::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement(::StringW qualifiedName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, qualifiedName, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute(::StringW qualifiedName, ::StringW namespaceUri, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, qualifiedName, namespaceUri, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_DocumentElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XDocumentWrapper::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_DocumentElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XDocumentWrapper*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XDocumentWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XContainerWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_HasChildNodes
bool Newtonsoft::Json::Converters::XDocumentWrapper::get_HasChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_HasChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XContainerWrapper*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XContainerWrapper*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XTextWrapper
#include "Newtonsoft/Json/Converters/XTextWrapper.hpp"
// Including type: System.Xml.Linq.XText
#include "System/Xml/Linq/XText.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XTextWrapper.get_Text
::System::Xml::Linq::XText* Newtonsoft::Json::Converters::XTextWrapper::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XTextWrapper::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XText*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XTextWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XTextWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XTextWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XTextWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XTextWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XTextWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XCommentWrapper
#include "Newtonsoft/Json/Converters/XCommentWrapper.hpp"
// Including type: System.Xml.Linq.XComment
#include "System/Xml/Linq/XComment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XCommentWrapper.get_Text
::System::Xml::Linq::XComment* Newtonsoft::Json::Converters::XCommentWrapper::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XCommentWrapper::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XComment*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XCommentWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XCommentWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XCommentWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XCommentWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XCommentWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XCommentWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XProcessingInstructionWrapper
#include "Newtonsoft/Json/Converters/XProcessingInstructionWrapper.hpp"
// Including type: System.Xml.Linq.XProcessingInstruction
#include "System/Xml/Linq/XProcessingInstruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XProcessingInstructionWrapper.get_ProcessingInstruction
::System::Xml::Linq::XProcessingInstruction* Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_ProcessingInstruction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_ProcessingInstruction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XProcessingInstruction*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XProcessingInstructionWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XProcessingInstructionWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XContainerWrapper
#include "Newtonsoft/Json/Converters/XContainerWrapper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.Linq.XContainer
#include "System/Xml/Linq/XContainer.hpp"
// Including type: System.Xml.Linq.XObject
#include "System/Xml/Linq/XObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _childNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XContainerWrapper::dyn__childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::dyn__childNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_Container
::System::Xml::Linq::XContainer* Newtonsoft::Json::Converters::XContainerWrapper::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_HasChildNodes
bool Newtonsoft::Json::Converters::XContainerWrapper::get_HasChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_HasChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XContainerWrapper*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.WrapNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XContainerWrapper::WrapNode(::System::Xml::Linq::XObject* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::WrapNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XContainerWrapper", "WrapNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XContainerWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XContainerWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XContainerWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.XObjectWrapper
#include "Newtonsoft/Json/Converters/XObjectWrapper.hpp"
// Including type: System.Xml.Linq.XObject
#include "System/Xml/Linq/XObject.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.Linq.XObject _xmlObject
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XObject*& Newtonsoft::Json::Converters::XObjectWrapper::dyn__xmlObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::dyn__xmlObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmlObject"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_WrappedNode
::Il2CppObject* Newtonsoft::Json::Converters::XObjectWrapper::get_WrappedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_WrappedNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::XObjectWrapper::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XObjectWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XObjectWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XObjectWrapper::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_Attributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XObjectWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XObjectWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XObjectWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XObjectWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XAttributeWrapper
#include "Newtonsoft/Json/Converters/XAttributeWrapper.hpp"
// Including type: System.Xml.Linq.XAttribute
#include "System/Xml/Linq/XAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_Attribute
::System::Xml::Linq::XAttribute* Newtonsoft::Json::Converters::XAttributeWrapper::get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_Attribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XAttributeWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XAttributeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XAttributeWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XAttributeWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XElementWrapper
#include "Newtonsoft/Json/Converters/XElementWrapper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.Linq.XElement
#include "System/Xml/Linq/XElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XElementWrapper::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_Element
::System::Xml::Linq::XElement* Newtonsoft::Json::Converters::XElementWrapper::get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_Element");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Element", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode
void Newtonsoft::Json::Converters::XElementWrapper::SetAttributeNode(::Newtonsoft::Json::Converters::IXmlNode* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XElementWrapper*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.HasImplicitNamespaceAttribute
bool Newtonsoft::Json::Converters::XElementWrapper::HasImplicitNamespaceAttribute(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::HasImplicitNamespaceAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasImplicitNamespaceAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace
::StringW Newtonsoft::Json::Converters::XElementWrapper::GetPrefixOfNamespace(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XElementWrapper*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_IsEmpty
bool Newtonsoft::Json::Converters::XElementWrapper::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XElementWrapper*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XElementWrapper::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_Attributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XElementWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XContainerWrapper*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XElementWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XElementWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XElementWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Converters::XObjectWrapper*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.XmlNodeConverter
#include "Newtonsoft/Json/Converters/XmlNodeConverter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlNode
#include "Newtonsoft/Json/Converters/IXmlNode.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlDocument
#include "Newtonsoft/Json/Converters/IXmlDocument.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> EmptyChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XmlNodeConverter::_get_EmptyChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_get_EmptyChildNodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*>("Newtonsoft.Json.Converters", "XmlNodeConverter", "EmptyChildNodes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> EmptyChildNodes
void Newtonsoft::Json::Converters::XmlNodeConverter::_set_EmptyChildNodes(::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_set_EmptyChildNodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "XmlNodeConverter", "EmptyChildNodes", value));
}
// Autogenerated static field getter
// Get static field: static private System.String TextName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::_get_TextName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_get_TextName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "XmlNodeConverter", "TextName"));
}
// Autogenerated static field setter
// Set static field: static private System.String TextName
void Newtonsoft::Json::Converters::XmlNodeConverter::_set_TextName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_set_TextName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "XmlNodeConverter", "TextName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String CommentName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::_get_CommentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_get_CommentName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "XmlNodeConverter", "CommentName"));
}
// Autogenerated static field setter
// Set static field: static private System.String CommentName
void Newtonsoft::Json::Converters::XmlNodeConverter::_set_CommentName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_set_CommentName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "XmlNodeConverter", "CommentName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String CDataName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::_get_CDataName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_get_CDataName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "XmlNodeConverter", "CDataName"));
}
// Autogenerated static field setter
// Set static field: static private System.String CDataName
void Newtonsoft::Json::Converters::XmlNodeConverter::_set_CDataName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_set_CDataName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "XmlNodeConverter", "CDataName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String WhitespaceName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::_get_WhitespaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_get_WhitespaceName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "XmlNodeConverter", "WhitespaceName"));
}
// Autogenerated static field setter
// Set static field: static private System.String WhitespaceName
void Newtonsoft::Json::Converters::XmlNodeConverter::_set_WhitespaceName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_set_WhitespaceName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "XmlNodeConverter", "WhitespaceName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String SignificantWhitespaceName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::_get_SignificantWhitespaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_get_SignificantWhitespaceName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "XmlNodeConverter", "SignificantWhitespaceName"));
}
// Autogenerated static field setter
// Set static field: static private System.String SignificantWhitespaceName
void Newtonsoft::Json::Converters::XmlNodeConverter::_set_SignificantWhitespaceName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_set_SignificantWhitespaceName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "XmlNodeConverter", "SignificantWhitespaceName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String DeclarationName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::_get_DeclarationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_get_DeclarationName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "XmlNodeConverter", "DeclarationName"));
}
// Autogenerated static field setter
// Set static field: static private System.String DeclarationName
void Newtonsoft::Json::Converters::XmlNodeConverter::_set_DeclarationName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_set_DeclarationName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "XmlNodeConverter", "DeclarationName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String JsonNamespaceUri
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::_get_JsonNamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_get_JsonNamespaceUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json.Converters", "XmlNodeConverter", "JsonNamespaceUri"));
}
// Autogenerated static field setter
// Set static field: static private System.String JsonNamespaceUri
void Newtonsoft::Json::Converters::XmlNodeConverter::_set_JsonNamespaceUri(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::_set_JsonNamespaceUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "XmlNodeConverter", "JsonNamespaceUri", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <DeserializeRootElementName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$DeserializeRootElementName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$DeserializeRootElementName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DeserializeRootElementName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <WriteArrayAttribute>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$WriteArrayAttribute$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$WriteArrayAttribute$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WriteArrayAttribute>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <OmitRootObject>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$OmitRootObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$OmitRootObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OmitRootObject>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EncodeSpecialCharacters>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$EncodeSpecialCharacters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$EncodeSpecialCharacters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EncodeSpecialCharacters>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_DeserializeRootElementName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::get_DeserializeRootElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_DeserializeRootElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeserializeRootElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.set_DeserializeRootElementName
void Newtonsoft::Json::Converters::XmlNodeConverter::set_DeserializeRootElementName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::set_DeserializeRootElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DeserializeRootElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_WriteArrayAttribute
bool Newtonsoft::Json::Converters::XmlNodeConverter::get_WriteArrayAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_WriteArrayAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteArrayAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.set_WriteArrayAttribute
void Newtonsoft::Json::Converters::XmlNodeConverter::set_WriteArrayAttribute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::set_WriteArrayAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WriteArrayAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_OmitRootObject
bool Newtonsoft::Json::Converters::XmlNodeConverter::get_OmitRootObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_OmitRootObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OmitRootObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.set_OmitRootObject
void Newtonsoft::Json::Converters::XmlNodeConverter::set_OmitRootObject(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::set_OmitRootObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OmitRootObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_EncodeSpecialCharacters
bool Newtonsoft::Json::Converters::XmlNodeConverter::get_EncodeSpecialCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_EncodeSpecialCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncodeSpecialCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.set_EncodeSpecialCharacters
void Newtonsoft::Json::Converters::XmlNodeConverter::set_EncodeSpecialCharacters(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::set_EncodeSpecialCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EncodeSpecialCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeConverter::WrapXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WrapXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WrapXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces
void Newtonsoft::Json::Converters::XmlNodeConverter::PushParentNamespaces(::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::PushParentNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushParentNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::ResolveFullName(::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ResolveFullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveFullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::GetPropertyName(::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::GetPropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsArray
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsArray(::Newtonsoft::Json::Converters::IXmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes
void Newtonsoft::Json::Converters::XmlNodeConverter::SerializeGroupedNodes(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::SerializeGroupedNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeGroupedNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, node, manager, writePropertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WriteGroupedNodes
void Newtonsoft::Json::Converters::XmlNodeConverter::WriteGroupedNodes(::Newtonsoft::Json::JsonWriter* writer, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName, ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* groupedNodes, ::StringW elementNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WriteGroupedNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteGroupedNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName), ::il2cpp_utils::ExtractType(groupedNodes), ::il2cpp_utils::ExtractType(elementNames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, manager, writePropertyName, groupedNodes, elementNames);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WriteGroupedNodes
void Newtonsoft::Json::Converters::XmlNodeConverter::WriteGroupedNodes(::Newtonsoft::Json::JsonWriter* writer, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName, ::Newtonsoft::Json::Converters::IXmlNode* node, ::StringW elementNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WriteGroupedNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteGroupedNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(elementNames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, manager, writePropertyName, node, elementNames);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode
void Newtonsoft::Json::Converters::XmlNodeConverter::SerializeNode(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::SerializeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, node, manager, writePropertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName
bool Newtonsoft::Json::Converters::XmlNodeConverter::AllSameName(::Newtonsoft::Json::Converters::IXmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::AllSameName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", "AllSameName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue
void Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeValue(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::System::Xml::XmlNamespaceManager* manager, ::StringW propertyName, ::Newtonsoft::Json::Converters::IXmlNode* currentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(currentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, manager, propertyName, currentNode);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement
void Newtonsoft::Json::Converters::XmlNodeConverter::ReadElement(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW propertyName, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode, propertyName, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement
void Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW elementName, ::System::Xml::XmlNamespaceManager* manager, ::StringW elementPrefix, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributeNameValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(elementName), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(elementPrefix), ::il2cpp_utils::ExtractType(attributeNameValues)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode, elementName, manager, elementPrefix, attributeNameValues);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute
void Newtonsoft::Json::Converters::XmlNodeConverter::AddAttribute(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW propertyName, ::StringW attributeName, ::System::Xml::XmlNamespaceManager* manager, ::StringW attributePrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(attributeName), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(attributePrefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, document, currentNode, propertyName, attributeName, manager, attributePrefix);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::ConvertTokenToXmlValue(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ConvertTokenToXmlValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", "ConvertTokenToXmlValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements
void Newtonsoft::Json::Converters::XmlNodeConverter::ReadArrayElements(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::StringW propertyName, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadArrayElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadArrayElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, propertyName, currentNode, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute
void Newtonsoft::Json::Converters::XmlNodeConverter::AddJsonArrayAttribute(::Newtonsoft::Json::Converters::IXmlElement* element, ::Newtonsoft::Json::Converters::IXmlDocument* document) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::AddJsonArrayAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddJsonArrayAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(document)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element, document);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ShouldReadInto
bool Newtonsoft::Json::Converters::XmlNodeConverter::ShouldReadInto(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ShouldReadInto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldReadInto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Newtonsoft::Json::Converters::XmlNodeConverter::ReadAttributeElements(::Newtonsoft::Json::JsonReader* reader, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadAttributeElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAttributeElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method, reader, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction
void Newtonsoft::Json::Converters::XmlNodeConverter::CreateInstruction(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateInstruction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(propertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode, propertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType
void Newtonsoft::Json::Converters::XmlNodeConverter::CreateDocumentType(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateDocumentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement(::StringW elementName, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::StringW elementPrefix, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(elementPrefix), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName, document, elementPrefix, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode
void Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeNode(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::System::Xml::XmlNamespaceManager* manager, ::Newtonsoft::Json::Converters::IXmlNode* currentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(currentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, manager, currentNode);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsNamespaceAttribute(::StringW attributeName, ByRef<::StringW> prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsNamespaceAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNamespaceAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeName), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeName, byref(prefix));
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes
bool Newtonsoft::Json::Converters::XmlNodeConverter::ValueAttributes(::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ValueAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsXObject
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsXObject(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsXObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsXObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsXmlNode
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsXmlNode(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsXmlNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsXmlNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter..cctor
void Newtonsoft::Json::Converters::XmlNodeConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson
void Newtonsoft::Json::Converters::XmlNodeConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::XmlNodeConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert
bool Newtonsoft::Json::Converters::XmlNodeConverter::CanConvert(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonObjectId
#include "Newtonsoft/Json/Bson/BsonObjectId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] <Value>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Newtonsoft::Json::Bson::BsonObjectId::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObjectId::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObjectId.get_Value
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonObjectId::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObjectId::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonToken
#include "Newtonsoft/Json/Bson/BsonToken.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken <Parent>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonToken::dyn_$Parent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonToken::dyn_$Parent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parent>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonToken.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonToken::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonToken::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Bson::BsonToken*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonToken.set_Parent
void Newtonsoft::Json::Bson::BsonToken::set_Parent(::Newtonsoft::Json::Bson::BsonToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonToken::set_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonObject
#include "Newtonsoft/Json/Bson/BsonObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.Bson.BsonProperty
#include "Newtonsoft/Json/Bson/BsonProperty.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Bson.BsonProperty> _children
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonProperty*>*& Newtonsoft::Json::Bson::BsonObject::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonProperty*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObject.Add
void Newtonsoft::Json::Bson::BsonObject::Add(::StringW name, ::Newtonsoft::Json::Bson::BsonToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, token);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObject.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonObject::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Bson::BsonToken*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonArray
#include "Newtonsoft/Json/Bson/BsonArray.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Bson.BsonToken> _children
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonToken*>*& Newtonsoft::Json::Bson::BsonArray::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonToken*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonArray.Add
void Newtonsoft::Json::Bson::BsonArray::Add(::Newtonsoft::Json::Bson::BsonToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonArray.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonArray::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Bson::BsonToken*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Bson.BsonValue
#include "Newtonsoft/Json/Bson/BsonValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Bson::BsonValue::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonValue::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Bson.BsonType _type
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonType& Newtonsoft::Json::Bson::BsonValue::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonValue::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonValue.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonValue::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonValue::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Bson::BsonToken*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Bson.BsonString
#include "Newtonsoft/Json/Bson/BsonString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <IncludeLength>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Bson::BsonString::dyn_$IncludeLength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonString::dyn_$IncludeLength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IncludeLength>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonRegex
#include "Newtonsoft/Json/Bson/BsonRegex.hpp"
// Including type: Newtonsoft.Json.Bson.BsonString
#include "Newtonsoft/Json/Bson/BsonString.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonString <Pattern>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonString*& Newtonsoft::Json::Bson::BsonRegex::dyn_$Pattern$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::dyn_$Pattern$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Pattern>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonString <Options>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonString*& Newtonsoft::Json::Bson::BsonRegex::dyn_$Options$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::dyn_$Options$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Options>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonRegex.set_Pattern
void Newtonsoft::Json::Bson::BsonRegex::set_Pattern(::Newtonsoft::Json::Bson::BsonString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::set_Pattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonRegex.set_Options
void Newtonsoft::Json::Bson::BsonRegex::set_Options(::Newtonsoft::Json::Bson::BsonString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::set_Options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonRegex.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonRegex::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::Bson::BsonToken*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonProperty
#include "Newtonsoft/Json/Bson/BsonProperty.hpp"
// Including type: Newtonsoft.Json.Bson.BsonString
#include "Newtonsoft/Json/Bson/BsonString.hpp"
// Including type: Newtonsoft.Json.Bson.BsonToken
#include "Newtonsoft/Json/Bson/BsonToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonString <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonString*& Newtonsoft::Json::Bson::BsonProperty::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken <Value>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonProperty::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonProperty.set_Name
void Newtonsoft::Json::Bson::BsonProperty::set_Name(::Newtonsoft::Json::Bson::BsonString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonProperty.set_Value
void Newtonsoft::Json::Bson::BsonProperty::set_Value(::Newtonsoft::Json::Bson::BsonToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Number
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Number"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Number
void Newtonsoft::Json::Bson::BsonType::_set_Number(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType String
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "String"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType String
void Newtonsoft::Json::Bson::BsonType::_set_String(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Object
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Object
void Newtonsoft::Json::Bson::BsonType::_set_Object(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Array
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Array
void Newtonsoft::Json::Bson::BsonType::_set_Array(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Binary
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Binary
void Newtonsoft::Json::Bson::BsonType::_set_Binary(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Undefined
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Undefined
void Newtonsoft::Json::Bson::BsonType::_set_Undefined(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Oid
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Oid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Oid"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Oid
void Newtonsoft::Json::Bson::BsonType::_set_Oid(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Oid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Oid", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Boolean
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Boolean
void Newtonsoft::Json::Bson::BsonType::_set_Boolean(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Date
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Date"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Date
void Newtonsoft::Json::Bson::BsonType::_set_Date(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Null
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Null"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Null
void Newtonsoft::Json::Bson::BsonType::_set_Null(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Regex
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Regex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Regex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Regex"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Regex
void Newtonsoft::Json::Bson::BsonType::_set_Regex(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Regex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Regex", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Reference
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Reference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Reference"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Reference
void Newtonsoft::Json::Bson::BsonType::_set_Reference(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Reference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Reference", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Code
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Code");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Code"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Code
void Newtonsoft::Json::Bson::BsonType::_set_Code(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Code");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Code", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Symbol
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Symbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Symbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Symbol"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Symbol
void Newtonsoft::Json::Bson::BsonType::_set_Symbol(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Symbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Symbol", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType CodeWScope
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_CodeWScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_CodeWScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "CodeWScope"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType CodeWScope
void Newtonsoft::Json::Bson::BsonType::_set_CodeWScope(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_CodeWScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "CodeWScope", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Integer
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Integer
void Newtonsoft::Json::Bson::BsonType::_set_Integer(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType TimeStamp
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_TimeStamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_TimeStamp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "TimeStamp"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType TimeStamp
void Newtonsoft::Json::Bson::BsonType::_set_TimeStamp(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_TimeStamp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "TimeStamp", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Long
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Long"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Long
void Newtonsoft::Json::Bson::BsonType::_set_Long(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Long", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType MinKey
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_MinKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_MinKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "MinKey"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType MinKey
void Newtonsoft::Json::Bson::BsonType::_set_MinKey(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_MinKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "MinKey", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType MaxKey
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_MaxKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_MaxKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "MaxKey"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType MaxKey
void Newtonsoft::Json::Bson::BsonType::_set_MaxKey(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_MaxKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "MaxKey", value));
}
// Autogenerated instance field getter
// Get instance field: public System.SByte value__
[[deprecated("Use field access instead!")]] int8_t& Newtonsoft::Json::Bson::BsonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Bson.BsonWriter
#include "Newtonsoft/Json/Bson/BsonWriter.hpp"
// Including type: Newtonsoft.Json.Bson.BsonToken
#include "Newtonsoft/Json/Bson/BsonToken.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken _root
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonWriter::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken _parent
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonWriter::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _propertyName
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Bson::BsonWriter::dyn__propertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::dyn__propertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.AddValue
void Newtonsoft::Json::Bson::BsonWriter::AddValue(::Il2CppObject* value, ::Newtonsoft::Json::Bson::BsonType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, type);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.AddToken
void Newtonsoft::Json::Bson::BsonWriter::AddToken(::Newtonsoft::Json::Bson::BsonToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::AddToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.WriteObjectId
void Newtonsoft::Json::Bson::BsonWriter::WriteObjectId(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::WriteObjectId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteObjectId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.WriteRegex
void Newtonsoft::Json::Bson::BsonWriter::WriteRegex(::StringW pattern, ::StringW options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::WriteRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pattern, options);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: InspectorNoteAttribute
#include "GlobalNamespace/InspectorNoteAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String header
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::InspectorNoteAttribute::dyn_header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InspectorNoteAttribute::dyn_header");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "header"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String message
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::InspectorNoteAttribute::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InspectorNoteAttribute::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: InspectorCommentAttribute
#include "GlobalNamespace/InspectorCommentAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String message
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::InspectorCommentAttribute::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InspectorCommentAttribute::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.TestScript
#include "OVR/TestScript.hpp"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef testSound1
[[deprecated("Use field access instead!")]] ::OVR::SoundFXRef*& OVR::TestScript::dyn_testSound1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::dyn_testSound1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testSound1"))->offset;
  return *reinterpret_cast<::OVR::SoundFXRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef testSound2
[[deprecated("Use field access instead!")]] ::OVR::SoundFXRef*& OVR::TestScript::dyn_testSound2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::dyn_testSound2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testSound2"))->offset;
  return *reinterpret_cast<::OVR::SoundFXRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.TestScript.Start
void OVR::TestScript::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.TestScript.Update
void OVR::TestScript::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.AmbienceEmitter
#include "OVR/AmbienceEmitter.hpp"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef[] ambientSounds
[[deprecated("Use field access instead!")]] ::ArrayW<::OVR::SoundFXRef*>& OVR::AmbienceEmitter::dyn_ambientSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_ambientSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientSounds"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundFXRef*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoActivate
[[deprecated("Use field access instead!")]] bool& OVR::AmbienceEmitter::dyn_autoActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_autoActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoActivate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoRetrigger
[[deprecated("Use field access instead!")]] bool& OVR::AmbienceEmitter::dyn_autoRetrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_autoRetrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoRetrigger"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 randomRetriggerDelaySecs
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& OVR::AmbienceEmitter::dyn_randomRetriggerDelaySecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_randomRetriggerDelaySecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomRetriggerDelaySecs"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] playPositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& OVR::AmbienceEmitter::dyn_playPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_playPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean activated
[[deprecated("Use field access instead!")]] bool& OVR::AmbienceEmitter::dyn_activated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_activated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 playingIdx
[[deprecated("Use field access instead!")]] int& OVR::AmbienceEmitter::dyn_playingIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_playingIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextPlayTime
[[deprecated("Use field access instead!")]] float& OVR::AmbienceEmitter::dyn_nextPlayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_nextPlayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextPlayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single fadeTime
[[deprecated("Use field access instead!")]] float& OVR::AmbienceEmitter::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastPosIdx
[[deprecated("Use field access instead!")]] int& OVR::AmbienceEmitter::dyn_lastPosIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_lastPosIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AmbienceEmitter.Awake
void OVR::AmbienceEmitter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.Update
void OVR::AmbienceEmitter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.OnTriggerEnter
void OVR::AmbienceEmitter::OnTriggerEnter(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: OVR.AmbienceEmitter.Play
void OVR::AmbienceEmitter::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.EnableEmitter
void OVR::AmbienceEmitter::EnableEmitter(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::EnableEmitter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableEmitter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.PreloadSounds
#include "OVR/PreloadSounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds Default
::OVR::PreloadSounds OVR::PreloadSounds::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds Default
void OVR::PreloadSounds::_set_Default(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds Preload
::OVR::PreloadSounds OVR::PreloadSounds::_get_Preload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_Preload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "Preload"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds Preload
void OVR::PreloadSounds::_set_Preload(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_Preload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "Preload", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds ManualPreload
::OVR::PreloadSounds OVR::PreloadSounds::_get_ManualPreload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_ManualPreload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "ManualPreload"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds ManualPreload
void OVR::PreloadSounds::_set_ManualPreload(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_ManualPreload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "ManualPreload", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::PreloadSounds::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.Fade
#include "OVR/Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.Fade In
::OVR::Fade OVR::Fade::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::Fade>("OVR", "Fade", "In"));
}
// Autogenerated static field setter
// Set static field: static public OVR.Fade In
void OVR::Fade::_set_In(::OVR::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "Fade", "In", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.Fade Out
::OVR::Fade OVR::Fade::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::Fade>("OVR", "Fade", "Out"));
}
// Autogenerated static field setter
// Set static field: static public OVR.Fade Out
void OVR::Fade::_set_Out(::OVR::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "Fade", "Out", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::Fade::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& OVR::SoundGroup::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFX[] soundList
[[deprecated("Use field access instead!")]] ::ArrayW<::OVR::SoundFX*>& OVR::SoundGroup::dyn_soundList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_soundList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundList"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundFX*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup mixerGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::SoundGroup::dyn_mixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_mixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxPlayingSounds
[[deprecated("Use field access instead!")]] int& OVR::SoundGroup::dyn_maxPlayingSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_maxPlayingSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPlayingSounds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.PreloadSounds preloadAudio
[[deprecated("Use field access instead!")]] ::OVR::PreloadSounds& OVR::SoundGroup::dyn_preloadAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_preloadAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preloadAudio"))->offset;
  return *reinterpret_cast<::OVR::PreloadSounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumeOverride
[[deprecated("Use field access instead!")]] float& OVR::SoundGroup::dyn_volumeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_volumeOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeOverride"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playingSoundCount
[[deprecated("Use field access instead!")]] int& OVR::SoundGroup::dyn_playingSoundCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_playingSoundCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingSoundCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundGroup.IncrementPlayCount
void OVR::SoundGroup::IncrementPlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::IncrementPlayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPlayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundGroup.DecrementPlayCount
void OVR::SoundGroup::DecrementPlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::DecrementPlayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecrementPlayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundGroup.CanPlaySound
bool OVR::SoundGroup::CanPlaySound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::CanPlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanPlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.AudioManager
#include "OVR/AudioManager.hpp"
// Including type: OVR.AudioManager/Fade
#include "OVR/AudioManager_Fade.hpp"
// Including type: OVR.AudioManager/<>c
#include "OVR/AudioManager_--c.hpp"
// Including type: OVR.AudioManager/<>c__DisplayClass77_0
#include "OVR/AudioManager_--c__DisplayClass77_0.hpp"
// Including type: UnityEngine.Audio.AudioMixer
#include "UnityEngine/Audio/AudioMixer.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
// Including type: FastList`1
#include "GlobalNamespace/FastList_1.hpp"
// Including type: OVR.MixerSnapshot
#include "OVR/MixerSnapshot.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: OVR.EmitterChannel
#include "OVR/EmitterChannel.hpp"
// Including type: OVR.SoundPriority
#include "OVR/SoundPriority.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVR.AudioManager theAudioManager
::OVR::AudioManager* OVR::AudioManager::_get_theAudioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_theAudioManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager*>("OVR", "AudioManager", "theAudioManager"));
}
// Autogenerated static field setter
// Set static field: static private OVR.AudioManager theAudioManager
void OVR::AudioManager::_set_theAudioManager(::OVR::AudioManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_theAudioManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "theAudioManager", value));
}
// Autogenerated static field getter
// Get static field: static private FastList`1<System.String> names
::GlobalNamespace::FastList_1<::StringW>* OVR::AudioManager::_get_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_names");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FastList_1<::StringW>*>("OVR", "AudioManager", "names"));
}
// Autogenerated static field setter
// Set static field: static private FastList`1<System.String> names
void OVR::AudioManager::_set_names(::GlobalNamespace::FastList_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_names");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "names", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] defaultSound
::ArrayW<::StringW> OVR::AudioManager::_get_defaultSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_defaultSound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("OVR", "AudioManager", "defaultSound"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] defaultSound
void OVR::AudioManager::_set_defaultSound(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_defaultSound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "defaultSound", value));
}
// Autogenerated static field getter
// Get static field: static private OVR.SoundFX nullSound
::OVR::SoundFX* OVR::AudioManager::_get_nullSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_nullSound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFX*>("OVR", "AudioManager", "nullSound"));
}
// Autogenerated static field setter
// Set static field: static private OVR.SoundFX nullSound
void OVR::AudioManager::_set_nullSound(::OVR::SoundFX* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_nullSound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "nullSound", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean hideWarnings
bool OVR::AudioManager::_get_hideWarnings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_hideWarnings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "hideWarnings"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean hideWarnings
void OVR::AudioManager::_set_hideWarnings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_hideWarnings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "hideWarnings", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.GameObject soundEmitterParent
::UnityEngine::GameObject* OVR::AudioManager::_get_soundEmitterParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_soundEmitterParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GameObject*>("OVR", "AudioManager", "soundEmitterParent"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.GameObject soundEmitterParent
void OVR::AudioManager::_set_soundEmitterParent(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_soundEmitterParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "soundEmitterParent", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Transform staticListenerPosition
::UnityEngine::Transform* OVR::AudioManager::_get_staticListenerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_staticListenerPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Transform*>("OVR", "AudioManager", "staticListenerPosition"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Transform staticListenerPosition
void OVR::AudioManager::_set_staticListenerPosition(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_staticListenerPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "staticListenerPosition", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean showPlayingEmitterCount
bool OVR::AudioManager::_get_showPlayingEmitterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_showPlayingEmitterCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "showPlayingEmitterCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean showPlayingEmitterCount
void OVR::AudioManager::_set_showPlayingEmitterCount(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_showPlayingEmitterCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "showPlayingEmitterCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean forceShowEmitterCount
bool OVR::AudioManager::_get_forceShowEmitterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_forceShowEmitterCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "forceShowEmitterCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean forceShowEmitterCount
void OVR::AudioManager::_set_forceShowEmitterCount(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_forceShowEmitterCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "forceShowEmitterCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean soundEnabled
bool OVR::AudioManager::_get_soundEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_soundEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "soundEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean soundEnabled
void OVR::AudioManager::_set_soundEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_soundEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "soundEnabled", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.AnimationCurve defaultReverbZoneMix
::UnityEngine::AnimationCurve* OVR::AudioManager::_get_defaultReverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_defaultReverbZoneMix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationCurve*>("OVR", "AudioManager", "defaultReverbZoneMix"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.AnimationCurve defaultReverbZoneMix
void OVR::AudioManager::_set_defaultReverbZoneMix(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_defaultReverbZoneMix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "defaultReverbZoneMix", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean makePersistent
[[deprecated("Use field access instead!")]] bool& OVR::AudioManager::dyn_makePersistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_makePersistent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makePersistent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatializedAudio
[[deprecated("Use field access instead!")]] bool& OVR::AudioManager::dyn_enableSpatializedAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_enableSpatializedAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatializedAudio"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatializedFastOverride
[[deprecated("Use field access instead!")]] bool& OVR::AudioManager::dyn_enableSpatializedFastOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_enableSpatializedFastOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatializedFastOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixer audioMixer
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixer*& OVR::AudioManager::dyn_audioMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMixer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMixer"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup defaultMixerGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_defaultMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_defaultMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup reservedMixerGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_reservedMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_reservedMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reservedMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup voiceChatMixerGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_voiceChatMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_voiceChatMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceChatMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean verboseLogging
[[deprecated("Use field access instead!")]] bool& OVR::AudioManager::dyn_verboseLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_verboseLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verboseLogging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxSoundEmitters
[[deprecated("Use field access instead!")]] int& OVR::AudioManager::dyn_maxSoundEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_maxSoundEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSoundEmitters"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumeSoundFX
[[deprecated("Use field access instead!")]] float& OVR::AudioManager::dyn_volumeSoundFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_volumeSoundFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeSoundFX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single soundFxFadeSecs
[[deprecated("Use field access instead!")]] float& OVR::AudioManager::dyn_soundFxFadeSecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundFxFadeSecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFxFadeSecs"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single audioMinFallOffDistance
[[deprecated("Use field access instead!")]] float& OVR::AudioManager::dyn_audioMinFallOffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMinFallOffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMinFallOffDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single audioMaxFallOffDistance
[[deprecated("Use field access instead!")]] float& OVR::AudioManager::dyn_audioMaxFallOffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMaxFallOffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMaxFallOffDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundGroup[] soundGroupings
[[deprecated("Use field access instead!")]] ::ArrayW<::OVR::SoundGroup*>& OVR::AudioManager::dyn_soundGroupings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundGroupings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundGroupings"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,OVR.SoundFX> soundFXCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::OVR::SoundFX*>*& OVR::AudioManager::dyn_soundFXCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundFXCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::OVR::SoundFX*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single audioMaxFallOffDistanceSqr
[[deprecated("Use field access instead!")]] float& OVR::AudioManager::dyn_audioMaxFallOffDistanceSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMaxFallOffDistanceSqr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMaxFallOffDistanceSqr"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundEmitter[] soundEmitters
[[deprecated("Use field access instead!")]] ::ArrayW<::OVR::SoundEmitter*>& OVR::AudioManager::dyn_soundEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundEmitters"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundEmitter*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FastList`1<OVR.SoundEmitter> playingEmitters
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>*& OVR::AudioManager::dyn_playingEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_playingEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingEmitters"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FastList`1<OVR.SoundEmitter> nextFreeEmitters
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>*& OVR::AudioManager::dyn_nextFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_nextFreeEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextFreeEmitters"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.MixerSnapshot currentSnapshot
[[deprecated("Use field access instead!")]] ::OVR::MixerSnapshot*& OVR::AudioManager::dyn_currentSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_currentSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSnapshot"))->offset;
  return *reinterpret_cast<::OVR::MixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AudioManager.get_enableSpatialization
bool OVR::AudioManager::get_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_enableSpatialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_enableSpatialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_Instance
::OVR::AudioManager* OVR::AudioManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::AudioManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_NearFallOff
float OVR::AudioManager::get_NearFallOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_NearFallOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_NearFallOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_FarFallOff
float OVR::AudioManager::get_FarFallOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_FarFallOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_FarFallOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_EmitterGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_EmitterGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_EmitterGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_EmitterGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_ReservedGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_ReservedGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_ReservedGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_ReservedGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_VoipGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_VoipGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_VoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_VoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Awake
void OVR::AudioManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.OnDestroy
void OVR::AudioManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Init
void OVR::AudioManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Update
void OVR::AudioManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.RebuildSoundFXCache
void OVR::AudioManager::RebuildSoundFXCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::RebuildSoundFXCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildSoundFXCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.FindSoundFX
::OVR::SoundFX* OVR::AudioManager::FindSoundFX(::StringW name, bool rebuildCache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindSoundFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindSoundFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(rebuildCache)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundFX*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, rebuildCache);
}
// Autogenerated method: OVR.AudioManager.FindAudioManager
bool OVR::AudioManager::FindAudioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindAudioManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindAudioManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.GetGameObject
::UnityEngine::GameObject* OVR::AudioManager::GetGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.NameMinusGroup
::StringW OVR::AudioManager::NameMinusGroup(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::NameMinusGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "NameMinusGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: OVR.AudioManager.GetSoundFXNames
::ArrayW<::StringW> OVR::AudioManager::GetSoundFXNames(::StringW currentValue, ByRef<int> currentIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetSoundFXNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetSoundFXNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentValue, byref(currentIdx));
}
// Autogenerated method: OVR.AudioManager.get_SoundEnabled
bool OVR::AudioManager::get_SoundEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_SoundEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_SoundEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.CalculateMaxEmittersSize
int OVR::AudioManager::CalculateMaxEmittersSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::CalculateMaxEmittersSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "CalculateMaxEmittersSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.ValidateEmitterIndex
bool OVR::AudioManager::ValidateEmitterIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::ValidateEmitterIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "ValidateEmitterIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: OVR.AudioManager.InitializeSoundSystem
void OVR::AudioManager::InitializeSoundSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::InitializeSoundSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeSoundSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.UpdateFreeEmitters
void OVR::AudioManager::UpdateFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::UpdateFreeEmitters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFreeEmitters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Fmt
::StringW OVR::AudioManager::Fmt(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fmt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fmt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, count);
}
// Autogenerated method: OVR.AudioManager.FmtFree
::StringW OVR::AudioManager::FmtFree(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FmtFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FmtFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, count);
}
// Autogenerated method: OVR.AudioManager.OnPreSceneLoad
void OVR::AudioManager::OnPreSceneLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::OnPreSceneLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreSceneLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.ResetFreeEmitters
void OVR::AudioManager::ResetFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::ResetFreeEmitters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetFreeEmitters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.FadeOutSoundChannel
void OVR::AudioManager::FadeOutSoundChannel(int channel, float delaySecs, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeOutSoundChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeOutSoundChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, delaySecs, fadeTime);
}
// Autogenerated method: OVR.AudioManager.StopSound
bool OVR::AudioManager::StopSound(int idx, bool fadeOut, bool stopReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeOut), ::il2cpp_utils::ExtractType(stopReserved)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeOut, stopReserved);
}
// Autogenerated method: OVR.AudioManager.FadeInSound
void OVR::AudioManager::FadeInSound(int idx, float fadeTime, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime, volume);
}
// Autogenerated method: OVR.AudioManager.FadeInSound
void OVR::AudioManager::FadeInSound(int idx, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime);
}
// Autogenerated method: OVR.AudioManager.FadeOutSound
void OVR::AudioManager::FadeOutSound(int idx, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeOutSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeOutSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime);
}
// Autogenerated method: OVR.AudioManager.StopAllSounds
void OVR::AudioManager::StopAllSounds(bool fadeOut, bool stopReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::StopAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "StopAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeOut), ::il2cpp_utils::ExtractType(stopReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fadeOut, stopReserved);
}
// Autogenerated method: OVR.AudioManager.MuteAllSounds
void OVR::AudioManager::MuteAllSounds(bool mute, bool muteReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::MuteAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MuteAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mute), ::il2cpp_utils::ExtractType(muteReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mute, muteReserved);
}
// Autogenerated method: OVR.AudioManager.UnMuteAllSounds
void OVR::AudioManager::UnMuteAllSounds(bool unmute, bool unmuteReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::UnMuteAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnMuteAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unmute), ::il2cpp_utils::ExtractType(unmuteReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unmute, unmuteReserved);
}
// Autogenerated method: OVR.AudioManager.GetEmitterEndTime
float OVR::AudioManager::GetEmitterEndTime(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetEmitterEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetEmitterEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx);
}
// Autogenerated method: OVR.AudioManager.SetEmitterTime
float OVR::AudioManager::SetEmitterTime(int idx, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetEmitterTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetEmitterTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, time);
}
// Autogenerated method: OVR.AudioManager.PlaySound
int OVR::AudioManager::PlaySound(::UnityEngine::AudioClip* clip, float volume, ::OVR::EmitterChannel src, float delay, float pitchVariance, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitchVariance), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, volume, src, delay, pitchVariance, loop);
}
// Autogenerated method: OVR.AudioManager.FindFreeEmitter
int OVR::AudioManager::FindFreeEmitter(::OVR::EmitterChannel src, ::OVR::SoundPriority priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindFreeEmitter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindFreeEmitter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(priority)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, priority);
}
// Autogenerated method: OVR.AudioManager.PlaySound
int OVR::AudioManager::PlaySound(::OVR::SoundFX* soundFX, ::OVR::EmitterChannel src, float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundFX), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, soundFX, src, delay);
}
// Autogenerated method: OVR.AudioManager.PlaySoundAt
int OVR::AudioManager::PlaySoundAt(::UnityEngine::Vector3 position, ::OVR::SoundFX* soundFX, ::OVR::EmitterChannel src, float delay, float volumeOverride, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(soundFX), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(volumeOverride), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, soundFX, src, delay, volumeOverride, pitchMultiplier);
}
// Autogenerated method: OVR.AudioManager.PlayRandomSoundAt
int OVR::AudioManager::PlayRandomSoundAt(::UnityEngine::Vector3 position, ::ArrayW<::UnityEngine::AudioClip*> clips, float volume, ::OVR::EmitterChannel src, float delay, float pitch, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlayRandomSoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlayRandomSoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(clips), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, clips, volume, src, delay, pitch, loop);
}
// Autogenerated method: OVR.AudioManager.PlaySoundAt
int OVR::AudioManager::PlaySoundAt(::UnityEngine::Vector3 position, ::UnityEngine::AudioClip* clip, float volume, ::OVR::EmitterChannel src, float delay, float pitch, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, clip, volume, src, delay, pitch, loop);
}
// Autogenerated method: OVR.AudioManager.SetOnFinished
void OVR::AudioManager::SetOnFinished(int emitterIdx, ::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitterIdx), ::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitterIdx, onFinished);
}
// Autogenerated method: OVR.AudioManager.SetOnFinished
void OVR::AudioManager::SetOnFinished(int emitterIdx, ::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitterIdx), ::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitterIdx, onFinished, obj);
}
// Autogenerated method: OVR.AudioManager.AttachSoundToParent
void OVR::AudioManager::AttachSoundToParent(int idx, ::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::AttachSoundToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "AttachSoundToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, parent);
}
// Autogenerated method: OVR.AudioManager.DetachSoundFromParent
void OVR::AudioManager::DetachSoundFromParent(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::DetachSoundFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "DetachSoundFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx);
}
// Autogenerated method: OVR.AudioManager.DetachSoundsFromParent
void OVR::AudioManager::DetachSoundsFromParent(::ArrayW<::OVR::SoundEmitter*> emitters, bool stopSounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::DetachSoundsFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "DetachSoundsFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitters), ::il2cpp_utils::ExtractType(stopSounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitters, stopSounds);
}
// Autogenerated method: OVR.AudioManager.SetEmitterMixerGroup
void OVR::AudioManager::SetEmitterMixerGroup(int idx, ::UnityEngine::Audio::AudioMixerGroup* mixerGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetEmitterMixerGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetEmitterMixerGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(mixerGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, mixerGroup);
}
// Autogenerated method: OVR.AudioManager.GetActiveSnapshot
::OVR::MixerSnapshot* OVR::AudioManager::GetActiveSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetActiveSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetActiveSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::MixerSnapshot*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.SetCurrentSnapshot
void OVR::AudioManager::SetCurrentSnapshot(::OVR::MixerSnapshot* mixerSnapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetCurrentSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetCurrentSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mixerSnapshot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mixerSnapshot);
}
// Autogenerated method: OVR.AudioManager.BlendWithCurrentSnapshot
void OVR::AudioManager::BlendWithCurrentSnapshot(::OVR::MixerSnapshot* blendSnapshot, float weight, float blendTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::BlendWithCurrentSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "BlendWithCurrentSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blendSnapshot), ::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(blendTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blendSnapshot, weight, blendTime);
}
// Autogenerated method: OVR.AudioManager..cctor
void OVR::AudioManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/Fade
#include "OVR/AudioManager_Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.AudioManager/Fade In
::OVR::AudioManager::Fade OVR::AudioManager::Fade::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager::Fade>("OVR", "AudioManager/Fade", "In"));
}
// Autogenerated static field setter
// Set static field: static public OVR.AudioManager/Fade In
void OVR::AudioManager::Fade::_set_In(::OVR::AudioManager::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager/Fade", "In", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.AudioManager/Fade Out
::OVR::AudioManager::Fade OVR::AudioManager::Fade::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager::Fade>("OVR", "AudioManager/Fade", "Out"));
}
// Autogenerated static field setter
// Set static field: static public OVR.AudioManager/Fade Out
void OVR::AudioManager::Fade::_set_Out(::OVR::AudioManager::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager/Fade", "Out", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::AudioManager::Fade::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/<>c
#include "OVR/AudioManager_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVR.AudioManager/<>c <>9
::OVR::AudioManager::$$c* OVR::AudioManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::OVR::AudioManager::$$c*>("OVR", "AudioManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVR.AudioManager/<>c <>9
void OVR::AudioManager::$$c::_set_$$9(::OVR::AudioManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVR", "AudioManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<OVR.SoundEmitter> <>9__77_1
::System::Predicate_1<::OVR::SoundEmitter*>* OVR::AudioManager::$$c::_get_$$9__77_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_get_$$9__77_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::OVR::SoundEmitter*>*>("OVR", "AudioManager/<>c", "<>9__77_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<OVR.SoundEmitter> <>9__77_1
void OVR::AudioManager::$$c::_set_$$9__77_1(::System::Predicate_1<::OVR::SoundEmitter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_set_$$9__77_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVR", "AudioManager/<>c", "<>9__77_1", value)));
}
// Autogenerated method: OVR.AudioManager/<>c..cctor
void OVR::AudioManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager/<>c.<FindFreeEmitter>b__77_1
bool OVR::AudioManager::$$c::$FindFreeEmitter$b__77_1(::OVR::SoundEmitter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::<FindFreeEmitter>b__77_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindFreeEmitter>b__77_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/<>c__DisplayClass77_0
#include "OVR/AudioManager_--c__DisplayClass77_0.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
[[deprecated("Use field access instead!")]] ::OVR::SoundPriority& OVR::AudioManager::$$c__DisplayClass77_0::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c__DisplayClass77_0::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AudioManager/<>c__DisplayClass77_0.<FindFreeEmitter>b__0
bool OVR::AudioManager::$$c__DisplayClass77_0::$FindFreeEmitter$b__0(::OVR::SoundEmitter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c__DisplayClass77_0::<FindFreeEmitter>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindFreeEmitter>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.EmitterChannel
#include "OVR/EmitterChannel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel None
::OVR::EmitterChannel OVR::EmitterChannel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel None
void OVR::EmitterChannel::_set_None(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel Reserved
::OVR::EmitterChannel OVR::EmitterChannel::_get_Reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_Reserved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "Reserved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel Reserved
void OVR::EmitterChannel::_set_Reserved(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_Reserved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "Reserved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel Any
::OVR::EmitterChannel OVR::EmitterChannel::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel Any
void OVR::EmitterChannel::_set_Any(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::EmitterChannel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.MixerSnapshot
#include "OVR/MixerSnapshot.hpp"
// Including type: UnityEngine.Audio.AudioMixerSnapshot
#include "UnityEngine/Audio/AudioMixerSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerSnapshot snapshot
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerSnapshot*& OVR::MixerSnapshot::dyn_snapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MixerSnapshot::dyn_snapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapshot"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single transitionTime
[[deprecated("Use field access instead!")]] float& OVR::MixerSnapshot::dyn_transitionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MixerSnapshot::dyn_transitionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.MinMaxAttribute
#include "OVR/MinMaxAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single minDefaultVal
[[deprecated("Use field access instead!")]] float& OVR::MinMaxAttribute::dyn_minDefaultVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_minDefaultVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDefaultVal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDefaultVal
[[deprecated("Use field access instead!")]] float& OVR::MinMaxAttribute::dyn_maxDefaultVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_maxDefaultVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDefaultVal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single min
[[deprecated("Use field access instead!")]] float& OVR::MinMaxAttribute::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single max
[[deprecated("Use field access instead!")]] float& OVR::MinMaxAttribute::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: OVR.SoundEmitter/<DelayedSyncTo>d__57
#include "OVR/SoundEmitter_-DelayedSyncTo-d__57.hpp"
// Including type: OVR.SoundEmitter/<FadeSoundChannel>d__64
#include "OVR/SoundEmitter_-FadeSoundChannel-d__64.hpp"
// Including type: OVR.SoundEmitter/<FadeSoundChannelTo>d__63
#include "OVR/SoundEmitter_-FadeSoundChannelTo-d__63.hpp"
// Including type: ONSPAudioSource
#include "GlobalNamespace/ONSPAudioSource.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.AudioVelocityUpdateMode
#include "UnityEngine/AudioVelocityUpdateMode.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: OVR.Fade
#include "OVR/Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.EmitterChannel channel
[[deprecated("Use field access instead!")]] ::OVR::EmitterChannel& OVR::SoundEmitter::dyn_channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_channel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channel"))->offset;
  return *reinterpret_cast<::OVR::EmitterChannel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableSpatialization
[[deprecated("Use field access instead!")]] bool& OVR::SoundEmitter::dyn_disableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_disableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundEmitter/FadeState state
[[deprecated("Use field access instead!")]] ::OVR::SoundEmitter::FadeState& OVR::SoundEmitter::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter::FadeState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& OVR::SoundEmitter::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
[[deprecated("Use field access instead!")]] ::OVR::SoundPriority& OVR::SoundEmitter::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPAudioSource osp
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPAudioSource*& OVR::SoundEmitter::dyn_osp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_osp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPAudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single endPlayTime
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::dyn_endPlayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_endPlayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPlayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform lastParentTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OVR::SoundEmitter::dyn_lastParentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_lastParentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastParentTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultVolume
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::dyn_defaultVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_defaultVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform defaultParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OVR::SoundEmitter::dyn_defaultParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_defaultParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 originalIdx
[[deprecated("Use field access instead!")]] int& OVR::SoundEmitter::dyn_originalIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_originalIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onFinished
[[deprecated("Use field access instead!")]] ::System::Action*& OVR::SoundEmitter::dyn_onFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinished"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Object> onFinishedObject
[[deprecated("Use field access instead!")]] ::System::Action_1<::Il2CppObject*>*& OVR::SoundEmitter::dyn_onFinishedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinishedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinishedObject"))->offset;
  return *reinterpret_cast<::System::Action_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object onFinishedParam
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OVR::SoundEmitter::dyn_onFinishedParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinishedParam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinishedParam"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundGroup playingSoundGroup
[[deprecated("Use field access instead!")]] ::OVR::SoundGroup*& OVR::SoundEmitter::dyn_playingSoundGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_playingSoundGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingSoundGroup"))->offset;
  return *reinterpret_cast<::OVR::SoundGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter.get_volume
float OVR::SoundEmitter::get_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_volume
void OVR::SoundEmitter::set_volume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_pitch
float OVR::SoundEmitter::get_pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_pitch
void OVR::SoundEmitter::set_pitch(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_clip
::UnityEngine::AudioClip* OVR::SoundEmitter::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_clip
void OVR::SoundEmitter::set_clip(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_time
float OVR::SoundEmitter::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_time
void OVR::SoundEmitter::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_length
float OVR::SoundEmitter::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.get_loop
bool OVR::SoundEmitter::get_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_loop
void OVR::SoundEmitter::set_loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_mute
bool OVR::SoundEmitter::get_mute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_mute
void OVR::SoundEmitter::set_mute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_velocityUpdateMode
::UnityEngine::AudioVelocityUpdateMode OVR::SoundEmitter::get_velocityUpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_velocityUpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocityUpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioVelocityUpdateMode, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_velocityUpdateMode
void OVR::SoundEmitter::set_velocityUpdateMode(::UnityEngine::AudioVelocityUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_velocityUpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocityUpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_isPlaying
bool OVR::SoundEmitter::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Awake
void OVR::SoundEmitter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.SetPlayingSoundGroup
void OVR::SoundEmitter::SetPlayingSoundGroup(::OVR::SoundGroup* soundGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetPlayingSoundGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayingSoundGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundGroup);
}
// Autogenerated method: OVR.SoundEmitter.SetOnFinished
void OVR::SoundEmitter::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundEmitter.SetOnFinished
void OVR::SoundEmitter::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundEmitter.SetChannel
void OVR::SoundEmitter::SetChannel(int _channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_channel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _channel);
}
// Autogenerated method: OVR.SoundEmitter.SetDefaultParent
void OVR::SoundEmitter::SetDefaultParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetDefaultParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.SetAudioMixer
void OVR::SoundEmitter::SetAudioMixer(::UnityEngine::Audio::AudioMixerGroup* _mixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetAudioMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAudioMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_mixer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _mixer);
}
// Autogenerated method: OVR.SoundEmitter.IsPlaying
bool OVR::SoundEmitter::IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Play
void OVR::SoundEmitter::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Pause
void OVR::SoundEmitter::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Stop
void OVR::SoundEmitter::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.GetSampleTime
int OVR::SoundEmitter::GetSampleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::GetSampleTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSampleTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.ParentTo
void OVR::SoundEmitter::ParentTo(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::ParentTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParentTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.DetachFromParent
void OVR::SoundEmitter::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.ResetParent
void OVR::SoundEmitter::ResetParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::ResetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.SyncTo
void OVR::SoundEmitter::SyncTo(::OVR::SoundEmitter* other, float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SyncTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.DelayedSyncTo
::System::Collections::IEnumerator* OVR::SoundEmitter::DelayedSyncTo(::OVR::SoundEmitter* other, float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::DelayedSyncTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedSyncTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, other, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeTo
void OVR::SoundEmitter::FadeTo(float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeIn
void OVR::SoundEmitter::FadeIn(float fadeTime, float defaultVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(defaultVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime, defaultVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeIn
void OVR::SoundEmitter::FadeIn(float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeOut
void OVR::SoundEmitter::FadeOut(float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeOutDelayed
void OVR::SoundEmitter::FadeOutDelayed(float delayedSecs, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeOutDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOutDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delayedSecs), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delayedSecs, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeSoundChannelTo
::System::Collections::IEnumerator* OVR::SoundEmitter::FadeSoundChannelTo(float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeSoundChannelTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeSoundChannelTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeSoundChannel
::System::Collections::IEnumerator* OVR::SoundEmitter::FadeSoundChannel(float delaySecs, float fadeTime, ::OVR::Fade fadeType, float defaultVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeSoundChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeSoundChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(fadeType), ::il2cpp_utils::ExtractType(defaultVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delaySecs, fadeTime, fadeType, defaultVolume);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.SoundEmitter/FadeState
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/FadeState Null
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "Null"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/FadeState Null
void OVR::SoundEmitter::FadeState::_set_Null(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/FadeState FadingIn
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_FadingIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_FadingIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "FadingIn"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/FadeState FadingIn
void OVR::SoundEmitter::FadeState::_set_FadingIn(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_FadingIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "FadingIn", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/FadeState FadingOut
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_FadingOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_FadingOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "FadingOut"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/FadeState FadingOut
void OVR::SoundEmitter::FadeState::_set_FadingOut(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_FadingOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "FadingOut", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/FadeState Ducking
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_Ducking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_Ducking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "Ducking"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/FadeState Ducking
void OVR::SoundEmitter::FadeState::_set_Ducking(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_Ducking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "Ducking", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::SoundEmitter::FadeState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/<DelayedSyncTo>d__57
#include "OVR/SoundEmitter_-DelayedSyncTo-d__57.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
[[deprecated("Use field access instead!")]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter other
[[deprecated("Use field access instead!")]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_other");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "other"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single toVolume
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_toVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_toVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/<DelayedSyncTo>d__57.System.IDisposable.Dispose
void OVR::SoundEmitter::$DelayedSyncTo$d__57::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<DelayedSyncTo>d__57.MoveNext
bool OVR::SoundEmitter::$DelayedSyncTo$d__57::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<DelayedSyncTo>d__57.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<DelayedSyncTo>d__57.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<DelayedSyncTo>d__57.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/<FadeSoundChannel>d__64
#include "OVR/SoundEmitter_-FadeSoundChannel-d__64.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delaySecs
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_delaySecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_delaySecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delaySecs"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.Fade fadeType
[[deprecated("Use field access instead!")]] ::OVR::Fade& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeType"))->offset;
  return *reinterpret_cast<::OVR::Fade*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultVolume
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_defaultVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_defaultVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
[[deprecated("Use field access instead!")]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <start>5__2
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$start$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$start$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<start>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <end>5__3
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$end$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$end$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<end>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <restartPlay>5__4
[[deprecated("Use field access instead!")]] bool& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$restartPlay$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$restartPlay$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<restartPlay>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__5
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$startTime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$startTime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__6
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$elapsedTime$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$elapsedTime$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__6"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannel>d__64.System.IDisposable.Dispose
void OVR::SoundEmitter::$FadeSoundChannel$d__64::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannel>d__64.MoveNext
bool OVR::SoundEmitter::$FadeSoundChannel$d__64::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannel>d__64.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannel>d__64.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannel>d__64.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/<FadeSoundChannelTo>d__63
#include "OVR/SoundEmitter_-FadeSoundChannelTo-d__63.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
[[deprecated("Use field access instead!")]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single toVolume
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_toVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_toVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <start>5__2
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$start$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$start$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<start>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <end>5__3
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$end$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$end$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<end>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__4
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$startTime$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$startTime$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__5
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$elapsedTime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$elapsedTime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannelTo>d__63.System.IDisposable.Dispose
void OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannelTo>d__63.MoveNext
bool OVR::SoundEmitter::$FadeSoundChannelTo$d__63::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannelTo>d__63.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannelTo>d__63.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannelTo>d__63.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.SoundFXNext
#include "OVR/SoundFXNext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundFXNext Random
::OVR::SoundFXNext OVR::SoundFXNext::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFXNext>("OVR", "SoundFXNext", "Random"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundFXNext Random
void OVR::SoundFXNext::_set_Random(::OVR::SoundFXNext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundFXNext", "Random", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundFXNext Sequential
::OVR::SoundFXNext OVR::SoundFXNext::_get_Sequential() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_get_Sequential");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFXNext>("OVR", "SoundFXNext", "Sequential"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundFXNext Sequential
void OVR::SoundFXNext::_set_Sequential(::OVR::SoundFXNext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_set_Sequential");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundFXNext", "Sequential", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::SoundFXNext::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.FreqHint
#include "OVR/FreqHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint None
::OVR::FreqHint OVR::FreqHint::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint None
void OVR::FreqHint::_set_None(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint Wide
::OVR::FreqHint OVR::FreqHint::_get_Wide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_Wide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "Wide"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint Wide
void OVR::FreqHint::_set_Wide(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_Wide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "Wide", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint Narrow
::OVR::FreqHint OVR::FreqHint::_get_Narrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_Narrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "Narrow"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint Narrow
void OVR::FreqHint::_set_Narrow(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_Narrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "Narrow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::FreqHint::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.SoundPriority
#include "OVR/SoundPriority.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority VeryLow
::OVR::SoundPriority OVR::SoundPriority::_get_VeryLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_VeryLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "VeryLow"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority VeryLow
void OVR::SoundPriority::_set_VeryLow(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_VeryLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "VeryLow", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority Low
::OVR::SoundPriority OVR::SoundPriority::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority Low
void OVR::SoundPriority::_set_Low(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority Default
::OVR::SoundPriority OVR::SoundPriority::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority Default
void OVR::SoundPriority::_set_Default(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority High
::OVR::SoundPriority OVR::SoundPriority::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority High
void OVR::SoundPriority::_set_High(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "High", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority VeryHigh
::OVR::SoundPriority OVR::SoundPriority::_get_VeryHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_VeryHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "VeryHigh"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority VeryHigh
void OVR::SoundPriority::_set_VeryHigh(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_VeryHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "VeryHigh", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::SoundPriority::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OSPProps
#include "OVR/OSPProps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatialization
[[deprecated("Use field access instead!")]] bool& OVR::OSPProps::dyn_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_enableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useFastOverride
[[deprecated("Use field access instead!")]] bool& OVR::OSPProps::dyn_useFastOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_useFastOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFastOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gain
[[deprecated("Use field access instead!")]] float& OVR::OSPProps::dyn_gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableInvSquare
[[deprecated("Use field access instead!")]] bool& OVR::OSPProps::dyn_enableInvSquare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_enableInvSquare");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableInvSquare"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumetric
[[deprecated("Use field access instead!")]] float& OVR::OSPProps::dyn_volumetric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_volumetric");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumetric"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 invSquareFalloff
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& OVR::OSPProps::dyn_invSquareFalloff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_invSquareFalloff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invSquareFalloff"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: OVR.OSPProps
#include "OVR/OSPProps.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& OVR::SoundFX::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXNext playback
[[deprecated("Use field access instead!")]] ::OVR::SoundFXNext& OVR::SoundFX::dyn_playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_playback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playback"))->offset;
  return *reinterpret_cast<::OVR::SoundFXNext*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volume
[[deprecated("Use field access instead!")]] float& OVR::SoundFX::dyn_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 pitchVariance
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& OVR::SoundFX::dyn_pitchVariance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_pitchVariance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pitchVariance"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 falloffDistance
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& OVR::SoundFX::dyn_falloffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_falloffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "falloffDistance"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioRolloffMode falloffCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioRolloffMode& OVR::SoundFX::dyn_falloffCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_falloffCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "falloffCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioRolloffMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve volumeFalloffCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& OVR::SoundFX::dyn_volumeFalloffCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_volumeFalloffCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeFalloffCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve reverbZoneMix
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& OVR::SoundFX::dyn_reverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_reverbZoneMix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverbZoneMix"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spread
[[deprecated("Use field access instead!")]] float& OVR::SoundFX::dyn_spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pctChanceToPlay
[[deprecated("Use field access instead!")]] float& OVR::SoundFX::dyn_pctChanceToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_pctChanceToPlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pctChanceToPlay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
[[deprecated("Use field access instead!")]] ::OVR::SoundPriority& OVR::SoundFX::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 delay
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& OVR::SoundFX::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean looping
[[deprecated("Use field access instead!")]] bool& OVR::SoundFX::dyn_looping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_looping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "looping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OSPProps ospProps
[[deprecated("Use field access instead!")]] ::OVR::OSPProps*& OVR::SoundFX::dyn_ospProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_ospProps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ospProps"))->offset;
  return *reinterpret_cast<::OVR::OSPProps**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] soundClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& OVR::SoundFX::dyn_soundClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_soundClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean visibilityToggle
[[deprecated("Use field access instead!")]] bool& OVR::SoundFX::dyn_visibilityToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_visibilityToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visibilityToggle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundGroup soundGroup
[[deprecated("Use field access instead!")]] ::OVR::SoundGroup*& OVR::SoundFX::dyn_soundGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_soundGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundGroup"))->offset;
  return *reinterpret_cast<::OVR::SoundGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastIdx
[[deprecated("Use field access instead!")]] int& OVR::SoundFX::dyn_lastIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_lastIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 playingIdx
[[deprecated("Use field access instead!")]] int& OVR::SoundFX::dyn_playingIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_playingIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundFX.get_Length
int OVR::SoundFX::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_IsValid
bool OVR::SoundFX::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_Group
::OVR::SoundGroup* OVR::SoundFX::get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundGroup*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.set_Group
void OVR::SoundFX::set_Group(::OVR::SoundGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::set_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundFX.get_MaxFalloffDistSquared
float OVR::SoundFX::get_MaxFalloffDistSquared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_MaxFalloffDistSquared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxFalloffDistSquared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_GroupVolumeOverride
float OVR::SoundFX::get_GroupVolumeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_GroupVolumeOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GroupVolumeOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetClip
::UnityEngine::AudioClip* OVR::SoundFX::GetClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetMixerGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::SoundFX::GetMixerGroup(::UnityEngine::Audio::AudioMixerGroup* defaultMixerGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetMixerGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMixerGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultMixerGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(this, ___internal__method, defaultMixerGroup);
}
// Autogenerated method: OVR.SoundFX.ReachedGroupPlayLimit
bool OVR::SoundFX::ReachedGroupPlayLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::ReachedGroupPlayLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReachedGroupPlayLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetClipLength
float OVR::SoundFX::GetClipLength(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, idx);
}
// Autogenerated method: OVR.SoundFX.GetPitch
float OVR::SoundFX::GetPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.PlaySound
int OVR::SoundFX::PlaySound(float delaySecs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delaySecs);
}
// Autogenerated method: OVR.SoundFX.PlaySoundAt
int OVR::SoundFX::PlaySoundAt(::UnityEngine::Vector3 pos, float delaySecs, float volumeOverride, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(volumeOverride), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos, delaySecs, volumeOverride, pitchMultiplier);
}
// Autogenerated method: OVR.SoundFX.SetOnFinished
void OVR::SoundFX::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundFX.SetOnFinished
void OVR::SoundFX::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundFX.StopSound
bool OVR::SoundFX::StopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.AttachToParent
void OVR::SoundFX::AttachToParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::AttachToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundFX.DetachFromParent
void OVR::SoundFX::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String soundFXName
[[deprecated("Use field access instead!")]] ::StringW& OVR::SoundFXRef::dyn_soundFXName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_soundFXName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& OVR::SoundFXRef::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundFX soundFXCached
[[deprecated("Use field access instead!")]] ::OVR::SoundFX*& OVR::SoundFXRef::dyn_soundFXCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_soundFXCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXCached"))->offset;
  return *reinterpret_cast<::OVR::SoundFX**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundFXRef.get_soundFX
::OVR::SoundFX* OVR::SoundFXRef::get_soundFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_soundFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_soundFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundFX*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.get_name
::StringW OVR::SoundFXRef::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.set_name
void OVR::SoundFXRef::set_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundFXRef.Init
void OVR::SoundFXRef::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.get_Length
int OVR::SoundFXRef::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.get_IsValid
bool OVR::SoundFXRef::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.GetClip
::UnityEngine::AudioClip* OVR::SoundFXRef::GetClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::GetClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.GetClipLength
float OVR::SoundFXRef::GetClipLength(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::GetClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, idx);
}
// Autogenerated method: OVR.SoundFXRef.PlaySound
int OVR::SoundFXRef::PlaySound(float delaySecs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delaySecs);
}
// Autogenerated method: OVR.SoundFXRef.PlaySoundAt
int OVR::SoundFXRef::PlaySoundAt(::UnityEngine::Vector3 pos, float delaySecs, float volume, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos, delaySecs, volume, pitchMultiplier);
}
// Autogenerated method: OVR.SoundFXRef.SetOnFinished
void OVR::SoundFXRef::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundFXRef.SetOnFinished
void OVR::SoundFXRef::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundFXRef.StopSound
bool OVR::SoundFXRef::StopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.AttachToParent
void OVR::SoundFXRef::AttachToParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::AttachToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundFXRef.DetachFromParent
void OVR::SoundFXRef::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.CodeAnalysis.EmbeddedAttribute
#include "Microsoft/CodeAnalysis/EmbeddedAttribute______.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.IsUnmanagedAttribute
#include "System/Runtime/CompilerServices/IsUnmanagedAttribute____.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.ConditionalHideAttribute
#include "Oculus/Interaction/ConditionalHideAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <ConditionalFieldPath>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Interaction::ConditionalHideAttribute::dyn_$ConditionalFieldPath$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConditionalHideAttribute::dyn_$ConditionalFieldPath$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ConditionalFieldPath>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <HideValue>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Oculus::Interaction::ConditionalHideAttribute::dyn_$HideValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConditionalHideAttribute::dyn_$HideValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HideValue>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ConditionalHideAttribute.get_ConditionalFieldPath
::StringW Oculus::Interaction::ConditionalHideAttribute::get_ConditionalFieldPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConditionalHideAttribute::get_ConditionalFieldPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConditionalFieldPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ConditionalHideAttribute.set_ConditionalFieldPath
void Oculus::Interaction::ConditionalHideAttribute::set_ConditionalFieldPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConditionalHideAttribute::set_ConditionalFieldPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConditionalFieldPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ConditionalHideAttribute.get_HideValue
::Il2CppObject* Oculus::Interaction::ConditionalHideAttribute::get_HideValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConditionalHideAttribute::get_HideValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HideValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ConditionalHideAttribute.set_HideValue
void Oculus::Interaction::ConditionalHideAttribute::set_HideValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConditionalHideAttribute::set_HideValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HideValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InspectorButtonAttribute
#include "Oculus/Interaction/InspectorButtonAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single BUTTON_WIDTH
float Oculus::Interaction::InspectorButtonAttribute::_get_BUTTON_WIDTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InspectorButtonAttribute::_get_BUTTON_WIDTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Interaction", "InspectorButtonAttribute", "BUTTON_WIDTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Single BUTTON_WIDTH
void Oculus::Interaction::InspectorButtonAttribute::_set_BUTTON_WIDTH(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InspectorButtonAttribute::_set_BUTTON_WIDTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InspectorButtonAttribute", "BUTTON_WIDTH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single BUTTON_HEIGHT
float Oculus::Interaction::InspectorButtonAttribute::_get_BUTTON_HEIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InspectorButtonAttribute::_get_BUTTON_HEIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Interaction", "InspectorButtonAttribute", "BUTTON_HEIGHT"));
}
// Autogenerated static field setter
// Set static field: static private System.Single BUTTON_HEIGHT
void Oculus::Interaction::InspectorButtonAttribute::_set_BUTTON_HEIGHT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InspectorButtonAttribute::_set_BUTTON_HEIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InspectorButtonAttribute", "BUTTON_HEIGHT", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single <ButtonWidth>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::InspectorButtonAttribute::dyn_$ButtonWidth$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InspectorButtonAttribute::dyn_$ButtonWidth$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ButtonWidth>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String methodName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Interaction::InspectorButtonAttribute::dyn_methodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InspectorButtonAttribute::dyn_methodName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single buttonHeight
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::InspectorButtonAttribute::dyn_buttonHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InspectorButtonAttribute::dyn_buttonHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.InspectorButtonAttribute.get_ButtonWidth
float Oculus::Interaction::InspectorButtonAttribute::get_ButtonWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InspectorButtonAttribute::get_ButtonWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ButtonWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InspectorButtonAttribute.set_ButtonWidth
void Oculus::Interaction::InspectorButtonAttribute::set_ButtonWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InspectorButtonAttribute::set_ButtonWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ButtonWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.OptionalAttribute
#include "Oculus/Interaction/OptionalAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.OptionalAttribute/Flag <Flags>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::OptionalAttribute::Flag& Oculus::Interaction::OptionalAttribute::dyn_$Flags$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OptionalAttribute::dyn_$Flags$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Flags>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::OptionalAttribute::Flag*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.OptionalAttribute.get_Flags
::Oculus::Interaction::OptionalAttribute::Flag Oculus::Interaction::OptionalAttribute::get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OptionalAttribute::get_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::OptionalAttribute::Flag, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OptionalAttribute.set_Flags
void Oculus::Interaction::OptionalAttribute::set_Flags(::Oculus::Interaction::OptionalAttribute::Flag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OptionalAttribute::set_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.OptionalAttribute/Flag
#include "Oculus/Interaction/OptionalAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.OptionalAttribute/Flag None
::Oculus::Interaction::OptionalAttribute::Flag Oculus::Interaction::OptionalAttribute::Flag::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OptionalAttribute::Flag::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::OptionalAttribute::Flag>("Oculus.Interaction", "OptionalAttribute/Flag", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.OptionalAttribute/Flag None
void Oculus::Interaction::OptionalAttribute::Flag::_set_None(::Oculus::Interaction::OptionalAttribute::Flag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OptionalAttribute::Flag::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "OptionalAttribute/Flag", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.OptionalAttribute/Flag AutoGenerated
::Oculus::Interaction::OptionalAttribute::Flag Oculus::Interaction::OptionalAttribute::Flag::_get_AutoGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OptionalAttribute::Flag::_get_AutoGenerated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::OptionalAttribute::Flag>("Oculus.Interaction", "OptionalAttribute/Flag", "AutoGenerated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.OptionalAttribute/Flag AutoGenerated
void Oculus::Interaction::OptionalAttribute::Flag::_set_AutoGenerated(::Oculus::Interaction::OptionalAttribute::Flag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OptionalAttribute::Flag::_set_AutoGenerated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "OptionalAttribute/Flag", "AutoGenerated", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.OptionalAttribute/Flag DontHide
::Oculus::Interaction::OptionalAttribute::Flag Oculus::Interaction::OptionalAttribute::Flag::_get_DontHide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OptionalAttribute::Flag::_get_DontHide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::OptionalAttribute::Flag>("Oculus.Interaction", "OptionalAttribute/Flag", "DontHide"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.OptionalAttribute/Flag DontHide
void Oculus::Interaction::OptionalAttribute::Flag::_set_DontHide(::Oculus::Interaction::OptionalAttribute::Flag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OptionalAttribute::Flag::_set_DontHide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "OptionalAttribute/Flag", "DontHide", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::OptionalAttribute::Flag::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OptionalAttribute::Flag::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.SectionAttribute
#include "Oculus/Interaction/SectionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <SectionName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Interaction::SectionAttribute::dyn_$SectionName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SectionAttribute::dyn_$SectionName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SectionName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.SectionAttribute.get_SectionName
::StringW Oculus::Interaction::SectionAttribute::get_SectionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SectionAttribute::get_SectionName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SectionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SectionAttribute.set_SectionName
void Oculus::Interaction::SectionAttribute::set_SectionName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SectionAttribute::set_SectionName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SectionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Collisions
#include "Oculus/Interaction/Collisions.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Collisions.ClosestPointToColliders
::UnityEngine::Vector3 Oculus::Interaction::Collisions::ClosestPointToColliders(::UnityEngine::Vector3 point, ::ArrayW<::UnityEngine::Collider*> colliders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Collisions::ClosestPointToColliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "Collisions", "ClosestPointToColliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(colliders)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, colliders);
}
// Autogenerated method: Oculus.Interaction.Collisions.IsCapsuleWithinColliderApprox
bool Oculus::Interaction::Collisions::IsCapsuleWithinColliderApprox(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, float radius, ::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Collisions::IsCapsuleWithinColliderApprox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "Collisions", "IsCapsuleWithinColliderApprox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(collider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, radius, collider);
}
// Autogenerated method: Oculus.Interaction.Collisions.IsPointWithinCollider
bool Oculus::Interaction::Collisions::IsPointWithinCollider(::UnityEngine::Vector3 point, ::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Collisions::IsPointWithinCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "Collisions", "IsPointWithinCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(collider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, collider);
}
// Autogenerated method: Oculus.Interaction.Collisions.IsSphereWithinCollider
bool Oculus::Interaction::Collisions::IsSphereWithinCollider(::UnityEngine::Vector3 point, float radius, ::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Collisions::IsSphereWithinCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "Collisions", "IsSphereWithinCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(collider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, radius, collider);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ColliderGroup
#include "Oculus/Interaction/ColliderGroup.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider _boundsCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& Oculus::Interaction::ColliderGroup::dyn__boundsCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ColliderGroup::dyn__boundsCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boundsCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Collider> _colliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& Oculus::Interaction::ColliderGroup::dyn__colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ColliderGroup::dyn__colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ColliderGroup.get_Bounds
::UnityEngine::Collider* Oculus::Interaction::ColliderGroup::get_Bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ColliderGroup::get_Bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ColliderGroup.get_Colliders
::System::Collections::Generic::List_1<::UnityEngine::Collider*>* Oculus::Interaction::ColliderGroup::get_Colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ColliderGroup::get_Colliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Colliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Collider*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.DistantPointDetectorFrustums
#include "Oculus/Interaction/DistantPointDetectorFrustums.hpp"
// Including type: Oculus.Interaction.ConicalFrustum
#include "Oculus/Interaction/ConicalFrustum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ConicalFrustum _selectionFrustum
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ConicalFrustum*& Oculus::Interaction::DistantPointDetectorFrustums::dyn__selectionFrustum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantPointDetectorFrustums::dyn__selectionFrustum");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionFrustum"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ConicalFrustum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ConicalFrustum _deselectionFrustum
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ConicalFrustum*& Oculus::Interaction::DistantPointDetectorFrustums::dyn__deselectionFrustum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantPointDetectorFrustums::dyn__deselectionFrustum");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deselectionFrustum"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ConicalFrustum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ConicalFrustum _aidFrustum
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ConicalFrustum*& Oculus::Interaction::DistantPointDetectorFrustums::dyn__aidFrustum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantPointDetectorFrustums::dyn__aidFrustum");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aidFrustum"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ConicalFrustum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _aidBlending
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::DistantPointDetectorFrustums::dyn__aidBlending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantPointDetectorFrustums::dyn__aidBlending");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aidBlending"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.DistantPointDetectorFrustums.get_SelectionFrustum
::Oculus::Interaction::ConicalFrustum* Oculus::Interaction::DistantPointDetectorFrustums::get_SelectionFrustum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantPointDetectorFrustums::get_SelectionFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_SelectionFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::ConicalFrustum*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistantPointDetectorFrustums.get_DeselectionFrustum
::Oculus::Interaction::ConicalFrustum* Oculus::Interaction::DistantPointDetectorFrustums::get_DeselectionFrustum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantPointDetectorFrustums::get_DeselectionFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DeselectionFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::ConicalFrustum*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistantPointDetectorFrustums.get_AidFrustum
::Oculus::Interaction::ConicalFrustum* Oculus::Interaction::DistantPointDetectorFrustums::get_AidFrustum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantPointDetectorFrustums::get_AidFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_AidFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::ConicalFrustum*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistantPointDetectorFrustums.get_AidBlending
float Oculus::Interaction::DistantPointDetectorFrustums::get_AidBlending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantPointDetectorFrustums::get_AidBlending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_AidBlending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DistantPointDetectorFrustums..ctor
// ABORTED elsewhere.  Oculus::Interaction::DistantPointDetectorFrustums::DistantPointDetectorFrustums(::Oculus::Interaction::ConicalFrustum* selection, ::Oculus::Interaction::ConicalFrustum* deselection, ::Oculus::Interaction::ConicalFrustum* aid, float blend)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.DistantPointDetector
#include "Oculus/Interaction/DistantPointDetector.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Oculus.Interaction.ConicalFrustum
#include "Oculus/Interaction/ConicalFrustum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.DistantPointDetectorFrustums _frustums
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::DistantPointDetectorFrustums& Oculus::Interaction::DistantPointDetector::dyn__frustums() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantPointDetector::dyn__frustums");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frustums"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::DistantPointDetectorFrustums*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.DistantPointDetector.ComputeIsPointing
bool Oculus::Interaction::DistantPointDetector::ComputeIsPointing(::ArrayW<::UnityEngine::Collider*> colliders, bool isSelecting, ByRef<float> bestScore, ByRef<::UnityEngine::Vector3> bestHitPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantPointDetector::ComputeIsPointing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeIsPointing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colliders), ::il2cpp_utils::ExtractType(isSelecting), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, colliders, isSelecting, byref(bestScore), byref(bestHitPoint));
}
// Autogenerated method: Oculus.Interaction.DistantPointDetector.IsPointingWithoutAid
bool Oculus::Interaction::DistantPointDetector::IsPointingWithoutAid(::ArrayW<::UnityEngine::Collider*> colliders, ByRef<::UnityEngine::Vector3> bestHitPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantPointDetector::IsPointingWithoutAid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointingWithoutAid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colliders), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, colliders, byref(bestHitPoint));
}
// Autogenerated method: Oculus.Interaction.DistantPointDetector.IsWithinDeselectionRange
bool Oculus::Interaction::DistantPointDetector::IsWithinDeselectionRange(::ArrayW<::UnityEngine::Collider*> colliders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantPointDetector::IsWithinDeselectionRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsWithinDeselectionRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colliders)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, colliders);
}
// Autogenerated method: Oculus.Interaction.DistantPointDetector.IsPointingAtColliders
bool Oculus::Interaction::DistantPointDetector::IsPointingAtColliders(::ArrayW<::UnityEngine::Collider*> colliders, ::Oculus::Interaction::ConicalFrustum* frustum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantPointDetector::IsPointingAtColliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointingAtColliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colliders), ::il2cpp_utils::ExtractType(frustum)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, colliders, frustum);
}
// Autogenerated method: Oculus.Interaction.DistantPointDetector.IsPointingAtColliders
bool Oculus::Interaction::DistantPointDetector::IsPointingAtColliders(::ArrayW<::UnityEngine::Collider*> colliders, ::Oculus::Interaction::ConicalFrustum* frustum, ByRef<::UnityEngine::Vector3> bestHitPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DistantPointDetector::IsPointingAtColliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointingAtColliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colliders), ::il2cpp_utils::ExtractType(frustum), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, colliders, frustum, byref(bestHitPoint));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IDistanceInteractor
#include "Oculus/Interaction/IDistanceInteractor.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Oculus.Interaction.IRelativeToRef
#include "Oculus/Interaction/IRelativeToRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IDistanceInteractor.get_Origin
::UnityEngine::Pose Oculus::Interaction::IDistanceInteractor::get_Origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IDistanceInteractor::get_Origin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IDistanceInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IDistanceInteractor.get_HitPoint
::UnityEngine::Vector3 Oculus::Interaction::IDistanceInteractor::get_HitPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IDistanceInteractor::get_HitPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IDistanceInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IDistanceInteractor.get_DistanceInteractable
::Oculus::Interaction::IRelativeToRef* Oculus::Interaction::IDistanceInteractor::get_DistanceInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IDistanceInteractor::get_DistanceInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IDistanceInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IRelativeToRef*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TubeRenderer
#include "Oculus/Interaction/TubeRenderer.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: Oculus.Interaction.TubeRenderer/<>c__DisplayClass73_0
#include "Oculus/Interaction/TubeRenderer_--c__DisplayClass73_0.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: UnityEngine.Space
#include "UnityEngine/Space.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _fadeLimitsShaderID
int Oculus::Interaction::TubeRenderer::_get__fadeLimitsShaderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::_get__fadeLimitsShaderID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction", "TubeRenderer", "_fadeLimitsShaderID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _fadeLimitsShaderID
void Oculus::Interaction::TubeRenderer::_set__fadeLimitsShaderID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::_set__fadeLimitsShaderID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "TubeRenderer", "_fadeLimitsShaderID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _fadeSignShaderID
int Oculus::Interaction::TubeRenderer::_get__fadeSignShaderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::_get__fadeSignShaderID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction", "TubeRenderer", "_fadeSignShaderID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _fadeSignShaderID
void Oculus::Interaction::TubeRenderer::_set__fadeSignShaderID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::_set__fadeSignShaderID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "TubeRenderer", "_fadeSignShaderID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _offsetFactorShaderPropertyID
int Oculus::Interaction::TubeRenderer::_get__offsetFactorShaderPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::_get__offsetFactorShaderPropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction", "TubeRenderer", "_offsetFactorShaderPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _offsetFactorShaderPropertyID
void Oculus::Interaction::TubeRenderer::_set__offsetFactorShaderPropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::_set__offsetFactorShaderPropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "TubeRenderer", "_offsetFactorShaderPropertyID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _offsetUnitsShaderPropertyID
int Oculus::Interaction::TubeRenderer::_get__offsetUnitsShaderPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::_get__offsetUnitsShaderPropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction", "TubeRenderer", "_offsetUnitsShaderPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _offsetUnitsShaderPropertyID
void Oculus::Interaction::TubeRenderer::_set__offsetUnitsShaderPropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::_set__offsetUnitsShaderPropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "TubeRenderer", "_offsetUnitsShaderPropertyID", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _filter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& Oculus::Interaction::TubeRenderer::dyn__filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__filter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& Oculus::Interaction::TubeRenderer::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _divisions
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::TubeRenderer::dyn__divisions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__divisions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_divisions"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bevel
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::TubeRenderer::dyn__bevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__bevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _renderQueue
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::TubeRenderer::dyn__renderQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__renderQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderQueue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _renderOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Oculus::Interaction::TubeRenderer::dyn__renderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__renderOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TubeRenderer::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient _gradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& Oculus::Interaction::TubeRenderer::dyn__gradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__gradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _tint
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::TubeRenderer::dyn__tint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__tint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tint"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _progressFade
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TubeRenderer::dyn__progressFade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__progressFade");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressFade"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startFadeThresold
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TubeRenderer::dyn__startFadeThresold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__startFadeThresold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startFadeThresold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _endFadeThresold
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TubeRenderer::dyn__endFadeThresold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__endFadeThresold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endFadeThresold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _invertThreshold
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::TubeRenderer::dyn__invertThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__invertThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_invertThreshold"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _feather
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TubeRenderer::dyn__feather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__feather");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_feather"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mirrorTexture
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::TubeRenderer::dyn__mirrorTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__mirrorTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorTexture"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Progress>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TubeRenderer::dyn_$Progress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn_$Progress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Progress>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.VertexAttributeDescriptor[] _dataLayout
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Rendering::VertexAttributeDescriptor>& Oculus::Interaction::TubeRenderer::dyn__dataLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__dataLayout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataLayout"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Rendering::VertexAttributeDescriptor>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Collections.NativeArray`1<Oculus.Interaction.TubeRenderer/VertexLayout> _vertsData
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::Oculus::Interaction::TubeRenderer::VertexLayout>& Oculus::Interaction::TubeRenderer::dyn__vertsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__vertsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertsData"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::Oculus::Interaction::TubeRenderer::VertexLayout>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TubeRenderer/VertexLayout _layout
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::TubeRenderer::VertexLayout& Oculus::Interaction::TubeRenderer::dyn__layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__layout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_layout"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::TubeRenderer::VertexLayout*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& Oculus::Interaction::TubeRenderer::dyn__mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _tris
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Oculus::Interaction::TubeRenderer::dyn__tris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__tris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tris"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _initializedSteps
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::TubeRenderer::dyn__initializedSteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__initializedSteps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initializedSteps"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _vertsCount
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::TubeRenderer::dyn__vertsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__vertsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _totalLength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::TubeRenderer::dyn__totalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::dyn__totalLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_totalLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.get_RenderQueue
int Oculus::Interaction::TubeRenderer::get_RenderQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::get_RenderQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RenderQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.set_RenderQueue
void Oculus::Interaction::TubeRenderer::set_RenderQueue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::set_RenderQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RenderQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.get_RenderOffset
::UnityEngine::Vector2 Oculus::Interaction::TubeRenderer::get_RenderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::get_RenderOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RenderOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.set_RenderOffset
void Oculus::Interaction::TubeRenderer::set_RenderOffset(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::set_RenderOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RenderOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.get_Radius
float Oculus::Interaction::TubeRenderer::get_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::get_Radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.set_Radius
void Oculus::Interaction::TubeRenderer::set_Radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::set_Radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.get_Gradient
::UnityEngine::Gradient* Oculus::Interaction::TubeRenderer::get_Gradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::get_Gradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Gradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Gradient*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.set_Gradient
void Oculus::Interaction::TubeRenderer::set_Gradient(::UnityEngine::Gradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::set_Gradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Gradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.get_Tint
::UnityEngine::Color Oculus::Interaction::TubeRenderer::get_Tint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::get_Tint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.set_Tint
void Oculus::Interaction::TubeRenderer::set_Tint(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::set_Tint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Tint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.get_ProgressFade
float Oculus::Interaction::TubeRenderer::get_ProgressFade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::get_ProgressFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProgressFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.set_ProgressFade
void Oculus::Interaction::TubeRenderer::set_ProgressFade(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::set_ProgressFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProgressFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.get_StartFadeThresold
float Oculus::Interaction::TubeRenderer::get_StartFadeThresold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::get_StartFadeThresold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartFadeThresold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.set_StartFadeThresold
void Oculus::Interaction::TubeRenderer::set_StartFadeThresold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::set_StartFadeThresold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartFadeThresold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.get_EndFadeThresold
float Oculus::Interaction::TubeRenderer::get_EndFadeThresold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::get_EndFadeThresold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndFadeThresold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.set_EndFadeThresold
void Oculus::Interaction::TubeRenderer::set_EndFadeThresold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::set_EndFadeThresold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EndFadeThresold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.get_InvertThreshold
bool Oculus::Interaction::TubeRenderer::get_InvertThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::get_InvertThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InvertThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.set_InvertThreshold
void Oculus::Interaction::TubeRenderer::set_InvertThreshold(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::set_InvertThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InvertThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.get_Feather
float Oculus::Interaction::TubeRenderer::get_Feather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::get_Feather");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Feather", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.set_Feather
void Oculus::Interaction::TubeRenderer::set_Feather(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::set_Feather");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Feather", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.get_MirrorTexture
bool Oculus::Interaction::TubeRenderer::get_MirrorTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::get_MirrorTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MirrorTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.set_MirrorTexture
void Oculus::Interaction::TubeRenderer::set_MirrorTexture(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::set_MirrorTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MirrorTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.get_Progress
float Oculus::Interaction::TubeRenderer::get_Progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::get_Progress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.set_Progress
void Oculus::Interaction::TubeRenderer::set_Progress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::set_Progress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.get_TotalLength
float Oculus::Interaction::TubeRenderer::get_TotalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::get_TotalLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TotalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.Reset
void Oculus::Interaction::TubeRenderer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TubeRenderer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.OnEnable
void Oculus::Interaction::TubeRenderer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TubeRenderer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.OnDisable
void Oculus::Interaction::TubeRenderer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TubeRenderer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.RenderTube
void Oculus::Interaction::TubeRenderer::RenderTube(::ArrayW<::Oculus::Interaction::TubePoint> points, ::UnityEngine::Space space) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::RenderTube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderTube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(space)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points, space);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.Hide
void Oculus::Interaction::TubeRenderer::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.InitializeMeshData
void Oculus::Interaction::TubeRenderer::InitializeMeshData(int steps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::InitializeMeshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeMeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(steps)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, steps);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.UpdateMeshData
void Oculus::Interaction::TubeRenderer::UpdateMeshData(::ArrayW<::Oculus::Interaction::TubePoint> points, ::UnityEngine::Space space) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::UpdateMeshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(space)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points, space);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.RedrawFadeThresholds
void Oculus::Interaction::TubeRenderer::RedrawFadeThresholds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::RedrawFadeThresholds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RedrawFadeThresholds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.BevelCap
void Oculus::Interaction::TubeRenderer::BevelCap(ByRef<::UnityEngine::Pose> pose, bool end, int indexOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::BevelCap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BevelCap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(indexOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pose), end, indexOffset);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.WriteCircle
void Oculus::Interaction::TubeRenderer::WriteCircle(::UnityEngine::Vector3 point, ::UnityEngine::Quaternion rotation, float width, int index, float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::WriteCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(progress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point, rotation, width, index, progress);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.SetVertexCount
int Oculus::Interaction::TubeRenderer::SetVertexCount(int positionCount, int divisions, int bevelCap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::SetVertexCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVertexCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positionCount), ::il2cpp_utils::ExtractType(divisions), ::il2cpp_utils::ExtractType(bevelCap)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, positionCount, divisions, bevelCap);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.InjectAllTubeRenderer
void Oculus::Interaction::TubeRenderer::InjectAllTubeRenderer(::UnityEngine::MeshFilter* filter, ::UnityEngine::MeshRenderer* renderer, int divisions, int bevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::InjectAllTubeRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllTubeRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(renderer), ::il2cpp_utils::ExtractType(divisions), ::il2cpp_utils::ExtractType(bevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, filter, renderer, divisions, bevel);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.InjectFilter
void Oculus::Interaction::TubeRenderer::InjectFilter(::UnityEngine::MeshFilter* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::InjectFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, filter);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.InjectRenderer
void Oculus::Interaction::TubeRenderer::InjectRenderer(::UnityEngine::MeshRenderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::InjectRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderer);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.InjectDivisions
void Oculus::Interaction::TubeRenderer::InjectDivisions(int divisions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::InjectDivisions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectDivisions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(divisions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, divisions);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.InjectBevel
void Oculus::Interaction::TubeRenderer::InjectBevel(int bevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::InjectBevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectBevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bevel);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer..cctor
void Oculus::Interaction::TubeRenderer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "TubeRenderer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.<UpdateMeshData>g__TransformPose|73_0
void Oculus::Interaction::TubeRenderer::$UpdateMeshData$g__TransformPose_73_0(ByRef<::Oculus::Interaction::TubePoint> tubePoint, ByRef<::UnityEngine::Pose> pose, ByRef<::Oculus::Interaction::TubeRenderer::$$c__DisplayClass73_0> param_2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::<UpdateMeshData>g__TransformPose|73_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "TubeRenderer", "<UpdateMeshData>g__TransformPose|73_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tubePoint), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(param_2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(tubePoint), byref(pose), byref(param_2));
}
// Autogenerated method: Oculus.Interaction.TubeRenderer.<SetVertexCount>g__Cap|77_0
void Oculus::Interaction::TubeRenderer::$SetVertexCount$g__Cap_77_0(int t, int firstVert, int lastVert, bool clockwise) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TubeRenderer::<SetVertexCount>g__Cap|77_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetVertexCount>g__Cap|77_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(firstVert), ::il2cpp_utils::ExtractType(lastVert), ::il2cpp_utils::ExtractType(clockwise)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, firstVert, lastVert, clockwise);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HashSetExtensions
#include "Oculus/Interaction/HashSetExtensions.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.MonoBehaviourStartExtensions
#include "Oculus/Interaction/MonoBehaviourStartExtensions.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.MonoBehaviourStartExtensions.BeginStart
void Oculus::Interaction::MonoBehaviourStartExtensions::BeginStart(::UnityEngine::MonoBehaviour* monoBehaviour, ByRef<bool> started, ::System::Action* baseStart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourStartExtensions::BeginStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "MonoBehaviourStartExtensions", "BeginStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monoBehaviour), ::il2cpp_utils::ExtractType(started), ::il2cpp_utils::ExtractType(baseStart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, monoBehaviour, byref(started), baseStart);
}
// Autogenerated method: Oculus.Interaction.MonoBehaviourStartExtensions.EndStart
void Oculus::Interaction::MonoBehaviourStartExtensions::EndStart(::UnityEngine::MonoBehaviour* monoBehaviour, ByRef<bool> started) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourStartExtensions::EndStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "MonoBehaviourStartExtensions", "EndStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monoBehaviour), ::il2cpp_utils::ExtractType(started)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, monoBehaviour, byref(started));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TransformExtensions
#include "Oculus/Interaction/TransformExtensions.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.TransformExtensions.InverseTransformPointUnscaled
::UnityEngine::Vector3 Oculus::Interaction::TransformExtensions::InverseTransformPointUnscaled(::UnityEngine::Transform* transform, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformExtensions::InverseTransformPointUnscaled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "TransformExtensions", "InverseTransformPointUnscaled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, position);
}
// Autogenerated method: Oculus.Interaction.TransformExtensions.TransformPointUnscaled
::UnityEngine::Vector3 Oculus::Interaction::TransformExtensions::TransformPointUnscaled(::UnityEngine::Transform* transform, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformExtensions::TransformPointUnscaled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "TransformExtensions", "TransformPointUnscaled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, position);
}
// Autogenerated method: Oculus.Interaction.TransformExtensions.TransformBounds
::UnityEngine::Bounds Oculus::Interaction::TransformExtensions::TransformBounds(::UnityEngine::Transform* transform, ByRef<::UnityEngine::Bounds> bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformExtensions::TransformBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "TransformExtensions", "TransformBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, byref(bounds));
}
// Autogenerated method: Oculus.Interaction.TransformExtensions.FindChildRecursive
::UnityEngine::Transform* Oculus::Interaction::TransformExtensions::FindChildRecursive(::UnityEngine::Transform* parent, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformExtensions::FindChildRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "TransformExtensions", "FindChildRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, name);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.VectorExtensions
#include "Oculus/Interaction/VectorExtensions.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.VectorExtensions.Approximately
bool Oculus::Interaction::VectorExtensions::Approximately(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, float epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VectorExtensions::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "VectorExtensions", "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, epsilon);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IFingerAPI
#include "Oculus/Interaction/IFingerAPI.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IFingerAPI.GetFingerIsGrabbing
bool Oculus::Interaction::IFingerAPI::GetFingerIsGrabbing(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IFingerAPI::GetFingerIsGrabbing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IFingerAPI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.IFingerAPI.GetFingerIsGrabbingChanged
bool Oculus::Interaction::IFingerAPI::GetFingerIsGrabbingChanged(::Oculus::Interaction::Input::HandFinger finger, bool targetPinchState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IFingerAPI::GetFingerIsGrabbingChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IFingerAPI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, finger, targetPinchState);
}
// Autogenerated method: Oculus.Interaction.IFingerAPI.GetFingerGrabScore
float Oculus::Interaction::IFingerAPI::GetFingerGrabScore(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IFingerAPI::GetFingerGrabScore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IFingerAPI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.IFingerAPI.GetWristOffsetLocal
::UnityEngine::Vector3 Oculus::Interaction::IFingerAPI::GetWristOffsetLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IFingerAPI::GetWristOffsetLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IFingerAPI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IFingerAPI.Update
void Oculus::Interaction::IFingerAPI::Update(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IFingerAPI::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IFingerAPI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.GrabStrengthIndicator
#include "Oculus/Interaction/GrabStrengthIndicator.hpp"
// Including type: Oculus.Interaction.HandGrab.IHandGrabInteractor
#include "Oculus/Interaction/HandGrab/IHandGrabInteractor.hpp"
// Including type: Oculus.Interaction.IInteractor
#include "Oculus/Interaction/IInteractor.hpp"
// Including type: Oculus.Interaction.MaterialPropertyBlockEditor
#include "Oculus/Interaction/MaterialPropertyBlockEditor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _handGrabInteractor
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::GrabStrengthIndicator::dyn__handGrabInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::dyn__handGrabInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handGrabInteractor"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.IHandGrabInteractor <HandGrab>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::IHandGrabInteractor*& Oculus::Interaction::GrabStrengthIndicator::dyn_$HandGrab$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::dyn_$HandGrab$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HandGrab>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::IHandGrabInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractor <Interactor>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractor*& Oculus::Interaction::GrabStrengthIndicator::dyn_$Interactor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::dyn_$Interactor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Interactor>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MaterialPropertyBlockEditor _handMaterialPropertyBlockEditor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MaterialPropertyBlockEditor*& Oculus::Interaction::GrabStrengthIndicator::dyn__handMaterialPropertyBlockEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::dyn__handMaterialPropertyBlockEditor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handMaterialPropertyBlockEditor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MaterialPropertyBlockEditor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _glowLerpSpeed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::GrabStrengthIndicator::dyn__glowLerpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::dyn__glowLerpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowLerpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _glowColorLerpSpeed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::GrabStrengthIndicator::dyn__glowColorLerpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::dyn__glowColorLerpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowColorLerpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _fingerGlowColorWithInteractable
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::GrabStrengthIndicator::dyn__fingerGlowColorWithInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::dyn__fingerGlowColorWithInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerGlowColorWithInteractable"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _fingerGlowColorWithNoInteractable
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::GrabStrengthIndicator::dyn__fingerGlowColorWithNoInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::dyn__fingerGlowColorWithNoInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerGlowColorWithNoInteractable"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _fingerGlowColorHover
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::GrabStrengthIndicator::dyn__fingerGlowColorHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::dyn__fingerGlowColorHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerGlowColorHover"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32[] _handShaderGlowPropertyIds
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Oculus::Interaction::GrabStrengthIndicator::dyn__handShaderGlowPropertyIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::dyn__handShaderGlowPropertyIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handShaderGlowPropertyIds"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _fingerGlowColorPropertyId
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::GrabStrengthIndicator::dyn__fingerGlowColorPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::dyn__fingerGlowColorPropertyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerGlowColorPropertyId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _currentGlowColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::GrabStrengthIndicator::dyn__currentGlowColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::dyn__currentGlowColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentGlowColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::GrabStrengthIndicator::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.get_HandGrab
::Oculus::Interaction::HandGrab::IHandGrabInteractor* Oculus::Interaction::GrabStrengthIndicator::get_HandGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::get_HandGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::IHandGrabInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.set_HandGrab
void Oculus::Interaction::GrabStrengthIndicator::set_HandGrab(::Oculus::Interaction::HandGrab::IHandGrabInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::set_HandGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HandGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.get_Interactor
::Oculus::Interaction::IInteractor* Oculus::Interaction::GrabStrengthIndicator::get_Interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::get_Interactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Interactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.set_Interactor
void Oculus::Interaction::GrabStrengthIndicator::set_Interactor(::Oculus::Interaction::IInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::set_Interactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Interactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.get_GlowLerpSpeed
float Oculus::Interaction::GrabStrengthIndicator::get_GlowLerpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::get_GlowLerpSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlowLerpSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.set_GlowLerpSpeed
void Oculus::Interaction::GrabStrengthIndicator::set_GlowLerpSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::set_GlowLerpSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlowLerpSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.get_GlowColorLerpSpeed
float Oculus::Interaction::GrabStrengthIndicator::get_GlowColorLerpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::get_GlowColorLerpSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlowColorLerpSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.set_GlowColorLerpSpeed
void Oculus::Interaction::GrabStrengthIndicator::set_GlowColorLerpSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::set_GlowColorLerpSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlowColorLerpSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.get_FingerGlowColorWithInteractable
::UnityEngine::Color Oculus::Interaction::GrabStrengthIndicator::get_FingerGlowColorWithInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::get_FingerGlowColorWithInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FingerGlowColorWithInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.set_FingerGlowColorWithInteractable
void Oculus::Interaction::GrabStrengthIndicator::set_FingerGlowColorWithInteractable(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::set_FingerGlowColorWithInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FingerGlowColorWithInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.get_FingerGlowColorWithNoInteractable
::UnityEngine::Color Oculus::Interaction::GrabStrengthIndicator::get_FingerGlowColorWithNoInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::get_FingerGlowColorWithNoInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FingerGlowColorWithNoInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.set_FingerGlowColorWithNoInteractable
void Oculus::Interaction::GrabStrengthIndicator::set_FingerGlowColorWithNoInteractable(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::set_FingerGlowColorWithNoInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FingerGlowColorWithNoInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.get_FingerGlowColorHover
::UnityEngine::Color Oculus::Interaction::GrabStrengthIndicator::get_FingerGlowColorHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::get_FingerGlowColorHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FingerGlowColorHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.set_FingerGlowColorHover
void Oculus::Interaction::GrabStrengthIndicator::set_FingerGlowColorHover(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::set_FingerGlowColorHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FingerGlowColorHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.Awake
void Oculus::Interaction::GrabStrengthIndicator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.Start
void Oculus::Interaction::GrabStrengthIndicator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::GrabStrengthIndicator*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.OnEnable
void Oculus::Interaction::GrabStrengthIndicator::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::GrabStrengthIndicator*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.OnDisable
void Oculus::Interaction::GrabStrengthIndicator::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::GrabStrengthIndicator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.UpdateVisual
void Oculus::Interaction::GrabStrengthIndicator::UpdateVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::UpdateVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.UpdateGlowValue
void Oculus::Interaction::GrabStrengthIndicator::UpdateGlowValue(int fingerIndex, float glowValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::UpdateGlowValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGlowValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fingerIndex), ::il2cpp_utils::ExtractType(glowValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fingerIndex, glowValue);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.InjectAllGrabStrengthIndicator
void Oculus::Interaction::GrabStrengthIndicator::InjectAllGrabStrengthIndicator(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::MaterialPropertyBlockEditor* handMaterialPropertyBlockEditor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::InjectAllGrabStrengthIndicator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllGrabStrengthIndicator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(handMaterialPropertyBlockEditor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handGrabInteractor, handMaterialPropertyBlockEditor);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.InjectHandGrab
void Oculus::Interaction::GrabStrengthIndicator::InjectHandGrab(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::InjectHandGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrab)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handGrab);
}
// Autogenerated method: Oculus.Interaction.GrabStrengthIndicator.InjectHandMaterialPropertyBlockEditor
void Oculus::Interaction::GrabStrengthIndicator::InjectHandMaterialPropertyBlockEditor(::Oculus::Interaction::MaterialPropertyBlockEditor* handMaterialPropertyBlockEditor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GrabStrengthIndicator::InjectHandMaterialPropertyBlockEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandMaterialPropertyBlockEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handMaterialPropertyBlockEditor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handMaterialPropertyBlockEditor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandFingerMaskGenerator
#include "Oculus/Interaction/HandFingerMaskGenerator.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: Oculus.Interaction.HandVisual
#include "Oculus/Interaction/HandVisual.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] _fingerLinesID
::ArrayW<int> Oculus::Interaction::HandFingerMaskGenerator::_get__fingerLinesID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandFingerMaskGenerator::_get__fingerLinesID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Oculus.Interaction", "HandFingerMaskGenerator", "_fingerLinesID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] _fingerLinesID
void Oculus::Interaction::HandFingerMaskGenerator::_set__fingerLinesID(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandFingerMaskGenerator::_set__fingerLinesID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandFingerMaskGenerator", "_fingerLinesID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] _palmFingerLinesID
::ArrayW<int> Oculus::Interaction::HandFingerMaskGenerator::_get__palmFingerLinesID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandFingerMaskGenerator::_get__palmFingerLinesID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Oculus.Interaction", "HandFingerMaskGenerator", "_palmFingerLinesID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] _palmFingerLinesID
void Oculus::Interaction::HandFingerMaskGenerator::_set__palmFingerLinesID(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandFingerMaskGenerator::_set__palmFingerLinesID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandFingerMaskGenerator", "_palmFingerLinesID", value));
}
// Autogenerated method: Oculus.Interaction.HandFingerMaskGenerator.HandednessMultiplier
float Oculus::Interaction::HandFingerMaskGenerator::HandednessMultiplier(::Oculus::Interaction::Input::Handedness hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandFingerMaskGenerator::HandednessMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "HandFingerMaskGenerator", "HandednessMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandFingerMaskGenerator.GenerateModelUV
::System::Collections::Generic::List_1<::UnityEngine::Vector2>* Oculus::Interaction::HandFingerMaskGenerator::GenerateModelUV(::Oculus::Interaction::Input::Handedness hand, ::UnityEngine::Mesh* sharedHandMesh, ByRef<::UnityEngine::Vector2> minPosition, ByRef<::UnityEngine::Vector2> maxPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandFingerMaskGenerator::GenerateModelUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "HandFingerMaskGenerator", "GenerateModelUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(sharedHandMesh), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector2>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hand, sharedHandMesh, byref(minPosition), byref(maxPosition));
}
// Autogenerated method: Oculus.Interaction.HandFingerMaskGenerator.getPositionOnRegion
::UnityEngine::Vector2 Oculus::Interaction::HandFingerMaskGenerator::getPositionOnRegion(::Oculus::Interaction::HandVisual* handVisual, ::Oculus::Interaction::Input::HandJointId jointId, ::UnityEngine::Vector2 minRegion, float sideLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandFingerMaskGenerator::getPositionOnRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "HandFingerMaskGenerator", "getPositionOnRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handVisual), ::il2cpp_utils::ExtractType(jointId), ::il2cpp_utils::ExtractType(minRegion), ::il2cpp_utils::ExtractType(sideLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handVisual, jointId, minRegion, sideLength);
}
// Autogenerated method: Oculus.Interaction.HandFingerMaskGenerator.GenerateLineData
::UnityEngine::Vector4 Oculus::Interaction::HandFingerMaskGenerator::GenerateLineData(::Oculus::Interaction::HandVisual* handVisual, ::Oculus::Interaction::Input::HandJointId jointIdStart, ::Oculus::Interaction::Input::HandJointId jointIdEnd, ::UnityEngine::Vector2 minRegion, float sideLength, float lineScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandFingerMaskGenerator::GenerateLineData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "HandFingerMaskGenerator", "GenerateLineData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handVisual), ::il2cpp_utils::ExtractType(jointIdStart), ::il2cpp_utils::ExtractType(jointIdEnd), ::il2cpp_utils::ExtractType(minRegion), ::il2cpp_utils::ExtractType(sideLength), ::il2cpp_utils::ExtractType(lineScale)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handVisual, jointIdStart, jointIdEnd, minRegion, sideLength, lineScale);
}
// Autogenerated method: Oculus.Interaction.HandFingerMaskGenerator.GenerateFingerLines
::ArrayW<::UnityEngine::Vector4> Oculus::Interaction::HandFingerMaskGenerator::GenerateFingerLines(::Oculus::Interaction::HandVisual* handVisual, ::UnityEngine::Vector2 minPosition, float maxLength, ::ArrayW<float> lineScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandFingerMaskGenerator::GenerateFingerLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "HandFingerMaskGenerator", "GenerateFingerLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handVisual), ::il2cpp_utils::ExtractType(minPosition), ::il2cpp_utils::ExtractType(maxLength), ::il2cpp_utils::ExtractType(lineScale)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector4>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handVisual, minPosition, maxLength, lineScale);
}
// Autogenerated method: Oculus.Interaction.HandFingerMaskGenerator.SetGlowModelUV
void Oculus::Interaction::HandFingerMaskGenerator::SetGlowModelUV(::UnityEngine::SkinnedMeshRenderer* handRenderer, ::Oculus::Interaction::HandVisual* handVisual, ByRef<::UnityEngine::Vector2> minPosition, ByRef<::UnityEngine::Vector2> maxPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandFingerMaskGenerator::SetGlowModelUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "HandFingerMaskGenerator", "SetGlowModelUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handRenderer), ::il2cpp_utils::ExtractType(handVisual), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handRenderer, handVisual, byref(minPosition), byref(maxPosition));
}
// Autogenerated method: Oculus.Interaction.HandFingerMaskGenerator.SetFingerMaskUniforms
void Oculus::Interaction::HandFingerMaskGenerator::SetFingerMaskUniforms(::Oculus::Interaction::HandVisual* handVisual, ::UnityEngine::MaterialPropertyBlock* materialPropertyBlock, ::UnityEngine::Vector2 minPosition, ::UnityEngine::Vector2 maxPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandFingerMaskGenerator::SetFingerMaskUniforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "HandFingerMaskGenerator", "SetFingerMaskUniforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handVisual), ::il2cpp_utils::ExtractType(materialPropertyBlock), ::il2cpp_utils::ExtractType(minPosition), ::il2cpp_utils::ExtractType(maxPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handVisual, materialPropertyBlock, minPosition, maxPosition);
}
// Autogenerated method: Oculus.Interaction.HandFingerMaskGenerator.GenerateFingerMask
void Oculus::Interaction::HandFingerMaskGenerator::GenerateFingerMask(::UnityEngine::SkinnedMeshRenderer* handRenderer, ::Oculus::Interaction::HandVisual* handVisual, ::UnityEngine::MaterialPropertyBlock* materialPropertyBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandFingerMaskGenerator::GenerateFingerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "HandFingerMaskGenerator", "GenerateFingerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handRenderer), ::il2cpp_utils::ExtractType(handVisual), ::il2cpp_utils::ExtractType(materialPropertyBlock)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handRenderer, handVisual, materialPropertyBlock);
}
// Autogenerated method: Oculus.Interaction.HandFingerMaskGenerator..cctor
void Oculus::Interaction::HandFingerMaskGenerator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandFingerMaskGenerator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "HandFingerMaskGenerator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrabGlow
#include "Oculus/Interaction/HandGrabGlow.hpp"
// Including type: Oculus.Interaction.GrabAPI.GrabbingRule
#include "Oculus/Interaction/GrabAPI/GrabbingRule.hpp"
// Including type: Oculus.Interaction.IInteractor
#include "Oculus/Interaction/IInteractor.hpp"
// Including type: Oculus.Interaction.HandGrab.IHandGrabInteractor
#include "Oculus/Interaction/HandGrab/IHandGrabInteractor.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: Oculus.Interaction.MaterialPropertyBlockEditor
#include "Oculus/Interaction/MaterialPropertyBlockEditor.hpp"
// Including type: Oculus.Interaction.HandVisual
#include "Oculus/Interaction/HandVisual.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _handGrabInteractor
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandGrabGlow::dyn__handGrabInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__handGrabInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handGrabInteractor"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _handRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& Oculus::Interaction::HandGrabGlow::dyn__handRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__handRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MaterialPropertyBlockEditor _materialEditor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MaterialPropertyBlockEditor*& Oculus::Interaction::HandGrabGlow::dyn__materialEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__materialEditor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialEditor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MaterialPropertyBlockEditor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandVisual _handVisual
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandVisual*& Oculus::Interaction::HandGrabGlow::dyn__handVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__handVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handVisual"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandVisual**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _glowColorGrabing
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::HandGrabGlow::dyn__glowColorGrabing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__glowColorGrabing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowColorGrabing"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _glowColorHover
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::HandGrabGlow::dyn__glowColorHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__glowColorHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowColorHover"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _colorChangeSpeed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrabGlow::dyn__colorChangeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__colorChangeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorChangeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _glowFadeStartTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrabGlow::dyn__glowFadeStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__glowFadeStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowFadeStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _glowStrengthChangeSpeed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrabGlow::dyn__glowStrengthChangeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__glowStrengthChangeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowStrengthChangeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fadeOut
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrabGlow::dyn__fadeOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__fadeOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _gradientLength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrabGlow::dyn__gradientLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__gradientLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gradientLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrabGlow/GlowType _glowType
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrabGlow::GlowType& Oculus::Interaction::HandGrabGlow::dyn__glowType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__glowType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowType"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrabGlow::GlowType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrabGlow/GlowState _state
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrabGlow::GlowState& Oculus::Interaction::HandGrabGlow::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrabGlow::GlowState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _accumulatedSelectedTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrabGlow::dyn__accumulatedSelectedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__accumulatedSelectedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accumulatedSelectedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrabGlow/GrabState _grabState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrabGlow::GrabState& Oculus::Interaction::HandGrabGlow::dyn__grabState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__grabState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrabGlow::GrabState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _glowFadeValue
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrabGlow::dyn__glowFadeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__glowFadeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowFadeValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _currentColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::HandGrabGlow::dyn__currentColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__currentColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.IHandGrabInteractor HandGrabInteractor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::IHandGrabInteractor*& Oculus::Interaction::HandGrabGlow::dyn_HandGrabInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn_HandGrabInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandGrabInteractor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::IHandGrabInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractor Interactor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractor*& Oculus::Interaction::HandGrabGlow::dyn_Interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn_Interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Interactor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _glowStregth
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Oculus::Interaction::HandGrabGlow::dyn__glowStregth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__glowStregth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowStregth"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _generateGlowID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrabGlow::dyn__generateGlowID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__generateGlowID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_generateGlowID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _glowColorID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrabGlow::dyn__glowColorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__glowColorID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowColorID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _glowTypeID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrabGlow::dyn__glowTypeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__glowTypeID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowTypeID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _glowParameterID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrabGlow::dyn__glowParameterID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__glowParameterID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowParameterID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32[] _fingersGlowIDs
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Oculus::Interaction::HandGrabGlow::dyn__fingersGlowIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__fingersGlowIDs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingersGlowIDs"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrabGlow::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.Awake
void Oculus::Interaction::HandGrabGlow::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrabGlow*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.Start
void Oculus::Interaction::HandGrabGlow::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrabGlow*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.OnEnable
void Oculus::Interaction::HandGrabGlow::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrabGlow*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.OnDisable
void Oculus::Interaction::HandGrabGlow::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrabGlow*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.SetMaterialPropertyBlockValues
void Oculus::Interaction::HandGrabGlow::SetMaterialPropertyBlockValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::SetMaterialPropertyBlockValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialPropertyBlockValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.UpdateFingerGlowStrength
void Oculus::Interaction::HandGrabGlow::UpdateFingerGlowStrength(int fingerIndex, float strength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::UpdateFingerGlowStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFingerGlowStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fingerIndex), ::il2cpp_utils::ExtractType(strength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fingerIndex, strength);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.FingerOptionalOrRequired
bool Oculus::Interaction::HandGrabGlow::FingerOptionalOrRequired(::Oculus::Interaction::GrabAPI::GrabbingRule rules, ::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::FingerOptionalOrRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FingerOptionalOrRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rules), ::il2cpp_utils::ExtractType(finger)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rules, finger);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.UpdateGlowStrength
void Oculus::Interaction::HandGrabGlow::UpdateGlowStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::UpdateGlowStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGlowStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.UpdateGlowState
void Oculus::Interaction::HandGrabGlow::UpdateGlowState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::UpdateGlowState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGlowState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.UpdateGlowColorAndFade
void Oculus::Interaction::HandGrabGlow::UpdateGlowColorAndFade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::UpdateGlowColorAndFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGlowColorAndFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.TargetSupportsPinch
bool Oculus::Interaction::HandGrabGlow::TargetSupportsPinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::TargetSupportsPinch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TargetSupportsPinch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.TargetSupportsPalm
bool Oculus::Interaction::HandGrabGlow::TargetSupportsPalm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::TargetSupportsPalm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TargetSupportsPalm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.UpdateGrabState
void Oculus::Interaction::HandGrabGlow::UpdateGrabState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::UpdateGrabState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGrabState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.ClearGlow
void Oculus::Interaction::HandGrabGlow::ClearGlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::ClearGlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearGlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.UpdateVisual
void Oculus::Interaction::HandGrabGlow::UpdateVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::UpdateVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.InjectAllHandGrabGlow
void Oculus::Interaction::HandGrabGlow::InjectAllHandGrabGlow(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::UnityEngine::SkinnedMeshRenderer* handRenderer, ::Oculus::Interaction::MaterialPropertyBlockEditor* materialEditor, ::Oculus::Interaction::HandVisual* handVisual, ::UnityEngine::Color grabbingColor, ::UnityEngine::Color hoverColor, float colorChangeSpeed, float fadeStartTime, float glowStrengthChangeSpeed, bool fadeOut, float gradientLength, ::Oculus::Interaction::HandGrabGlow::GlowType glowType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::InjectAllHandGrabGlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandGrabGlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(handRenderer), ::il2cpp_utils::ExtractType(materialEditor), ::il2cpp_utils::ExtractType(handVisual), ::il2cpp_utils::ExtractType(grabbingColor), ::il2cpp_utils::ExtractType(hoverColor), ::il2cpp_utils::ExtractType(colorChangeSpeed), ::il2cpp_utils::ExtractType(fadeStartTime), ::il2cpp_utils::ExtractType(glowStrengthChangeSpeed), ::il2cpp_utils::ExtractType(fadeOut), ::il2cpp_utils::ExtractType(gradientLength), ::il2cpp_utils::ExtractType(glowType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handGrabInteractor, handRenderer, materialEditor, handVisual, grabbingColor, hoverColor, colorChangeSpeed, fadeStartTime, glowStrengthChangeSpeed, fadeOut, gradientLength, glowType);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.InjectHandGrabInteractor
void Oculus::Interaction::HandGrabGlow::InjectHandGrabInteractor(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::InjectHandGrabInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandGrabInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handGrabInteractor);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.InjectHandRenderer
void Oculus::Interaction::HandGrabGlow::InjectHandRenderer(::UnityEngine::SkinnedMeshRenderer* handRenderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::InjectHandRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handRenderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handRenderer);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.InjectMaterialPropertyBlockEditor
void Oculus::Interaction::HandGrabGlow::InjectMaterialPropertyBlockEditor(::Oculus::Interaction::MaterialPropertyBlockEditor* materialEditor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::InjectMaterialPropertyBlockEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectMaterialPropertyBlockEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materialEditor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, materialEditor);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.InjectHandVisual
void Oculus::Interaction::HandGrabGlow::InjectHandVisual(::Oculus::Interaction::HandVisual* handVisual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::InjectHandVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handVisual)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handVisual);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.InjectGlowColors
void Oculus::Interaction::HandGrabGlow::InjectGlowColors(::UnityEngine::Color grabbingColor, ::UnityEngine::Color hoverColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::InjectGlowColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGlowColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabbingColor), ::il2cpp_utils::ExtractType(hoverColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbingColor, hoverColor);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.InjectVisualChangeSpeed
void Oculus::Interaction::HandGrabGlow::InjectVisualChangeSpeed(float colorChangeSpeed, float fadeStartTime, float glowStrengthChangeSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::InjectVisualChangeSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectVisualChangeSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorChangeSpeed), ::il2cpp_utils::ExtractType(fadeStartTime), ::il2cpp_utils::ExtractType(glowStrengthChangeSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorChangeSpeed, fadeStartTime, glowStrengthChangeSpeed);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.InjectFadeOut
void Oculus::Interaction::HandGrabGlow::InjectFadeOut(bool fadeOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::InjectFadeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectFadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeOut)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeOut);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.InjectGradientLength
void Oculus::Interaction::HandGrabGlow::InjectGradientLength(float gradientLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::InjectGradientLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGradientLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gradientLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gradientLength);
}
// Autogenerated method: Oculus.Interaction.HandGrabGlow.InjectGlowType
void Oculus::Interaction::HandGrabGlow::InjectGlowType(::Oculus::Interaction::HandGrabGlow::GlowType glowType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::InjectGlowType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGlowType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glowType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, glowType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrabGlow/GlowType
#include "Oculus/Interaction/HandGrabGlow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrabGlow/GlowType Fill
::Oculus::Interaction::HandGrabGlow::GlowType Oculus::Interaction::HandGrabGlow::GlowType::_get_Fill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowType::_get_Fill");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrabGlow::GlowType>("Oculus.Interaction", "HandGrabGlow/GlowType", "Fill"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrabGlow/GlowType Fill
void Oculus::Interaction::HandGrabGlow::GlowType::_set_Fill(::Oculus::Interaction::HandGrabGlow::GlowType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowType::_set_Fill");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandGrabGlow/GlowType", "Fill", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrabGlow/GlowType Outline
::Oculus::Interaction::HandGrabGlow::GlowType Oculus::Interaction::HandGrabGlow::GlowType::_get_Outline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowType::_get_Outline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrabGlow::GlowType>("Oculus.Interaction", "HandGrabGlow/GlowType", "Outline"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrabGlow/GlowType Outline
void Oculus::Interaction::HandGrabGlow::GlowType::_set_Outline(::Oculus::Interaction::HandGrabGlow::GlowType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowType::_set_Outline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandGrabGlow/GlowType", "Outline", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrabGlow/GlowType Both
::Oculus::Interaction::HandGrabGlow::GlowType Oculus::Interaction::HandGrabGlow::GlowType::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowType::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrabGlow::GlowType>("Oculus.Interaction", "HandGrabGlow/GlowType", "Both"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrabGlow/GlowType Both
void Oculus::Interaction::HandGrabGlow::GlowType::_set_Both(::Oculus::Interaction::HandGrabGlow::GlowType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowType::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandGrabGlow/GlowType", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrabGlow::GlowType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrabGlow/GlowState
#include "Oculus/Interaction/HandGrabGlow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrabGlow/GlowState None
::Oculus::Interaction::HandGrabGlow::GlowState Oculus::Interaction::HandGrabGlow::GlowState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrabGlow::GlowState>("Oculus.Interaction", "HandGrabGlow/GlowState", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrabGlow/GlowState None
void Oculus::Interaction::HandGrabGlow::GlowState::_set_None(::Oculus::Interaction::HandGrabGlow::GlowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandGrabGlow/GlowState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrabGlow/GlowState Hover
::Oculus::Interaction::HandGrabGlow::GlowState Oculus::Interaction::HandGrabGlow::GlowState::_get_Hover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowState::_get_Hover");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrabGlow::GlowState>("Oculus.Interaction", "HandGrabGlow/GlowState", "Hover"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrabGlow/GlowState Hover
void Oculus::Interaction::HandGrabGlow::GlowState::_set_Hover(::Oculus::Interaction::HandGrabGlow::GlowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowState::_set_Hover");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandGrabGlow/GlowState", "Hover", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrabGlow/GlowState Selected
::Oculus::Interaction::HandGrabGlow::GlowState Oculus::Interaction::HandGrabGlow::GlowState::_get_Selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowState::_get_Selected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrabGlow::GlowState>("Oculus.Interaction", "HandGrabGlow/GlowState", "Selected"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrabGlow/GlowState Selected
void Oculus::Interaction::HandGrabGlow::GlowState::_set_Selected(::Oculus::Interaction::HandGrabGlow::GlowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowState::_set_Selected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandGrabGlow/GlowState", "Selected", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrabGlow/GlowState SelectedGlowOut
::Oculus::Interaction::HandGrabGlow::GlowState Oculus::Interaction::HandGrabGlow::GlowState::_get_SelectedGlowOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowState::_get_SelectedGlowOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrabGlow::GlowState>("Oculus.Interaction", "HandGrabGlow/GlowState", "SelectedGlowOut"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrabGlow/GlowState SelectedGlowOut
void Oculus::Interaction::HandGrabGlow::GlowState::_set_SelectedGlowOut(::Oculus::Interaction::HandGrabGlow::GlowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowState::_set_SelectedGlowOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandGrabGlow/GlowState", "SelectedGlowOut", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrabGlow::GlowState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GlowState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrabGlow/GrabState
#include "Oculus/Interaction/HandGrabGlow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrabGlow/GrabState None
::Oculus::Interaction::HandGrabGlow::GrabState Oculus::Interaction::HandGrabGlow::GrabState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GrabState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrabGlow::GrabState>("Oculus.Interaction", "HandGrabGlow/GrabState", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrabGlow/GrabState None
void Oculus::Interaction::HandGrabGlow::GrabState::_set_None(::Oculus::Interaction::HandGrabGlow::GrabState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GrabState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandGrabGlow/GrabState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrabGlow/GrabState Pinch
::Oculus::Interaction::HandGrabGlow::GrabState Oculus::Interaction::HandGrabGlow::GrabState::_get_Pinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GrabState::_get_Pinch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrabGlow::GrabState>("Oculus.Interaction", "HandGrabGlow/GrabState", "Pinch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrabGlow/GrabState Pinch
void Oculus::Interaction::HandGrabGlow::GrabState::_set_Pinch(::Oculus::Interaction::HandGrabGlow::GrabState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GrabState::_set_Pinch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandGrabGlow/GrabState", "Pinch", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrabGlow/GrabState Palm
::Oculus::Interaction::HandGrabGlow::GrabState Oculus::Interaction::HandGrabGlow::GrabState::_get_Palm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GrabState::_get_Palm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrabGlow::GrabState>("Oculus.Interaction", "HandGrabGlow/GrabState", "Palm"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrabGlow/GrabState Palm
void Oculus::Interaction::HandGrabGlow::GrabState::_set_Palm(::Oculus::Interaction::HandGrabGlow::GrabState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GrabState::_set_Palm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandGrabGlow/GrabState", "Palm", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrabGlow::GrabState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrabGlow::GrabState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandPokeOvershootGlow
#include "Oculus/Interaction/HandPokeOvershootGlow.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.PokeInteractor
#include "Oculus/Interaction/PokeInteractor.hpp"
// Including type: Oculus.Interaction.HandVisual
#include "Oculus/Interaction/HandVisual.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: Oculus.Interaction.MaterialPropertyBlockEditor
#include "Oculus/Interaction/MaterialPropertyBlockEditor.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandPokeOvershootGlow::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PokeInteractor _pokeInteractor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PokeInteractor*& Oculus::Interaction::HandPokeOvershootGlow::dyn__pokeInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__pokeInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pokeInteractor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PokeInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandVisual _handVisual
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandVisual*& Oculus::Interaction::HandPokeOvershootGlow::dyn__handVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__handVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handVisual"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandVisual**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _handRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& Oculus::Interaction::HandPokeOvershootGlow::dyn__handRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__handRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MaterialPropertyBlockEditor _materialEditor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MaterialPropertyBlockEditor*& Oculus::Interaction::HandPokeOvershootGlow::dyn__materialEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__materialEditor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialEditor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MaterialPropertyBlockEditor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _glowColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::HandPokeOvershootGlow::dyn__glowColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__glowColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _overshootMaxDistance
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandPokeOvershootGlow::dyn__overshootMaxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__overshootMaxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overshootMaxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandFinger _pokeFinger
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandFinger& Oculus::Interaction::HandPokeOvershootGlow::dyn__pokeFinger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__pokeFinger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pokeFinger"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandFinger*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxGradientLength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandPokeOvershootGlow::dyn__maxGradientLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__maxGradientLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxGradientLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandPokeOvershootGlow/GlowType _glowType
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandPokeOvershootGlow::GlowType& Oculus::Interaction::HandPokeOvershootGlow::dyn__glowType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__glowType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowType"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandPokeOvershootGlow::GlowType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand Hand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandPokeOvershootGlow::dyn_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn_Hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _glowEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandPokeOvershootGlow::dyn__glowEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__glowEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _glowFingerIndexID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandPokeOvershootGlow::dyn__glowFingerIndexID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__glowFingerIndexID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowFingerIndexID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _generateGlowID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandPokeOvershootGlow::dyn__generateGlowID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__generateGlowID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_generateGlowID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _glowColorID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandPokeOvershootGlow::dyn__glowColorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__glowColorID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowColorID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _glowTypeID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandPokeOvershootGlow::dyn__glowTypeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__glowTypeID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowTypeID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _glowParameterID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandPokeOvershootGlow::dyn__glowParameterID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__glowParameterID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowParameterID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _glowMaxLengthID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandPokeOvershootGlow::dyn__glowMaxLengthID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__glowMaxLengthID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowMaxLengthID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandPokeOvershootGlow::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.Awake
void Oculus::Interaction::HandPokeOvershootGlow::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPokeOvershootGlow*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.Start
void Oculus::Interaction::HandPokeOvershootGlow::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPokeOvershootGlow*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.OnEnable
void Oculus::Interaction::HandPokeOvershootGlow::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPokeOvershootGlow*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.OnDisable
void Oculus::Interaction::HandPokeOvershootGlow::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPokeOvershootGlow*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.UpdateOvershoot
void Oculus::Interaction::HandPokeOvershootGlow::UpdateOvershoot(float normalizedDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::UpdateOvershoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOvershoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normalizedDistance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, normalizedDistance);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.UpdateVisual
void Oculus::Interaction::HandPokeOvershootGlow::UpdateVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::UpdateVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.InjectAllHandPokeOvershootGlow
void Oculus::Interaction::HandPokeOvershootGlow::InjectAllHandPokeOvershootGlow(::Oculus::Interaction::Input::IHand* hand, ::Oculus::Interaction::PokeInteractor* pokeInteractor, ::Oculus::Interaction::MaterialPropertyBlockEditor* materialEditor, ::UnityEngine::Color glowColor, float distanceMultiplier, ::UnityEngine::Transform* wristTransform, ::Oculus::Interaction::HandPokeOvershootGlow::GlowType glowType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::InjectAllHandPokeOvershootGlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandPokeOvershootGlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(pokeInteractor), ::il2cpp_utils::ExtractType(materialEditor), ::il2cpp_utils::ExtractType(glowColor), ::il2cpp_utils::ExtractType(distanceMultiplier), ::il2cpp_utils::ExtractType(wristTransform), ::il2cpp_utils::ExtractType(glowType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, pokeInteractor, materialEditor, glowColor, distanceMultiplier, wristTransform, glowType);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.InjectAllHandPokeOvershootGlow
void Oculus::Interaction::HandPokeOvershootGlow::InjectAllHandPokeOvershootGlow(::Oculus::Interaction::Input::IHand* hand, ::Oculus::Interaction::PokeInteractor* pokeInteractor, ::Oculus::Interaction::HandVisual* handVisual, ::UnityEngine::SkinnedMeshRenderer* handRenderer, ::Oculus::Interaction::MaterialPropertyBlockEditor* materialEditor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::InjectAllHandPokeOvershootGlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandPokeOvershootGlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(pokeInteractor), ::il2cpp_utils::ExtractType(handVisual), ::il2cpp_utils::ExtractType(handRenderer), ::il2cpp_utils::ExtractType(materialEditor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, pokeInteractor, handVisual, handRenderer, materialEditor);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.InjectHand
void Oculus::Interaction::HandPokeOvershootGlow::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.InjectPokeInteractor
void Oculus::Interaction::HandPokeOvershootGlow::InjectPokeInteractor(::Oculus::Interaction::PokeInteractor* pokeInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::InjectPokeInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPokeInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pokeInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pokeInteractor);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.InjectHandRenderer
void Oculus::Interaction::HandPokeOvershootGlow::InjectHandRenderer(::UnityEngine::SkinnedMeshRenderer* handRenderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::InjectHandRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handRenderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handRenderer);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.InjectHandVisual
void Oculus::Interaction::HandPokeOvershootGlow::InjectHandVisual(::Oculus::Interaction::HandVisual* handVisual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::InjectHandVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handVisual)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handVisual);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.InjectMaterialPropertyBlockEditor
void Oculus::Interaction::HandPokeOvershootGlow::InjectMaterialPropertyBlockEditor(::Oculus::Interaction::MaterialPropertyBlockEditor* materialEditor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::InjectMaterialPropertyBlockEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectMaterialPropertyBlockEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materialEditor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, materialEditor);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.InjectGlowColor
void Oculus::Interaction::HandPokeOvershootGlow::InjectGlowColor(::UnityEngine::Color glowColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::InjectGlowColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGlowColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glowColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, glowColor);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.InjectOvershootMaxDistance
void Oculus::Interaction::HandPokeOvershootGlow::InjectOvershootMaxDistance(float overshootMaxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::InjectOvershootMaxDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOvershootMaxDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overshootMaxDistance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, overshootMaxDistance);
}
// Autogenerated method: Oculus.Interaction.HandPokeOvershootGlow.InjectGlowType
void Oculus::Interaction::HandPokeOvershootGlow::InjectGlowType(::Oculus::Interaction::HandPokeOvershootGlow::GlowType glowType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::InjectGlowType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGlowType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glowType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, glowType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandPokeOvershootGlow/GlowType
#include "Oculus/Interaction/HandPokeOvershootGlow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandPokeOvershootGlow/GlowType Fill
::Oculus::Interaction::HandPokeOvershootGlow::GlowType Oculus::Interaction::HandPokeOvershootGlow::GlowType::_get_Fill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::GlowType::_get_Fill");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandPokeOvershootGlow::GlowType>("Oculus.Interaction", "HandPokeOvershootGlow/GlowType", "Fill"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandPokeOvershootGlow/GlowType Fill
void Oculus::Interaction::HandPokeOvershootGlow::GlowType::_set_Fill(::Oculus::Interaction::HandPokeOvershootGlow::GlowType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::GlowType::_set_Fill");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandPokeOvershootGlow/GlowType", "Fill", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandPokeOvershootGlow/GlowType Outline
::Oculus::Interaction::HandPokeOvershootGlow::GlowType Oculus::Interaction::HandPokeOvershootGlow::GlowType::_get_Outline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::GlowType::_get_Outline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandPokeOvershootGlow::GlowType>("Oculus.Interaction", "HandPokeOvershootGlow/GlowType", "Outline"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandPokeOvershootGlow/GlowType Outline
void Oculus::Interaction::HandPokeOvershootGlow::GlowType::_set_Outline(::Oculus::Interaction::HandPokeOvershootGlow::GlowType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::GlowType::_set_Outline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandPokeOvershootGlow/GlowType", "Outline", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandPokeOvershootGlow/GlowType Both
::Oculus::Interaction::HandPokeOvershootGlow::GlowType Oculus::Interaction::HandPokeOvershootGlow::GlowType::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::GlowType::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandPokeOvershootGlow::GlowType>("Oculus.Interaction", "HandPokeOvershootGlow/GlowType", "Both"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandPokeOvershootGlow/GlowType Both
void Oculus::Interaction::HandPokeOvershootGlow::GlowType::_set_Both(::Oculus::Interaction::HandPokeOvershootGlow::GlowType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::GlowType::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandPokeOvershootGlow/GlowType", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandPokeOvershootGlow::GlowType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPokeOvershootGlow::GlowType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandRayPinchGlow
#include "Oculus/Interaction/HandRayPinchGlow.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.RayInteractor
#include "Oculus/Interaction/RayInteractor.hpp"
// Including type: Oculus.Interaction.MaterialPropertyBlockEditor
#include "Oculus/Interaction/MaterialPropertyBlockEditor.hpp"
// Including type: Oculus.Interaction.InteractorStateChangeArgs
#include "Oculus/Interaction/InteractorStateChangeArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandRayPinchGlow::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.RayInteractor _rayInteractor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::RayInteractor*& Oculus::Interaction::HandRayPinchGlow::dyn__rayInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::dyn__rayInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rayInteractor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::RayInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MaterialPropertyBlockEditor _materialEditor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MaterialPropertyBlockEditor*& Oculus::Interaction::HandRayPinchGlow::dyn__materialEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::dyn__materialEditor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialEditor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MaterialPropertyBlockEditor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _glowColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::HandRayPinchGlow::dyn__glowColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::dyn__glowColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandRayPinchGlow/GlowType _glowType
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandRayPinchGlow::GlowType& Oculus::Interaction::HandRayPinchGlow::dyn__glowType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::dyn__glowType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowType"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandRayPinchGlow::GlowType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand Hand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandRayPinchGlow::dyn_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::dyn_Hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _generateGlowID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandRayPinchGlow::dyn__generateGlowID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::dyn__generateGlowID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_generateGlowID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _glowPositionID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandRayPinchGlow::dyn__glowPositionID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::dyn__glowPositionID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowPositionID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _glowColorID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandRayPinchGlow::dyn__glowColorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::dyn__glowColorID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowColorID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _glowTypeID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandRayPinchGlow::dyn__glowTypeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::dyn__glowTypeID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowTypeID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _glowParameterID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandRayPinchGlow::dyn__glowParameterID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::dyn__glowParameterID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowParameterID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _glowMaxLengthID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandRayPinchGlow::dyn__glowMaxLengthID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::dyn__glowMaxLengthID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowMaxLengthID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _glowEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandRayPinchGlow::dyn__glowEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::dyn__glowEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandRayPinchGlow::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandRayPinchGlow.Awake
void Oculus::Interaction::HandRayPinchGlow::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandRayPinchGlow*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandRayPinchGlow.Start
void Oculus::Interaction::HandRayPinchGlow::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandRayPinchGlow*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandRayPinchGlow.OnEnable
void Oculus::Interaction::HandRayPinchGlow::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandRayPinchGlow*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandRayPinchGlow.OnDisable
void Oculus::Interaction::HandRayPinchGlow::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandRayPinchGlow*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandRayPinchGlow.UpdateVisualState
void Oculus::Interaction::HandRayPinchGlow::UpdateVisualState(::Oculus::Interaction::InteractorStateChangeArgs args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::UpdateVisualState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisualState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.HandRayPinchGlow.UpdateGlow
void Oculus::Interaction::HandRayPinchGlow::UpdateGlow(::UnityEngine::Vector3 glowPosition, float pinchStrength, float glowMaxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::UpdateGlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glowPosition), ::il2cpp_utils::ExtractType(pinchStrength), ::il2cpp_utils::ExtractType(glowMaxLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, glowPosition, pinchStrength, glowMaxLength);
}
// Autogenerated method: Oculus.Interaction.HandRayPinchGlow.UpdateVisual
void Oculus::Interaction::HandRayPinchGlow::UpdateVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::UpdateVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandRayPinchGlow.InjectAllHandRayPinchGlow
void Oculus::Interaction::HandRayPinchGlow::InjectAllHandRayPinchGlow(::Oculus::Interaction::Input::IHand* hand, ::Oculus::Interaction::RayInteractor* interactor, ::Oculus::Interaction::MaterialPropertyBlockEditor* materialEditor, ::UnityEngine::Color color, ::Oculus::Interaction::HandRayPinchGlow::GlowType glowType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::InjectAllHandRayPinchGlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandRayPinchGlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(materialEditor), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(glowType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, interactor, materialEditor, color, glowType);
}
// Autogenerated method: Oculus.Interaction.HandRayPinchGlow.InjectHand
void Oculus::Interaction::HandRayPinchGlow::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandRayPinchGlow.InjectRayInteractor
void Oculus::Interaction::HandRayPinchGlow::InjectRayInteractor(::Oculus::Interaction::RayInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::InjectRayInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRayInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.HandRayPinchGlow.InjectMaterialPropertyBlockEditor
void Oculus::Interaction::HandRayPinchGlow::InjectMaterialPropertyBlockEditor(::Oculus::Interaction::MaterialPropertyBlockEditor* materialEditor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::InjectMaterialPropertyBlockEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectMaterialPropertyBlockEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materialEditor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, materialEditor);
}
// Autogenerated method: Oculus.Interaction.HandRayPinchGlow.InjectGlowColor
void Oculus::Interaction::HandRayPinchGlow::InjectGlowColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::InjectGlowColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGlowColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: Oculus.Interaction.HandRayPinchGlow.InjectGlowType
void Oculus::Interaction::HandRayPinchGlow::InjectGlowType(::Oculus::Interaction::HandRayPinchGlow::GlowType glowType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::InjectGlowType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGlowType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glowType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, glowType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandRayPinchGlow/GlowType
#include "Oculus/Interaction/HandRayPinchGlow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandRayPinchGlow/GlowType Fill
::Oculus::Interaction::HandRayPinchGlow::GlowType Oculus::Interaction::HandRayPinchGlow::GlowType::_get_Fill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::GlowType::_get_Fill");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandRayPinchGlow::GlowType>("Oculus.Interaction", "HandRayPinchGlow/GlowType", "Fill"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandRayPinchGlow/GlowType Fill
void Oculus::Interaction::HandRayPinchGlow::GlowType::_set_Fill(::Oculus::Interaction::HandRayPinchGlow::GlowType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::GlowType::_set_Fill");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandRayPinchGlow/GlowType", "Fill", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandRayPinchGlow/GlowType Outline
::Oculus::Interaction::HandRayPinchGlow::GlowType Oculus::Interaction::HandRayPinchGlow::GlowType::_get_Outline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::GlowType::_get_Outline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandRayPinchGlow::GlowType>("Oculus.Interaction", "HandRayPinchGlow/GlowType", "Outline"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandRayPinchGlow/GlowType Outline
void Oculus::Interaction::HandRayPinchGlow::GlowType::_set_Outline(::Oculus::Interaction::HandRayPinchGlow::GlowType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::GlowType::_set_Outline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandRayPinchGlow/GlowType", "Outline", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandRayPinchGlow/GlowType Both
::Oculus::Interaction::HandRayPinchGlow::GlowType Oculus::Interaction::HandRayPinchGlow::GlowType::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::GlowType::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandRayPinchGlow::GlowType>("Oculus.Interaction", "HandRayPinchGlow/GlowType", "Both"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandRayPinchGlow/GlowType Both
void Oculus::Interaction::HandRayPinchGlow::GlowType::_set_Both(::Oculus::Interaction::HandRayPinchGlow::GlowType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::GlowType::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandRayPinchGlow/GlowType", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandRayPinchGlow::GlowType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandRayPinchGlow::GlowType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Axis1DPrioritySelector
#include "Oculus/Interaction/Axis1DPrioritySelector.hpp"
// Including type: Oculus.Interaction.Axis1DPrioritySelector/AxisData
#include "Oculus/Interaction/Axis1DPrioritySelector_AxisData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Axis1DPrioritySelector/AxisData[] _axisData
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::Axis1DPrioritySelector::AxisData*>& Oculus::Interaction::Axis1DPrioritySelector::dyn__axisData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::dyn__axisData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_axisData"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::Axis1DPrioritySelector::AxisData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _fallbackIfNoMatchAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Axis1DPrioritySelector::dyn__fallbackIfNoMatchAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::dyn__fallbackIfNoMatchAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fallbackIfNoMatchAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IAxis1D FallbackIfNoMatchAxis
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IAxis1D*& Oculus::Interaction::Axis1DPrioritySelector::dyn_FallbackIfNoMatchAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::dyn_FallbackIfNoMatchAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FallbackIfNoMatchAxis"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IAxis1D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Axis1DPrioritySelector/AxisData ActiveAxis
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Axis1DPrioritySelector::AxisData*& Oculus::Interaction::Axis1DPrioritySelector::dyn_ActiveAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::dyn_ActiveAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveAxis"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Axis1DPrioritySelector::AxisData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Axis1DPrioritySelector.get_Current
::Oculus::Interaction::Input::IAxis1D* Oculus::Interaction::Axis1DPrioritySelector::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IAxis1D*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis1DPrioritySelector.Awake
void Oculus::Interaction::Axis1DPrioritySelector::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Axis1DPrioritySelector*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis1DPrioritySelector.Start
void Oculus::Interaction::Axis1DPrioritySelector::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Axis1DPrioritySelector*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis1DPrioritySelector.Value
float Oculus::Interaction::Axis1DPrioritySelector::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Axis1DPrioritySelector*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis1DPrioritySelector.GetActiveAxis
::Oculus::Interaction::Input::IAxis1D* Oculus::Interaction::Axis1DPrioritySelector::GetActiveAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::GetActiveAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActiveAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IAxis1D*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis1DPrioritySelector.InjectAll
void Oculus::Interaction::Axis1DPrioritySelector::InjectAll(::ArrayW<::Oculus::Interaction::Axis1DPrioritySelector::AxisData*> axisData, ::Oculus::Interaction::Input::IAxis1D* fallbackIfNoMatchAxis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::InjectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axisData), ::il2cpp_utils::ExtractType(fallbackIfNoMatchAxis)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axisData, fallbackIfNoMatchAxis);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Axis1DPrioritySelector/AxisData
#include "Oculus/Interaction/Axis1DPrioritySelector_AxisData.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
// Including type: Oculus.Interaction.Input.IAxis1D
#include "Oculus/Interaction/Input/IAxis1D.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _activeState
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Axis1DPrioritySelector::AxisData::dyn__activeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::AxisData::dyn__activeState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeState"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.IActiveState ActiveState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& Oculus::Interaction::Axis1DPrioritySelector::AxisData::dyn_ActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::AxisData::dyn_ActiveState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _axis
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Axis1DPrioritySelector::AxisData::dyn__axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::AxisData::dyn__axis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_axis"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.IAxis1D Axis
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IAxis1D*& Oculus::Interaction::Axis1DPrioritySelector::AxisData::dyn_Axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::AxisData::dyn_Axis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Axis"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IAxis1D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Axis1DPrioritySelector/AxisData.Initialize
void Oculus::Interaction::Axis1DPrioritySelector::AxisData::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::AxisData::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis1DPrioritySelector/AxisData.Validate
void Oculus::Interaction::Axis1DPrioritySelector::AxisData::Validate(::UnityEngine::Component* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DPrioritySelector::AxisData::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Axis1DSwitch
#include "Oculus/Interaction/Axis1DSwitch.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _activeState
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Axis1DSwitch::dyn__activeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DSwitch::dyn__activeState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeState"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IActiveState ActiveState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& Oculus::Interaction::Axis1DSwitch::dyn_ActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DSwitch::dyn_ActiveState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _axisWhenActive
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Axis1DSwitch::dyn__axisWhenActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DSwitch::dyn__axisWhenActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_axisWhenActive"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _axisWhenInactive
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Axis1DSwitch::dyn__axisWhenInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DSwitch::dyn__axisWhenInactive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_axisWhenInactive"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Oculus.Interaction.Input.IAxis1D AxisWhenActive
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IAxis1D*& Oculus::Interaction::Axis1DSwitch::dyn_AxisWhenActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DSwitch::dyn_AxisWhenActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AxisWhenActive"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IAxis1D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Oculus.Interaction.Input.IAxis1D AxisWhenInactive
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IAxis1D*& Oculus::Interaction::Axis1DSwitch::dyn_AxisWhenInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DSwitch::dyn_AxisWhenInactive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AxisWhenInactive"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IAxis1D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Axis1DSwitch.get_Current
::Oculus::Interaction::Input::IAxis1D* Oculus::Interaction::Axis1DSwitch::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DSwitch::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IAxis1D*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis1DSwitch.Awake
void Oculus::Interaction::Axis1DSwitch::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DSwitch::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Axis1DSwitch*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis1DSwitch.Start
void Oculus::Interaction::Axis1DSwitch::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DSwitch::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Axis1DSwitch*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis1DSwitch.Value
float Oculus::Interaction::Axis1DSwitch::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DSwitch::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Axis1DSwitch*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis1DSwitch.InjectAllAxis1DSwitch
void Oculus::Interaction::Axis1DSwitch::InjectAllAxis1DSwitch(::Oculus::Interaction::IActiveState* activeState, ::Oculus::Interaction::Input::IAxis1D* axisWhenActive, ::Oculus::Interaction::Input::IAxis1D* axisWhenInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DSwitch::InjectAllAxis1DSwitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllAxis1DSwitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState), ::il2cpp_utils::ExtractType(axisWhenActive), ::il2cpp_utils::ExtractType(axisWhenInactive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState, axisWhenActive, axisWhenInactive);
}
// Autogenerated method: Oculus.Interaction.Axis1DSwitch.InjectActiveState
void Oculus::Interaction::Axis1DSwitch::InjectActiveState(::Oculus::Interaction::IActiveState* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DSwitch::InjectActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState);
}
// Autogenerated method: Oculus.Interaction.Axis1DSwitch.InjectAxisWhenActive
void Oculus::Interaction::Axis1DSwitch::InjectAxisWhenActive(::Oculus::Interaction::Input::IAxis1D* axisWhenActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DSwitch::InjectAxisWhenActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAxisWhenActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axisWhenActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axisWhenActive);
}
// Autogenerated method: Oculus.Interaction.Axis1DSwitch.InjectAxisWhenInactive
void Oculus::Interaction::Axis1DSwitch::InjectAxisWhenInactive(::Oculus::Interaction::Input::IAxis1D* axisWhenInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis1DSwitch::InjectAxisWhenInactive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAxisWhenInactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axisWhenInactive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axisWhenInactive);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ActiveStateGate
#include "Oculus/Interaction/ActiveStateGate.hpp"
// Including type: Oculus.Interaction.ISelector
#include "Oculus/Interaction/ISelector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _openSelector
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::ActiveStateGate::dyn__openSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::dyn__openSelector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_openSelector"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ISelector <OpenSelector>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ISelector*& Oculus::Interaction::ActiveStateGate::dyn_$OpenSelector$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::dyn_$OpenSelector$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OpenSelector>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ISelector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _closeSelector
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::ActiveStateGate::dyn__closeSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::dyn__closeSelector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeSelector"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ISelector <CloseSelector>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ISelector*& Oculus::Interaction::ActiveStateGate::dyn_$CloseSelector$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::dyn_$CloseSelector$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CloseSelector>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ISelector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Active>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ActiveStateGate::dyn_$Active$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::dyn_$Active$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Active>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ActiveStateGate::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGate.get_OpenSelector
::Oculus::Interaction::ISelector* Oculus::Interaction::ActiveStateGate::get_OpenSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::get_OpenSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OpenSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::ISelector*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGate.set_OpenSelector
void Oculus::Interaction::ActiveStateGate::set_OpenSelector(::Oculus::Interaction::ISelector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::set_OpenSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OpenSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGate.get_CloseSelector
::Oculus::Interaction::ISelector* Oculus::Interaction::ActiveStateGate::get_CloseSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::get_CloseSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CloseSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::ISelector*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGate.set_CloseSelector
void Oculus::Interaction::ActiveStateGate::set_CloseSelector(::Oculus::Interaction::ISelector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::set_CloseSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CloseSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGate.get_Active
bool Oculus::Interaction::ActiveStateGate::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateGate*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGate.set_Active
void Oculus::Interaction::ActiveStateGate::set_Active(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::set_Active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGate.Awake
void Oculus::Interaction::ActiveStateGate::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateGate*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGate.Start
void Oculus::Interaction::ActiveStateGate::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateGate*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGate.OnEnable
void Oculus::Interaction::ActiveStateGate::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGate.OnDisable
void Oculus::Interaction::ActiveStateGate::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGate.HandleOpenSelected
void Oculus::Interaction::ActiveStateGate::HandleOpenSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::HandleOpenSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOpenSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGate.HandleCloseSelected
void Oculus::Interaction::ActiveStateGate::HandleCloseSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::HandleCloseSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCloseSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGate.InjectAllActiveStateGate
void Oculus::Interaction::ActiveStateGate::InjectAllActiveStateGate(::Oculus::Interaction::ISelector* openSelector, ::Oculus::Interaction::ISelector* closeSelector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::InjectAllActiveStateGate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllActiveStateGate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(openSelector), ::il2cpp_utils::ExtractType(closeSelector)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, openSelector, closeSelector);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGate.InjectOpenState
void Oculus::Interaction::ActiveStateGate::InjectOpenState(::Oculus::Interaction::ISelector* openSelector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::InjectOpenState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOpenState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(openSelector)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, openSelector);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGate.InjectCloseState
void Oculus::Interaction::ActiveStateGate::InjectCloseState(::Oculus::Interaction::ISelector* closeSelector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGate::InjectCloseState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectCloseState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(closeSelector)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, closeSelector);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ActiveStateGroup
#include "Oculus/Interaction/ActiveStateGroup.hpp"
// Including type: Oculus.Interaction.ActiveStateGroup/DebugModel
#include "Oculus/Interaction/ActiveStateGroup_DebugModel.hpp"
// Including type: Oculus.Interaction.ActiveStateGroup/<>c
#include "Oculus/Interaction/ActiveStateGroup_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> _activeStates
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& Oculus::Interaction::ActiveStateGroup::dyn__activeStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::dyn__activeStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeStates"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.IActiveState> ActiveStates
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::IActiveState*>*& Oculus::Interaction::ActiveStateGroup::dyn_ActiveStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::dyn_ActiveStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveStates"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::IActiveState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ActiveStateGroup/ActiveStateGroupLogicOperator _logicOperator
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator& Oculus::Interaction::ActiveStateGroup::dyn__logicOperator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::dyn__logicOperator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logicOperator"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGroup.Awake
void Oculus::Interaction::ActiveStateGroup::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateGroup*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGroup.Start
void Oculus::Interaction::ActiveStateGroup::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateGroup*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGroup.get_Active
bool Oculus::Interaction::ActiveStateGroup::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateGroup*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGroup..cctor
void Oculus::Interaction::ActiveStateGroup::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "ActiveStateGroup", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGroup.InjectAllActiveStateGroup
void Oculus::Interaction::ActiveStateGroup::InjectAllActiveStateGroup(::System::Collections::Generic::List_1<::Oculus::Interaction::IActiveState*>* activeStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::InjectAllActiveStateGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllActiveStateGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeStates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeStates);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGroup.InjectActiveStates
void Oculus::Interaction::ActiveStateGroup::InjectActiveStates(::System::Collections::Generic::List_1<::Oculus::Interaction::IActiveState*>* activeStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::InjectActiveStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectActiveStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeStates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeStates);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGroup.InjectOptionalLogicOperator
void Oculus::Interaction::ActiveStateGroup::InjectOptionalLogicOperator(::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator logicOperator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::InjectOptionalLogicOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalLogicOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logicOperator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logicOperator);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ActiveStateGroup/ActiveStateGroupLogicOperator
#include "Oculus/Interaction/ActiveStateGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.ActiveStateGroup/ActiveStateGroupLogicOperator AND
::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator::_get_AND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator::_get_AND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator>("Oculus.Interaction", "ActiveStateGroup/ActiveStateGroupLogicOperator", "AND"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.ActiveStateGroup/ActiveStateGroupLogicOperator AND
void Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator::_set_AND(::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator::_set_AND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "ActiveStateGroup/ActiveStateGroupLogicOperator", "AND", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.ActiveStateGroup/ActiveStateGroupLogicOperator OR
::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator::_get_OR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator::_get_OR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator>("Oculus.Interaction", "ActiveStateGroup/ActiveStateGroupLogicOperator", "OR"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.ActiveStateGroup/ActiveStateGroupLogicOperator OR
void Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator::_set_OR(::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator::_set_OR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "ActiveStateGroup/ActiveStateGroupLogicOperator", "OR", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.ActiveStateGroup/ActiveStateGroupLogicOperator XOR
::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator::_get_XOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator::_get_XOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator>("Oculus.Interaction", "ActiveStateGroup/ActiveStateGroupLogicOperator", "XOR"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.ActiveStateGroup/ActiveStateGroupLogicOperator XOR
void Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator::_set_XOR(::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator::_set_XOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "ActiveStateGroup/ActiveStateGroupLogicOperator", "XOR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::ActiveStateGroupLogicOperator::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ActiveStateGroup/DebugModel
#include "Oculus/Interaction/ActiveStateGroup_DebugModel.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.ActiveStateGroup/DebugModel.GetChildren
::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IActiveState*>* Oculus::Interaction::ActiveStateGroup::DebugModel::GetChildren(::Oculus::Interaction::ActiveStateGroup* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::DebugModel::GetChildren");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateGroup::DebugModel*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IActiveState*>*, false>(this, ___internal__method, activeState);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ActiveStateGroup/<>c
#include "Oculus/Interaction/ActiveStateGroup_--c.hpp"
// Including type: System.Converter`2
#include "System/Converter_2.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.ActiveStateGroup/<>c <>9
::Oculus::Interaction::ActiveStateGroup::$$c* Oculus::Interaction::ActiveStateGroup::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::ActiveStateGroup::$$c*>("Oculus.Interaction", "ActiveStateGroup/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.ActiveStateGroup/<>c <>9
void Oculus::Interaction::ActiveStateGroup::$$c::_set_$$9(::Oculus::Interaction::ActiveStateGroup::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ActiveStateGroup/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.IActiveState> <>9__4_0
::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IActiveState*>* Oculus::Interaction::ActiveStateGroup::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IActiveState*>*>("Oculus.Interaction", "ActiveStateGroup/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.IActiveState> <>9__4_0
void Oculus::Interaction::ActiveStateGroup::$$c::_set_$$9__4_0(::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IActiveState*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ActiveStateGroup/<>c", "<>9__4_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Converter`2<Oculus.Interaction.IActiveState,UnityEngine.Object> <>9__11_0
::System::Converter_2<::Oculus::Interaction::IActiveState*, ::UnityEngine::Object*>* Oculus::Interaction::ActiveStateGroup::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::Oculus::Interaction::IActiveState*, ::UnityEngine::Object*>*>("Oculus.Interaction", "ActiveStateGroup/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Converter`2<Oculus.Interaction.IActiveState,UnityEngine.Object> <>9__11_0
void Oculus::Interaction::ActiveStateGroup::$$c::_set_$$9__11_0(::System::Converter_2<::Oculus::Interaction::IActiveState*, ::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ActiveStateGroup/<>c", "<>9__11_0", value)));
}
// Autogenerated method: Oculus.Interaction.ActiveStateGroup/<>c..cctor
void Oculus::Interaction::ActiveStateGroup::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "ActiveStateGroup/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGroup/<>c.<Awake>b__4_0
::Oculus::Interaction::IActiveState* Oculus::Interaction::ActiveStateGroup::$$c::$Awake$b__4_0(::UnityEngine::Object* mono) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::$$c::<Awake>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IActiveState*, false>(this, ___internal__method, mono);
}
// Autogenerated method: Oculus.Interaction.ActiveStateGroup/<>c.<InjectActiveStates>b__11_0
::UnityEngine::Object* Oculus::Interaction::ActiveStateGroup::$$c::$InjectActiveStates$b__11_0(::Oculus::Interaction::IActiveState* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateGroup::$$c::<InjectActiveStates>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InjectActiveStates>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, activeState);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ActiveStateNot
#include "Oculus/Interaction/ActiveStateNot.hpp"
// Including type: Oculus.Interaction.ActiveStateNot/DebugModel
#include "Oculus/Interaction/ActiveStateNot_DebugModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _activeState
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::ActiveStateNot::dyn__activeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateNot::dyn__activeState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeState"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IActiveState ActiveState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& Oculus::Interaction::ActiveStateNot::dyn_ActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateNot::dyn_ActiveState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ActiveStateNot.Awake
void Oculus::Interaction::ActiveStateNot::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateNot::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateNot*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateNot.Start
void Oculus::Interaction::ActiveStateNot::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateNot::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateNot*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateNot.get_Active
bool Oculus::Interaction::ActiveStateNot::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateNot::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateNot*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateNot..cctor
void Oculus::Interaction::ActiveStateNot::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateNot::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "ActiveStateNot", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateNot.InjectAllActiveStateNot
void Oculus::Interaction::ActiveStateNot::InjectAllActiveStateNot(::Oculus::Interaction::IActiveState* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateNot::InjectAllActiveStateNot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllActiveStateNot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState);
}
// Autogenerated method: Oculus.Interaction.ActiveStateNot.InjectActiveState
void Oculus::Interaction::ActiveStateNot::InjectActiveState(::Oculus::Interaction::IActiveState* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateNot::InjectActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ActiveStateNot/DebugModel
#include "Oculus/Interaction/ActiveStateNot_DebugModel.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.ActiveStateNot/DebugModel.GetChildren
::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IActiveState*>* Oculus::Interaction::ActiveStateNot::DebugModel::GetChildren(::Oculus::Interaction::ActiveStateNot* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateNot::DebugModel::GetChildren");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateNot::DebugModel*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IActiveState*>*, false>(this, ___internal__method, activeState);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ActiveStateSelector
#include "Oculus/Interaction/ActiveStateSelector.hpp"
// Including type: Oculus.Interaction.ActiveStateSelector/<>c
#include "Oculus/Interaction/ActiveStateSelector_--c.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _activeState
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::ActiveStateSelector::dyn__activeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::dyn__activeState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeState"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IActiveState <ActiveState>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& Oculus::Interaction::ActiveStateSelector::dyn_$ActiveState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::dyn_$ActiveState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ActiveState>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selecting
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ActiveStateSelector::dyn__selecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::dyn__selecting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selecting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenSelected
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::ActiveStateSelector::dyn_WhenSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::dyn_WhenSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenSelected"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenUnselected
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::ActiveStateSelector::dyn_WhenUnselected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::dyn_WhenUnselected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenUnselected"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ActiveStateSelector.get_ActiveState
::Oculus::Interaction::IActiveState* Oculus::Interaction::ActiveStateSelector::get_ActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::get_ActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IActiveState*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateSelector.set_ActiveState
void Oculus::Interaction::ActiveStateSelector::set_ActiveState(::Oculus::Interaction::IActiveState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::set_ActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ActiveStateSelector.add_WhenSelected
void Oculus::Interaction::ActiveStateSelector::add_WhenSelected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::add_WhenSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateSelector*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ActiveStateSelector.remove_WhenSelected
void Oculus::Interaction::ActiveStateSelector::remove_WhenSelected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::remove_WhenSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateSelector*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ActiveStateSelector.add_WhenUnselected
void Oculus::Interaction::ActiveStateSelector::add_WhenUnselected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::add_WhenUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateSelector*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ActiveStateSelector.remove_WhenUnselected
void Oculus::Interaction::ActiveStateSelector::remove_WhenUnselected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::remove_WhenUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateSelector*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ActiveStateSelector.Awake
void Oculus::Interaction::ActiveStateSelector::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateSelector*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateSelector.Start
void Oculus::Interaction::ActiveStateSelector::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateSelector*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateSelector.Update
void Oculus::Interaction::ActiveStateSelector::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateSelector*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateSelector.InjectAllActiveStateSelector
void Oculus::Interaction::ActiveStateSelector::InjectAllActiveStateSelector(::Oculus::Interaction::IActiveState* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::InjectAllActiveStateSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllActiveStateSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState);
}
// Autogenerated method: Oculus.Interaction.ActiveStateSelector.InjectActiveState
void Oculus::Interaction::ActiveStateSelector::InjectActiveState(::Oculus::Interaction::IActiveState* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::InjectActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ActiveStateSelector/<>c
#include "Oculus/Interaction/ActiveStateSelector_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.ActiveStateSelector/<>c <>9
::Oculus::Interaction::ActiveStateSelector::$$c* Oculus::Interaction::ActiveStateSelector::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::ActiveStateSelector::$$c*>("Oculus.Interaction", "ActiveStateSelector/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.ActiveStateSelector/<>c <>9
void Oculus::Interaction::ActiveStateSelector::$$c::_set_$$9(::Oculus::Interaction::ActiveStateSelector::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ActiveStateSelector/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__17_0
::System::Action* Oculus::Interaction::ActiveStateSelector::$$c::_get_$$9__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::$$c::_get_$$9__17_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "ActiveStateSelector/<>c", "<>9__17_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__17_0
void Oculus::Interaction::ActiveStateSelector::$$c::_set_$$9__17_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::$$c::_set_$$9__17_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ActiveStateSelector/<>c", "<>9__17_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__17_1
::System::Action* Oculus::Interaction::ActiveStateSelector::$$c::_get_$$9__17_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::$$c::_get_$$9__17_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "ActiveStateSelector/<>c", "<>9__17_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__17_1
void Oculus::Interaction::ActiveStateSelector::$$c::_set_$$9__17_1(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::$$c::_set_$$9__17_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ActiveStateSelector/<>c", "<>9__17_1", value)));
}
// Autogenerated method: Oculus.Interaction.ActiveStateSelector/<>c..cctor
void Oculus::Interaction::ActiveStateSelector::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "ActiveStateSelector/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateSelector/<>c.<.ctor>b__17_0
void Oculus::Interaction::ActiveStateSelector::$$c::$_ctor$b__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::$$c::<.ctor>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateSelector/<>c.<.ctor>b__17_1
void Oculus::Interaction::ActiveStateSelector::$$c::$_ctor$b__17_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateSelector::$$c::<.ctor>b__17_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__17_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ActiveStateToggle
#include "Oculus/Interaction/ActiveStateToggle.hpp"
// Including type: Oculus.Interaction.ActiveStateToggle/DebugModel
#include "Oculus/Interaction/ActiveStateToggle_DebugModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _on
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::ActiveStateToggle::dyn__on() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::dyn__on");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_on"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IActiveState On
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& Oculus::Interaction::ActiveStateToggle::dyn_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::dyn_On");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "On"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _off
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::ActiveStateToggle::dyn__off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::dyn__off");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_off"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IActiveState Off
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& Oculus::Interaction::ActiveStateToggle::dyn_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::dyn_Off");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Off"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ActiveStateToggle/StatePrecedence _precedence
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ActiveStateToggle::StatePrecedence& Oculus::Interaction::ActiveStateToggle::dyn__precedence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::dyn__precedence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_precedence"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ActiveStateToggle::StatePrecedence*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _internalActive
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ActiveStateToggle::dyn__internalActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::dyn__internalActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_internalActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ActiveStateToggle.get_Precedence
::Oculus::Interaction::ActiveStateToggle::StatePrecedence Oculus::Interaction::ActiveStateToggle::get_Precedence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::get_Precedence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Precedence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::ActiveStateToggle::StatePrecedence, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateToggle.set_Precedence
void Oculus::Interaction::ActiveStateToggle::set_Precedence(::Oculus::Interaction::ActiveStateToggle::StatePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::set_Precedence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Precedence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ActiveStateToggle.Awake
void Oculus::Interaction::ActiveStateToggle::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateToggle*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateToggle.Start
void Oculus::Interaction::ActiveStateToggle::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateToggle*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateToggle.get_Active
bool Oculus::Interaction::ActiveStateToggle::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateToggle*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateToggle..cctor
void Oculus::Interaction::ActiveStateToggle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "ActiveStateToggle", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateToggle.InjectAllActiveStateToggle
void Oculus::Interaction::ActiveStateToggle::InjectAllActiveStateToggle(::Oculus::Interaction::IActiveState* on, ::Oculus::Interaction::IActiveState* off) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::InjectAllActiveStateToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllActiveStateToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on), ::il2cpp_utils::ExtractType(off)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on, off);
}
// Autogenerated method: Oculus.Interaction.ActiveStateToggle.InjectOn
void Oculus::Interaction::ActiveStateToggle::InjectOn(::Oculus::Interaction::IActiveState* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::InjectOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState);
}
// Autogenerated method: Oculus.Interaction.ActiveStateToggle.InjectOff
void Oculus::Interaction::ActiveStateToggle::InjectOff(::Oculus::Interaction::IActiveState* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::InjectOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ActiveStateToggle/StatePrecedence
#include "Oculus/Interaction/ActiveStateToggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.ActiveStateToggle/StatePrecedence On
::Oculus::Interaction::ActiveStateToggle::StatePrecedence Oculus::Interaction::ActiveStateToggle::StatePrecedence::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::StatePrecedence::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::ActiveStateToggle::StatePrecedence>("Oculus.Interaction", "ActiveStateToggle/StatePrecedence", "On"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.ActiveStateToggle/StatePrecedence On
void Oculus::Interaction::ActiveStateToggle::StatePrecedence::_set_On(::Oculus::Interaction::ActiveStateToggle::StatePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::StatePrecedence::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "ActiveStateToggle/StatePrecedence", "On", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.ActiveStateToggle/StatePrecedence Off
::Oculus::Interaction::ActiveStateToggle::StatePrecedence Oculus::Interaction::ActiveStateToggle::StatePrecedence::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::StatePrecedence::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::ActiveStateToggle::StatePrecedence>("Oculus.Interaction", "ActiveStateToggle/StatePrecedence", "Off"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.ActiveStateToggle/StatePrecedence Off
void Oculus::Interaction::ActiveStateToggle::StatePrecedence::_set_Off(::Oculus::Interaction::ActiveStateToggle::StatePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::StatePrecedence::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "ActiveStateToggle/StatePrecedence", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::ActiveStateToggle::StatePrecedence::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::StatePrecedence::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ActiveStateToggle/DebugModel
#include "Oculus/Interaction/ActiveStateToggle_DebugModel.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.ActiveStateToggle/DebugModel.GetChildren
::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IActiveState*>* Oculus::Interaction::ActiveStateToggle::DebugModel::GetChildren(::Oculus::Interaction::ActiveStateToggle* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateToggle::DebugModel::GetChildren");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateToggle::DebugModel*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IActiveState*>*, false>(this, ___internal__method, activeState);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ActiveStateTracker
#include "Oculus/Interaction/ActiveStateTracker.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _activeState
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::ActiveStateTracker::dyn__activeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateTracker::dyn__activeState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeState"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IActiveState ActiveState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& Oculus::Interaction::ActiveStateTracker::dyn_ActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateTracker::dyn_ActiveState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _includeChildrenAsDependents
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ActiveStateTracker::dyn__includeChildrenAsDependents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateTracker::dyn__includeChildrenAsDependents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_includeChildrenAsDependents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> _gameObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& Oculus::Interaction::ActiveStateTracker::dyn__gameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateTracker::dyn__gameObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> _monoBehaviours
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*& Oculus::Interaction::ActiveStateTracker::dyn__monoBehaviours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateTracker::dyn__monoBehaviours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_monoBehaviours"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _active
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ActiveStateTracker::dyn__active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateTracker::dyn__active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ActiveStateTracker.Awake
void Oculus::Interaction::ActiveStateTracker::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateTracker::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateTracker*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateTracker.Start
void Oculus::Interaction::ActiveStateTracker::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateTracker::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateTracker*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateTracker.Update
void Oculus::Interaction::ActiveStateTracker::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateTracker::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateTracker*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateTracker.SetDependentsActive
void Oculus::Interaction::ActiveStateTracker::SetDependentsActive(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateTracker::SetDependentsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDependentsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated method: Oculus.Interaction.ActiveStateTracker.InjectAllActiveStateTracker
void Oculus::Interaction::ActiveStateTracker::InjectAllActiveStateTracker(::Oculus::Interaction::IActiveState* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateTracker::InjectAllActiveStateTracker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllActiveStateTracker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState);
}
// Autogenerated method: Oculus.Interaction.ActiveStateTracker.InjectActiveState
void Oculus::Interaction::ActiveStateTracker::InjectActiveState(::Oculus::Interaction::IActiveState* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateTracker::InjectActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState);
}
// Autogenerated method: Oculus.Interaction.ActiveStateTracker.InjectOptionalIncludeChildrenAsDependents
void Oculus::Interaction::ActiveStateTracker::InjectOptionalIncludeChildrenAsDependents(bool includeChildrenAsDependents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateTracker::InjectOptionalIncludeChildrenAsDependents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalIncludeChildrenAsDependents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includeChildrenAsDependents)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, includeChildrenAsDependents);
}
// Autogenerated method: Oculus.Interaction.ActiveStateTracker.InjectOptionalGameObjects
void Oculus::Interaction::ActiveStateTracker::InjectOptionalGameObjects(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* gameObjects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateTracker::InjectOptionalGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObjects)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObjects);
}
// Autogenerated method: Oculus.Interaction.ActiveStateTracker.InjectOptionalMonoBehaviours
void Oculus::Interaction::ActiveStateTracker::InjectOptionalMonoBehaviours(::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>* monoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateTracker::InjectOptionalMonoBehaviours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalMonoBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monoBehaviours)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, monoBehaviours);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Axis2DActiveState
#include "Oculus/Interaction/Axis2DActiveState.hpp"
// Including type: Oculus.Interaction.Input.IAxis2D
#include "Oculus/Interaction/Input/IAxis2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _inputAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Axis2DActiveState::dyn__inputAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::dyn__inputAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IAxis2D <InputAxis>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IAxis2D*& Oculus::Interaction::Axis2DActiveState::dyn_$InputAxis$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::dyn_$InputAxis$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InputAxis>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IAxis2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Axis2DActiveState/CheckComponent _checkAxis
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Axis2DActiveState::CheckComponent& Oculus::Interaction::Axis2DActiveState::dyn__checkAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::dyn__checkAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checkAxis"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Axis2DActiveState::CheckComponent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Axis2DActiveState/ComparisonMode _comparison
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Axis2DActiveState::ComparisonMode& Oculus::Interaction::Axis2DActiveState::dyn__comparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::dyn__comparison");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comparison"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Axis2DActiveState::ComparisonMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _absoluteValues
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Axis2DActiveState::dyn__absoluteValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::dyn__absoluteValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_absoluteValues"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _thresold
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Oculus::Interaction::Axis2DActiveState::dyn__thresold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::dyn__thresold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thresold"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Active>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Axis2DActiveState::dyn_$Active$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::dyn_$Active$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Active>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Axis2DActiveState::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.get_InputAxis
::Oculus::Interaction::Input::IAxis2D* Oculus::Interaction::Axis2DActiveState::get_InputAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::get_InputAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IAxis2D*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.set_InputAxis
void Oculus::Interaction::Axis2DActiveState::set_InputAxis(::Oculus::Interaction::Input::IAxis2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::set_InputAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InputAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.get_CheckAxis
::Oculus::Interaction::Axis2DActiveState::CheckComponent Oculus::Interaction::Axis2DActiveState::get_CheckAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::get_CheckAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CheckAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Axis2DActiveState::CheckComponent, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.set_CheckAxis
void Oculus::Interaction::Axis2DActiveState::set_CheckAxis(::Oculus::Interaction::Axis2DActiveState::CheckComponent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::set_CheckAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CheckAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.get_Comparison
::Oculus::Interaction::Axis2DActiveState::ComparisonMode Oculus::Interaction::Axis2DActiveState::get_Comparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::get_Comparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Axis2DActiveState::ComparisonMode, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.set_Comparison
void Oculus::Interaction::Axis2DActiveState::set_Comparison(::Oculus::Interaction::Axis2DActiveState::ComparisonMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::set_Comparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Comparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.get_AbsoluteValues
bool Oculus::Interaction::Axis2DActiveState::get_AbsoluteValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::get_AbsoluteValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbsoluteValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.set_AbsoluteValues
void Oculus::Interaction::Axis2DActiveState::set_AbsoluteValues(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::set_AbsoluteValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AbsoluteValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.get_Active
bool Oculus::Interaction::Axis2DActiveState::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Axis2DActiveState*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.set_Active
void Oculus::Interaction::Axis2DActiveState::set_Active(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::set_Active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.Awake
void Oculus::Interaction::Axis2DActiveState::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Axis2DActiveState*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.Start
void Oculus::Interaction::Axis2DActiveState::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Axis2DActiveState*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.OnDisable
void Oculus::Interaction::Axis2DActiveState::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Axis2DActiveState*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.Update
void Oculus::Interaction::Axis2DActiveState::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Axis2DActiveState*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.HandleValueUpdated
void Oculus::Interaction::Axis2DActiveState::HandleValueUpdated(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::HandleValueUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleValueUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.CheckGreaterThan
bool Oculus::Interaction::Axis2DActiveState::CheckGreaterThan(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::CheckGreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckGreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Axis2DActiveState.CheckLessThan
bool Oculus::Interaction::Axis2DActiveState::CheckLessThan(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::CheckLessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckLessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Axis2DActiveState/CheckComponent
#include "Oculus/Interaction/Axis2DActiveState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Axis2DActiveState/CheckComponent Any
::Oculus::Interaction::Axis2DActiveState::CheckComponent Oculus::Interaction::Axis2DActiveState::CheckComponent::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::CheckComponent::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Axis2DActiveState::CheckComponent>("Oculus.Interaction", "Axis2DActiveState/CheckComponent", "Any"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Axis2DActiveState/CheckComponent Any
void Oculus::Interaction::Axis2DActiveState::CheckComponent::_set_Any(::Oculus::Interaction::Axis2DActiveState::CheckComponent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::CheckComponent::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "Axis2DActiveState/CheckComponent", "Any", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Axis2DActiveState/CheckComponent X
::Oculus::Interaction::Axis2DActiveState::CheckComponent Oculus::Interaction::Axis2DActiveState::CheckComponent::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::CheckComponent::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Axis2DActiveState::CheckComponent>("Oculus.Interaction", "Axis2DActiveState/CheckComponent", "X"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Axis2DActiveState/CheckComponent X
void Oculus::Interaction::Axis2DActiveState::CheckComponent::_set_X(::Oculus::Interaction::Axis2DActiveState::CheckComponent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::CheckComponent::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "Axis2DActiveState/CheckComponent", "X", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Axis2DActiveState/CheckComponent Y
::Oculus::Interaction::Axis2DActiveState::CheckComponent Oculus::Interaction::Axis2DActiveState::CheckComponent::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::CheckComponent::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Axis2DActiveState::CheckComponent>("Oculus.Interaction", "Axis2DActiveState/CheckComponent", "Y"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Axis2DActiveState/CheckComponent Y
void Oculus::Interaction::Axis2DActiveState::CheckComponent::_set_Y(::Oculus::Interaction::Axis2DActiveState::CheckComponent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::CheckComponent::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "Axis2DActiveState/CheckComponent", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Axis2DActiveState/CheckComponent All
::Oculus::Interaction::Axis2DActiveState::CheckComponent Oculus::Interaction::Axis2DActiveState::CheckComponent::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::CheckComponent::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Axis2DActiveState::CheckComponent>("Oculus.Interaction", "Axis2DActiveState/CheckComponent", "All"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Axis2DActiveState/CheckComponent All
void Oculus::Interaction::Axis2DActiveState::CheckComponent::_set_All(::Oculus::Interaction::Axis2DActiveState::CheckComponent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::CheckComponent::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "Axis2DActiveState/CheckComponent", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Axis2DActiveState::CheckComponent::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::CheckComponent::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Axis2DActiveState/ComparisonMode
#include "Oculus/Interaction/Axis2DActiveState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Axis2DActiveState/ComparisonMode GreaterThan
::Oculus::Interaction::Axis2DActiveState::ComparisonMode Oculus::Interaction::Axis2DActiveState::ComparisonMode::_get_GreaterThan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::ComparisonMode::_get_GreaterThan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Axis2DActiveState::ComparisonMode>("Oculus.Interaction", "Axis2DActiveState/ComparisonMode", "GreaterThan"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Axis2DActiveState/ComparisonMode GreaterThan
void Oculus::Interaction::Axis2DActiveState::ComparisonMode::_set_GreaterThan(::Oculus::Interaction::Axis2DActiveState::ComparisonMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::ComparisonMode::_set_GreaterThan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "Axis2DActiveState/ComparisonMode", "GreaterThan", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Axis2DActiveState/ComparisonMode LessThan
::Oculus::Interaction::Axis2DActiveState::ComparisonMode Oculus::Interaction::Axis2DActiveState::ComparisonMode::_get_LessThan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::ComparisonMode::_get_LessThan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Axis2DActiveState::ComparisonMode>("Oculus.Interaction", "Axis2DActiveState/ComparisonMode", "LessThan"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Axis2DActiveState/ComparisonMode LessThan
void Oculus::Interaction::Axis2DActiveState::ComparisonMode::_set_LessThan(::Oculus::Interaction::Axis2DActiveState::ComparisonMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::ComparisonMode::_set_LessThan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "Axis2DActiveState/ComparisonMode", "LessThan", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Axis2DActiveState::ComparisonMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Axis2DActiveState::ComparisonMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.InteractorGroup
#include "Oculus/Interaction/InteractorGroup.hpp"
// Including type: Oculus.Interaction.InteractorGroup/InteractorPredicate
#include "Oculus/Interaction/InteractorGroup_InteractorPredicate.hpp"
// Including type: Oculus.Interaction.InteractorGroup/<>c
#include "Oculus/Interaction/InteractorGroup_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
// Including type: Oculus.Interaction.ICandidateComparer
#include "Oculus/Interaction/ICandidateComparer.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Oculus.Interaction.UniqueIdentifier
#include "Oculus/Interaction/UniqueIdentifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected readonly Oculus.Interaction.InteractorGroup/InteractorPredicate TruePredicate
::Oculus::Interaction::InteractorGroup::InteractorPredicate* Oculus::Interaction::InteractorGroup::_get_TruePredicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::_get_TruePredicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorGroup::InteractorPredicate*>("Oculus.Interaction", "InteractorGroup", "TruePredicate"));
}
// Autogenerated static field setter
// Set static field: static protected readonly Oculus.Interaction.InteractorGroup/InteractorPredicate TruePredicate
void Oculus::Interaction::InteractorGroup::_set_TruePredicate(::Oculus::Interaction::InteractorGroup::InteractorPredicate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::_set_TruePredicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorGroup", "TruePredicate", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly Oculus.Interaction.InteractorGroup/InteractorPredicate HasCandidatePredicate
::Oculus::Interaction::InteractorGroup::InteractorPredicate* Oculus::Interaction::InteractorGroup::_get_HasCandidatePredicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::_get_HasCandidatePredicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorGroup::InteractorPredicate*>("Oculus.Interaction", "InteractorGroup", "HasCandidatePredicate"));
}
// Autogenerated static field setter
// Set static field: static protected readonly Oculus.Interaction.InteractorGroup/InteractorPredicate HasCandidatePredicate
void Oculus::Interaction::InteractorGroup::_set_HasCandidatePredicate(::Oculus::Interaction::InteractorGroup::InteractorPredicate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::_set_HasCandidatePredicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorGroup", "HasCandidatePredicate", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly Oculus.Interaction.InteractorGroup/InteractorPredicate HasInteractablePredicate
::Oculus::Interaction::InteractorGroup::InteractorPredicate* Oculus::Interaction::InteractorGroup::_get_HasInteractablePredicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::_get_HasInteractablePredicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorGroup::InteractorPredicate*>("Oculus.Interaction", "InteractorGroup", "HasInteractablePredicate"));
}
// Autogenerated static field setter
// Set static field: static protected readonly Oculus.Interaction.InteractorGroup/InteractorPredicate HasInteractablePredicate
void Oculus::Interaction::InteractorGroup::_set_HasInteractablePredicate(::Oculus::Interaction::InteractorGroup::InteractorPredicate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::_set_HasInteractablePredicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorGroup", "HasInteractablePredicate", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<UnityEngine.Object> _interactors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& Oculus::Interaction::InteractorGroup::dyn__interactors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::dyn__interactors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.IInteractor> Interactors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::IInteractor*>*& Oculus::Interaction::InteractorGroup::dyn_Interactors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::dyn_Interactors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Interactors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::IInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _activeState
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::InteractorGroup::dyn__activeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::dyn__activeState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeState"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IActiveState ActiveState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& Oculus::Interaction::InteractorGroup::dyn_ActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::dyn_ActiveState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Object _candidateComparer
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::InteractorGroup::dyn__candidateComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::dyn__candidateComparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_candidateComparer"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Oculus.Interaction.ICandidateComparer CandidateComparer
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ICandidateComparer*& Oculus::Interaction::InteractorGroup::dyn_CandidateComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::dyn_CandidateComparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CandidateComparer"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ICandidateComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxIterationsPerFrame
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::InteractorGroup::dyn__maxIterationsPerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::dyn__maxIterationsPerFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxIterationsPerFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsRootDriver>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::InteractorGroup::dyn_$IsRootDriver$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::dyn_$IsRootDriver$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsRootDriver>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Oculus.Interaction.InteractorStateChangeArgs> WhenStateChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>*& Oculus::Interaction::InteractorGroup::dyn_WhenStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::dyn_WhenStateChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenStateChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenPreprocessed
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::InteractorGroup::dyn_WhenPreprocessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::dyn_WhenPreprocessed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenPreprocessed"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenProcessed
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::InteractorGroup::dyn_WhenProcessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::dyn_WhenProcessed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenProcessed"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenPostprocessed
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::InteractorGroup::dyn_WhenPostprocessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::dyn_WhenPostprocessed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenPostprocessed"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.InteractorState _state
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractorState& Oculus::Interaction::InteractorGroup::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::InteractorState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.UniqueIdentifier _identifier
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::UniqueIdentifier*& Oculus::Interaction::InteractorGroup::dyn__identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::dyn__identifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_identifier"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::UniqueIdentifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::InteractorGroup::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.get_MaxIterationsPerFrame
int Oculus::Interaction::InteractorGroup::get_MaxIterationsPerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::get_MaxIterationsPerFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxIterationsPerFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.set_MaxIterationsPerFrame
void Oculus::Interaction::InteractorGroup::set_MaxIterationsPerFrame(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::set_MaxIterationsPerFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxIterationsPerFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.get_Data
::Il2CppObject* Oculus::Interaction::InteractorGroup::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::get_Data");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.get_IsRootDriver
bool Oculus::Interaction::InteractorGroup::get_IsRootDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::get_IsRootDriver");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.set_IsRootDriver
void Oculus::Interaction::InteractorGroup::set_IsRootDriver(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::set_IsRootDriver");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.get_ShouldHover
bool Oculus::Interaction::InteractorGroup::get_ShouldHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::get_ShouldHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.get_ShouldUnhover
bool Oculus::Interaction::InteractorGroup::get_ShouldUnhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::get_ShouldUnhover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.get_ShouldSelect
bool Oculus::Interaction::InteractorGroup::get_ShouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::get_ShouldSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.get_ShouldUnselect
bool Oculus::Interaction::InteractorGroup::get_ShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::get_ShouldUnselect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.Hover
void Oculus::Interaction::InteractorGroup::Hover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::Hover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.Unhover
void Oculus::Interaction::InteractorGroup::Unhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::Unhover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.Select
void Oculus::Interaction::InteractorGroup::Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::Select");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.Unselect
void Oculus::Interaction::InteractorGroup::Unselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::Unselect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.get_HasCandidate
bool Oculus::Interaction::InteractorGroup::get_HasCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::get_HasCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.get_HasInteractable
bool Oculus::Interaction::InteractorGroup::get_HasInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::get_HasInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.get_HasSelectedInteractable
bool Oculus::Interaction::InteractorGroup::get_HasSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::get_HasSelectedInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.get_CandidateProperties
::Il2CppObject* Oculus::Interaction::InteractorGroup::get_CandidateProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::get_CandidateProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.add_WhenStateChanged
void Oculus::Interaction::InteractorGroup::add_WhenStateChanged(::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::add_WhenStateChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.remove_WhenStateChanged
void Oculus::Interaction::InteractorGroup::remove_WhenStateChanged(::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::remove_WhenStateChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.add_WhenPreprocessed
void Oculus::Interaction::InteractorGroup::add_WhenPreprocessed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::add_WhenPreprocessed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.remove_WhenPreprocessed
void Oculus::Interaction::InteractorGroup::remove_WhenPreprocessed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::remove_WhenPreprocessed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.add_WhenProcessed
void Oculus::Interaction::InteractorGroup::add_WhenProcessed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::add_WhenProcessed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.remove_WhenProcessed
void Oculus::Interaction::InteractorGroup::remove_WhenProcessed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::remove_WhenProcessed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.add_WhenPostprocessed
void Oculus::Interaction::InteractorGroup::add_WhenPostprocessed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::add_WhenPostprocessed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.remove_WhenPostprocessed
void Oculus::Interaction::InteractorGroup::remove_WhenPostprocessed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::remove_WhenPostprocessed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.get_State
::Oculus::Interaction::InteractorState Oculus::Interaction::InteractorGroup::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::get_State");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::InteractorState, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.set_State
void Oculus::Interaction::InteractorGroup::set_State(::Oculus::Interaction::InteractorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.get_Identifier
int Oculus::Interaction::InteractorGroup::get_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::get_Identifier");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.Awake
void Oculus::Interaction::InteractorGroup::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.Start
void Oculus::Interaction::InteractorGroup::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.OnEnable
void Oculus::Interaction::InteractorGroup::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.OnDisable
void Oculus::Interaction::InteractorGroup::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.OnDestroy
void Oculus::Interaction::InteractorGroup::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.CompareStates
int Oculus::Interaction::InteractorGroup::CompareStates(::Oculus::Interaction::InteractorState a, ::Oculus::Interaction::InteractorState b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::CompareStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "InteractorGroup", "CompareStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.TryGetBestCandidateIndex
bool Oculus::Interaction::InteractorGroup::TryGetBestCandidateIndex(::Oculus::Interaction::InteractorGroup::InteractorPredicate* predicate, ByRef<int> bestCandidateIndex, int betterThan, int skipIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::TryGetBestCandidateIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetBestCandidateIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(betterThan), ::il2cpp_utils::ExtractType(skipIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, predicate, byref(bestCandidateIndex), betterThan, skipIndex);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.AnyInteractor
bool Oculus::Interaction::InteractorGroup::AnyInteractor(::Oculus::Interaction::InteractorGroup::InteractorPredicate* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::AnyInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnyInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, predicate);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.CompareCandidates
int Oculus::Interaction::InteractorGroup::CompareCandidates(int indexA, int indexB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::CompareCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(indexB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, indexA, indexB);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.Preprocess
void Oculus::Interaction::InteractorGroup::Preprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::Preprocess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.Process
void Oculus::Interaction::InteractorGroup::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.Postprocess
void Oculus::Interaction::InteractorGroup::Postprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::Postprocess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.ProcessCandidate
void Oculus::Interaction::InteractorGroup::ProcessCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::ProcessCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.Enable
void Oculus::Interaction::InteractorGroup::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::Enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.Disable
void Oculus::Interaction::InteractorGroup::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::Disable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 58));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.DisableAllExcept
void Oculus::Interaction::InteractorGroup::DisableAllExcept(::Oculus::Interaction::IInteractor* mainInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::DisableAllExcept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableAllExcept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainInteractor);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.EnableAllExcept
void Oculus::Interaction::InteractorGroup::EnableAllExcept(::Oculus::Interaction::IInteractor* mainInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::EnableAllExcept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableAllExcept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainInteractor);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.UpdateActiveState
bool Oculus::Interaction::InteractorGroup::UpdateActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::UpdateActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.Update
void Oculus::Interaction::InteractorGroup::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 59));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.Drive
void Oculus::Interaction::InteractorGroup::Drive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::Drive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 60));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.InjectAllInteractorGroupBase
void Oculus::Interaction::InteractorGroup::InjectAllInteractorGroupBase(::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractor*>* interactors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::InjectAllInteractorGroupBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllInteractorGroupBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactors);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.InjectInteractors
void Oculus::Interaction::InteractorGroup::InjectInteractors(::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractor*>* interactors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::InjectInteractors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectInteractors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactors);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.InjectOptionalActiveState
void Oculus::Interaction::InteractorGroup::InjectOptionalActiveState(::Oculus::Interaction::IActiveState* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::InjectOptionalActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup.InjectOptionalCandidateComparer
void Oculus::Interaction::InteractorGroup::InjectOptionalCandidateComparer(::Oculus::Interaction::ICandidateComparer* candidateComparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::InjectOptionalCandidateComparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalCandidateComparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidateComparer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, candidateComparer);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup..cctor
void Oculus::Interaction::InteractorGroup::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "InteractorGroup", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.InteractorGroup/InteractorPredicate
#include "Oculus/Interaction/InteractorGroup_InteractorPredicate.hpp"
// Including type: Oculus.Interaction.IInteractor
#include "Oculus/Interaction/IInteractor.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.InteractorGroup/InteractorPredicate.Invoke
bool Oculus::Interaction::InteractorGroup::InteractorPredicate::Invoke(::Oculus::Interaction::IInteractor* interactor, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::InteractorPredicate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup::InteractorPredicate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, index);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup/InteractorPredicate.BeginInvoke
::System::IAsyncResult* Oculus::Interaction::InteractorGroup::InteractorPredicate::BeginInvoke(::Oculus::Interaction::IInteractor* interactor, int index, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::InteractorPredicate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup::InteractorPredicate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, interactor, index, callback, object);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup/InteractorPredicate.EndInvoke
bool Oculus::Interaction::InteractorGroup::InteractorPredicate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::InteractorPredicate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup::InteractorPredicate*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractorGroup/<>c
#include "Oculus/Interaction/InteractorGroup_--c.hpp"
// Including type: System.Converter`2
#include "System/Converter_2.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.IInteractor
#include "Oculus/Interaction/IInteractor.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.InteractorGroup/<>c <>9
::Oculus::Interaction::InteractorGroup::$$c* Oculus::Interaction::InteractorGroup::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorGroup::$$c*>("Oculus.Interaction", "InteractorGroup/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.InteractorGroup/<>c <>9
void Oculus::Interaction::InteractorGroup::$$c::_set_$$9(::Oculus::Interaction::InteractorGroup::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorGroup/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.IInteractor> <>9__60_0
::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IInteractor*>* Oculus::Interaction::InteractorGroup::$$c::_get_$$9__60_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::_get_$$9__60_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IInteractor*>*>("Oculus.Interaction", "InteractorGroup/<>c", "<>9__60_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.IInteractor> <>9__60_0
void Oculus::Interaction::InteractorGroup::$$c::_set_$$9__60_0(::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IInteractor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::_set_$$9__60_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorGroup/<>c", "<>9__60_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.InteractorStateChangeArgs> <>9__84_0
::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>* Oculus::Interaction::InteractorGroup::$$c::_get_$$9__84_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::_get_$$9__84_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>*>("Oculus.Interaction", "InteractorGroup/<>c", "<>9__84_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.InteractorStateChangeArgs> <>9__84_0
void Oculus::Interaction::InteractorGroup::$$c::_set_$$9__84_0(::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::_set_$$9__84_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorGroup/<>c", "<>9__84_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__84_1
::System::Action* Oculus::Interaction::InteractorGroup::$$c::_get_$$9__84_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::_get_$$9__84_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "InteractorGroup/<>c", "<>9__84_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__84_1
void Oculus::Interaction::InteractorGroup::$$c::_set_$$9__84_1(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::_set_$$9__84_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorGroup/<>c", "<>9__84_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__84_2
::System::Action* Oculus::Interaction::InteractorGroup::$$c::_get_$$9__84_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::_get_$$9__84_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "InteractorGroup/<>c", "<>9__84_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__84_2
void Oculus::Interaction::InteractorGroup::$$c::_set_$$9__84_2(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::_set_$$9__84_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorGroup/<>c", "<>9__84_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__84_3
::System::Action* Oculus::Interaction::InteractorGroup::$$c::_get_$$9__84_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::_get_$$9__84_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "InteractorGroup/<>c", "<>9__84_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__84_3
void Oculus::Interaction::InteractorGroup::$$c::_set_$$9__84_3(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::_set_$$9__84_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorGroup/<>c", "<>9__84_3", value)));
}
// Autogenerated method: Oculus.Interaction.InteractorGroup/<>c..cctor
void Oculus::Interaction::InteractorGroup::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "InteractorGroup/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup/<>c.<Awake>b__60_0
::Oculus::Interaction::IInteractor* Oculus::Interaction::InteractorGroup::$$c::$Awake$b__60_0(::UnityEngine::Object* mono) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::<Awake>b__60_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__60_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IInteractor*, false>(this, ___internal__method, mono);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup/<>c.<.ctor>b__84_0
void Oculus::Interaction::InteractorGroup::$$c::$_ctor$b__84_0(::Oculus::Interaction::InteractorStateChangeArgs $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::<.ctor>b__84_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__84_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup/<>c.<.ctor>b__84_1
void Oculus::Interaction::InteractorGroup::$$c::$_ctor$b__84_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::<.ctor>b__84_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__84_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup/<>c.<.ctor>b__84_2
void Oculus::Interaction::InteractorGroup::$$c::$_ctor$b__84_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::<.ctor>b__84_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__84_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup/<>c.<.ctor>b__84_3
void Oculus::Interaction::InteractorGroup::$$c::$_ctor$b__84_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::<.ctor>b__84_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__84_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup/<>c.<.cctor>b__85_0
bool Oculus::Interaction::InteractorGroup::$$c::$_cctor$b__85_0(::Oculus::Interaction::IInteractor* interactor, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::<.cctor>b__85_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__85_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, index);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup/<>c.<.cctor>b__85_1
bool Oculus::Interaction::InteractorGroup::$$c::$_cctor$b__85_1(::Oculus::Interaction::IInteractor* interactor, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::<.cctor>b__85_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__85_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, index);
}
// Autogenerated method: Oculus.Interaction.InteractorGroup/<>c.<.cctor>b__85_2
bool Oculus::Interaction::InteractorGroup::$$c::$_cctor$b__85_2(::Oculus::Interaction::IInteractor* interactor, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorGroup::$$c::<.cctor>b__85_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__85_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.BestHoverInteractorGroup
#include "Oculus/Interaction/BestHoverInteractorGroup.hpp"
// Including type: Oculus.Interaction.BestHoverInteractorGroup/<>c
#include "Oculus/Interaction/BestHoverInteractorGroup_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.InteractorGroup/InteractorPredicate
#include "Oculus/Interaction/InteractorGroup_InteractorPredicate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsNormalAndShouldHoverPredicate
::Oculus::Interaction::InteractorGroup::InteractorPredicate* Oculus::Interaction::BestHoverInteractorGroup::_get_IsNormalAndShouldHoverPredicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::_get_IsNormalAndShouldHoverPredicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorGroup::InteractorPredicate*>("Oculus.Interaction", "BestHoverInteractorGroup", "IsNormalAndShouldHoverPredicate"));
}
// Autogenerated static field setter
// Set static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsNormalAndShouldHoverPredicate
void Oculus::Interaction::BestHoverInteractorGroup::_set_IsNormalAndShouldHoverPredicate(::Oculus::Interaction::InteractorGroup::InteractorPredicate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::_set_IsNormalAndShouldHoverPredicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "BestHoverInteractorGroup", "IsNormalAndShouldHoverPredicate", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractor _bestInteractor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractor*& Oculus::Interaction::BestHoverInteractorGroup::dyn__bestInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::dyn__bestInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bestInteractor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bestInteractorIndex
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::BestHoverInteractorGroup::dyn__bestInteractorIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::dyn__bestInteractorIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bestInteractorIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.TryHover
bool Oculus::Interaction::BestHoverInteractorGroup::TryHover(int betterThan, int skipIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::TryHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(betterThan), ::il2cpp_utils::ExtractType(skipIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, betterThan, skipIndex);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.TryReplaceHover
bool Oculus::Interaction::BestHoverInteractorGroup::TryReplaceHover(int betterThan) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::TryReplaceHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryReplaceHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(betterThan)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, betterThan);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.HoverAtIndex
void Oculus::Interaction::BestHoverInteractorGroup::HoverAtIndex(int interactorIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::HoverAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorIndex);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.HandleBestInteractorStateChanged
void Oculus::Interaction::BestHoverInteractorGroup::HandleBestInteractorStateChanged(::Oculus::Interaction::InteractorStateChangeArgs stateChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::HandleBestInteractorStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBestInteractorStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateChange);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.UnsuscribeBestInteractor
void Oculus::Interaction::BestHoverInteractorGroup::UnsuscribeBestInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::UnsuscribeBestInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsuscribeBestInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.InjectAllInteractorGroupBestHover
void Oculus::Interaction::BestHoverInteractorGroup::InjectAllInteractorGroupBestHover(::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractor*>* interactors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::InjectAllInteractorGroupBestHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllInteractorGroupBestHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactors);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.get_ShouldHover
bool Oculus::Interaction::BestHoverInteractorGroup::get_ShouldHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::get_ShouldHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 36));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.get_ShouldUnhover
bool Oculus::Interaction::BestHoverInteractorGroup::get_ShouldUnhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::get_ShouldUnhover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 37));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.get_ShouldSelect
bool Oculus::Interaction::BestHoverInteractorGroup::get_ShouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::get_ShouldSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 38));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.get_ShouldUnselect
bool Oculus::Interaction::BestHoverInteractorGroup::get_ShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::get_ShouldUnselect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 39));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.Hover
void Oculus::Interaction::BestHoverInteractorGroup::Hover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::Hover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.Unhover
void Oculus::Interaction::BestHoverInteractorGroup::Unhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::Unhover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.Select
void Oculus::Interaction::BestHoverInteractorGroup::Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::Select");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.Unselect
void Oculus::Interaction::BestHoverInteractorGroup::Unselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::Unselect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.Preprocess
void Oculus::Interaction::BestHoverInteractorGroup::Preprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::Preprocess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.Process
void Oculus::Interaction::BestHoverInteractorGroup::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.Enable
void Oculus::Interaction::BestHoverInteractorGroup::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::Enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.Disable
void Oculus::Interaction::BestHoverInteractorGroup::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::Disable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 58));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.get_HasCandidate
bool Oculus::Interaction::BestHoverInteractorGroup::get_HasCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::get_HasCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 44));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.get_HasInteractable
bool Oculus::Interaction::BestHoverInteractorGroup::get_HasInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::get_HasInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 45));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.get_HasSelectedInteractable
bool Oculus::Interaction::BestHoverInteractorGroup::get_HasSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::get_HasSelectedInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 46));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup.get_CandidateProperties
::Il2CppObject* Oculus::Interaction::BestHoverInteractorGroup::get_CandidateProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::get_CandidateProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup..cctor
void Oculus::Interaction::BestHoverInteractorGroup::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "BestHoverInteractorGroup", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.BestHoverInteractorGroup/<>c
#include "Oculus/Interaction/BestHoverInteractorGroup_--c.hpp"
// Including type: Oculus.Interaction.IInteractor
#include "Oculus/Interaction/IInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.BestHoverInteractorGroup/<>c <>9
::Oculus::Interaction::BestHoverInteractorGroup::$$c* Oculus::Interaction::BestHoverInteractorGroup::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::BestHoverInteractorGroup::$$c*>("Oculus.Interaction", "BestHoverInteractorGroup/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.BestHoverInteractorGroup/<>c <>9
void Oculus::Interaction::BestHoverInteractorGroup::$$c::_set_$$9(::Oculus::Interaction::BestHoverInteractorGroup::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "BestHoverInteractorGroup/<>c", "<>9", value)));
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup/<>c..cctor
void Oculus::Interaction::BestHoverInteractorGroup::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "BestHoverInteractorGroup/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestHoverInteractorGroup/<>c.<.cctor>b__34_0
bool Oculus::Interaction::BestHoverInteractorGroup::$$c::$_cctor$b__34_0(::Oculus::Interaction::IInteractor* interactor, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestHoverInteractorGroup::$$c::<.cctor>b__34_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__34_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.BestSelectInteractorGroup
#include "Oculus/Interaction/BestSelectInteractorGroup.hpp"
// Including type: Oculus.Interaction.BestSelectInteractorGroup/<>c
#include "Oculus/Interaction/BestSelectInteractorGroup_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.InteractorGroup/InteractorPredicate
#include "Oculus/Interaction/InteractorGroup_InteractorPredicate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsNormalAndShouldHoverPredicate
::Oculus::Interaction::InteractorGroup::InteractorPredicate* Oculus::Interaction::BestSelectInteractorGroup::_get_IsNormalAndShouldHoverPredicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::_get_IsNormalAndShouldHoverPredicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorGroup::InteractorPredicate*>("Oculus.Interaction", "BestSelectInteractorGroup", "IsNormalAndShouldHoverPredicate"));
}
// Autogenerated static field setter
// Set static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsNormalAndShouldHoverPredicate
void Oculus::Interaction::BestSelectInteractorGroup::_set_IsNormalAndShouldHoverPredicate(::Oculus::Interaction::InteractorGroup::InteractorPredicate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::_set_IsNormalAndShouldHoverPredicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "BestSelectInteractorGroup", "IsNormalAndShouldHoverPredicate", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsHoverAndShouldUnhoverPredicate
::Oculus::Interaction::InteractorGroup::InteractorPredicate* Oculus::Interaction::BestSelectInteractorGroup::_get_IsHoverAndShouldUnhoverPredicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::_get_IsHoverAndShouldUnhoverPredicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorGroup::InteractorPredicate*>("Oculus.Interaction", "BestSelectInteractorGroup", "IsHoverAndShouldUnhoverPredicate"));
}
// Autogenerated static field setter
// Set static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsHoverAndShouldUnhoverPredicate
void Oculus::Interaction::BestSelectInteractorGroup::_set_IsHoverAndShouldUnhoverPredicate(::Oculus::Interaction::InteractorGroup::InteractorPredicate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::_set_IsHoverAndShouldUnhoverPredicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "BestSelectInteractorGroup", "IsHoverAndShouldUnhoverPredicate", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsHoverAndShoulSelectPredicate
::Oculus::Interaction::InteractorGroup::InteractorPredicate* Oculus::Interaction::BestSelectInteractorGroup::_get_IsHoverAndShoulSelectPredicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::_get_IsHoverAndShoulSelectPredicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorGroup::InteractorPredicate*>("Oculus.Interaction", "BestSelectInteractorGroup", "IsHoverAndShoulSelectPredicate"));
}
// Autogenerated static field setter
// Set static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsHoverAndShoulSelectPredicate
void Oculus::Interaction::BestSelectInteractorGroup::_set_IsHoverAndShoulSelectPredicate(::Oculus::Interaction::InteractorGroup::InteractorPredicate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::_set_IsHoverAndShoulSelectPredicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "BestSelectInteractorGroup", "IsHoverAndShoulSelectPredicate", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsHover
::Oculus::Interaction::InteractorGroup::InteractorPredicate* Oculus::Interaction::BestSelectInteractorGroup::_get_IsHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::_get_IsHover");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorGroup::InteractorPredicate*>("Oculus.Interaction", "BestSelectInteractorGroup", "IsHover"));
}
// Autogenerated static field setter
// Set static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsHover
void Oculus::Interaction::BestSelectInteractorGroup::_set_IsHover(::Oculus::Interaction::InteractorGroup::InteractorPredicate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::_set_IsHover");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "BestSelectInteractorGroup", "IsHover", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractor _bestInteractor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractor*& Oculus::Interaction::BestSelectInteractorGroup::dyn__bestInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::dyn__bestInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bestInteractor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.TryHover
bool Oculus::Interaction::BestSelectInteractorGroup::TryHover(::System::Action_1<::Oculus::Interaction::IInteractor*>* whenHover) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::TryHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(whenHover)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, whenHover);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.UnsuscribeBestInteractor
void Oculus::Interaction::BestSelectInteractorGroup::UnsuscribeBestInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::UnsuscribeBestInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsuscribeBestInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.HandleBestInteractorStateChanged
void Oculus::Interaction::BestSelectInteractorGroup::HandleBestInteractorStateChanged(::Oculus::Interaction::InteractorStateChangeArgs stateChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::HandleBestInteractorStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBestInteractorStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateChange);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.InjectAllInteractorGroupBestSelect
void Oculus::Interaction::BestSelectInteractorGroup::InjectAllInteractorGroupBestSelect(::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractor*>* interactors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::InjectAllInteractorGroupBestSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllInteractorGroupBestSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactors);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.get_ShouldHover
bool Oculus::Interaction::BestSelectInteractorGroup::get_ShouldHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::get_ShouldHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 36));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.get_ShouldUnhover
bool Oculus::Interaction::BestSelectInteractorGroup::get_ShouldUnhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::get_ShouldUnhover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 37));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.get_ShouldSelect
bool Oculus::Interaction::BestSelectInteractorGroup::get_ShouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::get_ShouldSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 38));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.get_ShouldUnselect
bool Oculus::Interaction::BestSelectInteractorGroup::get_ShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::get_ShouldUnselect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 39));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.Hover
void Oculus::Interaction::BestSelectInteractorGroup::Hover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::Hover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.Unhover
void Oculus::Interaction::BestSelectInteractorGroup::Unhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::Unhover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.Select
void Oculus::Interaction::BestSelectInteractorGroup::Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::Select");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.Unselect
void Oculus::Interaction::BestSelectInteractorGroup::Unselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::Unselect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.Preprocess
void Oculus::Interaction::BestSelectInteractorGroup::Preprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::Preprocess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.Process
void Oculus::Interaction::BestSelectInteractorGroup::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.Enable
void Oculus::Interaction::BestSelectInteractorGroup::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::Enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.Disable
void Oculus::Interaction::BestSelectInteractorGroup::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::Disable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 58));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.get_HasCandidate
bool Oculus::Interaction::BestSelectInteractorGroup::get_HasCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::get_HasCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 44));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.get_HasInteractable
bool Oculus::Interaction::BestSelectInteractorGroup::get_HasInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::get_HasInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 45));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.get_HasSelectedInteractable
bool Oculus::Interaction::BestSelectInteractorGroup::get_HasSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::get_HasSelectedInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 46));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup.get_CandidateProperties
::Il2CppObject* Oculus::Interaction::BestSelectInteractorGroup::get_CandidateProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::get_CandidateProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup..cctor
void Oculus::Interaction::BestSelectInteractorGroup::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "BestSelectInteractorGroup", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.BestSelectInteractorGroup/<>c
#include "Oculus/Interaction/BestSelectInteractorGroup_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Oculus.Interaction.IInteractor
#include "Oculus/Interaction/IInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.BestSelectInteractorGroup/<>c <>9
::Oculus::Interaction::BestSelectInteractorGroup::$$c* Oculus::Interaction::BestSelectInteractorGroup::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::BestSelectInteractorGroup::$$c*>("Oculus.Interaction", "BestSelectInteractorGroup/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.BestSelectInteractorGroup/<>c <>9
void Oculus::Interaction::BestSelectInteractorGroup::$$c::_set_$$9(::Oculus::Interaction::BestSelectInteractorGroup::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "BestSelectInteractorGroup/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.IInteractor> <>9__18_0
::System::Action_1<::Oculus::Interaction::IInteractor*>* Oculus::Interaction::BestSelectInteractorGroup::$$c::_get_$$9__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::$$c::_get_$$9__18_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::IInteractor*>*>("Oculus.Interaction", "BestSelectInteractorGroup/<>c", "<>9__18_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.IInteractor> <>9__18_0
void Oculus::Interaction::BestSelectInteractorGroup::$$c::_set_$$9__18_0(::System::Action_1<::Oculus::Interaction::IInteractor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::$$c::_set_$$9__18_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "BestSelectInteractorGroup/<>c", "<>9__18_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.IInteractor> <>9__19_0
::System::Action_1<::Oculus::Interaction::IInteractor*>* Oculus::Interaction::BestSelectInteractorGroup::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::IInteractor*>*>("Oculus.Interaction", "BestSelectInteractorGroup/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.IInteractor> <>9__19_0
void Oculus::Interaction::BestSelectInteractorGroup::$$c::_set_$$9__19_0(::System::Action_1<::Oculus::Interaction::IInteractor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "BestSelectInteractorGroup/<>c", "<>9__19_0", value)));
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup/<>c..cctor
void Oculus::Interaction::BestSelectInteractorGroup::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "BestSelectInteractorGroup/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup/<>c.<Preprocess>b__18_0
void Oculus::Interaction::BestSelectInteractorGroup::$$c::$Preprocess$b__18_0(::Oculus::Interaction::IInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::$$c::<Preprocess>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Preprocess>b__18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup/<>c.<Process>b__19_0
void Oculus::Interaction::BestSelectInteractorGroup::$$c::$Process$b__19_0(::Oculus::Interaction::IInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::$$c::<Process>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Process>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup/<>c.<.cctor>b__34_0
bool Oculus::Interaction::BestSelectInteractorGroup::$$c::$_cctor$b__34_0(::Oculus::Interaction::IInteractor* interactor, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::$$c::<.cctor>b__34_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__34_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, index);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup/<>c.<.cctor>b__34_1
bool Oculus::Interaction::BestSelectInteractorGroup::$$c::$_cctor$b__34_1(::Oculus::Interaction::IInteractor* interactor, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::$$c::<.cctor>b__34_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__34_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, index);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup/<>c.<.cctor>b__34_2
bool Oculus::Interaction::BestSelectInteractorGroup::$$c::$_cctor$b__34_2(::Oculus::Interaction::IInteractor* interactor, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::$$c::<.cctor>b__34_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__34_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, index);
}
// Autogenerated method: Oculus.Interaction.BestSelectInteractorGroup/<>c.<.cctor>b__34_3
bool Oculus::Interaction::BestSelectInteractorGroup::$$c::$_cctor$b__34_3(::Oculus::Interaction::IInteractor* interactor, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BestSelectInteractorGroup::$$c::<.cctor>b__34_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__34_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.CandidatePositionComparer
#include "Oculus/Interaction/CandidatePositionComparer.hpp"
// Including type: Oculus.Interaction.ICandidatePosition
#include "Oculus/Interaction/ICandidatePosition.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _compareOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::CandidatePositionComparer::dyn__compareOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CandidatePositionComparer::dyn__compareOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compareOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.CandidatePositionComparer.Compare
int Oculus::Interaction::CandidatePositionComparer::Compare(::Oculus::Interaction::ICandidatePosition* a, ::Oculus::Interaction::ICandidatePosition* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CandidatePositionComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::CandidatePositionComparer*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ControllerActiveState
#include "Oculus/Interaction/ControllerActiveState.hpp"
// Including type: Oculus.Interaction.Input.IController
#include "Oculus/Interaction/Input/IController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _controller
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::ControllerActiveState::dyn__controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerActiveState::dyn__controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IController Controller
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IController*& Oculus::Interaction::ControllerActiveState::dyn_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerActiveState::dyn_Controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Controller"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ControllerActiveState.get_Active
bool Oculus::Interaction::ControllerActiveState::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerActiveState::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerActiveState*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerActiveState.Awake
void Oculus::Interaction::ControllerActiveState::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerActiveState::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerActiveState*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerActiveState.Start
void Oculus::Interaction::ControllerActiveState::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerActiveState::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerActiveState*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerActiveState.InjectAllControllerActiveState
void Oculus::Interaction::ControllerActiveState::InjectAllControllerActiveState(::Oculus::Interaction::Input::IController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerActiveState::InjectAllControllerActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllControllerActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated method: Oculus.Interaction.ControllerActiveState.InjectController
void Oculus::Interaction::ControllerActiveState::InjectController(::Oculus::Interaction::Input::IController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerActiveState::InjectController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.FirstHoverInteractorGroup
#include "Oculus/Interaction/FirstHoverInteractorGroup.hpp"
// Including type: Oculus.Interaction.FirstHoverInteractorGroup/<>c
#include "Oculus/Interaction/FirstHoverInteractorGroup_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.InteractorGroup/InteractorPredicate
#include "Oculus/Interaction/InteractorGroup_InteractorPredicate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsNormalAndShouldHoverPredicate
::Oculus::Interaction::InteractorGroup::InteractorPredicate* Oculus::Interaction::FirstHoverInteractorGroup::_get_IsNormalAndShouldHoverPredicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::_get_IsNormalAndShouldHoverPredicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorGroup::InteractorPredicate*>("Oculus.Interaction", "FirstHoverInteractorGroup", "IsNormalAndShouldHoverPredicate"));
}
// Autogenerated static field setter
// Set static field: static private readonly Oculus.Interaction.InteractorGroup/InteractorPredicate IsNormalAndShouldHoverPredicate
void Oculus::Interaction::FirstHoverInteractorGroup::_set_IsNormalAndShouldHoverPredicate(::Oculus::Interaction::InteractorGroup::InteractorPredicate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::_set_IsNormalAndShouldHoverPredicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "FirstHoverInteractorGroup", "IsNormalAndShouldHoverPredicate", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractor _bestInteractor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractor*& Oculus::Interaction::FirstHoverInteractorGroup::dyn__bestInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::dyn__bestInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bestInteractor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bestInteractorIndex
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::FirstHoverInteractorGroup::dyn__bestInteractorIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::dyn__bestInteractorIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bestInteractorIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.TryHover
bool Oculus::Interaction::FirstHoverInteractorGroup::TryHover(int skipIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::TryHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skipIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, skipIndex);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.TryReplaceHover
bool Oculus::Interaction::FirstHoverInteractorGroup::TryReplaceHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::TryReplaceHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryReplaceHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.HoverAtIndex
void Oculus::Interaction::FirstHoverInteractorGroup::HoverAtIndex(int interactorIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::HoverAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorIndex);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.HandleBestInteractorStateChanged
void Oculus::Interaction::FirstHoverInteractorGroup::HandleBestInteractorStateChanged(::Oculus::Interaction::InteractorStateChangeArgs stateChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::HandleBestInteractorStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBestInteractorStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateChange);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.UnsuscribeBestInteractor
void Oculus::Interaction::FirstHoverInteractorGroup::UnsuscribeBestInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::UnsuscribeBestInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsuscribeBestInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.InjectAllInteractorGroupFirstHover
void Oculus::Interaction::FirstHoverInteractorGroup::InjectAllInteractorGroupFirstHover(::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractor*>* interactors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::InjectAllInteractorGroupFirstHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllInteractorGroupFirstHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactors);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.get_ShouldHover
bool Oculus::Interaction::FirstHoverInteractorGroup::get_ShouldHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::get_ShouldHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 36));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.get_ShouldUnhover
bool Oculus::Interaction::FirstHoverInteractorGroup::get_ShouldUnhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::get_ShouldUnhover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 37));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.get_ShouldSelect
bool Oculus::Interaction::FirstHoverInteractorGroup::get_ShouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::get_ShouldSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 38));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.get_ShouldUnselect
bool Oculus::Interaction::FirstHoverInteractorGroup::get_ShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::get_ShouldUnselect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 39));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.Hover
void Oculus::Interaction::FirstHoverInteractorGroup::Hover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::Hover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.Unhover
void Oculus::Interaction::FirstHoverInteractorGroup::Unhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::Unhover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.Select
void Oculus::Interaction::FirstHoverInteractorGroup::Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::Select");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.Unselect
void Oculus::Interaction::FirstHoverInteractorGroup::Unselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::Unselect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.Preprocess
void Oculus::Interaction::FirstHoverInteractorGroup::Preprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::Preprocess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.Process
void Oculus::Interaction::FirstHoverInteractorGroup::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.Enable
void Oculus::Interaction::FirstHoverInteractorGroup::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::Enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.Disable
void Oculus::Interaction::FirstHoverInteractorGroup::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::Disable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 58));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.get_HasCandidate
bool Oculus::Interaction::FirstHoverInteractorGroup::get_HasCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::get_HasCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 44));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.get_HasInteractable
bool Oculus::Interaction::FirstHoverInteractorGroup::get_HasInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::get_HasInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 45));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.get_HasSelectedInteractable
bool Oculus::Interaction::FirstHoverInteractorGroup::get_HasSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::get_HasSelectedInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 46));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup.get_CandidateProperties
::Il2CppObject* Oculus::Interaction::FirstHoverInteractorGroup::get_CandidateProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::get_CandidateProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorGroup*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup..cctor
void Oculus::Interaction::FirstHoverInteractorGroup::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "FirstHoverInteractorGroup", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.FirstHoverInteractorGroup/<>c
#include "Oculus/Interaction/FirstHoverInteractorGroup_--c.hpp"
// Including type: Oculus.Interaction.IInteractor
#include "Oculus/Interaction/IInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.FirstHoverInteractorGroup/<>c <>9
::Oculus::Interaction::FirstHoverInteractorGroup::$$c* Oculus::Interaction::FirstHoverInteractorGroup::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::FirstHoverInteractorGroup::$$c*>("Oculus.Interaction", "FirstHoverInteractorGroup/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.FirstHoverInteractorGroup/<>c <>9
void Oculus::Interaction::FirstHoverInteractorGroup::$$c::_set_$$9(::Oculus::Interaction::FirstHoverInteractorGroup::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "FirstHoverInteractorGroup/<>c", "<>9", value)));
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup/<>c..cctor
void Oculus::Interaction::FirstHoverInteractorGroup::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "FirstHoverInteractorGroup/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FirstHoverInteractorGroup/<>c.<.cctor>b__34_0
bool Oculus::Interaction::FirstHoverInteractorGroup::$$c::$_cctor$b__34_0(::Oculus::Interaction::IInteractor* interactor, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FirstHoverInteractorGroup::$$c::<.cctor>b__34_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__34_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.GameObjectActiveState
#include "Oculus/Interaction/GameObjectActiveState.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _sourceGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::GameObjectActiveState::dyn__sourceGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GameObjectActiveState::dyn__sourceGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sourceGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sourceActiveSelf
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::GameObjectActiveState::dyn__sourceActiveSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GameObjectActiveState::dyn__sourceActiveSelf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sourceActiveSelf"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.GameObjectActiveState.get_SourceActiveSelf
bool Oculus::Interaction::GameObjectActiveState::get_SourceActiveSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GameObjectActiveState::get_SourceActiveSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SourceActiveSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GameObjectActiveState.set_SourceActiveSelf
void Oculus::Interaction::GameObjectActiveState::set_SourceActiveSelf(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GameObjectActiveState::set_SourceActiveSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SourceActiveSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.GameObjectActiveState.Start
void Oculus::Interaction::GameObjectActiveState::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GameObjectActiveState::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::GameObjectActiveState*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GameObjectActiveState.get_Active
bool Oculus::Interaction::GameObjectActiveState::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GameObjectActiveState::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::GameObjectActiveState*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.GameObjectActiveState.InjectAllGameObjectActiveState
void Oculus::Interaction::GameObjectActiveState::InjectAllGameObjectActiveState(::UnityEngine::GameObject* sourceGameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GameObjectActiveState::InjectAllGameObjectActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllGameObjectActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceGameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceGameObject);
}
// Autogenerated method: Oculus.Interaction.GameObjectActiveState.InjectSourceGameObject
void Oculus::Interaction::GameObjectActiveState::InjectSourceGameObject(::UnityEngine::GameObject* sourceGameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::GameObjectActiveState::InjectSourceGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSourceGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceGameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceGameObject);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandActiveState
#include "Oculus/Interaction/HandActiveState.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandActiveState::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandActiveState::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand Hand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandActiveState::dyn_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandActiveState::dyn_Hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandActiveState.get_Active
bool Oculus::Interaction::HandActiveState::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandActiveState::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandActiveState*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandActiveState.Awake
void Oculus::Interaction::HandActiveState::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandActiveState::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandActiveState*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandActiveState.Start
void Oculus::Interaction::HandActiveState::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandActiveState::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandActiveState*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandActiveState.InjectAllHandActiveState
void Oculus::Interaction::HandActiveState::InjectAllHandActiveState(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandActiveState::InjectAllHandActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandActiveState.InjectHand
void Oculus::Interaction::HandActiveState::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandActiveState::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IActiveState.get_Active
bool Oculus::Interaction::IActiveState::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IActiveState::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IActiveState*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.ICandidateComparer
#include "Oculus/Interaction/ICandidateComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.ICandidateComparer.Compare
int Oculus::Interaction::ICandidateComparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ICandidateComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ICandidateComparer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ICandidatePosition
#include "Oculus/Interaction/ICandidatePosition.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.ICandidatePosition.get_CandidatePosition
::UnityEngine::Vector3 Oculus::Interaction::ICandidatePosition::get_CandidatePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ICandidatePosition::get_CandidatePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ICandidatePosition*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ICollidersRef
#include "Oculus/Interaction/ICollidersRef.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.ICollidersRef.get_Colliders
::ArrayW<::UnityEngine::Collider*> Oculus::Interaction::ICollidersRef::get_Colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ICollidersRef::get_Colliders");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ICollidersRef*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.IEvent
#include "Oculus/Interaction/IEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IEvent.get_Data
::Il2CppObject* Oculus::Interaction::IEvent::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IEvent::get_Data");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IGameObjectFilter
#include "Oculus/Interaction/IGameObjectFilter.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IGameObjectFilter.Filter
bool Oculus::Interaction::IGameObjectFilter::Filter(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IGameObjectFilter::Filter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IGameObjectFilter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameObject);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractableStateChangeArgs
#include "Oculus/Interaction/InteractableStateChangeArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.InteractableState <PreviousState>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractableState& Oculus::Interaction::InteractableStateChangeArgs::dyn_$PreviousState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableStateChangeArgs::dyn_$PreviousState$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PreviousState>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.InteractableState <NewState>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractableState& Oculus::Interaction::InteractableStateChangeArgs::dyn_$NewState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableStateChangeArgs::dyn_$NewState$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NewState>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.InteractableStateChangeArgs.get_PreviousState
::Oculus::Interaction::InteractableState Oculus::Interaction::InteractableStateChangeArgs::get_PreviousState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableStateChangeArgs::get_PreviousState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PreviousState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::InteractableState, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableStateChangeArgs.get_NewState
::Oculus::Interaction::InteractableState Oculus::Interaction::InteractableStateChangeArgs::get_NewState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableStateChangeArgs::get_NewState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NewState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::InteractableState, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableStateChangeArgs..ctor
// ABORTED elsewhere.  Oculus::Interaction::InteractableStateChangeArgs::InteractableStateChangeArgs(::Oculus::Interaction::InteractableState previousState, ::Oculus::Interaction::InteractableState newState)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.IInteractableView
#include "Oculus/Interaction/IInteractableView.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Oculus.Interaction.IInteractorView
#include "Oculus/Interaction/IInteractorView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IInteractableView.get_Data
::Il2CppObject* Oculus::Interaction::IInteractableView::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::get_Data");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractableView.get_State
::Oculus::Interaction::InteractableState Oculus::Interaction::IInteractableView::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::get_State");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::InteractableState, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractableView.add_WhenStateChanged
void Oculus::Interaction::IInteractableView::add_WhenStateChanged(::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::add_WhenStateChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractableView.remove_WhenStateChanged
void Oculus::Interaction::IInteractableView::remove_WhenStateChanged(::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::remove_WhenStateChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractableView.get_MaxInteractors
int Oculus::Interaction::IInteractableView::get_MaxInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::get_MaxInteractors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractableView.get_MaxSelectingInteractors
int Oculus::Interaction::IInteractableView::get_MaxSelectingInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::get_MaxSelectingInteractors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractableView.get_InteractorViews
::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>* Oculus::Interaction::IInteractableView::get_InteractorViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::get_InteractorViews");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractableView.get_SelectingInteractorViews
::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>* Oculus::Interaction::IInteractableView::get_SelectingInteractorViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::get_SelectingInteractorViews");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractableView.add_WhenInteractorViewAdded
void Oculus::Interaction::IInteractableView::add_WhenInteractorViewAdded(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::add_WhenInteractorViewAdded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractableView.remove_WhenInteractorViewAdded
void Oculus::Interaction::IInteractableView::remove_WhenInteractorViewAdded(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::remove_WhenInteractorViewAdded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractableView.add_WhenInteractorViewRemoved
void Oculus::Interaction::IInteractableView::add_WhenInteractorViewRemoved(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::add_WhenInteractorViewRemoved");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractableView.remove_WhenInteractorViewRemoved
void Oculus::Interaction::IInteractableView::remove_WhenInteractorViewRemoved(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::remove_WhenInteractorViewRemoved");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractableView.add_WhenSelectingInteractorViewAdded
void Oculus::Interaction::IInteractableView::add_WhenSelectingInteractorViewAdded(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::add_WhenSelectingInteractorViewAdded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractableView.remove_WhenSelectingInteractorViewAdded
void Oculus::Interaction::IInteractableView::remove_WhenSelectingInteractorViewAdded(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::remove_WhenSelectingInteractorViewAdded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractableView.add_WhenSelectingInteractorViewRemoved
void Oculus::Interaction::IInteractableView::add_WhenSelectingInteractorViewRemoved(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::add_WhenSelectingInteractorViewRemoved");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractableView.remove_WhenSelectingInteractorViewRemoved
void Oculus::Interaction::IInteractableView::remove_WhenSelectingInteractorViewRemoved(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractableView::remove_WhenSelectingInteractorViewRemoved");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractableView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IInteractable
#include "Oculus/Interaction/IInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IInteractable.Enable
void Oculus::Interaction::IInteractable::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractable::Enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractable.Disable
void Oculus::Interaction::IInteractable::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractable::Disable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractable.get_MaxInteractors
int Oculus::Interaction::IInteractable::get_MaxInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractable::get_MaxInteractors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractable.set_MaxInteractors
void Oculus::Interaction::IInteractable::set_MaxInteractors(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractable::set_MaxInteractors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractable.get_MaxSelectingInteractors
int Oculus::Interaction::IInteractable::get_MaxSelectingInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractable::get_MaxSelectingInteractors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractable.set_MaxSelectingInteractors
void Oculus::Interaction::IInteractable::set_MaxSelectingInteractors(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractable::set_MaxSelectingInteractors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractable.RemoveInteractorByIdentifier
void Oculus::Interaction::IInteractable::RemoveInteractorByIdentifier(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractable::RemoveInteractorByIdentifier");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractorStateChangeArgs
#include "Oculus/Interaction/InteractorStateChangeArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.InteractorState <PreviousState>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractorState& Oculus::Interaction::InteractorStateChangeArgs::dyn_$PreviousState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorStateChangeArgs::dyn_$PreviousState$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PreviousState>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::InteractorState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.InteractorState <NewState>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractorState& Oculus::Interaction::InteractorStateChangeArgs::dyn_$NewState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorStateChangeArgs::dyn_$NewState$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NewState>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::InteractorState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.InteractorStateChangeArgs.get_PreviousState
::Oculus::Interaction::InteractorState Oculus::Interaction::InteractorStateChangeArgs::get_PreviousState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorStateChangeArgs::get_PreviousState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PreviousState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::InteractorState, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorStateChangeArgs.get_NewState
::Oculus::Interaction::InteractorState Oculus::Interaction::InteractorStateChangeArgs::get_NewState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorStateChangeArgs::get_NewState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NewState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::InteractorState, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorStateChangeArgs..ctor
// ABORTED elsewhere.  Oculus::Interaction::InteractorStateChangeArgs::InteractorStateChangeArgs(::Oculus::Interaction::InteractorState previousState, ::Oculus::Interaction::InteractorState newState)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.IInteractorView
#include "Oculus/Interaction/IInteractorView.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IInteractorView.get_Identifier
int Oculus::Interaction::IInteractorView::get_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractorView::get_Identifier");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractorView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractorView.get_Data
::Il2CppObject* Oculus::Interaction::IInteractorView::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractorView::get_Data");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractorView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractorView.get_HasCandidate
bool Oculus::Interaction::IInteractorView::get_HasCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractorView::get_HasCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractorView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractorView.get_CandidateProperties
::Il2CppObject* Oculus::Interaction::IInteractorView::get_CandidateProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractorView::get_CandidateProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractorView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractorView.get_HasInteractable
bool Oculus::Interaction::IInteractorView::get_HasInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractorView::get_HasInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractorView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractorView.get_HasSelectedInteractable
bool Oculus::Interaction::IInteractorView::get_HasSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractorView::get_HasSelectedInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractorView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractorView.get_State
::Oculus::Interaction::InteractorState Oculus::Interaction::IInteractorView::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractorView::get_State");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractorView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::InteractorState, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractorView.add_WhenStateChanged
void Oculus::Interaction::IInteractorView::add_WhenStateChanged(::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractorView::add_WhenStateChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractorView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractorView.remove_WhenStateChanged
void Oculus::Interaction::IInteractorView::remove_WhenStateChanged(::System::Action_1<::Oculus::Interaction::InteractorStateChangeArgs>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractorView::remove_WhenStateChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractorView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractorView.add_WhenPreprocessed
void Oculus::Interaction::IInteractorView::add_WhenPreprocessed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractorView::add_WhenPreprocessed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractorView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractorView.remove_WhenPreprocessed
void Oculus::Interaction::IInteractorView::remove_WhenPreprocessed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractorView::remove_WhenPreprocessed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractorView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractorView.add_WhenProcessed
void Oculus::Interaction::IInteractorView::add_WhenProcessed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractorView::add_WhenProcessed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractorView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractorView.remove_WhenProcessed
void Oculus::Interaction::IInteractorView::remove_WhenProcessed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractorView::remove_WhenProcessed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractorView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractorView.add_WhenPostprocessed
void Oculus::Interaction::IInteractorView::add_WhenPostprocessed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractorView::add_WhenPostprocessed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractorView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IInteractorView.remove_WhenPostprocessed
void Oculus::Interaction::IInteractorView::remove_WhenPostprocessed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractorView::remove_WhenPostprocessed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractorView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IUpdateDriver
#include "Oculus/Interaction/IUpdateDriver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IUpdateDriver.get_IsRootDriver
bool Oculus::Interaction::IUpdateDriver::get_IsRootDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IUpdateDriver::get_IsRootDriver");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IUpdateDriver*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IUpdateDriver.set_IsRootDriver
void Oculus::Interaction::IUpdateDriver::set_IsRootDriver(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IUpdateDriver::set_IsRootDriver");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IUpdateDriver*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IUpdateDriver.Drive
void Oculus::Interaction::IUpdateDriver::Drive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IUpdateDriver::Drive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IUpdateDriver*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IInteractor
#include "Oculus/Interaction/IInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IInteractor.Preprocess
void Oculus::Interaction::IInteractor::Preprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractor::Preprocess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractor.Process
void Oculus::Interaction::IInteractor::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractor::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractor.Postprocess
void Oculus::Interaction::IInteractor::Postprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractor::Postprocess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractor.ProcessCandidate
void Oculus::Interaction::IInteractor::ProcessCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractor::ProcessCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractor.Enable
void Oculus::Interaction::IInteractor::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractor::Enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractor.Disable
void Oculus::Interaction::IInteractor::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractor::Disable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractor.Hover
void Oculus::Interaction::IInteractor::Hover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractor::Hover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractor.Unhover
void Oculus::Interaction::IInteractor::Unhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractor::Unhover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractor.Select
void Oculus::Interaction::IInteractor::Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractor::Select");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractor.Unselect
void Oculus::Interaction::IInteractor::Unselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractor::Unselect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractor.get_ShouldHover
bool Oculus::Interaction::IInteractor::get_ShouldHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractor::get_ShouldHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractor.get_ShouldUnhover
bool Oculus::Interaction::IInteractor::get_ShouldUnhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractor::get_ShouldUnhover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractor.get_ShouldSelect
bool Oculus::Interaction::IInteractor::get_ShouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractor::get_ShouldSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IInteractor.get_ShouldUnselect
bool Oculus::Interaction::IInteractor::get_ShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IInteractor::get_ShouldUnselect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.InteractableGroup
#include "Oculus/Interaction/InteractableGroup.hpp"
// Including type: Oculus.Interaction.IInteractorView
#include "Oculus/Interaction/IInteractorView.hpp"
// Including type: Oculus.Interaction.InteractableGroup/<>c
#include "Oculus/Interaction/InteractableGroup_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.IInteractable
#include "Oculus/Interaction/IInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> _interactables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& Oculus::Interaction::InteractableGroup::dyn__interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::dyn__interactables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.IInteractable> Interactables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractable*>*& Oculus::Interaction::InteractableGroup::dyn_Interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::dyn_Interactables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Interactables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.InteractableGroup/InteractableLimits> _limits
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::InteractableGroup::InteractableLimits>*& Oculus::Interaction::InteractableGroup::dyn__limits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::dyn__limits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_limits"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::InteractableGroup::InteractableLimits>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxInteractors
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::InteractableGroup::dyn__maxInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::dyn__maxInteractors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxInteractors"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxSelectingInteractors
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::InteractableGroup::dyn__maxSelectingInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::dyn__maxSelectingInteractors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxSelectingInteractors"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _interactors
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::InteractableGroup::dyn__interactors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::dyn__interactors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactors"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _selectInteractors
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::InteractableGroup::dyn__selectInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::dyn__selectInteractors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectInteractors"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _data
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::InteractableGroup::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <Data>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Oculus::Interaction::InteractableGroup::dyn_$Data$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::dyn_$Data$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Data>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::InteractableGroup::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.get_Data
::Il2CppObject* Oculus::Interaction::InteractableGroup::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.set_Data
void Oculus::Interaction::InteractableGroup::set_Data(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::set_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.Awake
void Oculus::Interaction::InteractableGroup::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroup*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.Start
void Oculus::Interaction::InteractableGroup::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroup*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.OnEnable
void Oculus::Interaction::InteractableGroup::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroup*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.OnDisable
void Oculus::Interaction::InteractableGroup::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroup*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.UpdateInteractorCount
void Oculus::Interaction::InteractableGroup::UpdateInteractorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::UpdateInteractorCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInteractorCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.UpdateSelectingInteractorCount
void Oculus::Interaction::InteractableGroup::UpdateSelectingInteractorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::UpdateSelectingInteractorCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSelectingInteractorCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.HandleInteractorViewAdded
void Oculus::Interaction::InteractableGroup::HandleInteractorViewAdded(::Oculus::Interaction::IInteractorView* interactorView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::HandleInteractorViewAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInteractorViewAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorView);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.HandleInteractorViewRemoved
void Oculus::Interaction::InteractableGroup::HandleInteractorViewRemoved(::Oculus::Interaction::IInteractorView* interactorView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::HandleInteractorViewRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInteractorViewRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorView);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.HandleSelectingInteractorViewAdded
void Oculus::Interaction::InteractableGroup::HandleSelectingInteractorViewAdded(::Oculus::Interaction::IInteractorView* interactorView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::HandleSelectingInteractorViewAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectingInteractorViewAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorView);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.HandleSelectingInteractorViewRemoved
void Oculus::Interaction::InteractableGroup::HandleSelectingInteractorViewRemoved(::Oculus::Interaction::IInteractorView* interactorView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::HandleSelectingInteractorViewRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectingInteractorViewRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorView);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.UpdateMaxInteractors
void Oculus::Interaction::InteractableGroup::UpdateMaxInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::UpdateMaxInteractors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaxInteractors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.UpdateMaxSelecting
void Oculus::Interaction::InteractableGroup::UpdateMaxSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::UpdateMaxSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaxSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.InjectAllInteractableGroup
void Oculus::Interaction::InteractableGroup::InjectAllInteractableGroup(::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractable*>* interactables) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::InjectAllInteractableGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllInteractableGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactables)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactables);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.InjectInteractables
void Oculus::Interaction::InteractableGroup::InjectInteractables(::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractable*>* interactables) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::InjectInteractables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectInteractables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactables)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactables);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup.InjectOptionalData
void Oculus::Interaction::InteractableGroup::InjectOptionalData(::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::InjectOptionalData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractableGroup/<>c
#include "Oculus/Interaction/InteractableGroup_--c.hpp"
// Including type: System.Converter`2
#include "System/Converter_2.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.IInteractable
#include "Oculus/Interaction/IInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.InteractableGroup/<>c <>9
::Oculus::Interaction::InteractableGroup::$$c* Oculus::Interaction::InteractableGroup::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractableGroup::$$c*>("Oculus.Interaction", "InteractableGroup/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.InteractableGroup/<>c <>9
void Oculus::Interaction::InteractableGroup::$$c::_set_$$9(::Oculus::Interaction::InteractableGroup::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableGroup/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.IInteractable> <>9__14_0
::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IInteractable*>* Oculus::Interaction::InteractableGroup::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IInteractable*>*>("Oculus.Interaction", "InteractableGroup/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.IInteractable> <>9__14_0
void Oculus::Interaction::InteractableGroup::$$c::_set_$$9__14_0(::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IInteractable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableGroup/<>c", "<>9__14_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Converter`2<Oculus.Interaction.IInteractable,UnityEngine.Object> <>9__27_0
::System::Converter_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Object*>* Oculus::Interaction::InteractableGroup::$$c::_get_$$9__27_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::$$c::_get_$$9__27_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Object*>*>("Oculus.Interaction", "InteractableGroup/<>c", "<>9__27_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Converter`2<Oculus.Interaction.IInteractable,UnityEngine.Object> <>9__27_0
void Oculus::Interaction::InteractableGroup::$$c::_set_$$9__27_0(::System::Converter_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::$$c::_set_$$9__27_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableGroup/<>c", "<>9__27_0", value)));
}
// Autogenerated method: Oculus.Interaction.InteractableGroup/<>c..cctor
void Oculus::Interaction::InteractableGroup::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "InteractableGroup/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup/<>c.<Awake>b__14_0
::Oculus::Interaction::IInteractable* Oculus::Interaction::InteractableGroup::$$c::$Awake$b__14_0(::UnityEngine::Object* mono) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::$$c::<Awake>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IInteractable*, false>(this, ___internal__method, mono);
}
// Autogenerated method: Oculus.Interaction.InteractableGroup/<>c.<InjectInteractables>b__27_0
::UnityEngine::Object* Oculus::Interaction::InteractableGroup::$$c::$InjectInteractables$b__27_0(::Oculus::Interaction::IInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroup::$$c::<InjectInteractables>b__27_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InjectInteractables>b__27_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.InteractableGroupView
#include "Oculus/Interaction/InteractableGroupView.hpp"
// Including type: Oculus.Interaction.InteractableGroupView/<>c
#include "Oculus/Interaction/InteractableGroupView_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.IInteractable
#include "Oculus/Interaction/IInteractable.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Oculus.Interaction.IInteractorView
#include "Oculus/Interaction/IInteractorView.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> _interactables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& Oculus::Interaction::InteractableGroupView::dyn__interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::dyn__interactables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.IInteractable> Interactables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractable*>*& Oculus::Interaction::InteractableGroupView::dyn_Interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::dyn_Interactables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Interactables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _data
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::InteractableGroupView::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <Data>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Oculus::Interaction::InteractableGroupView::dyn_$Data$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::dyn_$Data$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Data>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Oculus.Interaction.IInteractorView> WhenInteractorViewAdded
[[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::IInteractorView*>*& Oculus::Interaction::InteractableGroupView::dyn_WhenInteractorViewAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::dyn_WhenInteractorViewAdded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenInteractorViewAdded"))->offset;
  return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::IInteractorView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Oculus.Interaction.IInteractorView> WhenInteractorViewRemoved
[[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::IInteractorView*>*& Oculus::Interaction::InteractableGroupView::dyn_WhenInteractorViewRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::dyn_WhenInteractorViewRemoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenInteractorViewRemoved"))->offset;
  return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::IInteractorView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Oculus.Interaction.IInteractorView> WhenSelectingInteractorViewAdded
[[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::IInteractorView*>*& Oculus::Interaction::InteractableGroupView::dyn_WhenSelectingInteractorViewAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::dyn_WhenSelectingInteractorViewAdded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenSelectingInteractorViewAdded"))->offset;
  return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::IInteractorView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Oculus.Interaction.IInteractorView> WhenSelectingInteractorViewRemoved
[[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::IInteractorView*>*& Oculus::Interaction::InteractableGroupView::dyn_WhenSelectingInteractorViewRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::dyn_WhenSelectingInteractorViewRemoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenSelectingInteractorViewRemoved"))->offset;
  return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::IInteractorView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Oculus.Interaction.InteractableStateChangeArgs> WhenStateChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>*& Oculus::Interaction::InteractableGroupView::dyn_WhenStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::dyn_WhenStateChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenStateChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.InteractableState _state
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractableState& Oculus::Interaction::InteractableGroupView::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::InteractableGroupView::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.get_Data
::Il2CppObject* Oculus::Interaction::InteractableGroupView::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::get_Data");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.set_Data
void Oculus::Interaction::InteractableGroupView::set_Data(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::set_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.get_InteractorsCount
int Oculus::Interaction::InteractableGroupView::get_InteractorsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::get_InteractorsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InteractorsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.get_SelectingInteractorsCount
int Oculus::Interaction::InteractableGroupView::get_SelectingInteractorsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::get_SelectingInteractorsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectingInteractorsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.get_InteractorViews
::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>* Oculus::Interaction::InteractableGroupView::get_InteractorViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::get_InteractorViews");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.get_SelectingInteractorViews
::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>* Oculus::Interaction::InteractableGroupView::get_SelectingInteractorViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::get_SelectingInteractorViews");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.add_WhenInteractorViewAdded
void Oculus::Interaction::InteractableGroupView::add_WhenInteractorViewAdded(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::add_WhenInteractorViewAdded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.remove_WhenInteractorViewAdded
void Oculus::Interaction::InteractableGroupView::remove_WhenInteractorViewAdded(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::remove_WhenInteractorViewAdded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.add_WhenInteractorViewRemoved
void Oculus::Interaction::InteractableGroupView::add_WhenInteractorViewRemoved(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::add_WhenInteractorViewRemoved");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.remove_WhenInteractorViewRemoved
void Oculus::Interaction::InteractableGroupView::remove_WhenInteractorViewRemoved(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::remove_WhenInteractorViewRemoved");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.add_WhenSelectingInteractorViewAdded
void Oculus::Interaction::InteractableGroupView::add_WhenSelectingInteractorViewAdded(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::add_WhenSelectingInteractorViewAdded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.remove_WhenSelectingInteractorViewAdded
void Oculus::Interaction::InteractableGroupView::remove_WhenSelectingInteractorViewAdded(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::remove_WhenSelectingInteractorViewAdded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.add_WhenSelectingInteractorViewRemoved
void Oculus::Interaction::InteractableGroupView::add_WhenSelectingInteractorViewRemoved(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::add_WhenSelectingInteractorViewRemoved");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.remove_WhenSelectingInteractorViewRemoved
void Oculus::Interaction::InteractableGroupView::remove_WhenSelectingInteractorViewRemoved(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::remove_WhenSelectingInteractorViewRemoved");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.get_MaxInteractors
int Oculus::Interaction::InteractableGroupView::get_MaxInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::get_MaxInteractors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.get_MaxSelectingInteractors
int Oculus::Interaction::InteractableGroupView::get_MaxSelectingInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::get_MaxSelectingInteractors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.add_WhenStateChanged
void Oculus::Interaction::InteractableGroupView::add_WhenStateChanged(::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::add_WhenStateChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.remove_WhenStateChanged
void Oculus::Interaction::InteractableGroupView::remove_WhenStateChanged(::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::remove_WhenStateChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.get_State
::Oculus::Interaction::InteractableState Oculus::Interaction::InteractableGroupView::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::get_State");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::InteractableState, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.set_State
void Oculus::Interaction::InteractableGroupView::set_State(::Oculus::Interaction::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.UpdateState
void Oculus::Interaction::InteractableGroupView::UpdateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.Awake
void Oculus::Interaction::InteractableGroupView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.Start
void Oculus::Interaction::InteractableGroupView::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.OnEnable
void Oculus::Interaction::InteractableGroupView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.OnDisable
void Oculus::Interaction::InteractableGroupView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableGroupView*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.HandleStateChange
void Oculus::Interaction::InteractableGroupView::HandleStateChange(::Oculus::Interaction::InteractableStateChangeArgs args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::HandleStateChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.HandleInteractorViewAdded
void Oculus::Interaction::InteractableGroupView::HandleInteractorViewAdded(::Oculus::Interaction::IInteractorView* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::HandleInteractorViewAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInteractorViewAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.HandleInteractorViewRemoved
void Oculus::Interaction::InteractableGroupView::HandleInteractorViewRemoved(::Oculus::Interaction::IInteractorView* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::HandleInteractorViewRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInteractorViewRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.HandleSelectingInteractorViewAdded
void Oculus::Interaction::InteractableGroupView::HandleSelectingInteractorViewAdded(::Oculus::Interaction::IInteractorView* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::HandleSelectingInteractorViewAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectingInteractorViewAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.HandleSelectingInteractorViewRemoved
void Oculus::Interaction::InteractableGroupView::HandleSelectingInteractorViewRemoved(::Oculus::Interaction::IInteractorView* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::HandleSelectingInteractorViewRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectingInteractorViewRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.InjectAllInteractableGroupView
void Oculus::Interaction::InteractableGroupView::InjectAllInteractableGroupView(::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractable*>* interactables) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::InjectAllInteractableGroupView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllInteractableGroupView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactables)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactables);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.InjectInteractables
void Oculus::Interaction::InteractableGroupView::InjectInteractables(::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractable*>* interactables) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::InjectInteractables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectInteractables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactables)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactables);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView.InjectOptionalData
void Oculus::Interaction::InteractableGroupView::InjectOptionalData(::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::InjectOptionalData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractableGroupView/<>c
#include "Oculus/Interaction/InteractableGroupView_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Oculus.Interaction.IInteractable
#include "Oculus/Interaction/IInteractable.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Oculus.Interaction.IInteractorView
#include "Oculus/Interaction/IInteractorView.hpp"
// Including type: System.Converter`2
#include "System/Converter_2.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.InteractableGroupView/<>c <>9
::Oculus::Interaction::InteractableGroupView::$$c* Oculus::Interaction::InteractableGroupView::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractableGroupView::$$c*>("Oculus.Interaction", "InteractableGroupView/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.InteractableGroupView/<>c <>9
void Oculus::Interaction::InteractableGroupView::$$c::_set_$$9(::Oculus::Interaction::InteractableGroupView::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableGroupView/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Oculus.Interaction.IInteractable,System.Collections.Generic.IEnumerable`1<Oculus.Interaction.IInteractorView>> <>9__12_0
::System::Func_2<::Oculus::Interaction::IInteractable*, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>*>* Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Oculus::Interaction::IInteractable*, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>*>*>("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Oculus.Interaction.IInteractable,System.Collections.Generic.IEnumerable`1<Oculus.Interaction.IInteractorView>> <>9__12_0
void Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__12_0(::System::Func_2<::Oculus::Interaction::IInteractable*, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__12_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Oculus.Interaction.IInteractable,System.Collections.Generic.IEnumerable`1<Oculus.Interaction.IInteractorView>> <>9__14_0
::System::Func_2<::Oculus::Interaction::IInteractable*, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>*>* Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Oculus::Interaction::IInteractable*, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>*>*>("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Oculus.Interaction.IInteractable,System.Collections.Generic.IEnumerable`1<Oculus.Interaction.IInteractorView>> <>9__14_0
void Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__14_0(::System::Func_2<::Oculus::Interaction::IInteractable*, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__14_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.IInteractable> <>9__39_0
::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IInteractable*>* Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__39_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__39_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IInteractable*>*>("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__39_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.IInteractable> <>9__39_0
void Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__39_0(::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IInteractable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__39_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__39_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Converter`2<Oculus.Interaction.IInteractable,UnityEngine.Object> <>9__50_0
::System::Converter_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Object*>* Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__50_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__50_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Object*>*>("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__50_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Converter`2<Oculus.Interaction.IInteractable,UnityEngine.Object> <>9__50_0
void Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__50_0(::System::Converter_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__50_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__50_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__52_0
::System::Action_1<::Oculus::Interaction::IInteractorView*>* Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__52_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__52_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::IInteractorView*>*>("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__52_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__52_0
void Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__52_0(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__52_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__52_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__52_1
::System::Action_1<::Oculus::Interaction::IInteractorView*>* Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__52_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__52_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::IInteractorView*>*>("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__52_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__52_1
void Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__52_1(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__52_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__52_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__52_2
::System::Action_1<::Oculus::Interaction::IInteractorView*>* Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__52_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__52_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::IInteractorView*>*>("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__52_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__52_2
void Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__52_2(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__52_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__52_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__52_3
::System::Action_1<::Oculus::Interaction::IInteractorView*>* Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__52_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__52_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::IInteractorView*>*>("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__52_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.IInteractorView> <>9__52_3
void Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__52_3(::System::Action_1<::Oculus::Interaction::IInteractorView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__52_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__52_3", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.InteractableStateChangeArgs> <>9__52_4
::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>* Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__52_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_get_$$9__52_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>*>("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__52_4")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.InteractableStateChangeArgs> <>9__52_4
void Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__52_4(::System::Action_1<::Oculus::Interaction::InteractableStateChangeArgs>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::_set_$$9__52_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableGroupView/<>c", "<>9__52_4", value)));
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView/<>c..cctor
void Oculus::Interaction::InteractableGroupView::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "InteractableGroupView/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView/<>c.<get_InteractorViews>b__12_0
::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>* Oculus::Interaction::InteractableGroupView::$$c::$get_InteractorViews$b__12_0(::Oculus::Interaction::IInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::<get_InteractorViews>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_InteractorViews>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>*, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView/<>c.<get_SelectingInteractorViews>b__14_0
::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>* Oculus::Interaction::InteractableGroupView::$$c::$get_SelectingInteractorViews$b__14_0(::Oculus::Interaction::IInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::<get_SelectingInteractorViews>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_SelectingInteractorViews>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractorView*>*, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView/<>c.<Awake>b__39_0
::Oculus::Interaction::IInteractable* Oculus::Interaction::InteractableGroupView::$$c::$Awake$b__39_0(::UnityEngine::Object* mono) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::<Awake>b__39_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__39_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IInteractable*, false>(this, ___internal__method, mono);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView/<>c.<InjectInteractables>b__50_0
::UnityEngine::Object* Oculus::Interaction::InteractableGroupView::$$c::$InjectInteractables$b__50_0(::Oculus::Interaction::IInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::<InjectInteractables>b__50_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InjectInteractables>b__50_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView/<>c.<.ctor>b__52_0
void Oculus::Interaction::InteractableGroupView::$$c::$_ctor$b__52_0(::Oculus::Interaction::IInteractorView* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::<.ctor>b__52_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__52_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView/<>c.<.ctor>b__52_1
void Oculus::Interaction::InteractableGroupView::$$c::$_ctor$b__52_1(::Oculus::Interaction::IInteractorView* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::<.ctor>b__52_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__52_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView/<>c.<.ctor>b__52_2
void Oculus::Interaction::InteractableGroupView::$$c::$_ctor$b__52_2(::Oculus::Interaction::IInteractorView* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::<.ctor>b__52_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__52_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView/<>c.<.ctor>b__52_3
void Oculus::Interaction::InteractableGroupView::$$c::$_ctor$b__52_3(::Oculus::Interaction::IInteractorView* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::<.ctor>b__52_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__52_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated method: Oculus.Interaction.InteractableGroupView/<>c.<.ctor>b__52_4
void Oculus::Interaction::InteractableGroupView::$$c::$_ctor$b__52_4(::Oculus::Interaction::InteractableStateChangeArgs $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableGroupView::$$c::<.ctor>b__52_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__52_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractableState
#include "Oculus/Interaction/InteractableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.InteractableState Normal
::Oculus::Interaction::InteractableState Oculus::Interaction::InteractableState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractableState>("Oculus.Interaction", "InteractableState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.InteractableState Normal
void Oculus::Interaction::InteractableState::_set_Normal(::Oculus::Interaction::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.InteractableState Hover
::Oculus::Interaction::InteractableState Oculus::Interaction::InteractableState::_get_Hover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableState::_get_Hover");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractableState>("Oculus.Interaction", "InteractableState", "Hover"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.InteractableState Hover
void Oculus::Interaction::InteractableState::_set_Hover(::Oculus::Interaction::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableState::_set_Hover");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableState", "Hover", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.InteractableState Select
::Oculus::Interaction::InteractableState Oculus::Interaction::InteractableState::_get_Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableState::_get_Select");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractableState>("Oculus.Interaction", "InteractableState", "Select"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.InteractableState Select
void Oculus::Interaction::InteractableState::_set_Select(::Oculus::Interaction::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableState::_set_Select");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableState", "Select", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.InteractableState Disabled
::Oculus::Interaction::InteractableState Oculus::Interaction::InteractableState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractableState>("Oculus.Interaction", "InteractableState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.InteractableState Disabled
void Oculus::Interaction::InteractableState::_set_Disabled(::Oculus::Interaction::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableState", "Disabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::InteractableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractableTriggerBroadcaster
#include "Oculus/Interaction/InteractableTriggerBroadcaster.hpp"
// Including type: Oculus.Interaction.InteractableTriggerBroadcaster/<>c
#include "Oculus/Interaction/InteractableTriggerBroadcaster_--c.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Oculus.Interaction.IInteractable
#include "Oculus/Interaction/IInteractable.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<Oculus.Interaction.InteractableTriggerBroadcaster> _broadcasters
::System::Collections::Generic::HashSet_1<::Oculus::Interaction::InteractableTriggerBroadcaster*>* Oculus::Interaction::InteractableTriggerBroadcaster::_get__broadcasters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::_get__broadcasters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::Oculus::Interaction::InteractableTriggerBroadcaster*>*>("Oculus.Interaction", "InteractableTriggerBroadcaster", "_broadcasters"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<Oculus.Interaction.InteractableTriggerBroadcaster> _broadcasters
void Oculus::Interaction::InteractableTriggerBroadcaster::_set__broadcasters(::System::Collections::Generic::HashSet_1<::Oculus::Interaction::InteractableTriggerBroadcaster*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::_set__broadcasters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableTriggerBroadcaster", "_broadcasters", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<Oculus.Interaction.IInteractable,UnityEngine.Rigidbody> WhenTriggerEntered
[[deprecated("Use field access instead!")]] ::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>*& Oculus::Interaction::InteractableTriggerBroadcaster::dyn_WhenTriggerEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::dyn_WhenTriggerEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenTriggerEntered"))->offset;
  return *reinterpret_cast<::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<Oculus.Interaction.IInteractable,UnityEngine.Rigidbody> WhenTriggerExited
[[deprecated("Use field access instead!")]] ::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>*& Oculus::Interaction::InteractableTriggerBroadcaster::dyn_WhenTriggerExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::dyn_WhenTriggerExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenTriggerExited"))->offset;
  return *reinterpret_cast<::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractable _interactable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractable*& Oculus::Interaction::InteractableTriggerBroadcaster::dyn__interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::dyn__interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Rigidbody,System.Boolean> _rigidbodyTriggers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Rigidbody*, bool>*& Oculus::Interaction::InteractableTriggerBroadcaster::dyn__rigidbodyTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::dyn__rigidbodyTriggers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbodyTriggers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Rigidbody*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Rigidbody> _rigidbodies
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Rigidbody*>*& Oculus::Interaction::InteractableTriggerBroadcaster::dyn__rigidbodies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::dyn__rigidbodies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbodies"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Rigidbody*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::InteractableTriggerBroadcaster::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _skippedPhysics
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::InteractableTriggerBroadcaster::dyn__skippedPhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::dyn__skippedPhysics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skippedPhysics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _forcedGlobalPhysicsUpdate
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::InteractableTriggerBroadcaster::dyn__forcedGlobalPhysicsUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::dyn__forcedGlobalPhysicsUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forcedGlobalPhysicsUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.InteractableTriggerBroadcaster.Start
void Oculus::Interaction::InteractableTriggerBroadcaster::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableTriggerBroadcaster*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableTriggerBroadcaster.OnTriggerStay
void Oculus::Interaction::InteractableTriggerBroadcaster::OnTriggerStay(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::OnTriggerStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableTriggerBroadcaster*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: Oculus.Interaction.InteractableTriggerBroadcaster.OnEnable
void Oculus::Interaction::InteractableTriggerBroadcaster::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableTriggerBroadcaster*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableTriggerBroadcaster.FixedUpdate
void Oculus::Interaction::InteractableTriggerBroadcaster::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::FixedUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableTriggerBroadcaster*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableTriggerBroadcaster.UpdateTriggers
void Oculus::Interaction::InteractableTriggerBroadcaster::UpdateTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::UpdateTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableTriggerBroadcaster.OnDisable
void Oculus::Interaction::InteractableTriggerBroadcaster::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableTriggerBroadcaster*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableTriggerBroadcaster.OnDestroy
void Oculus::Interaction::InteractableTriggerBroadcaster::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableTriggerBroadcaster*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableTriggerBroadcaster.ForceGlobalUpdateTriggers
void Oculus::Interaction::InteractableTriggerBroadcaster::ForceGlobalUpdateTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::ForceGlobalUpdateTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "InteractableTriggerBroadcaster", "ForceGlobalUpdateTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableTriggerBroadcaster.InjectAllInteractableTriggerBroadcaster
void Oculus::Interaction::InteractableTriggerBroadcaster::InjectAllInteractableTriggerBroadcaster(::Oculus::Interaction::IInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::InjectAllInteractableTriggerBroadcaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllInteractableTriggerBroadcaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.InteractableTriggerBroadcaster.InjectInteractable
void Oculus::Interaction::InteractableTriggerBroadcaster::InjectInteractable(::Oculus::Interaction::IInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::InjectInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.InteractableTriggerBroadcaster..cctor
void Oculus::Interaction::InteractableTriggerBroadcaster::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "InteractableTriggerBroadcaster", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractableTriggerBroadcaster/<>c
#include "Oculus/Interaction/InteractableTriggerBroadcaster_--c.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Oculus.Interaction.IInteractable
#include "Oculus/Interaction/IInteractable.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.InteractableTriggerBroadcaster/<>c <>9
::Oculus::Interaction::InteractableTriggerBroadcaster::$$c* Oculus::Interaction::InteractableTriggerBroadcaster::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractableTriggerBroadcaster::$$c*>("Oculus.Interaction", "InteractableTriggerBroadcaster/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.InteractableTriggerBroadcaster/<>c <>9
void Oculus::Interaction::InteractableTriggerBroadcaster::$$c::_set_$$9(::Oculus::Interaction::InteractableTriggerBroadcaster::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableTriggerBroadcaster/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<Oculus.Interaction.IInteractable,UnityEngine.Rigidbody> <>9__19_0
::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>* Oculus::Interaction::InteractableTriggerBroadcaster::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>*>("Oculus.Interaction", "InteractableTriggerBroadcaster/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<Oculus.Interaction.IInteractable,UnityEngine.Rigidbody> <>9__19_0
void Oculus::Interaction::InteractableTriggerBroadcaster::$$c::_set_$$9__19_0(::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableTriggerBroadcaster/<>c", "<>9__19_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<Oculus.Interaction.IInteractable,UnityEngine.Rigidbody> <>9__19_1
::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>* Oculus::Interaction::InteractableTriggerBroadcaster::$$c::_get_$$9__19_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::$$c::_get_$$9__19_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>*>("Oculus.Interaction", "InteractableTriggerBroadcaster/<>c", "<>9__19_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<Oculus.Interaction.IInteractable,UnityEngine.Rigidbody> <>9__19_1
void Oculus::Interaction::InteractableTriggerBroadcaster::$$c::_set_$$9__19_1(::System::Action_2<::Oculus::Interaction::IInteractable*, ::UnityEngine::Rigidbody*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::$$c::_set_$$9__19_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableTriggerBroadcaster/<>c", "<>9__19_1", value)));
}
// Autogenerated method: Oculus.Interaction.InteractableTriggerBroadcaster/<>c..cctor
void Oculus::Interaction::InteractableTriggerBroadcaster::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "InteractableTriggerBroadcaster/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableTriggerBroadcaster/<>c.<.ctor>b__19_0
void Oculus::Interaction::InteractableTriggerBroadcaster::$$c::$_ctor$b__19_0(::Oculus::Interaction::IInteractable* $p0$, ::UnityEngine::Rigidbody* $p1$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::$$c::<.ctor>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$), ::il2cpp_utils::ExtractType($p1$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$, $p1$);
}
// Autogenerated method: Oculus.Interaction.InteractableTriggerBroadcaster/<>c.<.ctor>b__19_1
void Oculus::Interaction::InteractableTriggerBroadcaster::$$c::$_ctor$b__19_1(::Oculus::Interaction::IInteractable* $p0$, ::UnityEngine::Rigidbody* $p1$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableTriggerBroadcaster::$$c::<.ctor>b__19_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__19_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$), ::il2cpp_utils::ExtractType($p1$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$, $p1$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractorActiveState
#include "Oculus/Interaction/InteractorActiveState.hpp"
// Including type: Oculus.Interaction.IInteractor
#include "Oculus/Interaction/IInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _interactor
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::InteractorActiveState::dyn__interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::dyn__interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactor"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractor Interactor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractor*& Oculus::Interaction::InteractorActiveState::dyn_Interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::dyn_Interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Interactor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.InteractorActiveState/InteractorProperty _property
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractorActiveState::InteractorProperty& Oculus::Interaction::InteractorActiveState::dyn__property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::dyn__property");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_property"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::InteractorActiveState::InteractorProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.InteractorActiveState.get_Property
::Oculus::Interaction::InteractorActiveState::InteractorProperty Oculus::Interaction::InteractorActiveState::get_Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::get_Property");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Property", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::InteractorActiveState::InteractorProperty, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorActiveState.set_Property
void Oculus::Interaction::InteractorActiveState::set_Property(::Oculus::Interaction::InteractorActiveState::InteractorProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::set_Property");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Property", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorActiveState.get_Active
bool Oculus::Interaction::InteractorActiveState::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorActiveState*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorActiveState.Awake
void Oculus::Interaction::InteractorActiveState::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorActiveState*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorActiveState.Start
void Oculus::Interaction::InteractorActiveState::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorActiveState*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorActiveState.InjectAllInteractorActiveState
void Oculus::Interaction::InteractorActiveState::InjectAllInteractorActiveState(::Oculus::Interaction::IInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::InjectAllInteractorActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllInteractorActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.InteractorActiveState.InjectInteractor
void Oculus::Interaction::InteractorActiveState::InjectInteractor(::Oculus::Interaction::IInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::InjectInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractorActiveState/InteractorProperty
#include "Oculus/Interaction/InteractorActiveState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.InteractorActiveState/InteractorProperty HasCandidate
::Oculus::Interaction::InteractorActiveState::InteractorProperty Oculus::Interaction::InteractorActiveState::InteractorProperty::_get_HasCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::InteractorProperty::_get_HasCandidate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorActiveState::InteractorProperty>("Oculus.Interaction", "InteractorActiveState/InteractorProperty", "HasCandidate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.InteractorActiveState/InteractorProperty HasCandidate
void Oculus::Interaction::InteractorActiveState::InteractorProperty::_set_HasCandidate(::Oculus::Interaction::InteractorActiveState::InteractorProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::InteractorProperty::_set_HasCandidate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorActiveState/InteractorProperty", "HasCandidate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.InteractorActiveState/InteractorProperty HasInteractable
::Oculus::Interaction::InteractorActiveState::InteractorProperty Oculus::Interaction::InteractorActiveState::InteractorProperty::_get_HasInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::InteractorProperty::_get_HasInteractable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorActiveState::InteractorProperty>("Oculus.Interaction", "InteractorActiveState/InteractorProperty", "HasInteractable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.InteractorActiveState/InteractorProperty HasInteractable
void Oculus::Interaction::InteractorActiveState::InteractorProperty::_set_HasInteractable(::Oculus::Interaction::InteractorActiveState::InteractorProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::InteractorProperty::_set_HasInteractable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorActiveState/InteractorProperty", "HasInteractable", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.InteractorActiveState/InteractorProperty IsSelecting
::Oculus::Interaction::InteractorActiveState::InteractorProperty Oculus::Interaction::InteractorActiveState::InteractorProperty::_get_IsSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::InteractorProperty::_get_IsSelecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorActiveState::InteractorProperty>("Oculus.Interaction", "InteractorActiveState/InteractorProperty", "IsSelecting"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.InteractorActiveState/InteractorProperty IsSelecting
void Oculus::Interaction::InteractorActiveState::InteractorProperty::_set_IsSelecting(::Oculus::Interaction::InteractorActiveState::InteractorProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::InteractorProperty::_set_IsSelecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorActiveState/InteractorProperty", "IsSelecting", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.InteractorActiveState/InteractorProperty HasSelectedInteractable
::Oculus::Interaction::InteractorActiveState::InteractorProperty Oculus::Interaction::InteractorActiveState::InteractorProperty::_get_HasSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::InteractorProperty::_get_HasSelectedInteractable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorActiveState::InteractorProperty>("Oculus.Interaction", "InteractorActiveState/InteractorProperty", "HasSelectedInteractable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.InteractorActiveState/InteractorProperty HasSelectedInteractable
void Oculus::Interaction::InteractorActiveState::InteractorProperty::_set_HasSelectedInteractable(::Oculus::Interaction::InteractorActiveState::InteractorProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::InteractorProperty::_set_HasSelectedInteractable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorActiveState/InteractorProperty", "HasSelectedInteractable", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.InteractorActiveState/InteractorProperty IsNormal
::Oculus::Interaction::InteractorActiveState::InteractorProperty Oculus::Interaction::InteractorActiveState::InteractorProperty::_get_IsNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::InteractorProperty::_get_IsNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorActiveState::InteractorProperty>("Oculus.Interaction", "InteractorActiveState/InteractorProperty", "IsNormal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.InteractorActiveState/InteractorProperty IsNormal
void Oculus::Interaction::InteractorActiveState::InteractorProperty::_set_IsNormal(::Oculus::Interaction::InteractorActiveState::InteractorProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::InteractorProperty::_set_IsNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorActiveState/InteractorProperty", "IsNormal", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.InteractorActiveState/InteractorProperty IsHovering
::Oculus::Interaction::InteractorActiveState::InteractorProperty Oculus::Interaction::InteractorActiveState::InteractorProperty::_get_IsHovering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::InteractorProperty::_get_IsHovering");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorActiveState::InteractorProperty>("Oculus.Interaction", "InteractorActiveState/InteractorProperty", "IsHovering"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.InteractorActiveState/InteractorProperty IsHovering
void Oculus::Interaction::InteractorActiveState::InteractorProperty::_set_IsHovering(::Oculus::Interaction::InteractorActiveState::InteractorProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::InteractorProperty::_set_IsHovering");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorActiveState/InteractorProperty", "IsHovering", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::InteractorActiveState::InteractorProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorActiveState::InteractorProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractorState
#include "Oculus/Interaction/InteractorState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.InteractorState Normal
::Oculus::Interaction::InteractorState Oculus::Interaction::InteractorState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorState>("Oculus.Interaction", "InteractorState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.InteractorState Normal
void Oculus::Interaction::InteractorState::_set_Normal(::Oculus::Interaction::InteractorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.InteractorState Hover
::Oculus::Interaction::InteractorState Oculus::Interaction::InteractorState::_get_Hover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorState::_get_Hover");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorState>("Oculus.Interaction", "InteractorState", "Hover"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.InteractorState Hover
void Oculus::Interaction::InteractorState::_set_Hover(::Oculus::Interaction::InteractorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorState::_set_Hover");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorState", "Hover", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.InteractorState Select
::Oculus::Interaction::InteractorState Oculus::Interaction::InteractorState::_get_Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorState::_get_Select");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorState>("Oculus.Interaction", "InteractorState", "Select"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.InteractorState Select
void Oculus::Interaction::InteractorState::_set_Select(::Oculus::Interaction::InteractorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorState::_set_Select");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorState", "Select", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.InteractorState Disabled
::Oculus::Interaction::InteractorState Oculus::Interaction::InteractorState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::InteractorState>("Oculus.Interaction", "InteractorState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.InteractorState Disabled
void Oculus::Interaction::InteractorState::_set_Disabled(::Oculus::Interaction::InteractorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractorState", "Disabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::InteractorState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IRelativeToRef
#include "Oculus/Interaction/IRelativeToRef.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IRelativeToRef.get_RelativeTo
::UnityEngine::Transform* Oculus::Interaction::IRelativeToRef::get_RelativeTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IRelativeToRef::get_RelativeTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IRelativeToRef*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IRigidbodyRef
#include "Oculus/Interaction/IRigidbodyRef.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IRigidbodyRef.get_Rigidbody
::UnityEngine::Rigidbody* Oculus::Interaction::IRigidbodyRef::get_Rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IRigidbodyRef::get_Rigidbody");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IRigidbodyRef*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ISelector
#include "Oculus/Interaction/ISelector.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.ISelector.add_WhenSelected
void Oculus::Interaction::ISelector::add_WhenSelected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ISelector::add_WhenSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ISelector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ISelector.remove_WhenSelected
void Oculus::Interaction::ISelector::remove_WhenSelected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ISelector::remove_WhenSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ISelector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ISelector.add_WhenUnselected
void Oculus::Interaction::ISelector::add_WhenUnselected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ISelector::add_WhenUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ISelector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ISelector.remove_WhenUnselected
void Oculus::Interaction::ISelector::remove_WhenUnselected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ISelector::remove_WhenUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ISelector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.SecondaryInteractorConnection
#include "Oculus/Interaction/SecondaryInteractorConnection.hpp"
// Including type: Oculus.Interaction.IInteractorView
#include "Oculus/Interaction/IInteractorView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _primaryInteractor
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::SecondaryInteractorConnection::dyn__primaryInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorConnection::dyn__primaryInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryInteractor"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _secondaryInteractor
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::SecondaryInteractorConnection::dyn__secondaryInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorConnection::dyn__secondaryInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secondaryInteractor"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractorView <PrimaryInteractor>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractorView*& Oculus::Interaction::SecondaryInteractorConnection::dyn_$PrimaryInteractor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorConnection::dyn_$PrimaryInteractor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PrimaryInteractor>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractorView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractorView <SecondaryInteractor>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractorView*& Oculus::Interaction::SecondaryInteractorConnection::dyn_$SecondaryInteractor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorConnection::dyn_$SecondaryInteractor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SecondaryInteractor>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractorView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorConnection.get_PrimaryInteractor
::Oculus::Interaction::IInteractorView* Oculus::Interaction::SecondaryInteractorConnection::get_PrimaryInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorConnection::get_PrimaryInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrimaryInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IInteractorView*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorConnection.set_PrimaryInteractor
void Oculus::Interaction::SecondaryInteractorConnection::set_PrimaryInteractor(::Oculus::Interaction::IInteractorView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorConnection::set_PrimaryInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PrimaryInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorConnection.get_SecondaryInteractor
::Oculus::Interaction::IInteractorView* Oculus::Interaction::SecondaryInteractorConnection::get_SecondaryInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorConnection::get_SecondaryInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SecondaryInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IInteractorView*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorConnection.set_SecondaryInteractor
void Oculus::Interaction::SecondaryInteractorConnection::set_SecondaryInteractor(::Oculus::Interaction::IInteractorView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorConnection::set_SecondaryInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SecondaryInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorConnection.Awake
void Oculus::Interaction::SecondaryInteractorConnection::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorConnection::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SecondaryInteractorConnection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorConnection.Start
void Oculus::Interaction::SecondaryInteractorConnection::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorConnection::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SecondaryInteractorConnection*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorConnection.InjectAllSecondaryInteractorConnection
void Oculus::Interaction::SecondaryInteractorConnection::InjectAllSecondaryInteractorConnection(::Oculus::Interaction::IInteractorView* primaryInteractor, ::Oculus::Interaction::IInteractorView* secondaryInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorConnection::InjectAllSecondaryInteractorConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllSecondaryInteractorConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(primaryInteractor), ::il2cpp_utils::ExtractType(secondaryInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, primaryInteractor, secondaryInteractor);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorConnection.InjectPrimaryInteractor
void Oculus::Interaction::SecondaryInteractorConnection::InjectPrimaryInteractor(::Oculus::Interaction::IInteractorView* interactorView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorConnection::InjectPrimaryInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPrimaryInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorView);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorConnection.InjectSecondaryInteractorConnection
void Oculus::Interaction::SecondaryInteractorConnection::InjectSecondaryInteractorConnection(::Oculus::Interaction::IInteractorView* interactorView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorConnection::InjectSecondaryInteractorConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSecondaryInteractorConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorView);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.SecondaryInteractorFilter
#include "Oculus/Interaction/SecondaryInteractorFilter.hpp"
// Including type: Oculus.Interaction.IInteractable
#include "Oculus/Interaction/IInteractable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Interaction.IInteractorView
#include "Oculus/Interaction/IInteractorView.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _primaryInteractable
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::SecondaryInteractorFilter::dyn__primaryInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::dyn__primaryInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryInteractable"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractable <PrimaryInteractable>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractable*& Oculus::Interaction::SecondaryInteractorFilter::dyn_$PrimaryInteractable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::dyn_$PrimaryInteractable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PrimaryInteractable>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _secondaryInteractable
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::SecondaryInteractorFilter::dyn__secondaryInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::dyn__secondaryInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secondaryInteractable"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractable <SecondaryInteractable>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractable*& Oculus::Interaction::SecondaryInteractorFilter::dyn_$SecondaryInteractable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::dyn_$SecondaryInteractable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SecondaryInteractable>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selectRequired
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::SecondaryInteractorFilter::dyn__selectRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::dyn__selectRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Oculus.Interaction.IInteractorView,System.Collections.Generic.List`1<Oculus.Interaction.IInteractorView>> _primaryToSecondaryMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::IInteractorView*, ::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractorView*>*>*& Oculus::Interaction::SecondaryInteractorFilter::dyn__primaryToSecondaryMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::dyn__primaryToSecondaryMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryToSecondaryMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::IInteractorView*, ::System::Collections::Generic::List_1<::Oculus::Interaction::IInteractorView*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::SecondaryInteractorFilter::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.get_PrimaryInteractable
::Oculus::Interaction::IInteractable* Oculus::Interaction::SecondaryInteractorFilter::get_PrimaryInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::get_PrimaryInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrimaryInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.set_PrimaryInteractable
void Oculus::Interaction::SecondaryInteractorFilter::set_PrimaryInteractable(::Oculus::Interaction::IInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::set_PrimaryInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PrimaryInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.get_SecondaryInteractable
::Oculus::Interaction::IInteractable* Oculus::Interaction::SecondaryInteractorFilter::get_SecondaryInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::get_SecondaryInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SecondaryInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.set_SecondaryInteractable
void Oculus::Interaction::SecondaryInteractorFilter::set_SecondaryInteractable(::Oculus::Interaction::IInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::set_SecondaryInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SecondaryInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.Awake
void Oculus::Interaction::SecondaryInteractorFilter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SecondaryInteractorFilter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.Start
void Oculus::Interaction::SecondaryInteractorFilter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SecondaryInteractorFilter*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.OnEnable
void Oculus::Interaction::SecondaryInteractorFilter::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SecondaryInteractorFilter*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.OnDisable
void Oculus::Interaction::SecondaryInteractorFilter::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SecondaryInteractorFilter*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.Filter
bool Oculus::Interaction::SecondaryInteractorFilter::Filter(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::Filter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SecondaryInteractorFilter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.ClearInteractorsForPrimary
void Oculus::Interaction::SecondaryInteractorFilter::ClearInteractorsForPrimary(::Oculus::Interaction::IInteractorView* primary) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::ClearInteractorsForPrimary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearInteractorsForPrimary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(primary)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, primary);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.HandleWhenInteractorViewRemoved
void Oculus::Interaction::SecondaryInteractorFilter::HandleWhenInteractorViewRemoved(::Oculus::Interaction::IInteractorView* primaryView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::HandleWhenInteractorViewRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleWhenInteractorViewRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(primaryView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, primaryView);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.HandleWhenSelectingInteractorViewRemoved
void Oculus::Interaction::SecondaryInteractorFilter::HandleWhenSelectingInteractorViewRemoved(::Oculus::Interaction::IInteractorView* primaryView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::HandleWhenSelectingInteractorViewRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleWhenSelectingInteractorViewRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(primaryView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, primaryView);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.InjectAllSecondaryInteractorFilter
void Oculus::Interaction::SecondaryInteractorFilter::InjectAllSecondaryInteractorFilter(::Oculus::Interaction::IInteractable* primaryInteractable, ::Oculus::Interaction::IInteractable* secondaryInteractable, bool selectRequired) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::InjectAllSecondaryInteractorFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllSecondaryInteractorFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(primaryInteractable), ::il2cpp_utils::ExtractType(secondaryInteractable), ::il2cpp_utils::ExtractType(selectRequired)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, primaryInteractable, secondaryInteractable, selectRequired);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.InjectPrimaryInteractable
void Oculus::Interaction::SecondaryInteractorFilter::InjectPrimaryInteractable(::Oculus::Interaction::IInteractable* interactableView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::InjectPrimaryInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPrimaryInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableView);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.InjectSecondaryInteractable
void Oculus::Interaction::SecondaryInteractorFilter::InjectSecondaryInteractable(::Oculus::Interaction::IInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::InjectSecondaryInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSecondaryInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.SecondaryInteractorFilter.InjectSelectRequired
void Oculus::Interaction::SecondaryInteractorFilter::InjectSelectRequired(bool selectRequired) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SecondaryInteractorFilter::InjectSelectRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSelectRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectRequired)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectRequired);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TagSet
#include "Oculus/Interaction/TagSet.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _tags
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Oculus::Interaction::TagSet::dyn__tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TagSet::dyn__tags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tags"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _tagSet
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& Oculus::Interaction::TagSet::dyn__tagSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TagSet::dyn__tagSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tagSet"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.TagSet.Start
void Oculus::Interaction::TagSet::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TagSet::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TagSet*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TagSet.ContainsTag
bool Oculus::Interaction::TagSet::ContainsTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TagSet::ContainsTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tag);
}
// Autogenerated method: Oculus.Interaction.TagSet.AddTag
void Oculus::Interaction::TagSet::AddTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TagSet::AddTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tag);
}
// Autogenerated method: Oculus.Interaction.TagSet.RemoveTag
void Oculus::Interaction::TagSet::RemoveTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TagSet::RemoveTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tag);
}
// Autogenerated method: Oculus.Interaction.TagSet.InjectOptionalTags
void Oculus::Interaction::TagSet::InjectOptionalTags(::System::Collections::Generic::List_1<::StringW>* tags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TagSet::InjectOptionalTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tags);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TagSetFilter
#include "Oculus/Interaction/TagSetFilter.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String[] _requireTags
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Oculus::Interaction::TagSetFilter::dyn__requireTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TagSetFilter::dyn__requireTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requireTags"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _excludeTags
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Oculus::Interaction::TagSetFilter::dyn__excludeTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TagSetFilter::dyn__excludeTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_excludeTags"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _requireTagSet
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& Oculus::Interaction::TagSetFilter::dyn__requireTagSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TagSetFilter::dyn__requireTagSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requireTagSet"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _excludeTagSet
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& Oculus::Interaction::TagSetFilter::dyn__excludeTagSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TagSetFilter::dyn__excludeTagSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_excludeTagSet"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.TagSetFilter.Start
void Oculus::Interaction::TagSetFilter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TagSetFilter::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TagSetFilter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TagSetFilter.Filter
bool Oculus::Interaction::TagSetFilter::Filter(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TagSetFilter::Filter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TagSetFilter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: Oculus.Interaction.TagSetFilter.InjectOptionalRequireTags
void Oculus::Interaction::TagSetFilter::InjectOptionalRequireTags(::ArrayW<::StringW> requireTags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TagSetFilter::InjectOptionalRequireTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalRequireTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requireTags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requireTags);
}
// Autogenerated method: Oculus.Interaction.TagSetFilter.InjectOptionalExcludeTags
void Oculus::Interaction::TagSetFilter::InjectOptionalExcludeTags(::ArrayW<::StringW> excludeTags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TagSetFilter::InjectOptionalExcludeTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalExcludeTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(excludeTags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, excludeTags);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UniqueIdentifier
#include "Oculus/Interaction/UniqueIdentifier.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Random Random
::System::Random* Oculus::Interaction::UniqueIdentifier::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UniqueIdentifier::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Random*>("Oculus.Interaction", "UniqueIdentifier", "Random"));
}
// Autogenerated static field setter
// Set static field: static private System.Random Random
void Oculus::Interaction::UniqueIdentifier::_set_Random(::System::Random* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UniqueIdentifier::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "UniqueIdentifier", "Random", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<System.Int32> _identifierSet
::System::Collections::Generic::HashSet_1<int>* Oculus::Interaction::UniqueIdentifier::_get__identifierSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UniqueIdentifier::_get__identifierSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<int>*>("Oculus.Interaction", "UniqueIdentifier", "_identifierSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<System.Int32> _identifierSet
void Oculus::Interaction::UniqueIdentifier::_set__identifierSet(::System::Collections::Generic::HashSet_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UniqueIdentifier::_set__identifierSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "UniqueIdentifier", "_identifierSet", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <ID>k__BackingField
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::UniqueIdentifier::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UniqueIdentifier::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.UniqueIdentifier.get_ID
int Oculus::Interaction::UniqueIdentifier::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UniqueIdentifier::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UniqueIdentifier.set_ID
void Oculus::Interaction::UniqueIdentifier::set_ID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UniqueIdentifier::set_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.UniqueIdentifier.Generate
::Oculus::Interaction::UniqueIdentifier* Oculus::Interaction::UniqueIdentifier::Generate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UniqueIdentifier::Generate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "UniqueIdentifier", "Generate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::UniqueIdentifier*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UniqueIdentifier.Release
void Oculus::Interaction::UniqueIdentifier::Release(::Oculus::Interaction::UniqueIdentifier* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UniqueIdentifier::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "UniqueIdentifier", "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, identifier);
}
// Autogenerated method: Oculus.Interaction.UniqueIdentifier..cctor
void Oculus::Interaction::UniqueIdentifier::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UniqueIdentifier::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "UniqueIdentifier", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UpdateDriverAfterDataSource
#include "Oculus/Interaction/UpdateDriverAfterDataSource.hpp"
// Including type: Oculus.Interaction.Input.IDataSource
#include "Oculus/Interaction/Input/IDataSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _updateDriver
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::UpdateDriverAfterDataSource::dyn__updateDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::dyn__updateDriver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateDriver"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IUpdateDriver UpdateDriver
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IUpdateDriver*& Oculus::Interaction::UpdateDriverAfterDataSource::dyn_UpdateDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::dyn_UpdateDriver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateDriver"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IUpdateDriver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _dataSource
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::UpdateDriverAfterDataSource::dyn__dataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::dyn__dataSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSource"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IDataSource DataSource
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IDataSource*& Oculus::Interaction::UpdateDriverAfterDataSource::dyn_DataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::dyn_DataSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataSource"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IDataSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::UpdateDriverAfterDataSource::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsRootDriver>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::UpdateDriverAfterDataSource::dyn_$IsRootDriver$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::dyn_$IsRootDriver$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsRootDriver>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverAfterDataSource.Awake
void Oculus::Interaction::UpdateDriverAfterDataSource::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UpdateDriverAfterDataSource*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverAfterDataSource.Start
void Oculus::Interaction::UpdateDriverAfterDataSource::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UpdateDriverAfterDataSource*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverAfterDataSource.OnEnable
void Oculus::Interaction::UpdateDriverAfterDataSource::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UpdateDriverAfterDataSource*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverAfterDataSource.OnDisable
void Oculus::Interaction::UpdateDriverAfterDataSource::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UpdateDriverAfterDataSource*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverAfterDataSource.get_IsRootDriver
bool Oculus::Interaction::UpdateDriverAfterDataSource::get_IsRootDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::get_IsRootDriver");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UpdateDriverAfterDataSource*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverAfterDataSource.set_IsRootDriver
void Oculus::Interaction::UpdateDriverAfterDataSource::set_IsRootDriver(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::set_IsRootDriver");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UpdateDriverAfterDataSource*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverAfterDataSource.Drive
void Oculus::Interaction::UpdateDriverAfterDataSource::Drive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::Drive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UpdateDriverAfterDataSource*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverAfterDataSource.InjectAllUpdateDriverAfterDataSource
void Oculus::Interaction::UpdateDriverAfterDataSource::InjectAllUpdateDriverAfterDataSource(::Oculus::Interaction::IUpdateDriver* updateDriver, ::Oculus::Interaction::Input::IDataSource* dataSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::InjectAllUpdateDriverAfterDataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllUpdateDriverAfterDataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateDriver), ::il2cpp_utils::ExtractType(dataSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateDriver, dataSource);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverAfterDataSource.InjectUpdateDriver
void Oculus::Interaction::UpdateDriverAfterDataSource::InjectUpdateDriver(::Oculus::Interaction::IUpdateDriver* updateDriver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::InjectUpdateDriver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectUpdateDriver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateDriver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateDriver);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverAfterDataSource.InjectDataSource
void Oculus::Interaction::UpdateDriverAfterDataSource::InjectDataSource(::Oculus::Interaction::Input::IDataSource* dataSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverAfterDataSource::InjectDataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectDataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataSource);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UpdateDriverGroup
#include "Oculus/Interaction/UpdateDriverGroup.hpp"
// Including type: Oculus.Interaction.UpdateDriverGroup/<>c
#include "Oculus/Interaction/UpdateDriverGroup_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsRootDriver>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::UpdateDriverGroup::dyn_$IsRootDriver$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::dyn_$IsRootDriver$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsRootDriver>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> _updateDrivers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& Oculus::Interaction::UpdateDriverGroup::dyn__updateDrivers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::dyn__updateDrivers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateDrivers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<Oculus.Interaction.IUpdateDriver> Drivers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::IUpdateDriver*>*& Oculus::Interaction::UpdateDriverGroup::dyn_Drivers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::dyn_Drivers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Drivers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::IUpdateDriver*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _iterations
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::UpdateDriverGroup::dyn__iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::dyn__iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverGroup.get_IsRootDriver
bool Oculus::Interaction::UpdateDriverGroup::get_IsRootDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::get_IsRootDriver");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UpdateDriverGroup*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverGroup.set_IsRootDriver
void Oculus::Interaction::UpdateDriverGroup::set_IsRootDriver(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::set_IsRootDriver");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UpdateDriverGroup*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverGroup.get_Iterations
int Oculus::Interaction::UpdateDriverGroup::get_Iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::get_Iterations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Iterations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverGroup.set_Iterations
void Oculus::Interaction::UpdateDriverGroup::set_Iterations(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::set_Iterations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Iterations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverGroup.Awake
void Oculus::Interaction::UpdateDriverGroup::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UpdateDriverGroup*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverGroup.Start
void Oculus::Interaction::UpdateDriverGroup::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UpdateDriverGroup*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverGroup.Update
void Oculus::Interaction::UpdateDriverGroup::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UpdateDriverGroup*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverGroup.Drive
void Oculus::Interaction::UpdateDriverGroup::Drive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::Drive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UpdateDriverGroup*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverGroup.InjectAllUpdateDriverGroup
void Oculus::Interaction::UpdateDriverGroup::InjectAllUpdateDriverGroup(::System::Collections::Generic::List_1<::Oculus::Interaction::IUpdateDriver*>* updateDrivers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::InjectAllUpdateDriverGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllUpdateDriverGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateDrivers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateDrivers);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverGroup.InjectUpdateDrivers
void Oculus::Interaction::UpdateDriverGroup::InjectUpdateDrivers(::System::Collections::Generic::List_1<::Oculus::Interaction::IUpdateDriver*>* updateDrivers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::InjectUpdateDrivers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectUpdateDrivers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateDrivers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateDrivers);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UpdateDriverGroup/<>c
#include "Oculus/Interaction/UpdateDriverGroup_--c.hpp"
// Including type: System.Converter`2
#include "System/Converter_2.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.IUpdateDriver
#include "Oculus/Interaction/IUpdateDriver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.UpdateDriverGroup/<>c <>9
::Oculus::Interaction::UpdateDriverGroup::$$c* Oculus::Interaction::UpdateDriverGroup::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::UpdateDriverGroup::$$c*>("Oculus.Interaction", "UpdateDriverGroup/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.UpdateDriverGroup/<>c <>9
void Oculus::Interaction::UpdateDriverGroup::$$c::_set_$$9(::Oculus::Interaction::UpdateDriverGroup::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "UpdateDriverGroup/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.IUpdateDriver> <>9__10_0
::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IUpdateDriver*>* Oculus::Interaction::UpdateDriverGroup::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IUpdateDriver*>*>("Oculus.Interaction", "UpdateDriverGroup/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.IUpdateDriver> <>9__10_0
void Oculus::Interaction::UpdateDriverGroup::$$c::_set_$$9__10_0(::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::IUpdateDriver*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "UpdateDriverGroup/<>c", "<>9__10_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Converter`2<Oculus.Interaction.IUpdateDriver,UnityEngine.Object> <>9__15_0
::System::Converter_2<::Oculus::Interaction::IUpdateDriver*, ::UnityEngine::Object*>* Oculus::Interaction::UpdateDriverGroup::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::Oculus::Interaction::IUpdateDriver*, ::UnityEngine::Object*>*>("Oculus.Interaction", "UpdateDriverGroup/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Converter`2<Oculus.Interaction.IUpdateDriver,UnityEngine.Object> <>9__15_0
void Oculus::Interaction::UpdateDriverGroup::$$c::_set_$$9__15_0(::System::Converter_2<::Oculus::Interaction::IUpdateDriver*, ::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "UpdateDriverGroup/<>c", "<>9__15_0", value)));
}
// Autogenerated method: Oculus.Interaction.UpdateDriverGroup/<>c..cctor
void Oculus::Interaction::UpdateDriverGroup::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "UpdateDriverGroup/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverGroup/<>c.<Awake>b__10_0
::Oculus::Interaction::IUpdateDriver* Oculus::Interaction::UpdateDriverGroup::$$c::$Awake$b__10_0(::UnityEngine::Object* mono) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::$$c::<Awake>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IUpdateDriver*, false>(this, ___internal__method, mono);
}
// Autogenerated method: Oculus.Interaction.UpdateDriverGroup/<>c.<InjectUpdateDrivers>b__15_0
::UnityEngine::Object* Oculus::Interaction::UpdateDriverGroup::$$c::$InjectUpdateDrivers$b__15_0(::Oculus::Interaction::IUpdateDriver* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UpdateDriverGroup::$$c::<InjectUpdateDrivers>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InjectUpdateDrivers>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, driver);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.FloatConstraint
#include "Oculus/Interaction/FloatConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Constrain
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::FloatConstraint::dyn_Constrain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FloatConstraint::dyn_Constrain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Constrain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Value
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::FloatConstraint::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FloatConstraint::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Grabbable
#include "Oculus/Interaction/Grabbable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.ITransformer
#include "Oculus/Interaction/ITransformer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _oneGrabTransformer
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Grabbable::dyn__oneGrabTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::dyn__oneGrabTransformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oneGrabTransformer"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _twoGrabTransformer
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Grabbable::dyn__twoGrabTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::dyn__twoGrabTransformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_twoGrabTransformer"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _targetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Grabbable::dyn__targetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::dyn__targetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxGrabPoints
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Grabbable::dyn__maxGrabPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::dyn__maxGrabPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxGrabPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ITransformer _activeTransformer
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ITransformer*& Oculus::Interaction::Grabbable::dyn__activeTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::dyn__activeTransformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeTransformer"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ITransformer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ITransformer OneGrabTransformer
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ITransformer*& Oculus::Interaction::Grabbable::dyn_OneGrabTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::dyn_OneGrabTransformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OneGrabTransformer"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ITransformer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ITransformer TwoGrabTransformer
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ITransformer*& Oculus::Interaction::Grabbable::dyn_TwoGrabTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::dyn_TwoGrabTransformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TwoGrabTransformer"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ITransformer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Grabbable.get_MaxGrabPoints
int Oculus::Interaction::Grabbable::get_MaxGrabPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::get_MaxGrabPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxGrabPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Grabbable.set_MaxGrabPoints
void Oculus::Interaction::Grabbable::set_MaxGrabPoints(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::set_MaxGrabPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxGrabPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Grabbable.get_Transform
::UnityEngine::Transform* Oculus::Interaction::Grabbable::get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::get_Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Grabbable*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Grabbable.get_GrabPoints
::System::Collections::Generic::List_1<::UnityEngine::Pose>* Oculus::Interaction::Grabbable::get_GrabPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::get_GrabPoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Grabbable*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Pose>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Grabbable.BeginTransform
void Oculus::Interaction::Grabbable::BeginTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::BeginTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Grabbable.UpdateTransform
void Oculus::Interaction::Grabbable::UpdateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::UpdateTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Grabbable.EndTransform
void Oculus::Interaction::Grabbable::EndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::EndTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Grabbable.InjectOptionalOneGrabTransformer
void Oculus::Interaction::Grabbable::InjectOptionalOneGrabTransformer(::Oculus::Interaction::ITransformer* transformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::InjectOptionalOneGrabTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalOneGrabTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformer);
}
// Autogenerated method: Oculus.Interaction.Grabbable.InjectOptionalTwoGrabTransformer
void Oculus::Interaction::Grabbable::InjectOptionalTwoGrabTransformer(::Oculus::Interaction::ITransformer* transformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::InjectOptionalTwoGrabTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalTwoGrabTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformer);
}
// Autogenerated method: Oculus.Interaction.Grabbable.InjectOptionalTargetTransform
void Oculus::Interaction::Grabbable::InjectOptionalTargetTransform(::UnityEngine::Transform* targetTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::InjectOptionalTargetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalTargetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetTransform);
}
// Autogenerated method: Oculus.Interaction.Grabbable.<Start>b__15_0
void Oculus::Interaction::Grabbable::$Start$b__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::<Start>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Grabbable.Awake
void Oculus::Interaction::Grabbable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Grabbable.Start
void Oculus::Interaction::Grabbable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Grabbable.ProcessPointerEvent
void Oculus::Interaction::Grabbable::ProcessPointerEvent(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::ProcessPointerEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.Grabbable.OnDisable
void Oculus::Interaction::Grabbable::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Grabbable::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IGrabbable
#include "Oculus/Interaction/IGrabbable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IGrabbable.get_GrabPoints
::System::Collections::Generic::List_1<::UnityEngine::Pose>* Oculus::Interaction::IGrabbable::get_GrabPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IGrabbable::get_GrabPoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IGrabbable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Pose>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IGrabbable.get_Transform
::UnityEngine::Transform* Oculus::Interaction::IGrabbable::get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IGrabbable::get_Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IGrabbable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ITransformer
#include "Oculus/Interaction/ITransformer.hpp"
// Including type: Oculus.Interaction.IGrabbable
#include "Oculus/Interaction/IGrabbable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.ITransformer.Initialize
void Oculus::Interaction::ITransformer::Initialize(::Oculus::Interaction::IGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ITransformer::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ITransformer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: Oculus.Interaction.ITransformer.BeginTransform
void Oculus::Interaction::ITransformer::BeginTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ITransformer::BeginTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ITransformer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ITransformer.UpdateTransform
void Oculus::Interaction::ITransformer::UpdateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ITransformer::UpdateTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ITransformer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ITransformer.EndTransform
void Oculus::Interaction::ITransformer::EndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ITransformer::EndTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ITransformer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.OneGrabFreeTransformer
#include "Oculus/Interaction/OneGrabFreeTransformer.hpp"
// Including type: Oculus.Interaction.IGrabbable
#include "Oculus/Interaction/IGrabbable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IGrabbable _grabbable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IGrabbable*& Oculus::Interaction::OneGrabFreeTransformer::dyn__grabbable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabFreeTransformer::dyn__grabbable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabbable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _grabDeltaInLocalSpace
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::OneGrabFreeTransformer::dyn__grabDeltaInLocalSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabFreeTransformer::dyn__grabDeltaInLocalSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabDeltaInLocalSpace"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.OneGrabFreeTransformer.Initialize
void Oculus::Interaction::OneGrabFreeTransformer::Initialize(::Oculus::Interaction::IGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabFreeTransformer::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabFreeTransformer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: Oculus.Interaction.OneGrabFreeTransformer.BeginTransform
void Oculus::Interaction::OneGrabFreeTransformer::BeginTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabFreeTransformer::BeginTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabFreeTransformer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabFreeTransformer.UpdateTransform
void Oculus::Interaction::OneGrabFreeTransformer::UpdateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabFreeTransformer::UpdateTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabFreeTransformer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.OneGrabFreeTransformer.EndTransform
void Oculus::Interaction::OneGrabFreeTransformer::EndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OneGrabFreeTransformer::EndTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OneGrabFreeTransformer*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
