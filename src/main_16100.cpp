// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.BasicPlayableBehaviour
#include "UnityEngine/Timeline/BasicPlayableBehaviour.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.get_duration
double UnityEngine::Timeline::BasicPlayableBehaviour::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::get_duration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 14));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.get_outputs
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::BasicPlayableBehaviour::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::get_outputs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnGraphStart
void UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStart(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnGraphStop
void UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStop(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnPlayableCreate
void UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableCreate(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableCreate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnPlayableDestroy
void UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnBehaviourPlay
void UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnBehaviourPause
void UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.PrepareFrame
void UnityEngine::Timeline::BasicPlayableBehaviour::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.ProcessFrame
void UnityEngine::Timeline::BasicPlayableBehaviour::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.CreatePlayable
::UnityEngine::Playables::Playable UnityEngine::Timeline::BasicPlayableBehaviour::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, owner);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.DirectorControlPlayable
#include "UnityEngine/Timeline/DirectorControlPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Playables.PlayableDirector director
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableDirector*& UnityEngine::Timeline::DirectorControlPlayable::dyn_director() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::dyn_director");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "director"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SyncTime
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::DirectorControlPlayable::dyn_m_SyncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::dyn_m_SyncTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SyncTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_AssetDuration
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::DirectorControlPlayable::dyn_m_AssetDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::dyn_m_AssetDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AssetDuration"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.Create
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::DirectorControlPlayable*> UnityEngine::Timeline::DirectorControlPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::PlayableDirector* director) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DirectorControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(director)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::DirectorControlPlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, director);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.SyncSpeed
void UnityEngine::Timeline::DirectorControlPlayable::SyncSpeed(double speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::SyncSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.SyncStart
void UnityEngine::Timeline::DirectorControlPlayable::SyncStart(::UnityEngine::Playables::PlayableGraph graph, double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::SyncStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, time);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.SyncStop
void UnityEngine::Timeline::DirectorControlPlayable::SyncStop(::UnityEngine::Playables::PlayableGraph graph, double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::SyncStop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, time);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.DetectDiscontinuity
bool UnityEngine::Timeline::DirectorControlPlayable::DetectDiscontinuity(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::DetectDiscontinuity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectDiscontinuity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.DetectOutOfSync
bool UnityEngine::Timeline::DirectorControlPlayable::DetectOutOfSync(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::DetectOutOfSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectOutOfSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.UpdateTime
void UnityEngine::Timeline::DirectorControlPlayable::UpdateTime(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::UpdateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::DirectorControlPlayable::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.PrepareFrame
void UnityEngine::Timeline::DirectorControlPlayable::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.ProcessFrame
void UnityEngine::Timeline::DirectorControlPlayable::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimeControl
#include "UnityEngine/Timeline/ITimeControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimeControl.SetTime
void UnityEngine::Timeline::ITimeControl::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ITimeControl::SetTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ITimeControl*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.ITimeControl.OnControlTimeStart
void UnityEngine::Timeline::ITimeControl::OnControlTimeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ITimeControl::OnControlTimeStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ITimeControl*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ITimeControl.OnControlTimeStop
void UnityEngine::Timeline::ITimeControl::OnControlTimeStop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ITimeControl::OnControlTimeStop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ITimeControl*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags TriggerInEditMode
::UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_TriggerInEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_get_TriggerInEditMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "TriggerInEditMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags TriggerInEditMode
void UnityEngine::Timeline::NotificationFlags::_set_TriggerInEditMode(::UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_set_TriggerInEditMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "TriggerInEditMode", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags Retroactive
::UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_Retroactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_get_Retroactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "Retroactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags Retroactive
void UnityEngine::Timeline::NotificationFlags::_set_Retroactive(::UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_set_Retroactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "Retroactive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags TriggerOnce
::UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_TriggerOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_get_TriggerOnce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "TriggerOnce"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags TriggerOnce
void UnityEngine::Timeline::NotificationFlags::_set_TriggerOnce(::UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_set_TriggerOnce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "TriggerOnce", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 value__
[[deprecated("Use field access instead!")]] int16_t& UnityEngine::Timeline::NotificationFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ParticleControlPlayable
#include "UnityEngine/Timeline/ParticleControlPlayable.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kUnsetTime
float UnityEngine::Timeline::ParticleControlPlayable::_get_kUnsetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::_get_kUnsetTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "ParticleControlPlayable", "kUnsetTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kUnsetTime
void UnityEngine::Timeline::ParticleControlPlayable::_set_kUnsetTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::_set_kUnsetTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ParticleControlPlayable", "kUnsetTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastPlayableTime
[[deprecated("Use field access instead!")]] float& UnityEngine::Timeline::ParticleControlPlayable::dyn_m_LastPlayableTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::dyn_m_LastPlayableTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPlayableTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastParticleTime
[[deprecated("Use field access instead!")]] float& UnityEngine::Timeline::ParticleControlPlayable::dyn_m_LastParticleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::dyn_m_LastParticleTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastParticleTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_RandomSeed
[[deprecated("Use field access instead!")]] uint& UnityEngine::Timeline::ParticleControlPlayable::dyn_m_RandomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::dyn_m_RandomSeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RandomSeed"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem <particleSystem>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& UnityEngine::Timeline::ParticleControlPlayable::dyn_$particleSystem$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::dyn_$particleSystem$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<particleSystem>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.Create
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::ParticleControlPlayable*> UnityEngine::Timeline::ParticleControlPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::ParticleSystem* component, uint randomSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ParticleControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(randomSeed)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::ParticleControlPlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, component, randomSeed);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.get_particleSystem
::UnityEngine::ParticleSystem* UnityEngine::Timeline::ParticleControlPlayable::get_particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::get_particleSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_particleSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.set_particleSystem
void UnityEngine::Timeline::ParticleControlPlayable::set_particleSystem(::UnityEngine::ParticleSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::set_particleSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_particleSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.Initialize
void UnityEngine::Timeline::ParticleControlPlayable::Initialize(::UnityEngine::ParticleSystem* ps, uint randomSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ps), ::il2cpp_utils::ExtractType(randomSeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ps, randomSeed);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.SetRandomSeed
void UnityEngine::Timeline::ParticleControlPlayable::SetRandomSeed(::UnityEngine::ParticleSystem* particleSystem, uint randomSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::SetRandomSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ParticleControlPlayable", "SetRandomSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particleSystem), ::il2cpp_utils::ExtractType(randomSeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, particleSystem, randomSeed);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.Simulate
void UnityEngine::Timeline::ParticleControlPlayable::Simulate(float time, bool restart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::Simulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Simulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(restart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, restart);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.PrepareFrame
void UnityEngine::Timeline::ParticleControlPlayable::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, data);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.PrefabControlPlayable
#include "UnityEngine/Timeline/PrefabControlPlayable.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_Instance
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::Timeline::PrefabControlPlayable::dyn_m_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::dyn_m_Instance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Instance"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.Create
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::PrefabControlPlayable*> UnityEngine::Timeline::PrefabControlPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* prefabGameObject, ::UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "PrefabControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(prefabGameObject), ::il2cpp_utils::ExtractType(parentTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::PrefabControlPlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, prefabGameObject, parentTransform);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.get_prefabInstance
::UnityEngine::GameObject* UnityEngine::Timeline::PrefabControlPlayable::get_prefabInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::get_prefabInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.Initialize
::UnityEngine::GameObject* UnityEngine::Timeline::PrefabControlPlayable::Initialize(::UnityEngine::GameObject* prefabGameObject, ::UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabGameObject), ::il2cpp_utils::ExtractType(parentTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefabGameObject, parentTransform);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.SetHideFlagsRecursive
void UnityEngine::Timeline::PrefabControlPlayable::SetHideFlagsRecursive(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::SetHideFlagsRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "PrefabControlPlayable", "SetHideFlagsRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::PrefabControlPlayable::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeControlPlayable
#include "UnityEngine/Timeline/TimeControlPlayable.hpp"
// Including type: UnityEngine.Timeline.ITimeControl
#include "UnityEngine/Timeline/ITimeControl.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.ITimeControl m_timeControl
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::ITimeControl*& UnityEngine::Timeline::TimeControlPlayable::dyn_m_timeControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeControlPlayable::dyn_m_timeControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeControl"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::ITimeControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_started
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::TimeControlPlayable::dyn_m_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeControlPlayable::dyn_m_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.Create
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeControlPlayable*> UnityEngine::Timeline::TimeControlPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Timeline::ITimeControl* timeControl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timeControl)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeControlPlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, timeControl);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.Initialize
void UnityEngine::Timeline::TimeControlPlayable::Initialize(::UnityEngine::Timeline::ITimeControl* timeControl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeControl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeControl);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.PrepareFrame
void UnityEngine::Timeline::TimeControlPlayable::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeControlPlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/<>c
#include "UnityEngine/Timeline/TimeNotificationBehaviour_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.DirectorWrapMode
#include "UnityEngine/Playables/DirectorWrapMode.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry> m_Notifications
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>*& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_Notifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_Notifications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Notifications"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_PreviousTime
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_PreviousTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_PreviousTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_NeedSortNotifications
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_NeedSortNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_NeedSortNotifications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NeedSortNotifications"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_TimeSource
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::Playable& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_TimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_TimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimeSource"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.set_timeSource
void UnityEngine::Timeline::TimeNotificationBehaviour::set_timeSource(::UnityEngine::Playables::Playable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::set_timeSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Create
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeNotificationBehaviour*> UnityEngine::Timeline::TimeNotificationBehaviour::Create(::UnityEngine::Playables::PlayableGraph graph, double duration, ::UnityEngine::Playables::DirectorWrapMode loopMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(loopMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeNotificationBehaviour*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, duration, loopMode);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.AddNotification
void UnityEngine::Timeline::TimeNotificationBehaviour::AddNotification(double time, ::UnityEngine::Playables::INotification* payload, ::UnityEngine::Timeline::NotificationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::AddNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(payload), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, payload, flags);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SortNotifications
void UnityEngine::Timeline::TimeNotificationBehaviour::SortNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::SortNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.CanRestoreNotification
bool UnityEngine::Timeline::TimeNotificationBehaviour::CanRestoreNotification(::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry e, ::UnityEngine::Playables::FrameData info, double currentTime, double previousTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::CanRestoreNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "CanRestoreNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(currentTime), ::il2cpp_utils::ExtractType(previousTime)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e, info, currentTime, previousTime);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.TriggerNotificationsInRange
void UnityEngine::Timeline::TimeNotificationBehaviour::TriggerNotificationsInRange(double start, double end, ::UnityEngine::Playables::FrameData info, ::UnityEngine::Playables::Playable playable, bool checkState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::TriggerNotificationsInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerNotificationsInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(checkState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, info, playable, checkState);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SyncDurationWithExternalSource
void UnityEngine::Timeline::TimeNotificationBehaviour::SyncDurationWithExternalSource(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::SyncDurationWithExternalSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncDurationWithExternalSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Trigger_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Trigger_internal(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::PlayableOutput output, ByRef<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::Trigger_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Trigger_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playable, output, byref(e));
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Restore_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Restore_internal(ByRef<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::Restore_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Restore_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(e));
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnGraphStart
void UnityEngine::Timeline::TimeNotificationBehaviour::OnGraphStart(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnBehaviourPause
void UnityEngine::Timeline::TimeNotificationBehaviour::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.PrepareFrame
void UnityEngine::Timeline::TimeNotificationBehaviour::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double time
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_time");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Playables.INotification payload
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::INotification*& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_payload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_payload");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "payload"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::INotification**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean notificationFired
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_notificationFired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_notificationFired");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notificationFired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.NotificationFlags flags
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::NotificationFlags& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_flags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::NotificationFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry.get_triggerInEditor
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerInEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_triggerInEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry.get_prewarm
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_prewarm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_prewarm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_prewarm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry.get_triggerOnce
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_triggerOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/<>c
#include "UnityEngine/Timeline/TimeNotificationBehaviour_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TimeNotificationBehaviour/<>c <>9
::UnityEngine::Timeline::TimeNotificationBehaviour::$$c* UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimeNotificationBehaviour::$$c*>("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TimeNotificationBehaviour/<>c <>9
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9(::UnityEngine::Timeline::TimeNotificationBehaviour::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry> <>9__12_0
::System::Comparison_1<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>* UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>*>("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry> <>9__12_0
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9__12_0(::System::Comparison_1<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9__12_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/<>c..cctor
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/<>c.<SortNotifications>b__12_0
int UnityEngine::Timeline::TimeNotificationBehaviour::$$c::$SortNotifications$b__12_0(::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry x, ::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::<SortNotifications>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortNotifications>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.PlayableTrack
#include "UnityEngine/Timeline/PlayableTrack.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.PlayableTrack.OnCreateClip
void UnityEngine::Timeline::PlayableTrack::OnCreateClip(::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PlayableTrack::OnCreateClip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackMediaType
#include "UnityEngine/Timeline/TrackMediaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Timeline.TimelineAsset/MediaType m_MediaType
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TimelineAsset::MediaType& UnityEngine::Timeline::TrackMediaType::dyn_m_MediaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackMediaType::dyn_m_MediaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MediaType"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimelineAsset::MediaType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackClipTypeAttribute
#include "UnityEngine/Timeline/TrackClipTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Type inspectedType
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::Timeline::TrackClipTypeAttribute::dyn_inspectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackClipTypeAttribute::dyn_inspectedType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inspectedType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean allowAutoCreate
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::TrackClipTypeAttribute::dyn_allowAutoCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackClipTypeAttribute::dyn_allowAutoCreate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowAutoCreate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotKeyableAttribute
#include "UnityEngine/Timeline/NotKeyableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackBindingFlags
#include "UnityEngine/Timeline/TrackBindingFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags None
::UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags None
void UnityEngine::Timeline::TrackBindingFlags::_set_None(::UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags AllowCreateComponent
::UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_AllowCreateComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_get_AllowCreateComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "AllowCreateComponent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags AllowCreateComponent
void UnityEngine::Timeline::TrackBindingFlags::_set_AllowCreateComponent(::UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_set_AllowCreateComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "AllowCreateComponent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags All
::UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags All
void UnityEngine::Timeline::TrackBindingFlags::_set_All(::UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TrackBindingFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackBindingTypeAttribute
#include "UnityEngine/Timeline/TrackBindingTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Timeline.TrackBindingFlags flags
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TrackBindingFlags& UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TrackBindingFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SupportsChildTracksAttribute
#include "UnityEngine/Timeline/SupportsChildTracksAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Type childType
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_childType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_childType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "childType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 levels
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_levels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_levels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IgnoreOnPlayableTrackAttribute
#include "UnityEngine/Timeline/IgnoreOnPlayableTrackAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeFieldAttribute
#include "UnityEngine/Timeline/TimeFieldAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Timeline.TimeFieldAttribute/UseEditMode <useEditMode>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode& UnityEngine::Timeline::TimeFieldAttribute::dyn_$useEditMode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeFieldAttribute::dyn_$useEditMode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<useEditMode>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimeFieldAttribute.get_useEditMode
::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::get_useEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeFieldAttribute::get_useEditMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useEditMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeFieldAttribute/UseEditMode
#include "UnityEngine/Timeline/TimeFieldAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode None
::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode>("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode None
void UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_None(::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode ApplyEditMode
::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_ApplyEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_ApplyEditMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode>("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "ApplyEditMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode ApplyEditMode
void UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_ApplyEditMode(::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_ApplyEditMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "ApplyEditMode", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.FrameRateFieldAttribute
#include "UnityEngine/Timeline/FrameRateFieldAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.HideInMenuAttribute
#include "UnityEngine/Timeline/HideInMenuAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.CustomStyleAttribute
#include "UnityEngine/Timeline/CustomStyleAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String ussStyle
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Timeline::CustomStyleAttribute::dyn_ussStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::CustomStyleAttribute::dyn_ussStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ussStyle"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MenuCategoryAttribute
#include "UnityEngine/Timeline/MenuCategoryAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String category
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Timeline::MenuCategoryAttribute::dyn_category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MenuCategoryAttribute::dyn_category");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "category"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimelineClipAsset
#include "UnityEngine/Timeline/ITimelineClipAsset.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimelineClipAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ITimelineClipAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ITimelineClipAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ITimelineClipAsset*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimelineEvaluateCallback
#include "UnityEngine/Timeline/ITimelineEvaluateCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimelineEvaluateCallback.Evaluate
void UnityEngine::Timeline::ITimelineEvaluateCallback::Evaluate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ITimelineEvaluateCallback::Evaluate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ITimelineEvaluateCallback*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelinePlayable
#include "UnityEngine/Timeline/TimelinePlayable.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.ITimelineEvaluateCallback
#include "UnityEngine/Timeline/ITimelineEvaluateCallback.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Animations.AnimationPlayableOutput
#include "UnityEngine/Animations/AnimationPlayableOutput.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Boolean muteAudioScrubbing
bool UnityEngine::Timeline::TimelinePlayable::_get_muteAudioScrubbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::_get_muteAudioScrubbing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine.Timeline", "TimelinePlayable", "muteAudioScrubbing"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean muteAudioScrubbing
void UnityEngine::Timeline::TimelinePlayable::_set_muteAudioScrubbing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::_set_muteAudioScrubbing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelinePlayable", "muteAudioScrubbing", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.IntervalTree`1<UnityEngine.Timeline.RuntimeElement> m_IntervalTree
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_IntervalTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_IntervalTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IntervalTree"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.RuntimeElement> m_ActiveClips
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::RuntimeElement*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActiveClips"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::RuntimeElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.RuntimeElement> m_CurrentListOfActiveClips
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::RuntimeElement*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_CurrentListOfActiveClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_CurrentListOfActiveClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentListOfActiveClips"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::RuntimeElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ActiveBit
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveBit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActiveBit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.ITimelineEvaluateCallback> m_EvaluateCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::ITimelineEvaluateCallback*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_EvaluateCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_EvaluateCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EvaluateCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::ITimelineEvaluateCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Timeline.TrackAsset,UnityEngine.Playables.Playable> m_PlayableCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Timeline::TrackAsset*, ::UnityEngine::Playables::Playable>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_PlayableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_PlayableCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayableCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Timeline::TrackAsset*, ::UnityEngine::Playables::Playable>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Create
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimelinePlayable*> UnityEngine::Timeline::TimelinePlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>* tracks, ::UnityEngine::GameObject* go, bool autoRebalance, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(autoRebalance), ::il2cpp_utils::ExtractType(createOutputs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimelinePlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, tracks, go, autoRebalance, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Compile
void UnityEngine::Timeline::TimelinePlayable::Compile(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::Playable timelinePlayable, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>* tracks, ::UnityEngine::GameObject* go, bool autoRebalance, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::Compile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(autoRebalance), ::il2cpp_utils::ExtractType(createOutputs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, timelinePlayable, tracks, go, autoRebalance, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CompileTrackList
void UnityEngine::Timeline::TimelinePlayable::CompileTrackList(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::Playable timelinePlayable, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>* tracks, ::UnityEngine::GameObject* go, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::CompileTrackList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileTrackList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(createOutputs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, timelinePlayable, tracks, go, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreateTrackOutput
void UnityEngine::Timeline::TimelinePlayable::CreateTrackOutput(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Timeline::TrackAsset* track, ::UnityEngine::GameObject* go, ::UnityEngine::Playables::Playable playable, int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::CreateTrackOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrackOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(port)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, track, go, playable, port);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.EvaluateWeightsForAnimationPlayableOutput
void UnityEngine::Timeline::TimelinePlayable::EvaluateWeightsForAnimationPlayableOutput(::UnityEngine::Timeline::TrackAsset* track, ::UnityEngine::Animations::AnimationPlayableOutput animOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::EvaluateWeightsForAnimationPlayableOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateWeightsForAnimationPlayableOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(animOutput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, track, animOutput);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.EvaluateAnimationPreviewUpdateCallback
void UnityEngine::Timeline::TimelinePlayable::EvaluateAnimationPreviewUpdateCallback(::UnityEngine::Timeline::TrackAsset* track, ::UnityEngine::Animations::AnimationPlayableOutput animOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::EvaluateAnimationPreviewUpdateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAnimationPreviewUpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(animOutput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, track, animOutput);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreateTrackPlayable
::UnityEngine::Playables::Playable UnityEngine::Timeline::TimelinePlayable::CreateTrackPlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::Playable timelinePlayable, ::UnityEngine::Timeline::TrackAsset* track, ::UnityEngine::GameObject* go, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::CreateTrackPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrackPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(createOutputs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, timelinePlayable, track, go, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Evaluate
void UnityEngine::Timeline::TimelinePlayable::Evaluate(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, frameData);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CacheTrack
void UnityEngine::Timeline::TimelinePlayable::CacheTrack(::UnityEngine::Timeline::TrackAsset* track, ::UnityEngine::Playables::Playable playable, int port, ::UnityEngine::Playables::Playable parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::CacheTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, track, playable, port, parent);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.ForAOTCompilationOnly
void UnityEngine::Timeline::TimelinePlayable::ForAOTCompilationOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::ForAOTCompilationOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "ForAOTCompilationOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable..cctor
void UnityEngine::Timeline::TimelinePlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.PrepareFrame
void UnityEngine::Timeline::TimelinePlayable::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Extrapolation
#include "UnityEngine/Timeline/Extrapolation.hpp"
// Including type: UnityEngine.Timeline.Extrapolation/<>c
#include "UnityEngine/Timeline/Extrapolation_--c.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Double kMinExtrapolationTime
double UnityEngine::Timeline::Extrapolation::_get_kMinExtrapolationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::_get_kMinExtrapolationTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "Extrapolation", "kMinExtrapolationTime"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Double kMinExtrapolationTime
void UnityEngine::Timeline::Extrapolation::_set_kMinExtrapolationTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::_set_kMinExtrapolationTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation", "kMinExtrapolationTime", value));
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation.CalculateExtrapolationTimes
void UnityEngine::Timeline::Extrapolation::CalculateExtrapolationTimes(::UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::CalculateExtrapolationTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", "CalculateExtrapolationTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation.SortClipsByStartTime
::ArrayW<::UnityEngine::Timeline::TimelineClip*> UnityEngine::Timeline::Extrapolation::SortClipsByStartTime(::ArrayW<::UnityEngine::Timeline::TimelineClip*> clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::SortClipsByStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", "SortClipsByStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clips)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Timeline::TimelineClip*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clips);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation..cctor
void UnityEngine::Timeline::Extrapolation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Extrapolation/<>c
#include "UnityEngine/Timeline/Extrapolation_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.Extrapolation/<>c <>9
::UnityEngine::Timeline::Extrapolation::$$c* UnityEngine::Timeline::Extrapolation::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::Extrapolation::$$c*>("UnityEngine.Timeline", "Extrapolation/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.Extrapolation/<>c <>9
void UnityEngine::Timeline::Extrapolation::$$c::_set_$$9(::UnityEngine::Timeline::Extrapolation::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__2_0
::System::Comparison_1<::UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::Extrapolation::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::Timeline::TimelineClip*>*>("UnityEngine.Timeline", "Extrapolation/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__2_0
void UnityEngine::Timeline::Extrapolation::$$c::_set_$$9__2_0(::System::Comparison_1<::UnityEngine::Timeline::TimelineClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation/<>c", "<>9__2_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation/<>c..cctor
void UnityEngine::Timeline::Extrapolation::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation/<>c.<SortClipsByStartTime>b__2_0
int UnityEngine::Timeline::Extrapolation::$$c::$SortClipsByStartTime$b__2_0(::UnityEngine::Timeline::TimelineClip* clip1, ::UnityEngine::Timeline::TimelineClip* clip2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::<SortClipsByStartTime>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortClipsByStartTime>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip1), ::il2cpp_utils::ExtractType(clip2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, clip1, clip2);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.HashUtility
#include "UnityEngine/Timeline/HashUtility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4, h5);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5, int h6) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5), ::il2cpp_utils::ExtractType(h6)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4, h5, h6);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5, int h6, int h7) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5), ::il2cpp_utils::ExtractType(h6), ::il2cpp_utils::ExtractType(h7)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4, h5, h6, h7);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(::ArrayW<int> hashes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashes)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.PushActiveGameObject
void UnityEngine::Timeline::IPropertyCollector::PushActiveGameObject(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::PushActiveGameObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.PopActiveGameObject
void UnityEngine::Timeline::IPropertyCollector::PopActiveGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::PopActiveGameObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClip
void UnityEngine::Timeline::IPropertyCollector::AddFromClip(::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromClip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClips
void UnityEngine::Timeline::IPropertyCollector::AddFromClips(::System::Collections::Generic::IEnumerable_1<::UnityEngine::AnimationClip*>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromClips");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clips);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClip
void UnityEngine::Timeline::IPropertyCollector::AddFromClip(::UnityEngine::GameObject* obj, ::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromClip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, clip);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClips
void UnityEngine::Timeline::IPropertyCollector::AddFromClips(::UnityEngine::GameObject* obj, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::AnimationClip*>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromClips");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, clips);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName(::UnityEngine::GameObject* obj, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName(::UnityEngine::Component* component, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromComponent
void UnityEngine::Timeline::IPropertyCollector::AddFromComponent(::UnityEngine::GameObject* obj, ::UnityEngine::Component* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromComponent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, component);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddObjectProperties
void UnityEngine::Timeline::IPropertyCollector::AddObjectProperties(::UnityEngine::Object* obj, ::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddObjectProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, clip);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IPropertyPreview
#include "UnityEngine/Timeline/IPropertyPreview.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IPropertyPreview.GatherProperties
void UnityEngine::Timeline::IPropertyPreview::GatherProperties(::UnityEngine::Playables::PlayableDirector* director, ::UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyPreview::GatherProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyPreview*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotificationUtilities
#include "UnityEngine/Timeline/NotificationUtilities.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Playables.DirectorWrapMode
#include "UnityEngine/Playables/DirectorWrapMode.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.NotificationUtilities.CreateNotificationsPlayable
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeNotificationBehaviour*> UnityEngine::Timeline::NotificationUtilities::CreateNotificationsPlayable(::UnityEngine::Playables::PlayableGraph graph, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IMarker*>* markers, double duration, ::UnityEngine::Playables::DirectorWrapMode extrapolationMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationUtilities::CreateNotificationsPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "NotificationUtilities", "CreateNotificationsPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(markers), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(extrapolationMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeNotificationBehaviour*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, markers, duration, extrapolationMode);
}
// Autogenerated method: UnityEngine.Timeline.NotificationUtilities.TrackTypeSupportsNotifications
bool UnityEngine::Timeline::NotificationUtilities::TrackTypeSupportsNotifications(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationUtilities::TrackTypeSupportsNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "NotificationUtilities", "TrackTypeSupportsNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClipExtensions
#include "UnityEngine/Timeline/TimelineClipExtensions.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String k_UndoSetParentTrackText
::StringW UnityEngine::Timeline::TimelineClipExtensions::_get_k_UndoSetParentTrackText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClipExtensions::_get_k_UndoSetParentTrackText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.Timeline", "TimelineClipExtensions", "k_UndoSetParentTrackText"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String k_UndoSetParentTrackText
void UnityEngine::Timeline::TimelineClipExtensions::_set_k_UndoSetParentTrackText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClipExtensions::_set_k_UndoSetParentTrackText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClipExtensions", "k_UndoSetParentTrackText", value));
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipExtensions.MoveToTrack
void UnityEngine::Timeline::TimelineClipExtensions::MoveToTrack(::UnityEngine::Timeline::TimelineClip* clip, ::UnityEngine::Timeline::TrackAsset* destinationTrack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClipExtensions::MoveToTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipExtensions", "MoveToTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(destinationTrack)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, destinationTrack);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipExtensions.TryMoveToTrack
bool UnityEngine::Timeline::TimelineClipExtensions::TryMoveToTrack(::UnityEngine::Timeline::TimelineClip* clip, ::UnityEngine::Timeline::TrackAsset* destinationTrack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClipExtensions::TryMoveToTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipExtensions", "TryMoveToTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(destinationTrack)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, destinationTrack);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipExtensions.MoveToTrack_Impl
void UnityEngine::Timeline::TimelineClipExtensions::MoveToTrack_Impl(::UnityEngine::Timeline::TimelineClip* clip, ::UnityEngine::Timeline::TrackAsset* destinationTrack, ::UnityEngine::Object* asset, ::UnityEngine::Timeline::TrackAsset* parentTrack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClipExtensions::MoveToTrack_Impl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipExtensions", "MoveToTrack_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(destinationTrack), ::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(parentTrack)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, destinationTrack, asset, parentTrack);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipExtensions..cctor
void UnityEngine::Timeline::TimelineClipExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClipExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineCreateUtilities
#include "UnityEngine/Timeline/TimelineCreateUtilities.hpp"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_0
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_0.hpp"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_1
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.GenerateUniqueActorName
::StringW UnityEngine::Timeline::TimelineCreateUtilities::GenerateUniqueActorName(::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>* tracks, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::GenerateUniqueActorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "GenerateUniqueActorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tracks, name);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.SaveAssetIntoObject
void UnityEngine::Timeline::TimelineCreateUtilities::SaveAssetIntoObject(::UnityEngine::Object* childAsset, ::UnityEngine::Object* masterAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::SaveAssetIntoObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "SaveAssetIntoObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childAsset), ::il2cpp_utils::ExtractType(masterAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, childAsset, masterAsset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.RemoveAssetFromObject
void UnityEngine::Timeline::TimelineCreateUtilities::RemoveAssetFromObject(::UnityEngine::Object* childAsset, ::UnityEngine::Object* masterAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::RemoveAssetFromObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "RemoveAssetFromObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childAsset), ::il2cpp_utils::ExtractType(masterAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, childAsset, masterAsset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.CreateAnimationClipForTrack
::UnityEngine::AnimationClip* UnityEngine::Timeline::TimelineCreateUtilities::CreateAnimationClipForTrack(::StringW name, ::UnityEngine::Timeline::TrackAsset* track, bool isLegacy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::CreateAnimationClipForTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "CreateAnimationClipForTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(isLegacy)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, track, isLegacy);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.ValidateParentTrack
bool UnityEngine::Timeline::TimelineCreateUtilities::ValidateParentTrack(::UnityEngine::Timeline::TrackAsset* parent, ::System::Type* childType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::ValidateParentTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "ValidateParentTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(childType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, childType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_0
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_0.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_0.<GenerateUniqueActorName>b__0
bool UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::$GenerateUniqueActorName$b__0(::UnityEngine::ScriptableObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::<GenerateUniqueActorName>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateUniqueActorName>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_1
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String result
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_1.<GenerateUniqueActorName>b__1
bool UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::$GenerateUniqueActorName$b__1(::UnityEngine::ScriptableObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::<GenerateUniqueActorName>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateUniqueActorName>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineUndo
#include "UnityEngine/Timeline/TimelineUndo.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.get_undoEnabled
bool UnityEngine::Timeline::TimelineUndo::get_undoEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineUndo::get_undoEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "get_undoEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushDestroyUndo
void UnityEngine::Timeline::TimelineUndo::PushDestroyUndo(::UnityEngine::Timeline::TimelineAsset* timeline, ::UnityEngine::Object* thingToDirty, ::UnityEngine::Object* objectToDestroy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineUndo::PushDestroyUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushDestroyUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeline), ::il2cpp_utils::ExtractType(thingToDirty), ::il2cpp_utils::ExtractType(objectToDestroy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeline, thingToDirty, objectToDestroy);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushUndo
void UnityEngine::Timeline::TimelineUndo::PushUndo(::ArrayW<::UnityEngine::Object*> thingsToDirty, ::StringW operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineUndo::PushUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thingsToDirty), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thingsToDirty, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushUndo
void UnityEngine::Timeline::TimelineUndo::PushUndo(::UnityEngine::Object* thingToDirty, ::StringW operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineUndo::PushUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thingToDirty), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thingToDirty, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.RegisterCreatedObjectUndo
void UnityEngine::Timeline::TimelineUndo::RegisterCreatedObjectUndo(::UnityEngine::Object* thingCreated, ::StringW operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineUndo::RegisterCreatedObjectUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "RegisterCreatedObjectUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thingCreated), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thingCreated, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.UndoName
::StringW UnityEngine::Timeline::TimelineUndo::UndoName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineUndo::UndoName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "UndoName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.StandardFrameRates
#include "UnityEngine/Timeline/StandardFrameRates.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.StandardFrameRates Fps24
::UnityEngine::Timeline::StandardFrameRates UnityEngine::Timeline::StandardFrameRates::_get_Fps24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_get_Fps24");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::StandardFrameRates>("UnityEngine.Timeline", "StandardFrameRates", "Fps24"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.StandardFrameRates Fps24
void UnityEngine::Timeline::StandardFrameRates::_set_Fps24(::UnityEngine::Timeline::StandardFrameRates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_set_Fps24");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "StandardFrameRates", "Fps24", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.StandardFrameRates Fps23_97
::UnityEngine::Timeline::StandardFrameRates UnityEngine::Timeline::StandardFrameRates::_get_Fps23_97() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_get_Fps23_97");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::StandardFrameRates>("UnityEngine.Timeline", "StandardFrameRates", "Fps23_97"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.StandardFrameRates Fps23_97
void UnityEngine::Timeline::StandardFrameRates::_set_Fps23_97(::UnityEngine::Timeline::StandardFrameRates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_set_Fps23_97");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "StandardFrameRates", "Fps23_97", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.StandardFrameRates Fps25
::UnityEngine::Timeline::StandardFrameRates UnityEngine::Timeline::StandardFrameRates::_get_Fps25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_get_Fps25");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::StandardFrameRates>("UnityEngine.Timeline", "StandardFrameRates", "Fps25"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.StandardFrameRates Fps25
void UnityEngine::Timeline::StandardFrameRates::_set_Fps25(::UnityEngine::Timeline::StandardFrameRates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_set_Fps25");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "StandardFrameRates", "Fps25", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.StandardFrameRates Fps30
::UnityEngine::Timeline::StandardFrameRates UnityEngine::Timeline::StandardFrameRates::_get_Fps30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_get_Fps30");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::StandardFrameRates>("UnityEngine.Timeline", "StandardFrameRates", "Fps30"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.StandardFrameRates Fps30
void UnityEngine::Timeline::StandardFrameRates::_set_Fps30(::UnityEngine::Timeline::StandardFrameRates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_set_Fps30");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "StandardFrameRates", "Fps30", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.StandardFrameRates Fps29_97
::UnityEngine::Timeline::StandardFrameRates UnityEngine::Timeline::StandardFrameRates::_get_Fps29_97() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_get_Fps29_97");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::StandardFrameRates>("UnityEngine.Timeline", "StandardFrameRates", "Fps29_97"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.StandardFrameRates Fps29_97
void UnityEngine::Timeline::StandardFrameRates::_set_Fps29_97(::UnityEngine::Timeline::StandardFrameRates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_set_Fps29_97");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "StandardFrameRates", "Fps29_97", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.StandardFrameRates Fps50
::UnityEngine::Timeline::StandardFrameRates UnityEngine::Timeline::StandardFrameRates::_get_Fps50() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_get_Fps50");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::StandardFrameRates>("UnityEngine.Timeline", "StandardFrameRates", "Fps50"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.StandardFrameRates Fps50
void UnityEngine::Timeline::StandardFrameRates::_set_Fps50(::UnityEngine::Timeline::StandardFrameRates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_set_Fps50");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "StandardFrameRates", "Fps50", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.StandardFrameRates Fps60
::UnityEngine::Timeline::StandardFrameRates UnityEngine::Timeline::StandardFrameRates::_get_Fps60() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_get_Fps60");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::StandardFrameRates>("UnityEngine.Timeline", "StandardFrameRates", "Fps60"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.StandardFrameRates Fps60
void UnityEngine::Timeline::StandardFrameRates::_set_Fps60(::UnityEngine::Timeline::StandardFrameRates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_set_Fps60");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "StandardFrameRates", "Fps60", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.StandardFrameRates Fps59_94
::UnityEngine::Timeline::StandardFrameRates UnityEngine::Timeline::StandardFrameRates::_get_Fps59_94() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_get_Fps59_94");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::StandardFrameRates>("UnityEngine.Timeline", "StandardFrameRates", "Fps59_94"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.StandardFrameRates Fps59_94
void UnityEngine::Timeline::StandardFrameRates::_set_Fps59_94(::UnityEngine::Timeline::StandardFrameRates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::_set_Fps59_94");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "StandardFrameRates", "Fps59_94", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::StandardFrameRates::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::StandardFrameRates::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeUtility
#include "UnityEngine/Timeline/TimeUtility.hpp"
// Including type: UnityEngine.Timeline.TimeUtility/<>c
#include "UnityEngine/Timeline/TimeUtility_--c.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.Playables.FrameRate
#include "UnityEngine/Playables/FrameRate.hpp"
// Including type: UnityEngine.Timeline.StandardFrameRates
#include "UnityEngine/Timeline/StandardFrameRates.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kFrameRateEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kFrameRateEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
double UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
void UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kFrameRateRounding
double UnityEngine::Timeline::TimeUtility::_get_kFrameRateRounding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_get_kFrameRateRounding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kFrameRateRounding"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kFrameRateRounding
void UnityEngine::Timeline::TimeUtility::_set_kFrameRateRounding(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_set_kFrameRateRounding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kFrameRateRounding", value));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ValidateFrameRate
void UnityEngine::Timeline::TimeUtility::ValidateFrameRate(double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::ValidateFrameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ValidateFrameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToFrames
int UnityEngine::Timeline::TimeUtility::ToFrames(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::ToFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToExactFrames
double UnityEngine::Timeline::TimeUtility::ToExactFrames(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::ToExactFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToExactFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(int frames, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::FromFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "FromFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frames), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frames, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(double frames, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::FromFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "FromFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frames), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frames, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::OnFrameBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetEpsilon
double UnityEngine::Timeline::TimeUtility::GetEpsilon(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::GetEpsilon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetEpsilon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.PreviousFrame
int UnityEngine::Timeline::TimeUtility::PreviousFrame(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::PreviousFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "PreviousFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.NextFrame
int UnityEngine::Timeline::TimeUtility::NextFrame(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::NextFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "NextFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.PreviousFrameTime
double UnityEngine::Timeline::TimeUtility::PreviousFrameTime(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::PreviousFrameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "PreviousFrameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.NextFrameTime
double UnityEngine::Timeline::TimeUtility::NextFrameTime(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::NextFrameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "NextFrameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate, double epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::OnFrameBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate, epsilon);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RoundToFrame
double UnityEngine::Timeline::TimeUtility::RoundToFrame(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::RoundToFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "RoundToFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsFrames
::StringW UnityEngine::Timeline::TimeUtility::TimeAsFrames(double timeValue, double frameRate, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::TimeAsFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "TimeAsFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeValue), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeValue, frameRate, format);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsTimeCode
::StringW UnityEngine::Timeline::TimeUtility::TimeAsTimeCode(double timeValue, double frameRate, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::TimeAsTimeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "TimeAsTimeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeValue), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeValue, frameRate, format);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ParseTimeCode
double UnityEngine::Timeline::TimeUtility::ParseTimeCode(::StringW timeCode, double frameRate, double defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::ParseTimeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ParseTimeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeCode), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeCode, frameRate, defaultValue);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ParseTimeSeconds
double UnityEngine::Timeline::TimeUtility::ParseTimeSeconds(::StringW timeCode, double frameRate, double defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::ParseTimeSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ParseTimeSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeCode), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeCode, frameRate, defaultValue);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetAnimationClipLength
double UnityEngine::Timeline::TimeUtility::GetAnimationClipLength(::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::GetAnimationClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetAnimationClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RemoveChar
::StringW UnityEngine::Timeline::TimeUtility::RemoveChar(::StringW str, ::System::Func_2<::Il2CppChar, bool>* charToRemoveFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::RemoveChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "RemoveChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(charToRemoveFunc)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, charToRemoveFunc);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetClosestFrameRate
::UnityEngine::Playables::FrameRate UnityEngine::Timeline::TimeUtility::GetClosestFrameRate(double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::GetClosestFrameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetClosestFrameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::FrameRate, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToFrameRate
::UnityEngine::Playables::FrameRate UnityEngine::Timeline::TimeUtility::ToFrameRate(::UnityEngine::Timeline::StandardFrameRates enumValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::ToFrameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToFrameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::FrameRate, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enumValue);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToStandardFrameRate
bool UnityEngine::Timeline::TimeUtility::ToStandardFrameRate(::UnityEngine::Playables::FrameRate rate, ByRef<::UnityEngine::Timeline::StandardFrameRates> standard) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::ToStandardFrameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToStandardFrameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rate), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Timeline::StandardFrameRates&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rate, byref(standard));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility..cctor
void UnityEngine::Timeline::TimeUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeUtility/<>c
#include "UnityEngine/Timeline/TimeUtility_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TimeUtility/<>c <>9
::UnityEngine::Timeline::TimeUtility::$$c* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimeUtility::$$c*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TimeUtility/<>c <>9
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9(::UnityEngine::Timeline::TimeUtility::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__19_0
::System::Func_2<::Il2CppChar, bool>* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppChar, bool>*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__19_0
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__19_0(::System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__19_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__19_1
::System::Func_2<::Il2CppChar, bool>* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__19_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__19_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppChar, bool>*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__19_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__19_1
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__19_1(::System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__19_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__19_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__20_0
::System::Func_2<::Il2CppChar, bool>* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__20_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__20_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppChar, bool>*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__20_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__20_0
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__20_0(::System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__20_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__20_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/<>c..cctor
void UnityEngine::Timeline::TimeUtility::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/<>c.<ParseTimeCode>b__19_0
bool UnityEngine::Timeline::TimeUtility::$$c::$ParseTimeCode$b__19_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::<ParseTimeCode>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ParseTimeCode>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/<>c.<ParseTimeCode>b__19_1
bool UnityEngine::Timeline::TimeUtility::$$c::$ParseTimeCode$b__19_1(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::<ParseTimeCode>b__19_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ParseTimeCode>b__19_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/<>c.<ParseTimeSeconds>b__20_0
bool UnityEngine::Timeline::TimeUtility::$$c::$ParseTimeSeconds$b__20_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::<ParseTimeSeconds>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ParseTimeSeconds>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.WeightUtility
#include "UnityEngine/Timeline/WeightUtility.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.WeightUtility.NormalizeMixer
float UnityEngine::Timeline::WeightUtility::NormalizeMixer(::UnityEngine::Playables::Playable mixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::WeightUtility::NormalizeMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "WeightUtility", "NormalizeMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mixer)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mixer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs
#include "Unity/XR/CoreUtils/ARTrackablesParentTransformChangedEventArgs.hpp"
// Including type: Unity.XR.CoreUtils.XROrigin
#include "Unity/XR/CoreUtils/XROrigin.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Unity.XR.CoreUtils.XROrigin <Origin>k__BackingField
[[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::XROrigin*& Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs::dyn_$Origin$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs::dyn_$Origin$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Origin>k__BackingField"))->offset;
  return *reinterpret_cast<::Unity::XR::CoreUtils::XROrigin**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Transform <TrackablesParent>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs::dyn_$TrackablesParent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs::dyn_$TrackablesParent$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TrackablesParent>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs.get_Origin
::Unity::XR::CoreUtils::XROrigin* Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs::get_Origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs::get_Origin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Origin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::XR::CoreUtils::XROrigin*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs.get_TrackablesParent
::UnityEngine::Transform* Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs::get_TrackablesParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs::get_TrackablesParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_TrackablesParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs..ctor
// ABORTED elsewhere.  Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs::ARTrackablesParentTransformChangedEventArgs(::Unity::XR::CoreUtils::XROrigin* origin, ::UnityEngine::Transform* trackablesParent)
// Autogenerated method: Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs.Equals
bool Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs::Equals(::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs.Equals
bool Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs.GetHashCode
int Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.ListExtensions
#include "Unity/XR/CoreUtils/ListExtensions.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.TransformExtensions
#include "Unity/XR/CoreUtils/TransformExtensions.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.XR.CoreUtils.TransformExtensions.GetWorldPose
::UnityEngine::Pose Unity::XR::CoreUtils::TransformExtensions::GetWorldPose(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::TransformExtensions::GetWorldPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.CoreUtils", "TransformExtensions", "GetWorldPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform);
}
// Autogenerated method: Unity.XR.CoreUtils.TransformExtensions.TransformPose
::UnityEngine::Pose Unity::XR::CoreUtils::TransformExtensions::TransformPose(::UnityEngine::Transform* transform, ::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::TransformExtensions::TransformPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.CoreUtils", "TransformExtensions", "TransformPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(pose)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, pose);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.FloatUnityEvent
#include "Unity/XR/CoreUtils/FloatUnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.Vector2UnityEvent
#include "Unity/XR/CoreUtils/Vector2UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.Vector3UnityEvent
#include "Unity/XR/CoreUtils/Vector3UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.Vector4UnityEvent
#include "Unity/XR/CoreUtils/Vector4UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.QuaternionUnityEvent
#include "Unity/XR/CoreUtils/QuaternionUnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.ColorUnityEvent
#include "Unity/XR/CoreUtils/ColorUnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.Vector3Extensions
#include "Unity/XR/CoreUtils/Vector3Extensions.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.XR.CoreUtils.Vector3Extensions.MaxComponent
float Unity::XR::CoreUtils::Vector3Extensions::MaxComponent(::UnityEngine::Vector3 vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Vector3Extensions::MaxComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.CoreUtils", "Vector3Extensions", "MaxComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vector);
}
// Autogenerated method: Unity.XR.CoreUtils.Vector3Extensions.Multiply
::UnityEngine::Vector3 Unity::XR::CoreUtils::Vector3Extensions::Multiply(::UnityEngine::Vector3 value, ::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Vector3Extensions::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.CoreUtils", "Vector3Extensions", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, scale);
}
// Autogenerated method: Unity.XR.CoreUtils.Vector3Extensions.Divide
::UnityEngine::Vector3 Unity::XR::CoreUtils::Vector3Extensions::Divide(::UnityEngine::Vector3 value, ::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Vector3Extensions::Divide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.CoreUtils", "Vector3Extensions", "Divide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, scale);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Unity.XR.CoreUtils.HashCodeUtil
#include "Unity/XR/CoreUtils/HashCodeUtil.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.XR.CoreUtils.HashCodeUtil.Combine
int Unity::XR::CoreUtils::HashCodeUtil::Combine(int hash1, int hash2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::HashCodeUtil::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.CoreUtils", "HashCodeUtil", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash1), ::il2cpp_utils::ExtractType(hash2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash1, hash2);
}
// Autogenerated method: Unity.XR.CoreUtils.HashCodeUtil.ReferenceHash
int Unity::XR::CoreUtils::HashCodeUtil::ReferenceHash(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::HashCodeUtil::ReferenceHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.CoreUtils", "HashCodeUtil", "ReferenceHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.XRLoggingUtils
#include "Unity/XR/CoreUtils/XRLoggingUtils.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean k_DontLogAnything
bool Unity::XR::CoreUtils::XRLoggingUtils::_get_k_DontLogAnything() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XRLoggingUtils::_get_k_DontLogAnything");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Unity.XR.CoreUtils", "XRLoggingUtils", "k_DontLogAnything"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean k_DontLogAnything
void Unity::XR::CoreUtils::XRLoggingUtils::_set_k_DontLogAnything(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XRLoggingUtils::_set_k_DontLogAnything");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.CoreUtils", "XRLoggingUtils", "k_DontLogAnything", value));
}
// Autogenerated method: Unity.XR.CoreUtils.XRLoggingUtils..cctor
void Unity::XR::CoreUtils::XRLoggingUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XRLoggingUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.CoreUtils", "XRLoggingUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XRLoggingUtils.LogWarning
void Unity::XR::CoreUtils::XRLoggingUtils::LogWarning(::StringW message, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XRLoggingUtils::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.CoreUtils", "XRLoggingUtils", "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, context);
}
// Autogenerated method: Unity.XR.CoreUtils.XRLoggingUtils.LogError
void Unity::XR::CoreUtils::XRLoggingUtils::LogError(::StringW message, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XRLoggingUtils::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.CoreUtils", "XRLoggingUtils", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, context);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.XROrigin
#include "Unity/XR/CoreUtils/XROrigin.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Unity.XR.CoreUtils.XROrigin/<RepeatInitializeCamera>d__48
#include "Unity/XR/CoreUtils/XROrigin_-RepeatInitializeCamera-d__48.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.XR.XRInputSubsystem
#include "UnityEngine/XR/XRInputSubsystem.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultCameraYOffset
float Unity::XR::CoreUtils::XROrigin::_get_k_DefaultCameraYOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::_get_k_DefaultCameraYOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Unity.XR.CoreUtils", "XROrigin", "k_DefaultCameraYOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultCameraYOffset
void Unity::XR::CoreUtils::XROrigin::_set_k_DefaultCameraYOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::_set_k_DefaultCameraYOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.CoreUtils", "XROrigin", "k_DefaultCameraYOffset", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem> s_InputSubsystems
::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>* Unity::XR::CoreUtils::XROrigin::_get_s_InputSubsystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::_get_s_InputSubsystems");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>*>("Unity.XR.CoreUtils", "XROrigin", "s_InputSubsystems"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem> s_InputSubsystems
void Unity::XR::CoreUtils::XROrigin::_set_s_InputSubsystems(::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::_set_s_InputSubsystems");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.CoreUtils", "XROrigin", "s_InputSubsystems", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera m_Camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& Unity::XR::CoreUtils::XROrigin::dyn_m_Camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::dyn_m_Camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <TrackablesParent>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Unity::XR::CoreUtils::XROrigin::dyn_$TrackablesParent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::dyn_$TrackablesParent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TrackablesParent>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs> TrackablesParentTransformChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs>*& Unity::XR::CoreUtils::XROrigin::dyn_TrackablesParentTransformChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::dyn_TrackablesParentTransformChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackablesParentTransformChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_OriginBaseGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Unity::XR::CoreUtils::XROrigin::dyn_m_OriginBaseGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::dyn_m_OriginBaseGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OriginBaseGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_CameraFloorOffsetObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Unity::XR::CoreUtils::XROrigin::dyn_m_CameraFloorOffsetObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::dyn_m_CameraFloorOffsetObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CameraFloorOffsetObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.XR.CoreUtils.XROrigin/TrackingOriginMode m_RequestedTrackingOriginMode
[[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode& Unity::XR::CoreUtils::XROrigin::dyn_m_RequestedTrackingOriginMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::dyn_m_RequestedTrackingOriginMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RequestedTrackingOriginMode"))->offset;
  return *reinterpret_cast<::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CameraYOffset
[[deprecated("Use field access instead!")]] float& Unity::XR::CoreUtils::XROrigin::dyn_m_CameraYOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::dyn_m_CameraYOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CameraYOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.TrackingOriginModeFlags <CurrentTrackingOriginMode>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::TrackingOriginModeFlags& Unity::XR::CoreUtils::XROrigin::dyn_$CurrentTrackingOriginMode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::dyn_$CurrentTrackingOriginMode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentTrackingOriginMode>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::TrackingOriginModeFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CameraInitialized
[[deprecated("Use field access instead!")]] bool& Unity::XR::CoreUtils::XROrigin::dyn_m_CameraInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::dyn_m_CameraInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CameraInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CameraInitializing
[[deprecated("Use field access instead!")]] bool& Unity::XR::CoreUtils::XROrigin::dyn_m_CameraInitializing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::dyn_m_CameraInitializing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CameraInitializing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.get_Camera
::UnityEngine::Camera* Unity::XR::CoreUtils::XROrigin::get_Camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::get_Camera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Camera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.set_Camera
void Unity::XR::CoreUtils::XROrigin::set_Camera(::UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::set_Camera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Camera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.get_TrackablesParent
::UnityEngine::Transform* Unity::XR::CoreUtils::XROrigin::get_TrackablesParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::get_TrackablesParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrackablesParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.set_TrackablesParent
void Unity::XR::CoreUtils::XROrigin::set_TrackablesParent(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::set_TrackablesParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TrackablesParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.add_TrackablesParentTransformChanged
void Unity::XR::CoreUtils::XROrigin::add_TrackablesParentTransformChanged(::System::Action_1<::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::add_TrackablesParentTransformChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_TrackablesParentTransformChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.remove_TrackablesParentTransformChanged
void Unity::XR::CoreUtils::XROrigin::remove_TrackablesParentTransformChanged(::System::Action_1<::Unity::XR::CoreUtils::ARTrackablesParentTransformChangedEventArgs>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::remove_TrackablesParentTransformChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_TrackablesParentTransformChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.get_Origin
::UnityEngine::GameObject* Unity::XR::CoreUtils::XROrigin::get_Origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::get_Origin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Origin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.set_Origin
void Unity::XR::CoreUtils::XROrigin::set_Origin(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::set_Origin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Origin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.get_CameraFloorOffsetObject
::UnityEngine::GameObject* Unity::XR::CoreUtils::XROrigin::get_CameraFloorOffsetObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::get_CameraFloorOffsetObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CameraFloorOffsetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.set_CameraFloorOffsetObject
void Unity::XR::CoreUtils::XROrigin::set_CameraFloorOffsetObject(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::set_CameraFloorOffsetObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CameraFloorOffsetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.get_RequestedTrackingOriginMode
::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode Unity::XR::CoreUtils::XROrigin::get_RequestedTrackingOriginMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::get_RequestedTrackingOriginMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestedTrackingOriginMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.set_RequestedTrackingOriginMode
void Unity::XR::CoreUtils::XROrigin::set_RequestedTrackingOriginMode(::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::set_RequestedTrackingOriginMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestedTrackingOriginMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.get_CameraYOffset
float Unity::XR::CoreUtils::XROrigin::get_CameraYOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::get_CameraYOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CameraYOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.set_CameraYOffset
void Unity::XR::CoreUtils::XROrigin::set_CameraYOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::set_CameraYOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CameraYOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.get_CurrentTrackingOriginMode
::UnityEngine::XR::TrackingOriginModeFlags Unity::XR::CoreUtils::XROrigin::get_CurrentTrackingOriginMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::get_CurrentTrackingOriginMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentTrackingOriginMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::TrackingOriginModeFlags, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.set_CurrentTrackingOriginMode
void Unity::XR::CoreUtils::XROrigin::set_CurrentTrackingOriginMode(::UnityEngine::XR::TrackingOriginModeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::set_CurrentTrackingOriginMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentTrackingOriginMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.get_OriginInCameraSpacePos
::UnityEngine::Vector3 Unity::XR::CoreUtils::XROrigin::get_OriginInCameraSpacePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::get_OriginInCameraSpacePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OriginInCameraSpacePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.get_CameraInOriginSpacePos
::UnityEngine::Vector3 Unity::XR::CoreUtils::XROrigin::get_CameraInOriginSpacePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::get_CameraInOriginSpacePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CameraInOriginSpacePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.get_CameraInOriginSpaceHeight
float Unity::XR::CoreUtils::XROrigin::get_CameraInOriginSpaceHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::get_CameraInOriginSpaceHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CameraInOriginSpaceHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.MoveOffsetHeight
void Unity::XR::CoreUtils::XROrigin::MoveOffsetHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::MoveOffsetHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveOffsetHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.MoveOffsetHeight
void Unity::XR::CoreUtils::XROrigin::MoveOffsetHeight(float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::MoveOffsetHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveOffsetHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, y);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.TryInitializeCamera
void Unity::XR::CoreUtils::XROrigin::TryInitializeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::TryInitializeCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryInitializeCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.SetupCamera
bool Unity::XR::CoreUtils::XROrigin::SetupCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::SetupCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.SetupCamera
bool Unity::XR::CoreUtils::XROrigin::SetupCamera(::UnityEngine::XR::XRInputSubsystem* inputSubsystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::SetupCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputSubsystem)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inputSubsystem);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.OnInputSubsystemTrackingOriginUpdated
void Unity::XR::CoreUtils::XROrigin::OnInputSubsystemTrackingOriginUpdated(::UnityEngine::XR::XRInputSubsystem* inputSubsystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::OnInputSubsystemTrackingOriginUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputSubsystemTrackingOriginUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputSubsystem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputSubsystem);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.RepeatInitializeCamera
::System::Collections::IEnumerator* Unity::XR::CoreUtils::XROrigin::RepeatInitializeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::RepeatInitializeCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RepeatInitializeCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.RotateAroundCameraUsingOriginUp
bool Unity::XR::CoreUtils::XROrigin::RotateAroundCameraUsingOriginUp(float angleDegrees) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::RotateAroundCameraUsingOriginUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAroundCameraUsingOriginUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angleDegrees)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, angleDegrees);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.RotateAroundCameraPosition
bool Unity::XR::CoreUtils::XROrigin::RotateAroundCameraPosition(::UnityEngine::Vector3 vector, float angleDegrees) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::RotateAroundCameraPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAroundCameraPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractType(angleDegrees)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, vector, angleDegrees);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.MatchOriginUp
bool Unity::XR::CoreUtils::XROrigin::MatchOriginUp(::UnityEngine::Vector3 destinationUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::MatchOriginUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchOriginUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destinationUp)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destinationUp);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.MatchOriginUpCameraForward
bool Unity::XR::CoreUtils::XROrigin::MatchOriginUpCameraForward(::UnityEngine::Vector3 destinationUp, ::UnityEngine::Vector3 destinationForward) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::MatchOriginUpCameraForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchOriginUpCameraForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destinationUp), ::il2cpp_utils::ExtractType(destinationForward)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destinationUp, destinationForward);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.MatchOriginUpOriginForward
bool Unity::XR::CoreUtils::XROrigin::MatchOriginUpOriginForward(::UnityEngine::Vector3 destinationUp, ::UnityEngine::Vector3 destinationForward) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::MatchOriginUpOriginForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchOriginUpOriginForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destinationUp), ::il2cpp_utils::ExtractType(destinationForward)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destinationUp, destinationForward);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.MoveCameraToWorldLocation
bool Unity::XR::CoreUtils::XROrigin::MoveCameraToWorldLocation(::UnityEngine::Vector3 desiredWorldLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::MoveCameraToWorldLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveCameraToWorldLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desiredWorldLocation)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, desiredWorldLocation);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.Awake
void Unity::XR::CoreUtils::XROrigin::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.GetCameraOriginPose
::UnityEngine::Pose Unity::XR::CoreUtils::XROrigin::GetCameraOriginPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::GetCameraOriginPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCameraOriginPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.OnEnable
void Unity::XR::CoreUtils::XROrigin::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.OnDisable
void Unity::XR::CoreUtils::XROrigin::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.OnBeforeRender
void Unity::XR::CoreUtils::XROrigin::OnBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::OnBeforeRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.OnValidate
void Unity::XR::CoreUtils::XROrigin::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.Start
void Unity::XR::CoreUtils::XROrigin::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.OnDestroy
void Unity::XR::CoreUtils::XROrigin::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin..cctor
void Unity::XR::CoreUtils::XROrigin::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.CoreUtils", "XROrigin", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin.<OnValidate>g__IsModeStale|60_0
bool Unity::XR::CoreUtils::XROrigin::$OnValidate$g__IsModeStale_60_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::<OnValidate>g__IsModeStale|60_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnValidate>g__IsModeStale|60_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.XROrigin/TrackingOriginMode
#include "Unity/XR/CoreUtils/XROrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode NotSpecified
::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode Unity::XR::CoreUtils::XROrigin::TrackingOriginMode::_get_NotSpecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode::_get_NotSpecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode>("Unity.XR.CoreUtils", "XROrigin/TrackingOriginMode", "NotSpecified"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode NotSpecified
void Unity::XR::CoreUtils::XROrigin::TrackingOriginMode::_set_NotSpecified(::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode::_set_NotSpecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.CoreUtils", "XROrigin/TrackingOriginMode", "NotSpecified", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode Device
::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode Unity::XR::CoreUtils::XROrigin::TrackingOriginMode::_get_Device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode::_get_Device");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode>("Unity.XR.CoreUtils", "XROrigin/TrackingOriginMode", "Device"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode Device
void Unity::XR::CoreUtils::XROrigin::TrackingOriginMode::_set_Device(::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode::_set_Device");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.CoreUtils", "XROrigin/TrackingOriginMode", "Device", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode Floor
::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode Unity::XR::CoreUtils::XROrigin::TrackingOriginMode::_get_Floor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode::_get_Floor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode>("Unity.XR.CoreUtils", "XROrigin/TrackingOriginMode", "Floor"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.CoreUtils.XROrigin/TrackingOriginMode Floor
void Unity::XR::CoreUtils::XROrigin::TrackingOriginMode::_set_Floor(::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode::_set_Floor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.CoreUtils", "XROrigin/TrackingOriginMode", "Floor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Unity::XR::CoreUtils::XROrigin::TrackingOriginMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::TrackingOriginMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Unity.XR.CoreUtils.XROrigin/<RepeatInitializeCamera>d__48
#include "Unity/XR/CoreUtils/XROrigin_-RepeatInitializeCamera-d__48.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.XR.CoreUtils.XROrigin <>4__this
[[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::XROrigin*& Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Unity::XR::CoreUtils::XROrigin**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin/<RepeatInitializeCamera>d__48.System.IDisposable.Dispose
void Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin/<RepeatInitializeCamera>d__48.MoveNext
bool Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin/<RepeatInitializeCamera>d__48.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin/<RepeatInitializeCamera>d__48.System.Collections.IEnumerator.Reset
void Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.XROrigin/<RepeatInitializeCamera>d__48.System.Collections.IEnumerator.get_Current
::Il2CppObject* Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::XR::CoreUtils::XROrigin::$RepeatInitializeCamera$d__48*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.Datums.AnimationCurveDatum
#include "Unity/XR/CoreUtils/Datums/AnimationCurveDatum.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.Datums.AnimationCurveDatumProperty
#include "Unity/XR/CoreUtils/Datums/AnimationCurveDatumProperty.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: Unity.XR.CoreUtils.Datums.AnimationCurveDatum
#include "Unity/XR/CoreUtils/Datums/AnimationCurveDatum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.Bindings.BindingsGroup
#include "Unity/XR/CoreUtils/Bindings/BindingsGroup.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Unity.XR.CoreUtils.Bindings.IEventBinding
#include "Unity/XR/CoreUtils/Bindings/IEventBinding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Unity.XR.CoreUtils.Bindings.IEventBinding> m_Bindings
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Unity::XR::CoreUtils::Bindings::IEventBinding*>*& Unity::XR::CoreUtils::Bindings::BindingsGroup::dyn_m_Bindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Bindings::BindingsGroup::dyn_m_Bindings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Bindings"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Unity::XR::CoreUtils::Bindings::IEventBinding*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.CoreUtils.Bindings.BindingsGroup.AddBinding
void Unity::XR::CoreUtils::Bindings::BindingsGroup::AddBinding(::Unity::XR::CoreUtils::Bindings::IEventBinding* binding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Bindings::BindingsGroup::AddBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, binding);
}
// Autogenerated method: Unity.XR.CoreUtils.Bindings.BindingsGroup.Clear
void Unity::XR::CoreUtils::Bindings::BindingsGroup::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Bindings::BindingsGroup::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.Bindings.EventBinding
#include "Unity/XR/CoreUtils/Bindings/EventBinding.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action <BindAction>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Action*& Unity::XR::CoreUtils::Bindings::EventBinding::dyn_$BindAction$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Bindings::EventBinding::dyn_$BindAction$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BindAction>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action <UnbindAction>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Action*& Unity::XR::CoreUtils::Bindings::EventBinding::dyn_$UnbindAction$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Bindings::EventBinding::dyn_$UnbindAction$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UnbindAction>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsBound
[[deprecated("Use field access instead!")]] bool& Unity::XR::CoreUtils::Bindings::EventBinding::dyn_m_IsBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Bindings::EventBinding::dyn_m_IsBound");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsBound"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.CoreUtils.Bindings.EventBinding.get_BindAction
::System::Action* Unity::XR::CoreUtils::Bindings::EventBinding::get_BindAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Bindings::EventBinding::get_BindAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_BindAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.Bindings.EventBinding.set_BindAction
void Unity::XR::CoreUtils::Bindings::EventBinding::set_BindAction(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Bindings::EventBinding::set_BindAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_BindAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.CoreUtils.Bindings.EventBinding.get_UnbindAction
::System::Action* Unity::XR::CoreUtils::Bindings::EventBinding::get_UnbindAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Bindings::EventBinding::get_UnbindAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_UnbindAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.Bindings.EventBinding.set_UnbindAction
void Unity::XR::CoreUtils::Bindings::EventBinding::set_UnbindAction(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Bindings::EventBinding::set_UnbindAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_UnbindAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.CoreUtils.Bindings.EventBinding.Bind
void Unity::XR::CoreUtils::Bindings::EventBinding::Bind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Bindings::EventBinding::Bind");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Unity::XR::CoreUtils::Bindings::EventBinding), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.Bindings.EventBinding.Unbind
void Unity::XR::CoreUtils::Bindings::EventBinding::Unbind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Bindings::EventBinding::Unbind");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Unity::XR::CoreUtils::Bindings::EventBinding), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.CoreUtils.Bindings.EventBinding.ClearBinding
void Unity::XR::CoreUtils::Bindings::EventBinding::ClearBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Bindings::EventBinding::ClearBinding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Unity::XR::CoreUtils::Bindings::EventBinding), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.XR.CoreUtils.Bindings.IEventBinding
#include "Unity/XR/CoreUtils/Bindings/IEventBinding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.XR.CoreUtils.Bindings.IEventBinding.ClearBinding
void Unity::XR::CoreUtils::Bindings::IEventBinding::ClearBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::CoreUtils::Bindings::IEventBinding::ClearBinding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::XR::CoreUtils::Bindings::IEventBinding*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________________________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.CanSelectMultipleAttribute
#include "UnityEngine/XR/Interaction/Toolkit/CanSelectMultipleAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <allowMultiple>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::CanSelectMultipleAttribute::dyn_$allowMultiple$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CanSelectMultipleAttribute::dyn_$allowMultiple$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<allowMultiple>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.CanSelectMultipleAttribute.get_allowMultiple
bool UnityEngine::XR::Interaction::Toolkit::CanSelectMultipleAttribute::get_allowMultiple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::CanSelectMultipleAttribute::get_allowMultiple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowMultiple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ActionBasedController
#include "UnityEngine/XR/Interaction/Toolkit/ActionBasedController.hpp"
// Including type: UnityEngine.InputSystem.InputAction
#include "UnityEngine/InputSystem/InputAction.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerState
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_PositionAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_PositionAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_PositionAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PositionAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_RotationAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_RotationAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_RotationAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotationAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_TrackingStateAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_TrackingStateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_TrackingStateAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackingStateAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_SelectAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_SelectAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_SelectAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_SelectActionValue
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_SelectActionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_SelectActionValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectActionValue"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_ActivateAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_ActivateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_ActivateAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivateAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_ActivateActionValue
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_ActivateActionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_ActivateActionValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivateActionValue"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_UIPressAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_UIPressAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_UIPressAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UIPressAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_UIPressActionValue
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_UIPressActionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_UIPressActionValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UIPressActionValue"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_HapticDeviceAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_HapticDeviceAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_HapticDeviceAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticDeviceAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_RotateAnchorAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_RotateAnchorAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_RotateAnchorAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotateAnchorAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_DirectionalAnchorRotationAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_DirectionalAnchorRotationAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_DirectionalAnchorRotationAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DirectionalAnchorRotationAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_TranslateAnchorAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_TranslateAnchorAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_TranslateAnchorAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TranslateAnchorAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasCheckedDisabledTrackingInputReferenceActions
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_HasCheckedDisabledTrackingInputReferenceActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_HasCheckedDisabledTrackingInputReferenceActions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasCheckedDisabledTrackingInputReferenceActions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasCheckedDisabledInputReferenceActions
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_HasCheckedDisabledInputReferenceActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_HasCheckedDisabledInputReferenceActions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasCheckedDisabledInputReferenceActions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ButtonPressPoint
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_ButtonPressPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_ButtonPressPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ButtonPressPoint"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_positionAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_positionAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_positionAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_positionAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_positionAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_positionAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_positionAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_positionAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_rotationAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_rotationAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_rotationAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_rotationAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_rotationAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_rotationAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_trackingStateAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_trackingStateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_trackingStateAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackingStateAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_trackingStateAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_trackingStateAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_trackingStateAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackingStateAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_selectAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_selectAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_selectAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_selectAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_selectAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_selectAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_selectActionValue
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_selectActionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_selectActionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectActionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_selectActionValue
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_selectActionValue(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_selectActionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectActionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_activateAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_activateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_activateAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activateAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_activateAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_activateAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_activateAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_activateAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_activateActionValue
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_activateActionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_activateActionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activateActionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_activateActionValue
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_activateActionValue(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_activateActionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_activateActionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_uiPressAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_uiPressAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_uiPressAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uiPressAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_uiPressAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_uiPressAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_uiPressAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uiPressAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_uiPressActionValue
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_uiPressActionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_uiPressActionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uiPressActionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_uiPressActionValue
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_uiPressActionValue(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_uiPressActionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uiPressActionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_hapticDeviceAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_hapticDeviceAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_hapticDeviceAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticDeviceAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_hapticDeviceAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_hapticDeviceAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_hapticDeviceAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticDeviceAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_rotateAnchorAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_rotateAnchorAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_rotateAnchorAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotateAnchorAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_rotateAnchorAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_rotateAnchorAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_rotateAnchorAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotateAnchorAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_directionalAnchorRotationAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_directionalAnchorRotationAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_directionalAnchorRotationAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_directionalAnchorRotationAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_directionalAnchorRotationAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_directionalAnchorRotationAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_directionalAnchorRotationAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_directionalAnchorRotationAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_translateAnchorAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_translateAnchorAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_translateAnchorAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_translateAnchorAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_translateAnchorAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_translateAnchorAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_translateAnchorAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_translateAnchorAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.IsPressed
bool UnityEngine::XR::Interaction::Toolkit::ActionBasedController::IsPressed(::UnityEngine::InputSystem::InputAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::IsPressed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ActionBasedController*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, action);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.ReadValue
float UnityEngine::XR::Interaction::Toolkit::ActionBasedController::ReadValue(::UnityEngine::InputSystem::InputAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::ReadValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ActionBasedController*), 19));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, action);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.EnableAllDirectActions
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::EnableAllDirectActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::EnableAllDirectActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableAllDirectActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.DisableAllDirectActions
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::DisableAllDirectActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::DisableAllDirectActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableAllDirectActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.SetInputActionProperty
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::SetInputActionProperty(ByRef<::UnityEngine::InputSystem::InputActionProperty> property, ::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::SetInputActionProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInputActionProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(property), value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.IsDisabledReferenceAction
bool UnityEngine::XR::Interaction::Toolkit::ActionBasedController::IsDisabledReferenceAction(::UnityEngine::InputSystem::InputActionProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::IsDisabledReferenceAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "ActionBasedController", "IsDisabledReferenceAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, property);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_buttonPressPoint
float UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_buttonPressPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_buttonPressPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buttonPressPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_buttonPressPoint
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_buttonPressPoint(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_buttonPressPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_buttonPressPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.OnEnable
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.OnDisable
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.UpdateTrackingInput
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::UpdateTrackingInput(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::UpdateTrackingInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.UpdateInput
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::UpdateInput(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::UpdateInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.SendHapticImpulse
bool UnityEngine::XR::Interaction::Toolkit::ActionBasedController::SendHapticImpulse(float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::SendHapticImpulse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, amplitude, duration);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseController
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerState
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerState.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType m_UpdateTrackingType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_UpdateTrackingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_UpdateTrackingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdateTrackingType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableInputTracking
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_EnableInputTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_EnableInputTracking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableInputTracking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableInputActions
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_EnableInputActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_EnableInputActions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableInputActions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ModelPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ModelParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Model
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_Model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_Model");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Model"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AnimateModel
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_AnimateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_AnimateModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimateModel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_ModelSelectTransition
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelSelectTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelSelectTransition"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_ModelDeSelectTransition
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelDeSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelDeSelectTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelDeSelectTransition"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HideControllerModel
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_HideControllerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_HideControllerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HideControllerModel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InteractionState m_SelectInteractionState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_SelectInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_SelectInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InteractionState m_ActivateInteractionState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ActivateInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ActivateInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivateInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InteractionState m_UIPressInteractionState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_UIPressInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_UIPressInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UIPressInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRControllerState m_ControllerState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRControllerState*& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ControllerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ControllerState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControllerState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRControllerState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CreateControllerState
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_CreateControllerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_CreateControllerState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CreateControllerState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator m_ModelAnimator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelAnimator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasWarnedAnimatorMissing
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_HasWarnedAnimatorMissing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_HasWarnedAnimatorMissing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasWarnedAnimatorMissing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PerformSetup
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_PerformSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_PerformSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PerformSetup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <anchorControlDeadzone>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_$anchorControlDeadzone$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_$anchorControlDeadzone$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<anchorControlDeadzone>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <anchorControlOffAxisDeadzone>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_$anchorControlOffAxisDeadzone$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_$anchorControlOffAxisDeadzone$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<anchorControlOffAxisDeadzone>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_updateTrackingType
::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_updateTrackingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_updateTrackingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_updateTrackingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_updateTrackingType
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_updateTrackingType(::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_updateTrackingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_updateTrackingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_enableInputTracking
bool UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_enableInputTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_enableInputTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableInputTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_enableInputTracking
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_enableInputTracking(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_enableInputTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInputTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_enableInputActions
bool UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_enableInputActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_enableInputActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableInputActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_enableInputActions
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_enableInputActions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_enableInputActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInputActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_modelPrefab
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_modelPrefab
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelPrefab(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modelPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_modelParent
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_modelParent
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelParent(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modelParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_model
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_model");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_model", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_model
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_model(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_model");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_model", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_animateModel
bool UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_animateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_animateModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animateModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_animateModel
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_animateModel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_animateModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_animateModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_modelSelectTransition
::StringW UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_modelSelectTransition
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelSelectTransition(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modelSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_modelDeSelectTransition
::StringW UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelDeSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelDeSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelDeSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_modelDeSelectTransition
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelDeSelectTransition(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelDeSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modelDeSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_hideControllerModel
bool UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_hideControllerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_hideControllerModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hideControllerModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_hideControllerModel
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_hideControllerModel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_hideControllerModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideControllerModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_selectInteractionState
::UnityEngine::XR::Interaction::Toolkit::InteractionState UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_selectInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_selectInteractionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectInteractionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractionState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_activateInteractionState
::UnityEngine::XR::Interaction::Toolkit::InteractionState UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_activateInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_activateInteractionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activateInteractionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractionState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_uiPressInteractionState
::UnityEngine::XR::Interaction::Toolkit::InteractionState UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_uiPressInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_uiPressInteractionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uiPressInteractionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractionState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_currentControllerState
::UnityEngine::XR::Interaction::Toolkit::XRControllerState* UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_currentControllerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_currentControllerState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentControllerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRControllerState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_currentControllerState
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_currentControllerState(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_currentControllerState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentControllerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.Awake
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.Update
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.SetupModel
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::SetupModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::SetupModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.SetupControllerState
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::SetupControllerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::SetupControllerState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupControllerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.GetModelPrefab
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRBaseController::GetModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::GetModelPrefab");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.UpdateController
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateController");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.OnBeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::OnBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::OnBeforeRender");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.FixedUpdate
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::FixedUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.ApplyControllerState
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::ApplyControllerState(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase, ::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::ApplyControllerState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.UpdateTrackingInput
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateTrackingInput(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateTrackingInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.UpdateInput
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateInput(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.UpdateControllerModelAnimation
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateControllerModelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateControllerModelAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.SendHapticImpulse
bool UnityEngine::XR::Interaction::Toolkit::XRBaseController::SendHapticImpulse(float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::SendHapticImpulse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, amplitude, duration);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.GetControllerState
bool UnityEngine::XR::Interaction::Toolkit::XRBaseController::GetControllerState(ByRef<::UnityEngine::XR::Interaction::Toolkit::XRControllerState*> controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::GetControllerState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(controllerState));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.SetControllerState
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::SetControllerState(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::SetControllerState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_modelTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_modelTransform
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modelTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_anchorControlDeadzone
float UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_anchorControlDeadzone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_anchorControlDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorControlDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_anchorControlDeadzone
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_anchorControlDeadzone(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_anchorControlDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorControlDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_anchorControlOffAxisDeadzone
float UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_anchorControlOffAxisDeadzone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_anchorControlOffAxisDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorControlOffAxisDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_anchorControlOffAxisDeadzone
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_anchorControlOffAxisDeadzone(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_anchorControlOffAxisDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorControlOffAxisDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType UpdateAndBeforeRender
::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_get_UpdateAndBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_get_UpdateAndBeforeRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseController/UpdateType", "UpdateAndBeforeRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType UpdateAndBeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_set_UpdateAndBeforeRender(::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_set_UpdateAndBeforeRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseController/UpdateType", "UpdateAndBeforeRender", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType Update
::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseController/UpdateType", "Update"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType Update
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_set_Update(::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseController/UpdateType", "Update", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType BeforeRender
::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_get_BeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_get_BeforeRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseController/UpdateType", "BeforeRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType BeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_set_BeforeRender(::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_set_BeforeRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseController/UpdateType", "BeforeRender", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType Fixed
::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_get_Fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_get_Fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseController/UpdateType", "Fixed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType Fixed
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_set_Fixed(::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_set_Fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseController/UpdateType", "Fixed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
// Including type: UnityEngine.Experimental.XR.Interaction.BasePoseProvider
#include "UnityEngine/Experimental/XR/Interaction/BasePoseProvider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerState
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode m_ControllerNode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ControllerNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ControllerNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControllerNode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode m_InputDeviceControllerNode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_InputDeviceControllerNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_InputDeviceControllerNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputDeviceControllerNode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InputHelpers/Button m_SelectUsage
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_SelectUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_SelectUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectUsage"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InputHelpers/Button m_ActivateUsage
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ActivateUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ActivateUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivateUsage"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InputHelpers/Button m_UIPressUsage
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UIPressUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UIPressUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UIPressUsage"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AxisToPressThreshold
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_AxisToPressThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_AxisToPressThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AxisToPressThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InputHelpers/Button m_RotateAnchorLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_RotateAnchorLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_RotateAnchorLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotateAnchorLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InputHelpers/Button m_RotateAnchorRight
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_RotateAnchorRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_RotateAnchorRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotateAnchorRight"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InputHelpers/Button m_MoveObjectIn
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_MoveObjectIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_MoveObjectIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MoveObjectIn"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InputHelpers/Button m_MoveObjectOut
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_MoveObjectOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_MoveObjectOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MoveObjectOut"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InputHelpers/Axis2D m_DirectionalAnchorRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Axis2D& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_DirectionalAnchorRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_DirectionalAnchorRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DirectionalAnchorRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Axis2D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Experimental.XR.Interaction.BasePoseProvider m_PoseProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::Interaction::BasePoseProvider*& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_PoseProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_PoseProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PoseProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::Interaction::BasePoseProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice m_InputDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_InputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_InputDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_controllerNode
::UnityEngine::XR::XRNode UnityEngine::XR::Interaction::Toolkit::XRController::get_controllerNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_controllerNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllerNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRNode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_controllerNode
void UnityEngine::XR::Interaction::Toolkit::XRController::set_controllerNode(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_controllerNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllerNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_selectUsage
::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button UnityEngine::XR::Interaction::Toolkit::XRController::get_selectUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_selectUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_selectUsage
void UnityEngine::XR::Interaction::Toolkit::XRController::set_selectUsage(::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_selectUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_activateUsage
::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button UnityEngine::XR::Interaction::Toolkit::XRController::get_activateUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_activateUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activateUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_activateUsage
void UnityEngine::XR::Interaction::Toolkit::XRController::set_activateUsage(::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_activateUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_activateUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_uiPressUsage
::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button UnityEngine::XR::Interaction::Toolkit::XRController::get_uiPressUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_uiPressUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uiPressUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_uiPressUsage
void UnityEngine::XR::Interaction::Toolkit::XRController::set_uiPressUsage(::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_uiPressUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uiPressUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_axisToPressThreshold
float UnityEngine::XR::Interaction::Toolkit::XRController::get_axisToPressThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_axisToPressThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_axisToPressThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_axisToPressThreshold
void UnityEngine::XR::Interaction::Toolkit::XRController::set_axisToPressThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_axisToPressThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_axisToPressThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_rotateObjectLeft
::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button UnityEngine::XR::Interaction::Toolkit::XRController::get_rotateObjectLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_rotateObjectLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotateObjectLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_rotateObjectLeft
void UnityEngine::XR::Interaction::Toolkit::XRController::set_rotateObjectLeft(::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_rotateObjectLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotateObjectLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_rotateObjectRight
::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button UnityEngine::XR::Interaction::Toolkit::XRController::get_rotateObjectRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_rotateObjectRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotateObjectRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_rotateObjectRight
void UnityEngine::XR::Interaction::Toolkit::XRController::set_rotateObjectRight(::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_rotateObjectRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotateObjectRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_moveObjectIn
::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button UnityEngine::XR::Interaction::Toolkit::XRController::get_moveObjectIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_moveObjectIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveObjectIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_moveObjectIn
void UnityEngine::XR::Interaction::Toolkit::XRController::set_moveObjectIn(::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_moveObjectIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_moveObjectIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_moveObjectOut
::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button UnityEngine::XR::Interaction::Toolkit::XRController::get_moveObjectOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_moveObjectOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveObjectOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_moveObjectOut
void UnityEngine::XR::Interaction::Toolkit::XRController::set_moveObjectOut(::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_moveObjectOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_moveObjectOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_directionalAnchorRotation
::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Axis2D UnityEngine::XR::Interaction::Toolkit::XRController::get_directionalAnchorRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_directionalAnchorRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_directionalAnchorRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Axis2D, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_directionalAnchorRotation
void UnityEngine::XR::Interaction::Toolkit::XRController::set_directionalAnchorRotation(::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_directionalAnchorRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_directionalAnchorRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_poseProvider
::UnityEngine::Experimental::XR::Interaction::BasePoseProvider* UnityEngine::XR::Interaction::Toolkit::XRController::get_poseProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_poseProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_poseProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::XR::Interaction::BasePoseProvider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_poseProvider
void UnityEngine::XR::Interaction::Toolkit::XRController::set_poseProvider(::UnityEngine::Experimental::XR::Interaction::BasePoseProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_poseProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_poseProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_inputDevice
::UnityEngine::XR::InputDevice UnityEngine::XR::Interaction::Toolkit::XRController::get_inputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_inputDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::InputDevice, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.IsPressed
bool UnityEngine::XR::Interaction::Toolkit::XRController::IsPressed(::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button button) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::IsPressed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRController*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, button);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.ReadValue
float UnityEngine::XR::Interaction::Toolkit::XRController::ReadValue(::UnityEngine::XR::Interaction::Toolkit::InputHelpers::Button button) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::ReadValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRController*), 19));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, button);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateTrackingInput
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateTrackingInput(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateTrackingInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateInput
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInput(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.SendHapticImpulse
bool UnityEngine::XR::Interaction::Toolkit::XRController::SendHapticImpulse(float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::SendHapticImpulse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, amplitude, duration);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerRecorder.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerRecording.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseController
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseController.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerState
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayOnStart
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PlayOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PlayOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRControllerRecording m_Recording
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording*& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_Recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_Recording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Recording"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseController m_XRController
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseController*& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_XRController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_XRController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XRController"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_CurrentTime
[[deprecated("Use field access instead!")]] double& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_CurrentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_CurrentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <recordingStartTime>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_$recordingStartTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_$recordingStartTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<recordingStartTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsRecording
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsRecording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsPlaying
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsPlaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsPlaying"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_LastPlaybackTime
[[deprecated("Use field access instead!")]] double& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastPlaybackTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastPlaybackTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPlaybackTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_LastFrameIdx
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastFrameIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastFrameIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastFrameIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PrevEnableInputActions
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PrevEnableInputActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PrevEnableInputActions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrevEnableInputActions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PrevEnableInputTracking
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PrevEnableInputTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PrevEnableInputTracking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrevEnableInputTracking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_playOnStart
bool UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_playOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_playOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_playOnStart
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_playOnStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_playOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_recording
::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording* UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_recording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_recording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_recording(::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_recording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_xrController
::UnityEngine::XR::Interaction::Toolkit::XRBaseController* UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_xrController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_xrController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xrController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_xrController
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_xrController(::UnityEngine::XR::Interaction::Toolkit::XRBaseController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_xrController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_xrController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_isRecording
bool UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_isRecording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isRecording(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_isPlaying
bool UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_isPlaying
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isPlaying(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_currentTime
double UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_currentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_currentTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_duration
double UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_recordingStartTime
float UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_recordingStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_recordingStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_recordingStartTime
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_recordingStartTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_recordingStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recordingStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.Awake
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.Update
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.ResetPlayback
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::ResetPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::ResetPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.UpdatePlaybackTime
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::UpdatePlaybackTime(double playbackTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::UpdatePlaybackTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlaybackTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playbackTime);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.GetControllerState
bool UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::GetControllerState(ByRef<::UnityEngine::XR::Interaction::Toolkit::XRControllerState*> controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::GetControllerState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(controllerState));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerRecording.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerState
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerState.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SelectActivatedInFirstFrame
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::dyn_m_SelectActivatedInFirstFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::dyn_m_SelectActivatedInFirstFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectActivatedInFirstFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ActivateActivatedInFirstFrame
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::dyn_m_ActivateActivatedInFirstFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::dyn_m_ActivateActivatedInFirstFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivateActivatedInFirstFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_FirstUIPressActivatedInFirstFrame
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::dyn_m_FirstUIPressActivatedInFirstFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::dyn_m_FirstUIPressActivatedInFirstFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FirstUIPressActivatedInFirstFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRControllerState> m_Frames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerState*>*& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::dyn_m_Frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::dyn_m_Frames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Frames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.get_frames
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerState*>* UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_frames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerState*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.get_duration
double UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.AddRecordingFrame
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::AddRecordingFrame(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::AddRecordingFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRecordingFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.AddRecordingFrameNonAlloc
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::AddRecordingFrameNonAlloc(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::AddRecordingFrameNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRecordingFrameNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.InitRecording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::InitRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::InitRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.SaveRecording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::SaveRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::SaveRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.AddRecordingFrame
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::AddRecordingFrame(double time, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool selectActive, bool activateActive, bool pressActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::AddRecordingFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRecordingFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(selectActive), ::il2cpp_utils::ExtractType(activateActive), ::il2cpp_utils::ExtractType(pressActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, position, rotation, selectActive, activateActive, pressActive);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionState
#include "UnityEngine/XR/Interaction/Toolkit/InteractionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_Value
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::InteractionState::dyn_m_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::dyn_m_Value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Active
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::InteractionState::dyn_m_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::dyn_m_Active");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ActivatedThisFrame
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::InteractionState::dyn_m_ActivatedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::dyn_m_ActivatedThisFrame");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivatedThisFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DeactivatedThisFrame
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::InteractionState::dyn_m_DeactivatedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::dyn_m_DeactivatedThisFrame");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeactivatedThisFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.get_value
float UnityEngine::XR::Interaction::Toolkit::InteractionState::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.set_value
void UnityEngine::XR::Interaction::Toolkit::InteractionState::set_value(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.get_active
bool UnityEngine::XR::Interaction::Toolkit::InteractionState::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::get_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.set_active
void UnityEngine::XR::Interaction::Toolkit::InteractionState::set_active(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::set_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.get_activatedThisFrame
bool UnityEngine::XR::Interaction::Toolkit::InteractionState::get_activatedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::get_activatedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_activatedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.set_activatedThisFrame
void UnityEngine::XR::Interaction::Toolkit::InteractionState::set_activatedThisFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::set_activatedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_activatedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.get_deactivatedThisFrame
bool UnityEngine::XR::Interaction::Toolkit::InteractionState::get_deactivatedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::get_deactivatedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deactivatedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.set_deactivatedThisFrame
void UnityEngine::XR::Interaction::Toolkit::InteractionState::set_deactivatedThisFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::set_deactivatedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_deactivatedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.SetFrameState
void UnityEngine::XR::Interaction::Toolkit::InteractionState::SetFrameState(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::SetFrameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFrameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.SetFrameState
void UnityEngine::XR::Interaction::Toolkit::InteractionState::SetFrameState(bool isActive, float newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::SetFrameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFrameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isActive, newValue);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.SetFrameDependent
void UnityEngine::XR::Interaction::Toolkit::InteractionState::SetFrameDependent(bool wasActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::SetFrameDependent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFrameDependent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wasActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wasActive);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.ResetFrameDependent
void UnityEngine::XR::Interaction::Toolkit::InteractionState::ResetFrameDependent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::ResetFrameDependent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ResetFrameDependent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.get_deActivatedThisFrame
bool UnityEngine::XR::Interaction::Toolkit::InteractionState::get_deActivatedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::get_deActivatedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deActivatedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.set_deActivatedThisFrame
void UnityEngine::XR::Interaction::Toolkit::InteractionState::set_deActivatedThisFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::set_deActivatedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_deActivatedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.Reset
void UnityEngine::XR::Interaction::Toolkit::InteractionState::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerState
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerState.hpp"
// Including type: UnityEngine.SpatialTracking.PoseDataFlags
#include "UnityEngine/SpatialTracking/PoseDataFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double time
[[deprecated("Use field access instead!")]] double& UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.InputTrackingState inputTrackingState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputTrackingState& UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_inputTrackingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_inputTrackingState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputTrackingState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputTrackingState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.InteractionState selectInteractionState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_selectInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_selectInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.InteractionState activateInteractionState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_activateInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_activateInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activateInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.InteractionState uiPressInteractionState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_uiPressInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_uiPressInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uiPressInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerState.ResetFrameDependentStates
void UnityEngine::XR::Interaction::Toolkit::XRControllerState::ResetFrameDependentStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::ResetFrameDependentStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetFrameDependentStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerState.get_poseDataFlags
::UnityEngine::SpatialTracking::PoseDataFlags UnityEngine::XR::Interaction::Toolkit::XRControllerState::get_poseDataFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::get_poseDataFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_poseDataFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SpatialTracking::PoseDataFlags, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerState.set_poseDataFlags
void UnityEngine::XR::Interaction::Toolkit::XRControllerState::set_poseDataFlags(::UnityEngine::SpatialTracking::PoseDataFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::set_poseDataFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_poseDataFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerState.ResetInputs
void UnityEngine::XR::Interaction::Toolkit::XRControllerState::ResetInputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::ResetInputs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetInputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerState.ToString
::StringW UnityEngine::XR::Interaction::Toolkit::XRControllerState::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.DistanceInfo
#include "UnityEngine/XR/Interaction/Toolkit/DistanceInfo.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <point>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::DistanceInfo::dyn_$point$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DistanceInfo::dyn_$point$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<point>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <distanceSqr>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::DistanceInfo::dyn_$distanceSqr$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DistanceInfo::dyn_$distanceSqr$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<distanceSqr>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider <collider>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& UnityEngine::XR::Interaction::Toolkit::DistanceInfo::dyn_$collider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DistanceInfo::dyn_$collider$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<collider>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DistanceInfo.get_point
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::DistanceInfo::get_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DistanceInfo::get_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DistanceInfo.set_point
void UnityEngine::XR::Interaction::Toolkit::DistanceInfo::set_point(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DistanceInfo::set_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DistanceInfo.get_distanceSqr
float UnityEngine::XR::Interaction::Toolkit::DistanceInfo::get_distanceSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DistanceInfo::get_distanceSqr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_distanceSqr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DistanceInfo.set_distanceSqr
void UnityEngine::XR::Interaction::Toolkit::DistanceInfo::set_distanceSqr(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DistanceInfo::set_distanceSqr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_distanceSqr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DistanceInfo.get_collider
::UnityEngine::Collider* UnityEngine::XR::Interaction::Toolkit::DistanceInfo::get_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DistanceInfo::get_collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.DistanceInfo.set_collider
void UnityEngine::XR::Interaction::Toolkit::DistanceInfo::set_collider(::UnityEngine::Collider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::DistanceInfo::set_collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRActivateInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.ActivateEvent
#include "UnityEngine/XR/Interaction/Toolkit/ActivateEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.DeactivateEvent
#include "UnityEngine/XR/Interaction/Toolkit/DeactivateEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/ActivateEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/DeactivateEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.get_activated
::UnityEngine::XR::Interaction::Toolkit::ActivateEvent* UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable::get_activated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable::get_activated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::ActivateEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.get_deactivated
::UnityEngine::XR::Interaction::Toolkit::DeactivateEvent* UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable::get_deactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable::get_deactivated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::DeactivateEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnActivated
void UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable::OnActivated(::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable::OnActivated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnDeactivated
void UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable::OnDeactivated(::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable::OnDeactivated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRActivateInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEvent
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEvent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.get_firstHoverEntered
::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::get_firstHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::get_firstHoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.get_lastHoverExited
::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::get_lastHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::get_lastHoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.get_hoverEntered
::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::get_hoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::get_hoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.get_hoverExited
::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::get_hoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::get_hoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.get_interactorsHovering
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*>* UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::get_interactorsHovering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::get_interactorsHovering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.get_isHovered
bool UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::get_isHovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::get_isHovered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.IsHoverableBy
bool UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::IsHoverableBy(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::IsHoverableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntering
void UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::OnHoverEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::OnHoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExiting
void UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::OnHoverExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExited
void UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable::OnHoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRHoverInteractableExtensions
#include "UnityEngine/XR/Interaction/Toolkit/XRHoverInteractableExtensions.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRHoverInteractableExtensions.GetOldestInteractorHovering
::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* UnityEngine::XR::Interaction::Toolkit::XRHoverInteractableExtensions::GetOldestInteractorHovering(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRHoverInteractableExtensions::GetOldestInteractorHovering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRHoverInteractableExtensions", "GetOldestInteractorHovering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractableRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractableUnregisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask
#include "UnityEngine/XR/Interaction/Toolkit/InteractionLayerMask.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractable.add_registered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractable::add_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractable::add_registered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractable.remove_registered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractable::remove_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractable::remove_registered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractable.add_unregistered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractable::add_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractable::add_unregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractable.remove_unregistered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractable::remove_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractable::remove_unregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractable.get_interactionLayers
::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask UnityEngine::XR::Interaction::Toolkit::IXRInteractable::get_interactionLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractable::get_interactionLayers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractable.get_colliders
::System::Collections::Generic::List_1<::UnityEngine::Collider*>* UnityEngine::XR::Interaction::Toolkit::IXRInteractable::get_colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractable::get_colliders");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Collider*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractable.get_transform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::IXRInteractable::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractable::get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractable.GetAttachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::IXRInteractable::GetAttachTransform(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractable::GetAttachTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnRegistered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractable::OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractable::OnRegistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnUnregistered
void UnityEngine::XR::Interaction::Toolkit::IXRInteractable::OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractable::OnUnregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractable.ProcessInteractable
void UnityEngine::XR::Interaction::Toolkit::IXRInteractable::ProcessInteractable(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractable::ProcessInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractable.GetDistanceSqrToInteractor
float UnityEngine::XR::Interaction::Toolkit::IXRInteractable::GetDistanceSqrToInteractor(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractable::GetDistanceSqrToInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractionStrengthInteractable.hpp"
// Including type: Unity.XR.CoreUtils.Bindings.Variables.IReadOnlyBindableVariable`1
#include "Unity/XR/CoreUtils/Bindings/Variables/IReadOnlyBindableVariable_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable.get_largestInteractionStrength
::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<float>* UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable::get_largestInteractionStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable::get_largestInteractionStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<float>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable.GetInteractionStrength
float UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable::GetInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable::GetInteractionStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable.ProcessInteractionStrength
void UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable::ProcessInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable::ProcessInteractionStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRInteractionStrengthInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEvent
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEvent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableSelectMode
#include "UnityEngine/XR/Interaction/Toolkit/InteractableSelectMode.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.get_firstSelectEntered
::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_firstSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_firstSelectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.get_lastSelectExited
::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_lastSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_lastSelectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.get_selectEntered
::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_selectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_selectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.get_selectExited
::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_selectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_selectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.get_interactorsSelecting
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>* UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_interactorsSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_interactorsSelecting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.get_firstInteractorSelecting
::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_firstInteractorSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_firstInteractorSelecting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.get_isSelected
bool UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_isSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_isSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.get_selectMode
::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_selectMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::get_selectMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.IsSelectableBy
bool UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::IsSelectableBy(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::IsSelectableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.GetAttachPoseOnSelect
::UnityEngine::Pose UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::GetAttachPoseOnSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::GetAttachPoseOnSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.GetLocalAttachPoseOnSelect
::UnityEngine::Pose UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::GetLocalAttachPoseOnSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::GetLocalAttachPoseOnSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::OnSelectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExited
void UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable::OnSelectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRSelectInteractableExtensions
#include "UnityEngine/XR/Interaction/Toolkit/XRSelectInteractableExtensions.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRSelectInteractableExtensions.GetOldestInteractorSelecting
::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* UnityEngine::XR::Interaction::Toolkit::XRSelectInteractableExtensions::GetOldestInteractorSelecting(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRSelectInteractableExtensions::GetOldestInteractorSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRSelectInteractableExtensions", "GetOldestInteractorSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableSelectMode
#include "UnityEngine/XR/Interaction/Toolkit/InteractableSelectMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.InteractableSelectMode Single
::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode::_get_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode::_get_Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode>("UnityEngine.XR.Interaction.Toolkit", "InteractableSelectMode", "Single"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.InteractableSelectMode Single
void UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode::_set_Single(::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode::_set_Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "InteractableSelectMode", "Single", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.InteractableSelectMode Multiple
::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode::_get_Multiple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode::_get_Multiple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode>("UnityEngine.XR.Interaction.Toolkit", "InteractableSelectMode", "Multiple"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.InteractableSelectMode Multiple
void UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode::_set_Multiple(::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode::_set_Multiple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "InteractableSelectMode", "Multiple", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual
#include "UnityEngine/XR/Interaction/Toolkit/XRTintInteractableVisual.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual/ShaderPropertyLookup
#include "UnityEngine/XR/Interaction/Toolkit/XRTintInteractableVisual_ShaderPropertyLookup.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Material> s_Materials
::System::Collections::Generic::List_1<::UnityEngine::Material*>* UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::_get_s_Materials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::_get_s_Materials");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Material*>*>("UnityEngine.XR.Interaction.Toolkit", "XRTintInteractableVisual", "s_Materials"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Material> s_Materials
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::_set_s_Materials(::System::Collections::Generic::List_1<::UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::_set_s_Materials");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRTintInteractableVisual", "s_Materials", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_TintColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TintOnHover
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintOnHover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TintOnSelection
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintOnSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Renderer> m_TintRenderers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintRenderers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Renderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractable m_Interactable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_Interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_Interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable m_HoverInteractable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable*& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_HoverInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_HoverInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverInteractable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable m_SelectInteractable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_SelectInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_SelectInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectInteractable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock m_TintPropertyBlock
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintPropertyBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintPropertyBlock"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EmissionEnabled
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_EmissionEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_EmissionEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EmissionEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasLoggedMaterialInstance
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_HasLoggedMaterialInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_HasLoggedMaterialInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasLoggedMaterialInstance"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintColor
::UnityEngine::Color UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintColor
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintOnHover
bool UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintOnHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintOnHover
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnHover(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintOnHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintOnSelection
bool UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintOnSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintOnSelection
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnSelection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintOnSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintRenderers
::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintRenderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintRenderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintRenderers
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintRenderers(::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintRenderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintRenderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.Awake
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.SetTint
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::SetTint(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::SetTint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.GetEmissionEnabled
bool UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::GetEmissionEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::GetEmissionEnabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnFirstHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnFirstHoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnFirstHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFirstHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnLastHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnLastHoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnLastHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLastHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnFirstSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnFirstSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnFirstSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFirstSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnLastSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnLastSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnLastSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLastSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual..cctor
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRTintInteractableVisual", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual/ShaderPropertyLookup
#include "UnityEngine/XR/Interaction/Toolkit/XRTintInteractableVisual_ShaderPropertyLookup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 emissionColor
int UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::ShaderPropertyLookup::_get_emissionColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::ShaderPropertyLookup::_get_emissionColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRTintInteractableVisual/ShaderPropertyLookup", "emissionColor"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 emissionColor
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::ShaderPropertyLookup::_set_emissionColor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::ShaderPropertyLookup::_set_emissionColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRTintInteractableVisual/ShaderPropertyLookup", "emissionColor", value));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual/ShaderPropertyLookup..cctor
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::ShaderPropertyLookup::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::ShaderPropertyLookup::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRTintInteractableVisual/ShaderPropertyLookup", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable_MovementType.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/<>c
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractableRegisteredEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/InteractableUnregisteredEventArgs.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEvent
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEvent
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.ActivateEvent
#include "UnityEngine/XR/Interaction/Toolkit/ActivateEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.DeactivateEvent
#include "UnityEngine/XR/Interaction/Toolkit/DeactivateEvent.hpp"
// Including type: Unity.XR.CoreUtils.Collections.HashSetList`1
#include "Unity/XR/CoreUtils/Collections/HashSetList_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRHoverInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractor.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/ExposedRegistrationList_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter
#include "UnityEngine/XR/Interaction/Toolkit/Filtering/IXRHoverFilter.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter
#include "UnityEngine/XR/Interaction/Toolkit/Filtering/IXRSelectFilter.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Filtering.IXRInteractionStrengthFilter
#include "UnityEngine/XR/Interaction/Toolkit/Filtering/IXRInteractionStrengthFilter.hpp"
// Including type: Unity.XR.CoreUtils.Bindings.Variables.BindableVariable`1
#include "Unity/XR/CoreUtils/Bindings/Variables/BindableVariable_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseControllerInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractableEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRFilterList`1
#include "UnityEngine/XR/Interaction/Toolkit/IXRFilterList_1.hpp"
// Including type: Unity.XR.CoreUtils.Bindings.Variables.IReadOnlyBindableVariable`1
#include "Unity/XR/CoreUtils/Bindings/Variables/IReadOnlyBindableVariable_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/ActivateEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/DeactivateEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/HoverExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_InteractionStrengthHover
float UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_get_k_InteractionStrengthHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_get_k_InteractionStrengthHover");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable", "k_InteractionStrengthHover"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_InteractionStrengthHover
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_set_k_InteractionStrengthHover(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_set_k_InteractionStrengthHover");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable", "k_InteractionStrengthHover", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_InteractionStrengthSelect
float UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_get_k_InteractionStrengthSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_get_k_InteractionStrengthSelect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable", "k_InteractionStrengthSelect"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_InteractionStrengthSelect
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_set_k_InteractionStrengthSelect(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_set_k_InteractionStrengthSelect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable", "k_InteractionStrengthSelect", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_get_s_InteractionManagerCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_get_s_InteractionManagerCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable", "s_InteractionManagerCache"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_set_s_InteractionManagerCache(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_set_s_InteractionManagerCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable", "s_InteractionManagerCache", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractionStrengthMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_get_s_ProcessInteractionStrengthMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_get_s_ProcessInteractionStrengthMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable", "s_ProcessInteractionStrengthMarker"));
}
// Autogenerated static field setter
// Set static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessInteractionStrengthMarker
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_set_s_ProcessInteractionStrengthMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_set_s_ProcessInteractionStrengthMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable", "s_ProcessInteractionStrengthMarker", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs> registered
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_registered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_registered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "registered"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs> unregistered
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_unregistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_unregistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unregistered"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`3<UnityEngine.XR.Interaction.Toolkit.IXRInteractable,UnityEngine.Vector3,UnityEngine.XR.Interaction.Toolkit.DistanceInfo> <getDistanceOverride>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_3<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::UnityEngine::Vector3, ::UnityEngine::XR::Interaction::Toolkit::DistanceInfo>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$getDistanceOverride$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$getDistanceOverride$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<getDistanceOverride>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_3<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::UnityEngine::Vector3, ::UnityEngine::XR::Interaction::Toolkit::DistanceInfo>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Collider> m_Colliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_Colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_Colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Colliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_InteractionLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask m_InteractionLayers
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionLayers"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode m_DistanceCalculationMode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_DistanceCalculationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_DistanceCalculationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DistanceCalculationMode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InteractableSelectMode m_SelectMode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_SelectMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_SelectMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectMode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_CustomReticle
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_CustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_CustomReticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomReticle"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowGazeInteraction
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_AllowGazeInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_AllowGazeInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowGazeInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowGazeSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_AllowGazeSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_AllowGazeSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowGazeSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_OverrideGazeTimeToSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OverrideGazeTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OverrideGazeTimeToSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverrideGazeTimeToSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_GazeTimeToSelect
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_GazeTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_GazeTimeToSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GazeTimeToSelect"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_OverrideTimeToAutoDeselectGaze
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OverrideTimeToAutoDeselectGaze() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OverrideTimeToAutoDeselectGaze");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverrideTimeToAutoDeselectGaze"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TimeToAutoDeselectGaze
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_TimeToAutoDeselectGaze() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_TimeToAutoDeselectGaze");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimeToAutoDeselectGaze"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowGazeAssistance
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_AllowGazeAssistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_AllowGazeAssistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowGazeAssistance"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent m_FirstHoverEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_FirstHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_FirstHoverEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FirstHoverEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.HoverExitEvent m_LastHoverExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_LastHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_LastHoverExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastHoverExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.HoverEnterEvent m_HoverEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_HoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_HoverEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.HoverExitEvent m_HoverExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_HoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_HoverExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent m_FirstSelectEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_FirstSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_FirstSelectEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FirstSelectEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.SelectExitEvent m_LastSelectExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_LastSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_LastSelectExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastSelectExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.SelectEnterEvent m_SelectEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_SelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_SelectEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.SelectExitEvent m_SelectExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_SelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_SelectExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.ActivateEvent m_Activated
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::ActivateEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_Activated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_Activated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Activated"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::ActivateEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.DeactivateEvent m_Deactivated
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::DeactivateEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_Deactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_Deactivated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Deactivated"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::DeactivateEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor> m_InteractorsHovering
[[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractorsHovering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractorsHovering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractorsHovering"))->offset;
  return *reinterpret_cast<::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor> m_InteractorsSelecting
[[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractorsSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractorsSelecting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractorsSelecting"))->offset;
  return *reinterpret_cast<::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor <firstInteractorSelecting>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$firstInteractorSelecting$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$firstInteractorSelecting$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<firstInteractorSelecting>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingHoverFilters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_StartingHoverFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_StartingHoverFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartingHoverFilters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRHoverFilter> m_HoverFilters
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_HoverFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_HoverFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverFilters"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingSelectFilters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_StartingSelectFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_StartingSelectFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartingSelectFilters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRSelectFilter> m_SelectFilters
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_SelectFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_SelectFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectFilters"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> m_StartingInteractionStrengthFilters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_StartingInteractionStrengthFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_StartingInteractionStrengthFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartingInteractionStrengthFilters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.ExposedRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Filtering.IXRInteractionStrengthFilter> m_InteractionStrengthFilters
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRInteractionStrengthFilter*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionStrengthFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionStrengthFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionStrengthFilters"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::ExposedRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRInteractionStrengthFilter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Unity.XR.CoreUtils.Bindings.Variables.BindableVariable`1<System.Single> m_LargestInteractionStrength
[[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Bindings::Variables::BindableVariable_1<float>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_LargestInteractionStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_LargestInteractionStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LargestInteractionStrength"))->offset;
  return *reinterpret_cast<::Unity::XR::CoreUtils::Bindings::Variables::BindableVariable_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor,UnityEngine.Pose> m_AttachPoseOnSelect
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::Pose>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_AttachPoseOnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_AttachPoseOnSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachPoseOnSelect"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::Pose>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor,UnityEngine.Pose> m_LocalAttachPoseOnSelect
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::Pose>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_LocalAttachPoseOnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_LocalAttachPoseOnSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LocalAttachPoseOnSelect"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::Pose>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRInteractor,UnityEngine.GameObject> m_ReticleCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::GameObject*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_ReticleCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_ReticleCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Unity.XR.CoreUtils.Collections.HashSetList`1<UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor> m_VariableSelectInteractors
[[deprecated("Use field access instead!")]] ::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_VariableSelectInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_VariableSelectInteractors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VariableSelectInteractors"))->offset;
  return *reinterpret_cast<::Unity::XR::CoreUtils::Collections::HashSetList_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRInteractor,System.Single> m_InteractionStrengths
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, float>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionStrengths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionStrengths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionStrengths"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRInteractor*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_RegisteredInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_RegisteredInteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredInteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnFirstHoverEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnFirstHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnFirstHoverEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnFirstHoverEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnLastHoverExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnLastHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnLastHoverExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnLastHoverExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectCanceled
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectCanceled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectCanceled"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnActivate
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnActivate"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnDeactivate
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnDeactivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnDeactivate"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor> <hoveringInteractors>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$hoveringInteractors$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$hoveringInteractors$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hoveringInteractors>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.add_registered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::add_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::add_registered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.remove_registered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::remove_registered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::remove_registered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.add_unregistered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::add_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::add_unregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.remove_unregistered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::remove_unregistered(::System::Action_1<::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::remove_unregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_getDistanceOverride
::System::Func_3<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::UnityEngine::Vector3, ::UnityEngine::XR::Interaction::Toolkit::DistanceInfo>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_getDistanceOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_getDistanceOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_getDistanceOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_3<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::UnityEngine::Vector3, ::UnityEngine::XR::Interaction::Toolkit::DistanceInfo>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_getDistanceOverride
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_getDistanceOverride(::System::Func_3<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, ::UnityEngine::Vector3, ::UnityEngine::XR::Interaction::Toolkit::DistanceInfo>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_getDistanceOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_getDistanceOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_interactionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_interactionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionManager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_colliders
::System::Collections::Generic::List_1<::UnityEngine::Collider*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_colliders");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Collider*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_interactionLayers
::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_interactionLayers
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayers(::UnityEngine::XR::Interaction::Toolkit::InteractionLayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_distanceCalculationMode
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_distanceCalculationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_distanceCalculationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_distanceCalculationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_distanceCalculationMode
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_distanceCalculationMode(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_distanceCalculationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_distanceCalculationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_selectMode
::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_selectMode
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectMode(::UnityEngine::XR::Interaction::Toolkit::InteractableSelectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_customReticle
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_customReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_customReticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_customReticle
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_customReticle(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_customReticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_customReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_allowGazeInteraction
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_allowGazeInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_allowGazeInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowGazeInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_allowGazeInteraction
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_allowGazeInteraction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_allowGazeInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowGazeInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_allowGazeSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_allowGazeSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_allowGazeSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowGazeSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_allowGazeSelect
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_allowGazeSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_allowGazeSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowGazeSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_overrideGazeTimeToSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_overrideGazeTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_overrideGazeTimeToSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 49));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_overrideGazeTimeToSelect
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_overrideGazeTimeToSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_overrideGazeTimeToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideGazeTimeToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_gazeTimeToSelect
float UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_gazeTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_gazeTimeToSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 50));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_gazeTimeToSelect
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_gazeTimeToSelect(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_gazeTimeToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gazeTimeToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_overrideTimeToAutoDeselectGaze
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_overrideTimeToAutoDeselectGaze() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_overrideTimeToAutoDeselectGaze");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 51));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_overrideTimeToAutoDeselectGaze
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_overrideTimeToAutoDeselectGaze(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_overrideTimeToAutoDeselectGaze");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideTimeToAutoDeselectGaze", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_timeToAutoDeselectGaze
float UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_timeToAutoDeselectGaze() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_timeToAutoDeselectGaze");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 52));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_timeToAutoDeselectGaze
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_timeToAutoDeselectGaze(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_timeToAutoDeselectGaze");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeToAutoDeselectGaze", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_allowGazeAssistance
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_allowGazeAssistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_allowGazeAssistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowGazeAssistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_allowGazeAssistance
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_allowGazeAssistance(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_allowGazeAssistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowGazeAssistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_firstHoverEntered
::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_firstHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_firstHoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_firstHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_firstHoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_firstHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_firstHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_lastHoverExited
::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_lastHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_lastHoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_lastHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_lastHoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_lastHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lastHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_hoverEntered
::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_hoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_hoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_hoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_hoverExited
::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_hoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_hoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_hoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_firstSelectEntered
::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_firstSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_firstSelectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_firstSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_firstSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_firstSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_firstSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_lastSelectExited
::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_lastSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_lastSelectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_lastSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_lastSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_lastSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lastSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_selectEntered
::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_selectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_selectExited
::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_selectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_activated
::UnityEngine::XR::Interaction::Toolkit::ActivateEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_activated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_activated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::ActivateEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_activated
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_activated(::UnityEngine::XR::Interaction::Toolkit::ActivateEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_activated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_activated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_deactivated
::UnityEngine::XR::Interaction::Toolkit::DeactivateEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_deactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_deactivated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::DeactivateEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_deactivated
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_deactivated(::UnityEngine::XR::Interaction::Toolkit::DeactivateEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_deactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_interactorsHovering
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactorsHovering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactorsHovering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_isHovered
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isHovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isHovered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_interactorsSelecting
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactorsSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactorsSelecting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_firstInteractorSelecting
::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_firstInteractorSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_firstInteractorSelecting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_firstInteractorSelecting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_firstInteractorSelecting(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_firstInteractorSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_firstInteractorSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_isSelected
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 37));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_startingHoverFilters
::System::Collections::Generic::List_1<::UnityEngine::Object*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_startingHoverFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_startingHoverFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startingHoverFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Object*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_startingHoverFilters
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_startingHoverFilters(::System::Collections::Generic::List_1<::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_startingHoverFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startingHoverFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_hoverFilters
::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoverFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoverFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoverFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRHoverFilter*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_startingSelectFilters
::System::Collections::Generic::List_1<::UnityEngine::Object*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_startingSelectFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_startingSelectFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startingSelectFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Object*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_startingSelectFilters
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_startingSelectFilters(::System::Collections::Generic::List_1<::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_startingSelectFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startingSelectFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_selectFilters
::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRSelectFilter*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_startingInteractionStrengthFilters
::System::Collections::Generic::List_1<::UnityEngine::Object*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_startingInteractionStrengthFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_startingInteractionStrengthFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startingInteractionStrengthFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Object*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_startingInteractionStrengthFilters
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_startingInteractionStrengthFilters(::System::Collections::Generic::List_1<::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_startingInteractionStrengthFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startingInteractionStrengthFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_interactionStrengthFilters
::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRInteractionStrengthFilter*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionStrengthFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionStrengthFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionStrengthFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRFilterList_1<::UnityEngine::XR::Interaction::Toolkit::Filtering::IXRInteractionStrengthFilter*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_largestInteractionStrength
::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<float>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_largestInteractionStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_largestInteractionStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::XR::CoreUtils::Bindings::Variables::IReadOnlyBindableVariable_1<float>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.Reset
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.Awake
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.FindCreateInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindCreateInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindCreateInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCreateInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.RegisterWithInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RegisterWithInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RegisterWithInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterWithInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnregisterWithInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnregisterWithInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnregisterWithInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterWithInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetAttachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetAttachTransform(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetAttachTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetAttachPoseOnSelect
::UnityEngine::Pose UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetAttachPoseOnSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetAttachPoseOnSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetLocalAttachPoseOnSelect
::UnityEngine::Pose UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetLocalAttachPoseOnSelect(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetLocalAttachPoseOnSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetDistanceSqrToInteractor
float UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 59));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetDistance
::UnityEngine::XR::Interaction::Toolkit::DistanceInfo UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistance(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 60));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::DistanceInfo, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetInteractionStrength
float UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetInteractionStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 47));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHoverableBy
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 61));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelectableBy
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 62));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHovered
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHovered(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelected
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelected(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHovered
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHovered(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelected
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelected(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetCustomReticle
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetCustomReticle(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 63));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.AttachCustomReticle
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 64));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.RemoveCustomReticle
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 65));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.CaptureAttachPose
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::CaptureAttachPose(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::CaptureAttachPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CaptureAttachPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessInteractable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractable(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 66));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable.ProcessInteractionStrength
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRInteractionStrengthInteractable_ProcessInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable.ProcessInteractionStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnRegistered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRInteractable_OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnRegistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRInteractable_OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnUnregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnActivated
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRActivateInteractable_OnActivated(::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnActivated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnDeactivated
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRActivateInteractable_OnDeactivated(::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnDeactivated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.IsHoverableBy
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_IsHoverableBy(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.IsHoverableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRHoverInteractable_OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.IsSelectableBy
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_IsSelectableBy(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.IsSelectableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 39));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRSelectInteractable_OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnRegistered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnRegistered(::UnityEngine::XR::Interaction::Toolkit::InteractableRegisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnRegistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 67));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnUnregistered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnUnregistered(::UnityEngine::XR::Interaction::Toolkit::InteractableUnregisteredEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnUnregistered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 68));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 69));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::HoverEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 70));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 71));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::HoverExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 72));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 73));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 74));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 75));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 76));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnActivated
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivated(::UnityEngine::XR::Interaction::Toolkit::ActivateEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 77));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDeactivated
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivated(::UnityEngine::XR::Interaction::Toolkit::DeactivateEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 78));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessInteractionStrength
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractionStrength(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractionStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 79));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessHoverFilters
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessHoverFilters(::UnityEngine::XR::Interaction::Toolkit::IXRHoverInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessHoverFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessHoverFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessSelectFilters
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessSelectFilters(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessSelectFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSelectFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessInteractionStrengthFilters
float UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractionStrengthFilters(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor, float interactionStrength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractionStrengthFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInteractionStrengthFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(interactionStrength)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactor, interactionStrength);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_interactionLayerMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_interactionLayerMask
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onFirstHoverEntered
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onFirstHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onFirstHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onFirstHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onFirstHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onFirstHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onLastHoverExited
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onLastHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onLastHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onLastHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onLastHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onLastHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onHoverEntered
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onHoverExited
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectEntered
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectExited
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectCanceled
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onSelectCanceled
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectCanceled(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onActivate
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onActivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onActivate(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onDeactivate
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onDeactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onDeactivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onDeactivate(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onDeactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onFirstHoverEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onFirstHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onHoverEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onHoverExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onLastHoverExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onLastHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectCancel
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 80));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 81));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 82));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 83));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 84));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 85));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 86));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 87));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectCanceling
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceling(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 88));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectCanceled
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceled(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 89));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnActivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivate(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 90));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDeactivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivate(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 91));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetDistanceSqrToInteractor
float UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 92));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.AttachCustomReticle
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 93));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.RemoveCustomReticle
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 94));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_hoveringInteractors
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoveringInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoveringInteractors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoveringInteractors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_selectingInteractor
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectingInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_selectingInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectingInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_selectingInteractor
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectingInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_selectingInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectingInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHoverableBy
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 95));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelectableBy
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 96));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable..cctor
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRInteractable.get_transform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine_XR_Interaction_Toolkit_IXRInteractable_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::UnityEngine.XR.Interaction.Toolkit.IXRInteractable.get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable_MovementType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType VelocityTracking
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_VelocityTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_VelocityTracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "VelocityTracking"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType VelocityTracking
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_VelocityTracking(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_VelocityTracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "VelocityTracking", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType Kinematic
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Kinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Kinematic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Kinematic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType Kinematic
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Kinematic(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Kinematic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Kinematic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType Instantaneous
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Instantaneous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Instantaneous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Instantaneous"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType Instantaneous
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Instantaneous(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Instantaneous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Instantaneous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode TransformPosition
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode::_get_TransformPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode::_get_TransformPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/DistanceCalculationMode", "TransformPosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode TransformPosition
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode::_set_TransformPosition(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode::_set_TransformPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/DistanceCalculationMode", "TransformPosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode ColliderPosition
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode::_get_ColliderPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode::_get_ColliderPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/DistanceCalculationMode", "ColliderPosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode ColliderPosition
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode::_set_ColliderPosition(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode::_set_ColliderPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/DistanceCalculationMode", "ColliderPosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode ColliderVolume
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode::_get_ColliderVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode::_get_ColliderVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/DistanceCalculationMode", "ColliderVolume"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/DistanceCalculationMode ColliderVolume
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode::_set_ColliderVolume(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode::_set_ColliderVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/DistanceCalculationMode", "ColliderVolume", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::DistanceCalculationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/<>c
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/<>c <>9
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c*>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/<>c <>9
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c::_set_$$9(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<UnityEngine.Collider> <>9__153_0
::System::Predicate_1<::UnityEngine::Collider*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c::_get_$$9__153_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c::_get_$$9__153_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::UnityEngine::Collider*>*>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/<>c", "<>9__153_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<UnityEngine.Collider> <>9__153_0
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c::_set_$$9__153_0(::System::Predicate_1<::UnityEngine::Collider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c::_set_$$9__153_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/<>c", "<>9__153_0", value)));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/<>c..cctor
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/<>c.<Awake>b__153_0
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c::$Awake$b__153_0(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::$$c::<Awake>b__153_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__153_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, col);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRGrabInteractable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Transformers.XRBaseGrabTransformer
#include "UnityEngine/XR/Interaction/Toolkit/Transformers/XRBaseGrabTransformer.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.SmallRegistrationList`1
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/SmallRegistrationList_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer
#include "UnityEngine/XR/Interaction/Toolkit/Transformers/IXRGrabTransformer.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.TeleportationMonitor
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/TeleportationMonitor.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/Pooling/LinkedPool_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Utilities.BaseRegistrationList`1
#include "UnityEngine/XR/Interaction/Toolkit/Utilities/BaseRegistrationList_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractor
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultTighteningAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultTighteningAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultTighteningAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultTighteningAmount"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultTighteningAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultTighteningAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultTighteningAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultTighteningAmount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultSmoothingAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultSmoothingAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultSmoothingAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultSmoothingAmount"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultSmoothingAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultSmoothingAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultSmoothingAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultSmoothingAmount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_VelocityDamping
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_VelocityDamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_VelocityDamping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_VelocityDamping"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_VelocityDamping
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_VelocityDamping(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_VelocityDamping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_VelocityDamping", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_VelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_VelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_VelocityScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_VelocityScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_VelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_VelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_VelocityScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_VelocityScale", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_AngularVelocityDamping
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_AngularVelocityDamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_AngularVelocityDamping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_AngularVelocityDamping"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_AngularVelocityDamping
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_AngularVelocityDamping(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_AngularVelocityDamping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_AngularVelocityDamping", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_AngularVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_AngularVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_AngularVelocityScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_AngularVelocityScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_AngularVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_AngularVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_AngularVelocityScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_AngularVelocityScale", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_ThrowSmoothingFrameCount
int UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_ThrowSmoothingFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_ThrowSmoothingFrameCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_ThrowSmoothingFrameCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_ThrowSmoothingFrameCount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_ThrowSmoothingFrameCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_ThrowSmoothingFrameCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_ThrowSmoothingFrameCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultAttachEaseInTime
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultAttachEaseInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultAttachEaseInTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultAttachEaseInTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultAttachEaseInTime
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultAttachEaseInTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultAttachEaseInTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultAttachEaseInTime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultThrowSmoothingDuration
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowSmoothingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowSmoothingDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowSmoothingDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultThrowSmoothingDuration
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowSmoothingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowSmoothingDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowSmoothingDuration", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultThrowVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowVelocityScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowVelocityScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultThrowVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowVelocityScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowVelocityScale", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultThrowAngularVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowAngularVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowAngularVelocityScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowAngularVelocityScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultThrowAngularVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowAngularVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowAngularVelocityScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowAngularVelocityScale", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DeltaTimeThreshold
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DeltaTimeThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DeltaTimeThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DeltaTimeThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DeltaTimeThreshold
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DeltaTimeThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DeltaTimeThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DeltaTimeThreshold", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.Transform> s_DynamicAttachTransformPool
::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::Transform*>* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_s_DynamicAttachTransformPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_s_DynamicAttachTransformPool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::Transform*>*>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "s_DynamicAttachTransformPool"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.Pooling.LinkedPool`1<UnityEngine.Transform> s_DynamicAttachTransformPool
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_s_DynamicAttachTransformPool(::UnityEngine::XR::Interaction::Toolkit::Utilities::Pooling::LinkedPool_1<::UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_s_DynamicAttachTransformPool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "s_DynamicAttachTransformPool", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessGrabTransformersMarker
::Unity::Profiling::ProfilerMarker UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_s_ProcessGrabTransformersMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_s_ProcessGrabTransformersMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "s_ProcessGrabTransformersMarker"));
}
// Autogenerated static field setter
// Set static field: static private readonly Unity.Profiling.ProfilerMarker s_ProcessGrabTransformersMarker
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_s_ProcessGrabTransformersMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_s_ProcessGrabTransformersMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "s_ProcessGrabTransformersMarker", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_AttachTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_SecondaryAttachTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SecondaryAttachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SecondaryAttachTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SecondaryAttachTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UseDynamicAttach
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_UseDynamicAttach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_UseDynamicAttach");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UseDynamicAttach"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MatchAttachPosition
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_MatchAttachPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_MatchAttachPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MatchAttachPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MatchAttachRotation
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_MatchAttachRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_MatchAttachRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MatchAttachRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SnapToColliderVolume
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SnapToColliderVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SnapToColliderVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SnapToColliderVolume"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ReinitializeDynamicAttachEverySingleGrab
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ReinitializeDynamicAttachEverySingleGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ReinitializeDynamicAttachEverySingleGrab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReinitializeDynamicAttachEverySingleGrab"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AttachEaseInTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachEaseInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachEaseInTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachEaseInTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType m_MovementType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_MovementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_MovementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MovementType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_VelocityDamping
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_VelocityDamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_VelocityDamping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VelocityDamping"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_VelocityScale
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_VelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_VelocityScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VelocityScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AngularVelocityDamping
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AngularVelocityDamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AngularVelocityDamping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AngularVelocityDamping"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AngularVelocityScale
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AngularVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AngularVelocityScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AngularVelocityScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TrackPosition
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SmoothPosition
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SmoothPositionAmount
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPositionAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPositionAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothPositionAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TightenPosition
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TightenPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TrackRotation
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SmoothRotation
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SmoothRotationAmount
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotationAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotationAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothRotationAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TightenRotation
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TightenRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ThrowOnDetach
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowOnDetach");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowOnDetach"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ThrowSmoothingDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_ThrowSmoothingCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ThrowVelocityScale
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowVelocityScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowVelocityScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ThrowAngularVelocityScale
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowAngularVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowAngularVelocityScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowAngularVelocityScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ForceGravityOnDetach
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ForceGravityOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ForceGravityOnDetach");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ForceGravityOnDetach"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_RetainTransformParent
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_RetainTransformParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_RetainTransformParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RetainTransformParent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable/AttachPointCompatibilityMode m_AttachPointCompatibilityMode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachPointCompatibilityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachPointCompatibilityMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachPointCompatibilityMode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Transformers.XRBaseGrabTransformer> m_StartingSingleGrabTransformers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*>*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_StartingSingleGrabTransformers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_StartingSingleGrabTransformers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartingSingleGrabTransformers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Transformers.XRBaseGrabTransformer> m_StartingMultipleGrabTransformers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*>*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_StartingMultipleGrabTransformers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_StartingMultipleGrabTransformers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartingMultipleGrabTransformers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AddDefaultGrabTransformers
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AddDefaultGrabTransformers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AddDefaultGrabTransformers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AddDefaultGrabTransformers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.SmallRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer> m_SingleGrabTransformers
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::SmallRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*>*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SingleGrabTransformers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SingleGrabTransformers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SingleGrabTransformers"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::SmallRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.Utilities.SmallRegistrationList`1<UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer> m_MultipleGrabTransformers
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::SmallRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*>*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_MultipleGrabTransformers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_MultipleGrabTransformers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MultipleGrabTransformers"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::SmallRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer> m_GrabTransformersAddedWhenGrabbed
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*>*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_GrabTransformersAddedWhenGrabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_GrabTransformersAddedWhenGrabbed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GrabTransformersAddedWhenGrabbed"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_GrabCountChanged
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_GrabCountChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_GrabCountChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GrabCountChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ValueTuple`2<System.Int32,System.Int32> m_GrabCountBeforeAndAfterChange
[[deprecated("Use field access instead!")]] ::System::ValueTuple_2<int, int>& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_GrabCountBeforeAndAfterChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_GrabCountBeforeAndAfterChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GrabCountBeforeAndAfterChange"))->offset;
  return *reinterpret_cast<::System::ValueTuple_2<int, int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsProcessingGrabTransformers
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_IsProcessingGrabTransformers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_IsProcessingGrabTransformers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsProcessingGrabTransformers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose m_TargetPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_TargetLocalScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetLocalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetLocalScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetLocalScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CurrentAttachEaseTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentAttachEaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentAttachEaseTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentAttachEaseTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType m_CurrentMovementType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentMovementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentMovementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentMovementType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DetachInLateUpdate
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachInLateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachInLateUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DetachInLateUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_DetachVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DetachVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_DetachAngularVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachAngularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DetachAngularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ThrowSmoothingCurrentFrame
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurrentFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurrentFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingCurrentFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single[] m_ThrowSmoothingFrameTimes
[[deprecated("Use field access instead!")]] ::ArrayW<float>& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingFrameTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingFrameTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingFrameTimes"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] m_ThrowSmoothingVelocityFrames
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingVelocityFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingVelocityFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingVelocityFrames"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] m_ThrowSmoothingAngularVelocityFrames
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingAngularVelocityFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingAngularVelocityFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingAngularVelocityFrames"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ThrowSmoothingFirstUpdate
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingFirstUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingFirstUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingFirstUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose m_LastThrowReferencePose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_LastThrowReferencePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_LastThrowReferencePose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastThrowReferencePose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody m_Rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_Rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_Rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_WasKinematic
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_WasKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_WasKinematic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WasKinematic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UsedGravity
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_UsedGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_UsedGravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UsedGravity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_OldDrag
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_OldDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_OldDrag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OldDrag"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_OldAngularDrag
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_OldAngularDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_OldAngularDrag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OldAngularDrag"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_OriginalSceneParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_OriginalSceneParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_OriginalSceneParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OriginalSceneParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.Utilities.TeleportationMonitor m_TeleportationMonitor
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Utilities::TeleportationMonitor*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TeleportationMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TeleportationMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportationMonitor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::Utilities::TeleportationMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor,UnityEngine.Transform> m_DynamicAttachTransforms
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::Transform*>*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DynamicAttachTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DynamicAttachTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DynamicAttachTransforms"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor*, ::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_attachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_attachTransform
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_attachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_secondaryAttachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_secondaryAttachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_secondaryAttachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secondaryAttachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_secondaryAttachTransform
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_secondaryAttachTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_secondaryAttachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_secondaryAttachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_useDynamicAttach
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_useDynamicAttach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_useDynamicAttach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useDynamicAttach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_useDynamicAttach
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_useDynamicAttach(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_useDynamicAttach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useDynamicAttach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_matchAttachPosition
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_matchAttachPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_matchAttachPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_matchAttachPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_matchAttachPosition
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_matchAttachPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_matchAttachPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_matchAttachPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_matchAttachRotation
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_matchAttachRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_matchAttachRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_matchAttachRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_matchAttachRotation
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_matchAttachRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_matchAttachRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_matchAttachRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_snapToColliderVolume
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_snapToColliderVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_snapToColliderVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_snapToColliderVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_snapToColliderVolume
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_snapToColliderVolume(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_snapToColliderVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_snapToColliderVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_reinitializeDynamicAttachEverySingleGrab
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_reinitializeDynamicAttachEverySingleGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_reinitializeDynamicAttachEverySingleGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reinitializeDynamicAttachEverySingleGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_reinitializeDynamicAttachEverySingleGrab
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_reinitializeDynamicAttachEverySingleGrab(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_reinitializeDynamicAttachEverySingleGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reinitializeDynamicAttachEverySingleGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_attachEaseInTime
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachEaseInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachEaseInTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachEaseInTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_attachEaseInTime
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachEaseInTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachEaseInTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_attachEaseInTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_movementType
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_movementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_movementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_movementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_movementType
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_movementType(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_movementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_movementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_velocityDamping
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_velocityDamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_velocityDamping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocityDamping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_velocityDamping
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_velocityDamping(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_velocityDamping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocityDamping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_velocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_velocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_velocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_velocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_velocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_velocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_angularVelocityDamping
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_angularVelocityDamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_angularVelocityDamping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocityDamping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_angularVelocityDamping
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_angularVelocityDamping(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_angularVelocityDamping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularVelocityDamping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_angularVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_angularVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_angularVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_angularVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_angularVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_angularVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_trackPosition
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_trackPosition
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothPosition
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothPosition
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothPositionAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPositionAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPositionAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothPositionAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothPositionAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPositionAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPositionAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothPositionAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_tightenPosition
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tightenPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_tightenPosition
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenPosition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tightenPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_trackRotation
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_trackRotation
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothRotation
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothRotation
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothRotationAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotationAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotationAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothRotationAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothRotationAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotationAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotationAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothRotationAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_tightenRotation
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tightenRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_tightenRotation
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenRotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tightenRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwOnDetach
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwOnDetach
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwOnDetach(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwSmoothingDuration
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwSmoothingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwSmoothingDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwSmoothingDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwSmoothingDuration
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwSmoothingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwSmoothingDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwSmoothingDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwSmoothingCurve
::UnityEngine::AnimationCurve* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwSmoothingCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwSmoothingCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwSmoothingCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwSmoothingCurve
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwSmoothingCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwSmoothingCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwSmoothingCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwAngularVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwAngularVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwAngularVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwAngularVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwAngularVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwAngularVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwAngularVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwAngularVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_forceGravityOnDetach
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_forceGravityOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_forceGravityOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forceGravityOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_forceGravityOnDetach
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_forceGravityOnDetach(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_forceGravityOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_forceGravityOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_retainTransformParent
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_retainTransformParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_retainTransformParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_retainTransformParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_retainTransformParent
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_retainTransformParent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_retainTransformParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_retainTransformParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_attachPointCompatibilityMode
::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachPointCompatibilityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachPointCompatibilityMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachPointCompatibilityMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_attachPointCompatibilityMode
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachPointCompatibilityMode(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachPointCompatibilityMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_attachPointCompatibilityMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_startingSingleGrabTransformers
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*>* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_startingSingleGrabTransformers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_startingSingleGrabTransformers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startingSingleGrabTransformers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_startingSingleGrabTransformers
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_startingSingleGrabTransformers(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_startingSingleGrabTransformers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startingSingleGrabTransformers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_startingMultipleGrabTransformers
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*>* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_startingMultipleGrabTransformers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_startingMultipleGrabTransformers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startingMultipleGrabTransformers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_startingMultipleGrabTransformers
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_startingMultipleGrabTransformers(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::XRBaseGrabTransformer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_startingMultipleGrabTransformers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startingMultipleGrabTransformers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_addDefaultGrabTransformers
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_addDefaultGrabTransformers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_addDefaultGrabTransformers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_addDefaultGrabTransformers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_addDefaultGrabTransformers
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_addDefaultGrabTransformers(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_addDefaultGrabTransformers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_addDefaultGrabTransformers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_singleGrabTransformersCount
int UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_singleGrabTransformersCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_singleGrabTransformersCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_singleGrabTransformersCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_multipleGrabTransformersCount
int UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_multipleGrabTransformersCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_multipleGrabTransformersCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multipleGrabTransformersCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.AddSingleGrabTransformer
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AddSingleGrabTransformer(::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer* transformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AddSingleGrabTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSingleGrabTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformer);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.AddMultipleGrabTransformer
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AddMultipleGrabTransformer(::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer* transformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AddMultipleGrabTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMultipleGrabTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformer);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.RemoveSingleGrabTransformer
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::RemoveSingleGrabTransformer(::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer* transformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::RemoveSingleGrabTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSingleGrabTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, transformer);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.RemoveMultipleGrabTransformer
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::RemoveMultipleGrabTransformer(::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer* transformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::RemoveMultipleGrabTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveMultipleGrabTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, transformer);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ClearSingleGrabTransformers
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ClearSingleGrabTransformers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ClearSingleGrabTransformers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSingleGrabTransformers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ClearMultipleGrabTransformers
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ClearMultipleGrabTransformers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ClearMultipleGrabTransformers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMultipleGrabTransformers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetSingleGrabTransformers
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetSingleGrabTransformers(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetSingleGrabTransformers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSingleGrabTransformers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetMultipleGrabTransformers
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetMultipleGrabTransformers(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetMultipleGrabTransformers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMultipleGrabTransformers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetSingleGrabTransformerAt
::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetSingleGrabTransformerAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetSingleGrabTransformerAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSingleGrabTransformerAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetMultipleGrabTransformerAt
::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetMultipleGrabTransformerAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetMultipleGrabTransformerAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMultipleGrabTransformerAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.MoveSingleGrabTransformerTo
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::MoveSingleGrabTransformerTo(::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer* transformer, int newIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::MoveSingleGrabTransformerTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveSingleGrabTransformerTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformer), ::il2cpp_utils::ExtractType(newIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformer, newIndex);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.MoveMultipleGrabTransformerTo
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::MoveMultipleGrabTransformerTo(::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer* transformer, int newIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::MoveMultipleGrabTransformerTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveMultipleGrabTransformerTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformer), ::il2cpp_utils::ExtractType(newIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformer, newIndex);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.AddGrabTransformer
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AddGrabTransformer(::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer* transformer, ::UnityEngine::XR::Interaction::Toolkit::Utilities::BaseRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*>* grabTransformers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AddGrabTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGrabTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformer), ::il2cpp_utils::ExtractType(grabTransformers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformer, grabTransformers);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.RemoveGrabTransformer
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::RemoveGrabTransformer(::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer* transformer, ::UnityEngine::XR::Interaction::Toolkit::Utilities::BaseRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*>* grabTransformers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::RemoveGrabTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveGrabTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformer), ::il2cpp_utils::ExtractType(grabTransformers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, transformer, grabTransformers);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ClearGrabTransformers
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ClearGrabTransformers(::UnityEngine::XR::Interaction::Toolkit::Utilities::BaseRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*>* grabTransformers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ClearGrabTransformers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearGrabTransformers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabTransformers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabTransformers);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetGrabTransformers
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetGrabTransformers(::UnityEngine::XR::Interaction::Toolkit::Utilities::BaseRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*>* grabTransformers, ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetGrabTransformers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "GetGrabTransformers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabTransformers), ::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, grabTransformers, results);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.MoveGrabTransformerTo
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::MoveGrabTransformerTo(::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer* transformer, int newIndex, ::UnityEngine::XR::Interaction::Toolkit::Utilities::BaseRegistrationList_1<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*>* grabTransformers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::MoveGrabTransformerTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveGrabTransformerTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformer), ::il2cpp_utils::ExtractType(newIndex), ::il2cpp_utils::ExtractType(grabTransformers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformer, newIndex, grabTransformers);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.FlushRegistration
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::FlushRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::FlushRegistration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushRegistration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.InvokeGrabTransformersOnGrab
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::InvokeGrabTransformersOnGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::InvokeGrabTransformersOnGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGrabTransformersOnGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.InvokeGrabTransformersProcess
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::InvokeGrabTransformersProcess(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase, ByRef<::UnityEngine::Pose> targetPose, ByRef<::UnityEngine::Vector3> localScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::InvokeGrabTransformersProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGrabTransformersProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase), ::il2cpp_utils::ExtractType(targetPose), ::il2cpp_utils::ExtractType(localScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase, byref(targetPose), byref(localScale));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.CanProcessAnySingleGrabTransformer
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::CanProcessAnySingleGrabTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::CanProcessAnySingleGrabTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanProcessAnySingleGrabTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnAddedGrabTransformer
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnAddedGrabTransformer(::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer* transformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnAddedGrabTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAddedGrabTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformer);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnRemovedGrabTransformer
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnRemovedGrabTransformer(::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer* transformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnRemovedGrabTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemovedGrabTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformer);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.AddDefaultGrabTransformers
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AddDefaultGrabTransformers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AddDefaultGrabTransformers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDefaultGrabTransformers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.AddDefaultSingleGrabTransformer
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AddDefaultSingleGrabTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AddDefaultSingleGrabTransformer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*), 97));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.AddDefaultMultipleGrabTransformer
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AddDefaultMultipleGrabTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AddDefaultMultipleGrabTransformer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*), 98));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetOrAddDefaultGrabTransformer
::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetOrAddDefaultGrabTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetOrAddDefaultGrabTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrAddDefaultGrabTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::Transformers::IXRGrabTransformer*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.UpdateTarget
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateTarget(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase), ::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase, deltaTime);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.StepSmoothing
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::StepSmoothing(::UnityEngine::Pose rawTargetPose, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::StepSmoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StepSmoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawTargetPose), ::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rawTargetPose, deltaTime);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.PerformInstantaneousUpdate
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformInstantaneousUpdate(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformInstantaneousUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformInstantaneousUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.PerformKinematicUpdate
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformKinematicUpdate(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformKinematicUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformKinematicUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.PerformVelocityTrackingUpdate
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformVelocityTrackingUpdate(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformVelocityTrackingUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformVelocityTrackingUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase), ::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase, deltaTime);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.UpdateCurrentMovementType
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateCurrentMovementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateCurrentMovementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCurrentMovementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.CreateDynamicAttachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::CreateDynamicAttachTransform(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::CreateDynamicAttachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDynamicAttachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.InitializeDynamicAttachPoseInternal
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::InitializeDynamicAttachPoseInternal(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::Transform* dynamicAttachTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::InitializeDynamicAttachPoseInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeDynamicAttachPoseInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(dynamicAttachTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, dynamicAttachTransform);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.InitializeDynamicAttachPoseWithStatic
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::InitializeDynamicAttachPoseWithStatic(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::Transform* dynamicAttachTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::InitializeDynamicAttachPoseWithStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeDynamicAttachPoseWithStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(dynamicAttachTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, dynamicAttachTransform);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ReleaseDynamicAttachTransform
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ReleaseDynamicAttachTransform(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ReleaseDynamicAttachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseDynamicAttachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ShouldMatchAttachPosition
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ShouldMatchAttachPosition(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ShouldMatchAttachPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*), 99));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ShouldMatchAttachRotation
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ShouldMatchAttachRotation(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ShouldMatchAttachRotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*), 100));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ShouldSnapToColliderVolume
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ShouldSnapToColliderVolume(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ShouldSnapToColliderVolume");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*), 101));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.InitializeDynamicAttachPose
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::InitializeDynamicAttachPose(::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractor* interactor, ::UnityEngine::Transform* dynamicAttachTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::InitializeDynamicAttachPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*), 102));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, dynamicAttachTransform);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Grab
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Grab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Grab");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*), 103));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Drop
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Drop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Drop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*), 104));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Detach
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Detach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Detach");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*), 105));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SetupRigidbodyGrab
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SetupRigidbodyGrab(::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SetupRigidbodyGrab");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*), 106));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigidbody);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SetupRigidbodyDrop
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SetupRigidbodyDrop(::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SetupRigidbodyDrop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable*), 107));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigidbody);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ResetThrowSmoothing
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ResetThrowSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ResetThrowSmoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetThrowSmoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.EndThrowSmoothing
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::EndThrowSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::EndThrowSmoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndThrowSmoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.StepThrowSmoothing
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::StepThrowSmoothing(::UnityEngine::Pose targetPose, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::StepThrowSmoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StepThrowSmoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPose), ::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPose, deltaTime);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetSmoothedVelocityValue
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetSmoothedVelocityValue(::ArrayW<::UnityEngine::Vector3> velocityFrames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetSmoothedVelocityValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSmoothedVelocityValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(velocityFrames)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, velocityFrames);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SubscribeTeleportationProvider
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SubscribeTeleportationProvider(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SubscribeTeleportationProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubscribeTeleportationProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.UnsubscribeTeleportationProvider
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UnsubscribeTeleportationProvider(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UnsubscribeTeleportationProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsubscribeTeleportationProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnTeleported
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnTeleported(::UnityEngine::Pose offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnTeleported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTeleported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnCreatePooledItem
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnCreatePooledItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnCreatePooledItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "OnCreatePooledItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnGetPooledItem
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnGetPooledItem(::UnityEngine::Transform* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnGetPooledItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "OnGetPooledItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, item);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnReleasePooledItem
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnReleasePooledItem(::UnityEngine::Transform* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnReleasePooledItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "OnReleasePooledItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, item);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnDestroyPooledItem
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnDestroyPooledItem(::UnityEngine::Transform* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnDestroyPooledItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "OnDestroyPooledItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, item);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_gravityOnDetach
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_gravityOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_gravityOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gravityOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_gravityOnDetach
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_gravityOnDetach(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_gravityOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gravityOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Awake
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ProcessInteractable
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ProcessInteractable(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ProcessInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 66));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetAttachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetAttachTransform(::UnityEngine::XR::Interaction::Toolkit::IXRInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetAttachTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 73));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 75));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 76));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable..cctor
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable/AttachPointCompatibilityMode
#include "UnityEngine/XR/Interaction/Toolkit/XRGrabInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable/AttachPointCompatibilityMode Default
::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable/AttachPointCompatibilityMode", "Default"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable/AttachPointCompatibilityMode Default
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode::_set_Default(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable/AttachPointCompatibilityMode", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable/AttachPointCompatibilityMode Legacy
::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode::_get_Legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode::_get_Legacy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable/AttachPointCompatibilityMode", "Legacy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable/AttachPointCompatibilityMode Legacy
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode::_set_Legacy(::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode::_set_Legacy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable/AttachPointCompatibilityMode", "Legacy", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::AttachPointCompatibilityMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractableSnapVolume.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable
#include "UnityEngine/XR/Interaction/Toolkit/IXRSelectInteractable.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectEnterEventArgs.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs
#include "UnityEngine/XR/Interaction/Toolkit/SelectExitEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::_get_s_InteractionManagerCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::_get_s_InteractionManagerCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*>("UnityEngine.XR.Interaction.Toolkit", "XRInteractableSnapVolume", "s_InteractionManagerCache"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::_set_s_InteractionManagerCache(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::_set_s_InteractionManagerCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractableSnapVolume", "s_InteractionManagerCache", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_InteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_InteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object m_InteractableObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_InteractableObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_InteractableObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider m_SnapCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_SnapCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_SnapCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SnapCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DisableSnapColliderWhenSelected
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_DisableSnapColliderWhenSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_DisableSnapColliderWhenSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DisableSnapColliderWhenSelected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider m_SnapToCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_SnapToCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_SnapToCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SnapToCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractable m_Interactable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*& UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_Interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_Interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRInteractable m_BoundInteractable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*& UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_BoundInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_BoundInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BoundInteractable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable m_BoundSelectInteractable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable*& UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_BoundSelectInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_BoundSelectInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BoundSelectInteractable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::IXRSelectInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_RegisteredInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::dyn_m_RegisteredInteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredInteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.get_interactionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::get_interactionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::get_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.set_interactionManager
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::set_interactionManager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::set_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.get_interactableObject
::UnityEngine::Object* UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::get_interactableObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::get_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.set_interactableObject
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::set_interactableObject(::UnityEngine::Object* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::set_interactableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.get_snapCollider
::UnityEngine::Collider* UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::get_snapCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::get_snapCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_snapCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.set_snapCollider
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::set_snapCollider(::UnityEngine::Collider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::set_snapCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_snapCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.get_disableSnapColliderWhenSelected
bool UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::get_disableSnapColliderWhenSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::get_disableSnapColliderWhenSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disableSnapColliderWhenSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.set_disableSnapColliderWhenSelected
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::set_disableSnapColliderWhenSelected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::set_disableSnapColliderWhenSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disableSnapColliderWhenSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.get_snapToCollider
::UnityEngine::Collider* UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::get_snapToCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::get_snapToCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_snapToCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.set_snapToCollider
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::set_snapToCollider(::UnityEngine::Collider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::set_snapToCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_snapToCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.get_interactable
::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::IXRInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.set_interactable
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::set_interactable(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.Reset
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.Awake
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.FindCreateInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::FindCreateInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::FindCreateInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCreateInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.RegisterWithInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::RegisterWithInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::RegisterWithInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterWithInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.UnregisterWithInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::UnregisterWithInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::UnregisterWithInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterWithInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.FindSnapCollider
::UnityEngine::Collider* UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::FindSnapCollider(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::FindSnapCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRInteractableSnapVolume", "FindSnapCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.SupportsTriggerCollider
bool UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::SupportsTriggerCollider(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::SupportsTriggerCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRInteractableSnapVolume", "SupportsTriggerCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, col);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.ValidateSnapCollider
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::ValidateSnapCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::ValidateSnapCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateSnapCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.SetSnapColliderEnabled
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::SetSnapColliderEnabled(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::SetSnapColliderEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSnapColliderEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.GetClosestPoint
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::GetClosestPoint(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::GetClosestPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClosestPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.SetBoundInteractable
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::SetBoundInteractable(::UnityEngine::XR::Interaction::Toolkit::IXRInteractable* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::SetBoundInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBoundInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.RefreshSnapColliderEnabled
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::RefreshSnapColliderEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::RefreshSnapColliderEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSnapColliderEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.OnFirstSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::OnFirstSelectEntered(::UnityEngine::XR::Interaction::Toolkit::SelectEnterEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::OnFirstSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFirstSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractableSnapVolume.OnLastSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::OnLastSelectExited(::UnityEngine::XR::Interaction::Toolkit::SelectExitEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractableSnapVolume::OnLastSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLastSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
