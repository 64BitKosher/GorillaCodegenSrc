// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Queue
#include "System/Collections/Queue.hpp"
// Including type: System.Collections.Queue/QueueEnumerator
#include "System/Collections/Queue_QueueEnumerator.hpp"
// Including type: System.Collections.Queue/QueueDebugView
#include "System/Collections/Queue_QueueDebugView.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object[] _array
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::Collections::Queue::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _head
[[deprecated("Use field access instead!")]] int& System::Collections::Queue::dyn__head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_head"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _tail
[[deprecated("Use field access instead!")]] int& System::Collections::Queue::dyn__tail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__tail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tail"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _size
[[deprecated("Use field access instead!")]] int& System::Collections::Queue::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _growFactor
[[deprecated("Use field access instead!")]] int& System::Collections::Queue::dyn__growFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__growFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_growFactor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& System::Collections::Queue::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::Queue::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Queue.get_Count
int System::Collections::Queue::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Queue*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.Clone
::Il2CppObject* System::Collections::Queue::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Queue*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.get_IsSynchronized
bool System::Collections::Queue::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Queue*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.get_SyncRoot
::Il2CppObject* System::Collections::Queue::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Queue*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.CopyTo
void System::Collections::Queue::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Queue*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Queue.Enqueue
void System::Collections::Queue::Enqueue(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::Enqueue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Queue*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Queue.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Queue::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Queue*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.Dequeue
::Il2CppObject* System::Collections::Queue::Dequeue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::Dequeue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Queue*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.Peek
::Il2CppObject* System::Collections::Queue::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::Peek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Queue*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.GetElement
::Il2CppObject* System::Collections::Queue::GetElement(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Collections.Queue.SetCapacity
void System::Collections::Queue::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::SetCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Queue/QueueEnumerator
#include "System/Collections/Queue_QueueEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Queue _q
[[deprecated("Use field access instead!")]] ::System::Collections::Queue*& System::Collections::Queue::QueueEnumerator::dyn__q() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::dyn__q");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_q"))->offset;
  return *reinterpret_cast<::System::Collections::Queue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& System::Collections::Queue::QueueEnumerator::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& System::Collections::Queue::QueueEnumerator::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _currentElement
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::Queue::QueueEnumerator::dyn__currentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::dyn__currentElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentElement"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Queue/QueueEnumerator.Clone
::Il2CppObject* System::Collections::Queue::QueueEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Queue::QueueEnumerator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue/QueueEnumerator.MoveNext
bool System::Collections::Queue::QueueEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Queue::QueueEnumerator*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue/QueueEnumerator.get_Current
::Il2CppObject* System::Collections::Queue::QueueEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Queue::QueueEnumerator*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue/QueueEnumerator.Reset
void System::Collections::Queue::QueueEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Queue::QueueEnumerator*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ReadOnlyCollectionBase
#include "System/Collections/ReadOnlyCollectionBase.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Collections::ReadOnlyCollectionBase::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ReadOnlyCollectionBase::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ReadOnlyCollectionBase.get_InnerList
::System::Collections::ArrayList* System::Collections::ReadOnlyCollectionBase::get_InnerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ReadOnlyCollectionBase::get_InnerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ReadOnlyCollectionBase.get_Count
int System::Collections::ReadOnlyCollectionBase::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ReadOnlyCollectionBase::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ReadOnlyCollectionBase*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.get_IsSynchronized
bool System::Collections::ReadOnlyCollectionBase::System_Collections_ICollection_get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ReadOnlyCollectionBase::System.Collections.ICollection.get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ReadOnlyCollectionBase*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::ReadOnlyCollectionBase::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ReadOnlyCollectionBase::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ReadOnlyCollectionBase*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.CopyTo
void System::Collections::ReadOnlyCollectionBase::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ReadOnlyCollectionBase::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ReadOnlyCollectionBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ReadOnlyCollectionBase.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ReadOnlyCollectionBase::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ReadOnlyCollectionBase::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ReadOnlyCollectionBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList
#include "System/Collections/SortedList.hpp"
// Including type: System.Collections.SortedList/SyncSortedList
#include "System/Collections/SortedList_SyncSortedList.hpp"
// Including type: System.Collections.SortedList/SortedListEnumerator
#include "System/Collections/SortedList_SortedListEnumerator.hpp"
// Including type: System.Collections.SortedList/KeyList
#include "System/Collections/SortedList_KeyList.hpp"
// Including type: System.Collections.SortedList/ValueList
#include "System/Collections/SortedList_ValueList.hpp"
// Including type: System.Collections.SortedList/SortedListDebugView
#include "System/Collections/SortedList_SortedListDebugView.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object[] keys
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::Collections::SortedList::dyn_keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_keys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keys"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] values
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::Collections::SortedList::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _size
[[deprecated("Use field access instead!")]] int& System::Collections::SortedList::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
[[deprecated("Use field access instead!")]] int& System::Collections::SortedList::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer comparer
[[deprecated("Use field access instead!")]] ::System::Collections::IComparer*& System::Collections::SortedList::dyn_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList/KeyList keyList
[[deprecated("Use field access instead!")]] ::System::Collections::SortedList::KeyList*& System::Collections::SortedList::dyn_keyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_keyList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList::KeyList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList/ValueList valueList
[[deprecated("Use field access instead!")]] ::System::Collections::SortedList::ValueList*& System::Collections::SortedList::dyn_valueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_valueList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList::ValueList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::SortedList::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.SortedList.Init
void System::Collections::SortedList::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.Add
void System::Collections::SortedList::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.SortedList.set_Capacity
void System::Collections::SortedList::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::set_Capacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList.get_Count
int System::Collections::SortedList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_Keys
::System::Collections::ICollection* System::Collections::SortedList::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_Keys");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_Values
::System::Collections::ICollection* System::Collections::SortedList::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_Values");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_IsReadOnly
bool System::Collections::SortedList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_IsFixedSize
bool System::Collections::SortedList::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_IsSynchronized
bool System::Collections::SortedList::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_SyncRoot
::Il2CppObject* System::Collections::SortedList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.Clear
void System::Collections::SortedList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.Clone
::Il2CppObject* System::Collections::SortedList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.Contains
bool System::Collections::SortedList::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList.ContainsKey
bool System::Collections::SortedList::ContainsKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ContainsKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList.ContainsValue
bool System::Collections::SortedList::ContainsValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ContainsValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 34));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList.CopyTo
void System::Collections::SortedList::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.SortedList.EnsureCapacity
void System::Collections::SortedList::EnsureCapacity(int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, min);
}
// Autogenerated method: System.Collections.SortedList.GetByIndex
::Il2CppObject* System::Collections::SortedList::GetByIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::GetByIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::SortedList::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::SortedList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.GetKey
::Il2CppObject* System::Collections::SortedList::GetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::GetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList.GetKeyList
::System::Collections::IList* System::Collections::SortedList::GetKeyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::GetKeyList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.GetValueList
::System::Collections::IList* System::Collections::SortedList::GetValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::GetValueList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_Item
::Il2CppObject* System::Collections::SortedList::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList.set_Item
void System::Collections::SortedList::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.SortedList.IndexOfKey
int System::Collections::SortedList::IndexOfKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::IndexOfKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 43));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList.IndexOfValue
int System::Collections::SortedList::IndexOfValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::IndexOfValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 44));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList.Insert
void System::Collections::SortedList::Insert(int index, ::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, key, value);
}
// Autogenerated method: System.Collections.SortedList.RemoveAt
void System::Collections::SortedList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList.Remove
void System::Collections::SortedList::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList.Synchronized
::System::Collections::SortedList* System::Collections::SortedList::Synchronized(::System::Collections::SortedList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Synchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "SortedList", "Synchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::SortedList*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/SyncSortedList
#include "System/Collections/SortedList_SyncSortedList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList _list
[[deprecated("Use field access instead!")]] ::System::Collections::SortedList*& System::Collections::SortedList::SyncSortedList::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _root
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::SortedList::SyncSortedList::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.get_Count
int System::Collections::SortedList::SyncSortedList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.get_SyncRoot
::Il2CppObject* System::Collections::SortedList::SyncSortedList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.get_IsReadOnly
bool System::Collections::SortedList::SyncSortedList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.get_IsFixedSize
bool System::Collections::SortedList::SyncSortedList::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.get_IsSynchronized
bool System::Collections::SortedList::SyncSortedList::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.get_Item
::Il2CppObject* System::Collections::SortedList::SyncSortedList::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.set_Item
void System::Collections::SortedList::SyncSortedList::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.Add
void System::Collections::SortedList::SyncSortedList::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.Clear
void System::Collections::SortedList::SyncSortedList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.Clone
::Il2CppObject* System::Collections::SortedList::SyncSortedList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.Contains
bool System::Collections::SortedList::SyncSortedList::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.ContainsKey
bool System::Collections::SortedList::SyncSortedList::ContainsKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::ContainsKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.ContainsValue
bool System::Collections::SortedList::SyncSortedList::ContainsValue(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::ContainsValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 34));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.CopyTo
void System::Collections::SortedList::SyncSortedList::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.GetByIndex
::Il2CppObject* System::Collections::SortedList::SyncSortedList::GetByIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::GetByIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::SortedList::SyncSortedList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.GetKey
::Il2CppObject* System::Collections::SortedList::SyncSortedList::GetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::GetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.GetKeyList
::System::Collections::IList* System::Collections::SortedList::SyncSortedList::GetKeyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::GetKeyList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.GetValueList
::System::Collections::IList* System::Collections::SortedList::SyncSortedList::GetValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::GetValueList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.IndexOfKey
int System::Collections::SortedList::SyncSortedList::IndexOfKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::IndexOfKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 43));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.IndexOfValue
int System::Collections::SortedList::SyncSortedList::IndexOfValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::IndexOfValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 44));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.RemoveAt
void System::Collections::SortedList::SyncSortedList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.Remove
void System::Collections::SortedList::SyncSortedList::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/SortedListEnumerator
#include "System/Collections/SortedList_SortedListEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList _sortedList
[[deprecated("Use field access instead!")]] ::System::Collections::SortedList*& System::Collections::SortedList::SortedListEnumerator::dyn__sortedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn__sortedList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sortedList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _key
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::SortedList::SortedListEnumerator::dyn__key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn__key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::SortedList::SortedListEnumerator::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& System::Collections::SortedList::SortedListEnumerator::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _startIndex
[[deprecated("Use field access instead!")]] int& System::Collections::SortedList::SortedListEnumerator::dyn__startIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn__startIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _endIndex
[[deprecated("Use field access instead!")]] int& System::Collections::SortedList::SortedListEnumerator::dyn__endIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn__endIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& System::Collections::SortedList::SortedListEnumerator::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _current
[[deprecated("Use field access instead!")]] bool& System::Collections::SortedList::SortedListEnumerator::dyn__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_current"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _getObjectRetType
[[deprecated("Use field access instead!")]] int& System::Collections::SortedList::SortedListEnumerator::dyn__getObjectRetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn__getObjectRetType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_getObjectRetType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.SortedList/SortedListEnumerator.Clone
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::SortedListEnumerator*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SortedListEnumerator.get_Key
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::SortedListEnumerator*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SortedListEnumerator.MoveNext
bool System::Collections::SortedList::SortedListEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::SortedListEnumerator*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SortedListEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::SortedList::SortedListEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::SortedListEnumerator*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SortedListEnumerator.get_Current
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::SortedListEnumerator*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SortedListEnumerator.get_Value
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::SortedListEnumerator*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SortedListEnumerator.Reset
void System::Collections::SortedList::SortedListEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::SortedListEnumerator*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/KeyList
#include "System/Collections/SortedList_KeyList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList sortedList
[[deprecated("Use field access instead!")]] ::System::Collections::SortedList*& System::Collections::SortedList::KeyList::dyn_sortedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::dyn_sortedList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortedList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.SortedList/KeyList.get_Count
int System::Collections::SortedList::KeyList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 20));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/KeyList.get_IsReadOnly
bool System::Collections::SortedList::KeyList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/KeyList.get_IsFixedSize
bool System::Collections::SortedList::KeyList::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/KeyList.get_IsSynchronized
bool System::Collections::SortedList::KeyList::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/KeyList.get_SyncRoot
::Il2CppObject* System::Collections::SortedList::KeyList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/KeyList.Add
int System::Collections::SortedList::KeyList::Add(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 25));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/KeyList.Clear
void System::Collections::SortedList::KeyList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/KeyList.Contains
bool System::Collections::SortedList::KeyList::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/KeyList.CopyTo
void System::Collections::SortedList::KeyList::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.SortedList/KeyList.Insert
void System::Collections::SortedList::KeyList::Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.SortedList/KeyList.get_Item
::Il2CppObject* System::Collections::SortedList::KeyList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/KeyList.set_Item
void System::Collections::SortedList::KeyList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.SortedList/KeyList.GetEnumerator
::System::Collections::IEnumerator* System::Collections::SortedList::KeyList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/KeyList.IndexOf
int System::Collections::SortedList::KeyList::IndexOf(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/KeyList.Remove
void System::Collections::SortedList::KeyList::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/KeyList.RemoveAt
void System::Collections::SortedList::KeyList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::KeyList*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/ValueList
#include "System/Collections/SortedList_ValueList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList sortedList
[[deprecated("Use field access instead!")]] ::System::Collections::SortedList*& System::Collections::SortedList::ValueList::dyn_sortedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::dyn_sortedList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortedList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.SortedList/ValueList.get_Count
int System::Collections::SortedList::ValueList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 20));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/ValueList.get_IsReadOnly
bool System::Collections::SortedList::ValueList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/ValueList.get_IsFixedSize
bool System::Collections::SortedList::ValueList::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/ValueList.get_IsSynchronized
bool System::Collections::SortedList::ValueList::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/ValueList.get_SyncRoot
::Il2CppObject* System::Collections::SortedList::ValueList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/ValueList.Add
int System::Collections::SortedList::ValueList::Add(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 25));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/ValueList.Clear
void System::Collections::SortedList::ValueList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/ValueList.Contains
bool System::Collections::SortedList::ValueList::Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList/ValueList.CopyTo
void System::Collections::SortedList::ValueList::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.SortedList/ValueList.Insert
void System::Collections::SortedList::ValueList::Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.SortedList/ValueList.get_Item
::Il2CppObject* System::Collections::SortedList::ValueList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/ValueList.set_Item
void System::Collections::SortedList::ValueList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.SortedList/ValueList.GetEnumerator
::System::Collections::IEnumerator* System::Collections::SortedList::ValueList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/ValueList.IndexOf
int System::Collections::SortedList::ValueList::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList/ValueList.Remove
void System::Collections::SortedList::ValueList::Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList/ValueList.RemoveAt
void System::Collections::SortedList::ValueList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::SortedList::ValueList*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.Collections.Stack/StackEnumerator
#include "System/Collections/Stack_StackEnumerator.hpp"
// Including type: System.Collections.Stack/StackDebugView
#include "System/Collections/Stack_StackDebugView.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 _defaultCapacity
int System::Collections::Stack::_get__defaultCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::_get__defaultCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Collections", "Stack", "_defaultCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _defaultCapacity
void System::Collections::Stack::_set__defaultCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::_set__defaultCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Stack", "_defaultCapacity", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] _array
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::Collections::Stack::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _size
[[deprecated("Use field access instead!")]] int& System::Collections::Stack::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& System::Collections::Stack::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::Stack::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Stack.get_Count
int System::Collections::Stack::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Stack*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.get_IsSynchronized
bool System::Collections::Stack::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Stack*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.get_SyncRoot
::Il2CppObject* System::Collections::Stack::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Stack*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Clear
void System::Collections::Stack::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Stack*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Clone
::Il2CppObject* System::Collections::Stack::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Stack*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.CopyTo
void System::Collections::Stack::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Stack*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Stack.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Stack::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Stack*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Peek
::Il2CppObject* System::Collections::Stack::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::Peek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Stack*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Pop
::Il2CppObject* System::Collections::Stack::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::Pop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Stack*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Push
void System::Collections::Stack::Push(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::Push");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Stack*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Stack/StackEnumerator
#include "System/Collections/Stack_StackEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack _stack
[[deprecated("Use field access instead!")]] ::System::Collections::Stack*& System::Collections::Stack::StackEnumerator::dyn__stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::dyn__stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stack"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& System::Collections::Stack::StackEnumerator::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& System::Collections::Stack::StackEnumerator::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _currentElement
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::Stack::StackEnumerator::dyn__currentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::dyn__currentElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentElement"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Stack/StackEnumerator.Clone
::Il2CppObject* System::Collections::Stack::StackEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Stack::StackEnumerator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack/StackEnumerator.MoveNext
bool System::Collections::Stack::StackEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Stack::StackEnumerator*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack/StackEnumerator.get_Current
::Il2CppObject* System::Collections::Stack::StackEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Stack::StackEnumerator*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack/StackEnumerator.Reset
void System::Collections::Stack::StackEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Stack::StackEnumerator*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
// Including type: System.Collections.BitArray/BitArrayEnumeratorSimple
#include "System/Collections/BitArray_BitArrayEnumeratorSimple.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_array
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Collections::BitArray::dyn_m_array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::dyn_m_array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_array"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_length
[[deprecated("Use field access instead!")]] int& System::Collections::BitArray::dyn_m_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::dyn_m_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& System::Collections::BitArray::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::BitArray::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.BitArray.get_Item
bool System::Collections::BitArray::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.BitArray.set_Item
void System::Collections::BitArray::set_Item(int index, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.BitArray.Get
bool System::Collections::BitArray::Get(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.BitArray.Set
void System::Collections::BitArray::Set(int index, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.BitArray.get_Length
int System::Collections::BitArray::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.BitArray.set_Length
void System::Collections::BitArray::set_Length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::set_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.BitArray.CopyTo
void System::Collections::BitArray::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::BitArray*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.BitArray.get_Count
int System::Collections::BitArray::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::BitArray*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.BitArray.get_SyncRoot
::Il2CppObject* System::Collections::BitArray::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::BitArray*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.BitArray.get_IsSynchronized
bool System::Collections::BitArray::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::BitArray*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.BitArray.Clone
::Il2CppObject* System::Collections::BitArray::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::BitArray*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.BitArray.GetEnumerator
::System::Collections::IEnumerator* System::Collections::BitArray::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::BitArray*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.BitArray.GetArrayLength
int System::Collections::BitArray::GetArrayLength(int n, int div) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::GetArrayLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "BitArray", "GetArrayLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(div)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, div);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.BitArray/BitArrayEnumeratorSimple
#include "System/Collections/BitArray_BitArrayEnumeratorSimple.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.BitArray bitarray
[[deprecated("Use field access instead!")]] ::System::Collections::BitArray*& System::Collections::BitArray::BitArrayEnumeratorSimple::dyn_bitarray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::BitArrayEnumeratorSimple::dyn_bitarray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitarray"))->offset;
  return *reinterpret_cast<::System::Collections::BitArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
[[deprecated("Use field access instead!")]] int& System::Collections::BitArray::BitArrayEnumeratorSimple::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::BitArrayEnumeratorSimple::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
[[deprecated("Use field access instead!")]] int& System::Collections::BitArray::BitArrayEnumeratorSimple::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::BitArrayEnumeratorSimple::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean currentElement
[[deprecated("Use field access instead!")]] bool& System::Collections::BitArray::BitArrayEnumeratorSimple::dyn_currentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::BitArrayEnumeratorSimple::dyn_currentElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentElement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.BitArray/BitArrayEnumeratorSimple.Clone
::Il2CppObject* System::Collections::BitArray::BitArrayEnumeratorSimple::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::BitArrayEnumeratorSimple::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::BitArray::BitArrayEnumeratorSimple*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.BitArray/BitArrayEnumeratorSimple.MoveNext
bool System::Collections::BitArray::BitArrayEnumeratorSimple::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::BitArrayEnumeratorSimple::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::BitArray::BitArrayEnumeratorSimple*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.BitArray/BitArrayEnumeratorSimple.get_Current
::Il2CppObject* System::Collections::BitArray::BitArrayEnumeratorSimple::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::BitArrayEnumeratorSimple::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::BitArray::BitArrayEnumeratorSimple*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.BitArray/BitArrayEnumeratorSimple.Reset
void System::Collections::BitArray::BitArrayEnumeratorSimple::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::BitArray::BitArrayEnumeratorSimple::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::BitArray::BitArrayEnumeratorSimple*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.ArrayList/IListWrapper
#include "System/Collections/ArrayList_IListWrapper.hpp"
// Including type: System.Collections.ArrayList/ReadOnlyArrayList
#include "System/Collections/ArrayList_ReadOnlyArrayList.hpp"
// Including type: System.Collections.ArrayList/ArrayListEnumeratorSimple
#include "System/Collections/ArrayList_ArrayListEnumeratorSimple.hpp"
// Including type: System.Collections.ArrayList/ArrayListDebugView
#include "System/Collections/ArrayList_ArrayListDebugView.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 _defaultCapacity
int System::Collections::ArrayList::_get__defaultCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::_get__defaultCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Collections", "ArrayList", "_defaultCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _defaultCapacity
void System::Collections::ArrayList::_set__defaultCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::_set__defaultCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "ArrayList", "_defaultCapacity", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MaxArrayLength
int System::Collections::ArrayList::_get_MaxArrayLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::_get_MaxArrayLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Collections", "ArrayList", "MaxArrayLength"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MaxArrayLength
void System::Collections::ArrayList::_set_MaxArrayLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::_set_MaxArrayLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "ArrayList", "MaxArrayLength", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] _items
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::Collections::ArrayList::dyn__items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::dyn__items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_items"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _size
[[deprecated("Use field access instead!")]] int& System::Collections::ArrayList::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& System::Collections::ArrayList::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::ArrayList::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ArrayList.set_Capacity
void System::Collections::ArrayList::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::set_Capacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList.get_Count
int System::Collections::ArrayList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 22));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.get_IsFixedSize
bool System::Collections::ArrayList::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.get_IsReadOnly
bool System::Collections::ArrayList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.get_IsSynchronized
bool System::Collections::ArrayList::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.get_SyncRoot
::Il2CppObject* System::Collections::ArrayList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.get_Item
::Il2CppObject* System::Collections::ArrayList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList.set_Item
void System::Collections::ArrayList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.ArrayList.Adapter
::System::Collections::ArrayList* System::Collections::ArrayList::Adapter(::System::Collections::IList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Adapter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "ArrayList", "Adapter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: System.Collections.ArrayList.Add
int System::Collections::ArrayList::Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 29));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList.AddRange
void System::Collections::ArrayList::AddRange(::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::AddRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Collections.ArrayList.Clear
void System::Collections::ArrayList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.Clone
::Il2CppObject* System::Collections::ArrayList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.Contains
bool System::Collections::ArrayList::Contains(::Il2CppObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Collections.ArrayList.CopyTo
void System::Collections::ArrayList::CopyTo(::System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array);
}
// Autogenerated method: System.Collections.ArrayList.CopyTo
void System::Collections::ArrayList::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.ArrayList.CopyTo
void System::Collections::ArrayList::CopyTo(int index, ::System::Array* array, int arrayIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, array, arrayIndex, count);
}
// Autogenerated method: System.Collections.ArrayList.EnsureCapacity
void System::Collections::ArrayList::EnsureCapacity(int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, min);
}
// Autogenerated method: System.Collections.ArrayList.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ArrayList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.IndexOf
int System::Collections::ArrayList::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 38));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList.Insert
void System::Collections::ArrayList::Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.ArrayList.InsertRange
void System::Collections::ArrayList::InsertRange(int index, ::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::InsertRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, c);
}
// Autogenerated method: System.Collections.ArrayList.ReadOnly
::System::Collections::ArrayList* System::Collections::ArrayList::ReadOnly(::System::Collections::ArrayList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "ArrayList", "ReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: System.Collections.ArrayList.Remove
void System::Collections::ArrayList::Remove(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.ArrayList.RemoveAt
void System::Collections::ArrayList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList.RemoveRange
void System::Collections::ArrayList::RemoveRange(int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::RemoveRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count);
}
// Autogenerated method: System.Collections.ArrayList.Sort
void System::Collections::ArrayList::Sort(::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, comparer);
}
// Autogenerated method: System.Collections.ArrayList.Sort
void System::Collections::ArrayList::Sort(int index, int count, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count, comparer);
}
// Autogenerated method: System.Collections.ArrayList.ToArray
::ArrayW<::Il2CppObject*> System::Collections::ArrayList::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ToArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.ToArray
::System::Array* System::Collections::ArrayList::ToArray(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ToArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ArrayList/IListWrapper
#include "System/Collections/ArrayList_IListWrapper.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IList _list
[[deprecated("Use field access instead!")]] ::System::Collections::IList*& System::Collections::ArrayList::IListWrapper::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::IList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.set_Capacity
void System::Collections::ArrayList::IListWrapper::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::set_Capacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.get_Count
int System::Collections::ArrayList::IListWrapper::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 22));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.get_IsReadOnly
bool System::Collections::ArrayList::IListWrapper::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.get_IsFixedSize
bool System::Collections::ArrayList::IListWrapper::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.get_IsSynchronized
bool System::Collections::ArrayList::IListWrapper::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.get_Item
::Il2CppObject* System::Collections::ArrayList::IListWrapper::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.set_Item
void System::Collections::ArrayList::IListWrapper::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.get_SyncRoot
::Il2CppObject* System::Collections::ArrayList::IListWrapper::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.Add
int System::Collections::ArrayList::IListWrapper::Add(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 29));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.AddRange
void System::Collections::ArrayList::IListWrapper::AddRange(::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::AddRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.Clear
void System::Collections::ArrayList::IListWrapper::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.Clone
::Il2CppObject* System::Collections::ArrayList::IListWrapper::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.Contains
bool System::Collections::ArrayList::IListWrapper::Contains(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.CopyTo
void System::Collections::ArrayList::IListWrapper::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.CopyTo
void System::Collections::ArrayList::IListWrapper::CopyTo(int index, ::System::Array* array, int arrayIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, array, arrayIndex, count);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ArrayList::IListWrapper::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.IndexOf
int System::Collections::ArrayList::IListWrapper::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 38));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.Insert
void System::Collections::ArrayList::IListWrapper::Insert(int index, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, obj);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.InsertRange
void System::Collections::ArrayList::IListWrapper::InsertRange(int index, ::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::InsertRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, c);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.Remove
void System::Collections::ArrayList::IListWrapper::Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.RemoveAt
void System::Collections::ArrayList::IListWrapper::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.RemoveRange
void System::Collections::ArrayList::IListWrapper::RemoveRange(int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::RemoveRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.Sort
void System::Collections::ArrayList::IListWrapper::Sort(int index, int count, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count, comparer);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.ToArray
::ArrayW<::Il2CppObject*> System::Collections::ArrayList::IListWrapper::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::ToArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/IListWrapper.ToArray
::System::Array* System::Collections::ArrayList::IListWrapper::ToArray(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IListWrapper::ToArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ArrayList/ReadOnlyArrayList
#include "System/Collections/ArrayList_ReadOnlyArrayList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Collections::ArrayList::ReadOnlyArrayList::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.get_Count
int System::Collections::ArrayList::ReadOnlyArrayList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 22));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.get_IsReadOnly
bool System::Collections::ArrayList::ReadOnlyArrayList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.get_IsFixedSize
bool System::Collections::ArrayList::ReadOnlyArrayList::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.get_IsSynchronized
bool System::Collections::ArrayList::ReadOnlyArrayList::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.get_Item
::Il2CppObject* System::Collections::ArrayList::ReadOnlyArrayList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.set_Item
void System::Collections::ArrayList::ReadOnlyArrayList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.get_SyncRoot
::Il2CppObject* System::Collections::ArrayList::ReadOnlyArrayList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.Add
int System::Collections::ArrayList::ReadOnlyArrayList::Add(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 29));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.AddRange
void System::Collections::ArrayList::ReadOnlyArrayList::AddRange(::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::AddRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.set_Capacity
void System::Collections::ArrayList::ReadOnlyArrayList::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::set_Capacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.Clear
void System::Collections::ArrayList::ReadOnlyArrayList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.Clone
::Il2CppObject* System::Collections::ArrayList::ReadOnlyArrayList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.Contains
bool System::Collections::ArrayList::ReadOnlyArrayList::Contains(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.CopyTo
void System::Collections::ArrayList::ReadOnlyArrayList::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.CopyTo
void System::Collections::ArrayList::ReadOnlyArrayList::CopyTo(int index, ::System::Array* array, int arrayIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, array, arrayIndex, count);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ArrayList::ReadOnlyArrayList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.IndexOf
int System::Collections::ArrayList::ReadOnlyArrayList::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 38));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.Insert
void System::Collections::ArrayList::ReadOnlyArrayList::Insert(int index, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, obj);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.InsertRange
void System::Collections::ArrayList::ReadOnlyArrayList::InsertRange(int index, ::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::InsertRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, c);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.Remove
void System::Collections::ArrayList::ReadOnlyArrayList::Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.RemoveAt
void System::Collections::ArrayList::ReadOnlyArrayList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.RemoveRange
void System::Collections::ArrayList::ReadOnlyArrayList::RemoveRange(int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::RemoveRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.Sort
void System::Collections::ArrayList::ReadOnlyArrayList::Sort(int index, int count, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count, comparer);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.ToArray
::ArrayW<::Il2CppObject*> System::Collections::ArrayList::ReadOnlyArrayList::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::ToArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/ReadOnlyArrayList.ToArray
::System::Array* System::Collections::ArrayList::ReadOnlyArrayList::ToArray(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::ToArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ArrayList/ArrayListEnumeratorSimple
#include "System/Collections/ArrayList_ArrayListEnumeratorSimple.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object s_dummyObject
::Il2CppObject* System::Collections::ArrayList::ArrayListEnumeratorSimple::_get_s_dummyObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::_get_s_dummyObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Collections", "ArrayList/ArrayListEnumeratorSimple", "s_dummyObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_dummyObject
void System::Collections::ArrayList::ArrayListEnumeratorSimple::_set_s_dummyObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::_set_s_dummyObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "ArrayList/ArrayListEnumeratorSimple", "s_dummyObject", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _currentElement
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn__currentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn__currentElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentElement"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isArrayList
[[deprecated("Use field access instead!")]] bool& System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn__isArrayList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn__isArrayList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isArrayList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ArrayList/ArrayListEnumeratorSimple.Clone
::Il2CppObject* System::Collections::ArrayList::ArrayListEnumeratorSimple::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList::ArrayListEnumeratorSimple*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/ArrayListEnumeratorSimple.MoveNext
bool System::Collections::ArrayList::ArrayListEnumeratorSimple::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList::ArrayListEnumeratorSimple*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/ArrayListEnumeratorSimple.get_Current
::Il2CppObject* System::Collections::ArrayList::ArrayListEnumeratorSimple::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList::ArrayListEnumeratorSimple*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/ArrayListEnumeratorSimple.Reset
void System::Collections::ArrayList::ArrayListEnumeratorSimple::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ArrayList::ArrayListEnumeratorSimple*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/ArrayListEnumeratorSimple..cctor
void System::Collections::ArrayList::ArrayListEnumeratorSimple::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "ArrayList/ArrayListEnumeratorSimple", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Collections.Hashtable/KeyCollection
#include "System/Collections/Hashtable_KeyCollection.hpp"
// Including type: System.Collections.Hashtable/ValueCollection
#include "System/Collections/Hashtable_ValueCollection.hpp"
// Including type: System.Collections.Hashtable/SyncHashtable
#include "System/Collections/Hashtable_SyncHashtable.hpp"
// Including type: System.Collections.Hashtable/HashtableEnumerator
#include "System/Collections/Hashtable_HashtableEnumerator.hpp"
// Including type: System.Collections.Hashtable/HashtableDebugView
#include "System/Collections/Hashtable_HashtableDebugView.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 HashPrime
int System::Collections::Hashtable::_get_HashPrime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_HashPrime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Collections", "Hashtable", "HashPrime"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 HashPrime
void System::Collections::Hashtable::_set_HashPrime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_HashPrime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "HashPrime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 InitialSize
int System::Collections::Hashtable::_get_InitialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_InitialSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Collections", "Hashtable", "InitialSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 InitialSize
void System::Collections::Hashtable::_set_InitialSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_InitialSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "InitialSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.String LoadFactorName
::StringW System::Collections::Hashtable::_get_LoadFactorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_LoadFactorName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "LoadFactorName"));
}
// Autogenerated static field setter
// Set static field: static private System.String LoadFactorName
void System::Collections::Hashtable::_set_LoadFactorName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_LoadFactorName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "LoadFactorName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String VersionName
::StringW System::Collections::Hashtable::_get_VersionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_VersionName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "VersionName"));
}
// Autogenerated static field setter
// Set static field: static private System.String VersionName
void System::Collections::Hashtable::_set_VersionName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_VersionName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "VersionName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ComparerName
::StringW System::Collections::Hashtable::_get_ComparerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_ComparerName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "ComparerName"));
}
// Autogenerated static field setter
// Set static field: static private System.String ComparerName
void System::Collections::Hashtable::_set_ComparerName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_ComparerName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "ComparerName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String HashCodeProviderName
::StringW System::Collections::Hashtable::_get_HashCodeProviderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_HashCodeProviderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "HashCodeProviderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String HashCodeProviderName
void System::Collections::Hashtable::_set_HashCodeProviderName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_HashCodeProviderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "HashCodeProviderName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String HashSizeName
::StringW System::Collections::Hashtable::_get_HashSizeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_HashSizeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "HashSizeName"));
}
// Autogenerated static field setter
// Set static field: static private System.String HashSizeName
void System::Collections::Hashtable::_set_HashSizeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_HashSizeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "HashSizeName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String KeysName
::StringW System::Collections::Hashtable::_get_KeysName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_KeysName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "KeysName"));
}
// Autogenerated static field setter
// Set static field: static private System.String KeysName
void System::Collections::Hashtable::_set_KeysName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_KeysName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "KeysName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ValuesName
::StringW System::Collections::Hashtable::_get_ValuesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_ValuesName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "ValuesName"));
}
// Autogenerated static field setter
// Set static field: static private System.String ValuesName
void System::Collections::Hashtable::_set_ValuesName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_ValuesName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "ValuesName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String KeyComparerName
::StringW System::Collections::Hashtable::_get_KeyComparerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_KeyComparerName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "KeyComparerName"));
}
// Autogenerated static field setter
// Set static field: static private System.String KeyComparerName
void System::Collections::Hashtable::_set_KeyComparerName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_KeyComparerName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "KeyComparerName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> s_serializationInfoTable
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* System::Collections::Hashtable::_get_s_serializationInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_s_serializationInfoTable");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>*>("System.Collections", "Hashtable", "s_serializationInfoTable")));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> s_serializationInfoTable
void System::Collections::Hashtable::_set_s_serializationInfoTable(::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_s_serializationInfoTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "s_serializationInfoTable", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable/bucket[] _buckets
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Collections::Hashtable::bucket>& System::Collections::Hashtable::dyn__buckets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn__buckets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buckets"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Collections::Hashtable::bucket>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _count
[[deprecated("Use field access instead!")]] int& System::Collections::Hashtable::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _occupancy
[[deprecated("Use field access instead!")]] int& System::Collections::Hashtable::dyn__occupancy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn__occupancy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_occupancy"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _loadsize
[[deprecated("Use field access instead!")]] int& System::Collections::Hashtable::dyn__loadsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn__loadsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _loadFactor
[[deprecated("Use field access instead!")]] float& System::Collections::Hashtable::dyn__loadFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn__loadFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& System::Collections::Hashtable::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isWriterInProgress
[[deprecated("Use field access instead!")]] bool& System::Collections::Hashtable::dyn__isWriterInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn__isWriterInProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isWriterInProgress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ICollection _keys
[[deprecated("Use field access instead!")]] ::System::Collections::ICollection*& System::Collections::Hashtable::dyn__keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn__keys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keys"))->offset;
  return *reinterpret_cast<::System::Collections::ICollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ICollection _values
[[deprecated("Use field access instead!")]] ::System::Collections::ICollection*& System::Collections::Hashtable::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::System::Collections::ICollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEqualityComparer _keycomparer
[[deprecated("Use field access instead!")]] ::System::Collections::IEqualityComparer*& System::Collections::Hashtable::dyn__keycomparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn__keycomparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keycomparer"))->offset;
  return *reinterpret_cast<::System::Collections::IEqualityComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::Hashtable::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Hashtable.get_SerializationInfoTable
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* System::Collections::Hashtable::get_SerializationInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_SerializationInfoTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "Hashtable", "get_SerializationInfoTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.InitHash
uint System::Collections::Hashtable::InitHash(::Il2CppObject* key, int hashsize, ByRef<uint> seed, ByRef<uint> incr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::InitHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(hashsize), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, key, hashsize, byref(seed), byref(incr));
}
// Autogenerated method: System.Collections.Hashtable.Add
void System::Collections::Hashtable::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Hashtable.Clear
void System::Collections::Hashtable::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.Clone
::Il2CppObject* System::Collections::Hashtable::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.Contains
bool System::Collections::Hashtable::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.ContainsKey
bool System::Collections::Hashtable::ContainsKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::ContainsKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.CopyKeys
void System::Collections::Hashtable::CopyKeys(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::CopyKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.CopyEntries
void System::Collections::Hashtable::CopyEntries(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::CopyEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.CopyTo
void System::Collections::Hashtable::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.CopyValues
void System::Collections::Hashtable::CopyValues(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::CopyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.get_Item
::Il2CppObject* System::Collections::Hashtable::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.set_Item
void System::Collections::Hashtable::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Hashtable.expand
void System::Collections::Hashtable::expand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::expand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "expand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.rehash
void System::Collections::Hashtable::rehash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::rehash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "rehash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.UpdateVersion
void System::Collections::Hashtable::UpdateVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::UpdateVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.rehash
void System::Collections::Hashtable::rehash(int newsize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::rehash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "rehash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newsize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newsize);
}
// Autogenerated method: System.Collections.Hashtable.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Hashtable::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::Hashtable::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.GetHash
int System::Collections::Hashtable::GetHash(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::GetHash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 32));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.get_IsReadOnly
bool System::Collections::Hashtable::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.get_IsFixedSize
bool System::Collections::Hashtable::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 34));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.get_IsSynchronized
bool System::Collections::Hashtable::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 35));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.KeyEquals
bool System::Collections::Hashtable::KeyEquals(::Il2CppObject* item, ::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyEquals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 36));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item, key);
}
// Autogenerated method: System.Collections.Hashtable.get_Keys
::System::Collections::ICollection* System::Collections::Hashtable::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_Keys");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.get_Values
::System::Collections::ICollection* System::Collections::Hashtable::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_Values");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.Insert
void System::Collections::Hashtable::Insert(::Il2CppObject* key, ::Il2CppObject* nvalue, bool add) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(nvalue), ::il2cpp_utils::ExtractType(add)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, nvalue, add);
}
// Autogenerated method: System.Collections.Hashtable.putEntry
void System::Collections::Hashtable::putEntry(::ArrayW<::System::Collections::Hashtable::bucket> newBuckets, ::Il2CppObject* key, ::Il2CppObject* nvalue, int hashcode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::putEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "putEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newBuckets), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(nvalue), ::il2cpp_utils::ExtractType(hashcode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newBuckets, key, nvalue, hashcode);
}
// Autogenerated method: System.Collections.Hashtable.Remove
void System::Collections::Hashtable::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.get_SyncRoot
::Il2CppObject* System::Collections::Hashtable::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.get_Count
int System::Collections::Hashtable::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 41));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.Synchronized
::System::Collections::Hashtable* System::Collections::Hashtable::Synchronized(::System::Collections::Hashtable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Synchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "Hashtable", "Synchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table);
}
// Autogenerated method: System.Collections.Hashtable.GetObjectData
void System::Collections::Hashtable::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Collections.Hashtable.OnDeserialization
void System::Collections::Hashtable::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::OnDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable/KeyCollection
#include "System/Collections/Hashtable_KeyCollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _hashtable
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Collections::Hashtable::KeyCollection::dyn__hashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::dyn__hashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hashtable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Hashtable/KeyCollection.CopyTo
void System::Collections::Hashtable::KeyCollection::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::KeyCollection*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable/KeyCollection.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Hashtable::KeyCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::KeyCollection*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/KeyCollection.get_IsSynchronized
bool System::Collections::Hashtable::KeyCollection::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::KeyCollection*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/KeyCollection.get_SyncRoot
::Il2CppObject* System::Collections::Hashtable::KeyCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::KeyCollection*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/KeyCollection.get_Count
int System::Collections::Hashtable::KeyCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::KeyCollection*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable/ValueCollection
#include "System/Collections/Hashtable_ValueCollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _hashtable
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Collections::Hashtable::ValueCollection::dyn__hashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::ValueCollection::dyn__hashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hashtable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Hashtable/ValueCollection.CopyTo
void System::Collections::Hashtable::ValueCollection::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::ValueCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::ValueCollection*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable/ValueCollection.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Hashtable::ValueCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::ValueCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::ValueCollection*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/ValueCollection.get_IsSynchronized
bool System::Collections::Hashtable::ValueCollection::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::ValueCollection::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::ValueCollection*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/ValueCollection.get_SyncRoot
::Il2CppObject* System::Collections::Hashtable::ValueCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::ValueCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::ValueCollection*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/ValueCollection.get_Count
int System::Collections::Hashtable::ValueCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::ValueCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::ValueCollection*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable/SyncHashtable
#include "System/Collections/Hashtable_SyncHashtable.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Hashtable _table
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Collections::Hashtable::SyncHashtable::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Hashtable::SyncHashtable::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::SyncHashtable*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.GetObjectData
void System::Collections::Hashtable::SyncHashtable::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.get_Count
int System::Collections::Hashtable::SyncHashtable::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 41));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.get_IsReadOnly
bool System::Collections::Hashtable::SyncHashtable::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.get_IsFixedSize
bool System::Collections::Hashtable::SyncHashtable::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 34));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.get_IsSynchronized
bool System::Collections::Hashtable::SyncHashtable::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 35));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.get_Item
::Il2CppObject* System::Collections::Hashtable::SyncHashtable::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.set_Item
void System::Collections::Hashtable::SyncHashtable::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.get_SyncRoot
::Il2CppObject* System::Collections::Hashtable::SyncHashtable::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.Add
void System::Collections::Hashtable::SyncHashtable::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.Clear
void System::Collections::Hashtable::SyncHashtable::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.Contains
bool System::Collections::Hashtable::SyncHashtable::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.ContainsKey
bool System::Collections::Hashtable::SyncHashtable::ContainsKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::ContainsKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.CopyTo
void System::Collections::Hashtable::SyncHashtable::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.Clone
::Il2CppObject* System::Collections::Hashtable::SyncHashtable::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::Hashtable::SyncHashtable::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.get_Keys
::System::Collections::ICollection* System::Collections::Hashtable::SyncHashtable::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_Keys");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.get_Values
::System::Collections::ICollection* System::Collections::Hashtable::SyncHashtable::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_Values");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.Remove
void System::Collections::Hashtable::SyncHashtable::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.OnDeserialization
void System::Collections::Hashtable::SyncHashtable::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::OnDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable/HashtableEnumerator
#include "System/Collections/Hashtable_HashtableEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _hashtable
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Collections::Hashtable::HashtableEnumerator::dyn__hashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn__hashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hashtable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bucket
[[deprecated("Use field access instead!")]] int& System::Collections::Hashtable::HashtableEnumerator::dyn__bucket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn__bucket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bucket"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& System::Collections::Hashtable::HashtableEnumerator::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _current
[[deprecated("Use field access instead!")]] bool& System::Collections::Hashtable::HashtableEnumerator::dyn__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_current"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _getObjectRetType
[[deprecated("Use field access instead!")]] int& System::Collections::Hashtable::HashtableEnumerator::dyn__getObjectRetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn__getObjectRetType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_getObjectRetType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _currentKey
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::Hashtable::HashtableEnumerator::dyn__currentKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn__currentKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentKey"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _currentValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::Hashtable::HashtableEnumerator::dyn__currentValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn__currentValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Hashtable/HashtableEnumerator.Clone
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::HashtableEnumerator*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/HashtableEnumerator.get_Key
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::HashtableEnumerator*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/HashtableEnumerator.MoveNext
bool System::Collections::Hashtable::HashtableEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::HashtableEnumerator*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/HashtableEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::Hashtable::HashtableEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::HashtableEnumerator*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/HashtableEnumerator.get_Current
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::HashtableEnumerator*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/HashtableEnumerator.get_Value
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::HashtableEnumerator*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/HashtableEnumerator.Reset
void System::Collections::Hashtable::HashtableEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable::HashtableEnumerator*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IHashCodeProvider
#include "System/Collections/IHashCodeProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IHashCodeProvider.GetHashCode
int System::Collections::IHashCodeProvider::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IHashCodeProvider::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IHashCodeProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Collections.Concurrent.CDSCollectionETWBCLProvider
#include "System/Collections/Concurrent/CDSCollectionETWBCLProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Concurrent.CDSCollectionETWBCLProvider Log
::System::Collections::Concurrent::CDSCollectionETWBCLProvider* System::Collections::Concurrent::CDSCollectionETWBCLProvider::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Concurrent::CDSCollectionETWBCLProvider::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Concurrent::CDSCollectionETWBCLProvider*>("System.Collections.Concurrent", "CDSCollectionETWBCLProvider", "Log"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Concurrent.CDSCollectionETWBCLProvider Log
void System::Collections::Concurrent::CDSCollectionETWBCLProvider::_set_Log(::System::Collections::Concurrent::CDSCollectionETWBCLProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Concurrent::CDSCollectionETWBCLProvider::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Concurrent", "CDSCollectionETWBCLProvider", "Log", value));
}
// Autogenerated method: System.Collections.Concurrent.CDSCollectionETWBCLProvider.ConcurrentDictionary_AcquiringAllLocks
void System::Collections::Concurrent::CDSCollectionETWBCLProvider::ConcurrentDictionary_AcquiringAllLocks(int numOfBuckets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Concurrent::CDSCollectionETWBCLProvider::ConcurrentDictionary_AcquiringAllLocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConcurrentDictionary_AcquiringAllLocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numOfBuckets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numOfBuckets);
}
// Autogenerated method: System.Collections.Concurrent.CDSCollectionETWBCLProvider..cctor
void System::Collections::Concurrent::CDSCollectionETWBCLProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Concurrent::CDSCollectionETWBCLProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Concurrent", "CDSCollectionETWBCLProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Collections.ObjectModel.ReadOnlyDictionaryHelpers
#include "System/Collections/ObjectModel/ReadOnlyDictionaryHelpers.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.InsertionBehavior
#include "System/Collections/Generic/InsertionBehavior.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.InsertionBehavior None
::System::Collections::Generic::InsertionBehavior System::Collections::Generic::InsertionBehavior::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::InsertionBehavior>("System.Collections.Generic", "InsertionBehavior", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.InsertionBehavior None
void System::Collections::Generic::InsertionBehavior::_set_None(::System::Collections::Generic::InsertionBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "InsertionBehavior", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.InsertionBehavior OverwriteExisting
::System::Collections::Generic::InsertionBehavior System::Collections::Generic::InsertionBehavior::_get_OverwriteExisting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_get_OverwriteExisting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::InsertionBehavior>("System.Collections.Generic", "InsertionBehavior", "OverwriteExisting"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.InsertionBehavior OverwriteExisting
void System::Collections::Generic::InsertionBehavior::_set_OverwriteExisting(::System::Collections::Generic::InsertionBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_set_OverwriteExisting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "InsertionBehavior", "OverwriteExisting", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.InsertionBehavior ThrowOnExisting
::System::Collections::Generic::InsertionBehavior System::Collections::Generic::InsertionBehavior::_get_ThrowOnExisting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_get_ThrowOnExisting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::InsertionBehavior>("System.Collections.Generic", "InsertionBehavior", "ThrowOnExisting"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.InsertionBehavior ThrowOnExisting
void System::Collections::Generic::InsertionBehavior::_set_ThrowOnExisting(::System::Collections::Generic::InsertionBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_set_ThrowOnExisting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "InsertionBehavior", "ThrowOnExisting", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Collections::Generic::InsertionBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.KeyNotFoundException
#include "System/Collections/Generic/KeyNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.KeyValuePair
#include "System/Collections/Generic/KeyValuePair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.KeyValuePair.PairToString
::StringW System::Collections::Generic::KeyValuePair::PairToString(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::KeyValuePair::PairToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "KeyValuePair", "PairToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.EnumerableHelpers
#include "System/Collections/Generic/EnumerableHelpers.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.CollectionExtensions
#include "System/Collections/Generic/CollectionExtensions.hpp"
// Including type: System.Collections.Generic.IReadOnlyDictionary`2
#include "System/Collections/Generic/IReadOnlyDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.IntrospectiveSortUtilities
#include "System/Collections/Generic/IntrospectiveSortUtilities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.IntrospectiveSortUtilities.FloorLog2PlusOne
int System::Collections::Generic::IntrospectiveSortUtilities::FloorLog2PlusOne(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::IntrospectiveSortUtilities::FloorLog2PlusOne");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "IntrospectiveSortUtilities", "FloorLog2PlusOne", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated method: System.Collections.Generic.IntrospectiveSortUtilities.ThrowOrIgnoreBadComparer
void System::Collections::Generic::IntrospectiveSortUtilities::ThrowOrIgnoreBadComparer(::Il2CppObject* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::IntrospectiveSortUtilities::ThrowOrIgnoreBadComparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "IntrospectiveSortUtilities", "ThrowOrIgnoreBadComparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, comparer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.ByteEqualityComparer
#include "System/Collections/Generic/ByteEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.Equals
bool System::Collections::Generic::ByteEqualityComparer::Equals(uint8_t x, uint8_t y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Generic::ByteEqualityComparer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.GetHashCode
int System::Collections::Generic::ByteEqualityComparer::GetHashCode(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Generic::ByteEqualityComparer*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, b);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.IndexOf
int System::Collections::Generic::ByteEqualityComparer::IndexOf(::ArrayW<uint8_t> array, uint8_t value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Generic::ByteEqualityComparer*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.LastIndexOf
int System::Collections::Generic::ByteEqualityComparer::LastIndexOf(::ArrayW<uint8_t> array, uint8_t value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::LastIndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Generic::ByteEqualityComparer*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.Equals
bool System::Collections::Generic::ByteEqualityComparer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.GetHashCode
int System::Collections::Generic::ByteEqualityComparer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.InternalStringComparer
#include "System/Collections/Generic/InternalStringComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.InternalStringComparer.GetHashCode
int System::Collections::Generic::InternalStringComparer::GetHashCode(::StringW obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InternalStringComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Generic::InternalStringComparer*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.InternalStringComparer.Equals
bool System::Collections::Generic::InternalStringComparer::Equals(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InternalStringComparer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Generic::InternalStringComparer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.InternalStringComparer.IndexOf
int System::Collections::Generic::InternalStringComparer::IndexOf(::ArrayW<::StringW> array, ::StringW value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InternalStringComparer::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Generic::InternalStringComparer*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.ArrayPoolEventSource
#include "System/Buffers/ArrayPoolEventSource.hpp"
// Including type: System.Buffers.ArrayPoolEventSource/BufferAllocatedReason
#include "System/Buffers/ArrayPoolEventSource_BufferAllocatedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Buffers.ArrayPoolEventSource Log
::System::Buffers::ArrayPoolEventSource* System::Buffers::ArrayPoolEventSource::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource*>("System.Buffers", "ArrayPoolEventSource", "Log"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Buffers.ArrayPoolEventSource Log
void System::Buffers::ArrayPoolEventSource::_set_Log(::System::Buffers::ArrayPoolEventSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource", "Log", value));
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource.BufferRented
void System::Buffers::ArrayPoolEventSource::BufferRented(int bufferId, int bufferSize, int poolId, int bucketId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferRented");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferRented", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferId), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(poolId), ::il2cpp_utils::ExtractType(bucketId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferId, bufferSize, poolId, bucketId);
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource.BufferAllocated
void System::Buffers::ArrayPoolEventSource::BufferAllocated(int bufferId, int bufferSize, int poolId, int bucketId, ::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferAllocated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferId), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(poolId), ::il2cpp_utils::ExtractType(bucketId), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferId, bufferSize, poolId, bucketId, reason);
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource.BufferReturned
void System::Buffers::ArrayPoolEventSource::BufferReturned(int bufferId, int bufferSize, int poolId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferReturned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferReturned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferId), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(poolId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferId, bufferSize, poolId);
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource.BufferTrimmed
void System::Buffers::ArrayPoolEventSource::BufferTrimmed(int bufferId, int bufferSize, int poolId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferTrimmed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferTrimmed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferId), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(poolId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferId, bufferSize, poolId);
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource.BufferTrimPoll
void System::Buffers::ArrayPoolEventSource::BufferTrimPoll(int milliseconds, int pressure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferTrimPoll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferTrimPoll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(milliseconds), ::il2cpp_utils::ExtractType(pressure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, milliseconds, pressure);
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource..cctor
void System::Buffers::ArrayPoolEventSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "ArrayPoolEventSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.ArrayPoolEventSource/BufferAllocatedReason
#include "System/Buffers/ArrayPoolEventSource_BufferAllocatedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Buffers.ArrayPoolEventSource/BufferAllocatedReason Pooled
::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_Pooled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_Pooled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason>("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "Pooled"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.ArrayPoolEventSource/BufferAllocatedReason Pooled
void System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_Pooled(::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_Pooled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "Pooled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.ArrayPoolEventSource/BufferAllocatedReason OverMaximumSize
::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_OverMaximumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_OverMaximumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason>("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "OverMaximumSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.ArrayPoolEventSource/BufferAllocatedReason OverMaximumSize
void System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_OverMaximumSize(::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_OverMaximumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "OverMaximumSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.ArrayPoolEventSource/BufferAllocatedReason PoolExhausted
::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_PoolExhausted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_PoolExhausted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason>("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "PoolExhausted"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.ArrayPoolEventSource/BufferAllocatedReason PoolExhausted
void System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_PoolExhausted(::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_PoolExhausted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "PoolExhausted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.IPinnable
#include "System/Buffers/IPinnable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Buffers.IPinnable.Unpin
void System::Buffers::IPinnable::Unpin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::IPinnable::Unpin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Buffers::IPinnable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.MemoryHandle
#include "System/Buffers/MemoryHandle.hpp"
// Including type: System.Buffers.IPinnable
#include "System/Buffers/IPinnable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Void* _pointer
[[deprecated("Use field access instead!")]] void*& System::Buffers::MemoryHandle::dyn__pointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::MemoryHandle::dyn__pointer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointer"))->offset;
  return *reinterpret_cast<void**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.GCHandle _handle
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& System::Buffers::MemoryHandle::dyn__handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::MemoryHandle::dyn__handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handle"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Buffers.IPinnable _pinnable
[[deprecated("Use field access instead!")]] ::System::Buffers::IPinnable*& System::Buffers::MemoryHandle::dyn__pinnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::MemoryHandle::dyn__pinnable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinnable"))->offset;
  return *reinterpret_cast<::System::Buffers::IPinnable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Buffers.MemoryHandle..ctor
// ABORTED elsewhere.  System::Buffers::MemoryHandle::MemoryHandle(void* pointer, ::System::Runtime::InteropServices::GCHandle handle, ::System::Buffers::IPinnable* pinnable)
// Autogenerated method: System.Buffers.MemoryHandle.get_Pointer
void* System::Buffers::MemoryHandle::get_Pointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::MemoryHandle::get_Pointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Pointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<void*, false>(this, ___internal__method);
}
// Autogenerated method: System.Buffers.MemoryHandle.Dispose
void System::Buffers::MemoryHandle::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::MemoryHandle::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Buffers::MemoryHandle), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.Utilities
#include "System/Buffers/Utilities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Buffers.Utilities.SelectBucketIndex
int System::Buffers::Utilities::SelectBucketIndex(int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Utilities::SelectBucketIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "Utilities", "SelectBucketIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferSize);
}
// Autogenerated method: System.Buffers.Utilities.GetMaxSizeForBucket
int System::Buffers::Utilities::GetMaxSizeForBucket(int binIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Utilities::GetMaxSizeForBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "Utilities", "GetMaxSizeForBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.BuffersExtensions
#include "System/Buffers/BuffersExtensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.ReadOnlySequence
#include "System/Buffers/ReadOnlySequence.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Buffers.ReadOnlySequence.SegmentToSequenceStart
int System::Buffers::ReadOnlySequence::SegmentToSequenceStart(int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ReadOnlySequence::SegmentToSequenceStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "ReadOnlySequence", "SegmentToSequenceStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startIndex);
}
// Autogenerated method: System.Buffers.ReadOnlySequence.SegmentToSequenceEnd
int System::Buffers::ReadOnlySequence::SegmentToSequenceEnd(int endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ReadOnlySequence::SegmentToSequenceEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "ReadOnlySequence", "SegmentToSequenceEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, endIndex);
}
// Autogenerated method: System.Buffers.ReadOnlySequence.ArrayToSequenceStart
int System::Buffers::ReadOnlySequence::ArrayToSequenceStart(int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ReadOnlySequence::ArrayToSequenceStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "ReadOnlySequence", "ArrayToSequenceStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startIndex);
}
// Autogenerated method: System.Buffers.ReadOnlySequence.ArrayToSequenceEnd
int System::Buffers::ReadOnlySequence::ArrayToSequenceEnd(int endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ReadOnlySequence::ArrayToSequenceEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "ReadOnlySequence", "ArrayToSequenceEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, endIndex);
}
// Autogenerated method: System.Buffers.ReadOnlySequence.MemoryManagerToSequenceStart
int System::Buffers::ReadOnlySequence::MemoryManagerToSequenceStart(int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ReadOnlySequence::MemoryManagerToSequenceStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "ReadOnlySequence", "MemoryManagerToSequenceStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startIndex);
}
// Autogenerated method: System.Buffers.ReadOnlySequence.MemoryManagerToSequenceEnd
int System::Buffers::ReadOnlySequence::MemoryManagerToSequenceEnd(int endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ReadOnlySequence::MemoryManagerToSequenceEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "ReadOnlySequence", "MemoryManagerToSequenceEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, endIndex);
}
// Autogenerated method: System.Buffers.ReadOnlySequence.StringToSequenceStart
int System::Buffers::ReadOnlySequence::StringToSequenceStart(int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ReadOnlySequence::StringToSequenceStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "ReadOnlySequence", "StringToSequenceStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startIndex);
}
// Autogenerated method: System.Buffers.ReadOnlySequence.StringToSequenceEnd
int System::Buffers::ReadOnlySequence::StringToSequenceEnd(int endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ReadOnlySequence::StringToSequenceEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "ReadOnlySequence", "StringToSequenceEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, endIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Buffers.StandardFormat
#include "System/Buffers/StandardFormat.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte _format
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::StandardFormat::dyn__format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::StandardFormat::dyn__format");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_format"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte _precision
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::StandardFormat::dyn__precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::StandardFormat::dyn__precision");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_precision"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Buffers.StandardFormat.get_Symbol
::Il2CppChar System::Buffers::StandardFormat::get_Symbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::StandardFormat::get_Symbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Symbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Buffers.StandardFormat.get_Precision
uint8_t System::Buffers::StandardFormat::get_Precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::StandardFormat::get_Precision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Precision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Buffers.StandardFormat.get_HasPrecision
bool System::Buffers::StandardFormat::get_HasPrecision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::StandardFormat::get_HasPrecision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasPrecision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Buffers.StandardFormat.get_IsDefault
bool System::Buffers::StandardFormat::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::StandardFormat::get_IsDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Buffers.StandardFormat..ctor
System::Buffers::StandardFormat::StandardFormat(::Il2CppChar symbol, uint8_t precision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::StandardFormat::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(symbol), ::il2cpp_utils::ExtractType(precision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, symbol, precision);
}
// Autogenerated method: System.Buffers.StandardFormat.Parse
::System::Buffers::StandardFormat System::Buffers::StandardFormat::Parse(::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::StandardFormat::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "StandardFormat", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Buffers::StandardFormat, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: System.Buffers.StandardFormat.ParseHelper
bool System::Buffers::StandardFormat::ParseHelper(::System::ReadOnlySpan_1<::Il2CppChar> format, ByRef<::System::Buffers::StandardFormat> standardFormat, bool throws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::StandardFormat::ParseHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "StandardFormat", "ParseHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractIndependentType<::System::Buffers::StandardFormat&>(), ::il2cpp_utils::ExtractType(throws)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, byref(standardFormat), throws);
}
// Autogenerated method: System.Buffers.StandardFormat.Equals
bool System::Buffers::StandardFormat::Equals(::System::Buffers::StandardFormat other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::StandardFormat::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Buffers::StandardFormat), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Buffers.StandardFormat.Format
int System::Buffers::StandardFormat::Format(::System::Span_1<::Il2CppChar> destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::StandardFormat::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Buffers.StandardFormat.Equals
bool System::Buffers::StandardFormat::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::StandardFormat::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Buffers.StandardFormat.GetHashCode
int System::Buffers::StandardFormat::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::StandardFormat::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Buffers.StandardFormat.ToString
::StringW System::Buffers::StandardFormat::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::StandardFormat::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Buffers.StandardFormat.op_Inequality
bool System::Buffers::operator !=(const ::System::Buffers::StandardFormat& left, const ::System::Buffers::StandardFormat& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::StandardFormat::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "StandardFormat", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.Binary.BinaryPrimitives
#include "System/Buffers/Binary/BinaryPrimitives.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness
int16_t System::Buffers::Binary::BinaryPrimitives::ReverseEndianness(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Binary::BinaryPrimitives::ReverseEndianness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Binary", "BinaryPrimitives", "ReverseEndianness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness
int System::Buffers::Binary::BinaryPrimitives::ReverseEndianness(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Binary::BinaryPrimitives::ReverseEndianness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Binary", "BinaryPrimitives", "ReverseEndianness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness
int64_t System::Buffers::Binary::BinaryPrimitives::ReverseEndianness(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Binary::BinaryPrimitives::ReverseEndianness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Binary", "BinaryPrimitives", "ReverseEndianness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness
uint16_t System::Buffers::Binary::BinaryPrimitives::ReverseEndianness(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Binary::BinaryPrimitives::ReverseEndianness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Binary", "BinaryPrimitives", "ReverseEndianness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness
uint System::Buffers::Binary::BinaryPrimitives::ReverseEndianness(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Binary::BinaryPrimitives::ReverseEndianness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Binary", "BinaryPrimitives", "ReverseEndianness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness
uint64_t System::Buffers::Binary::BinaryPrimitives::ReverseEndianness(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Binary::BinaryPrimitives::ReverseEndianness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Binary", "BinaryPrimitives", "ReverseEndianness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Buffers.Binary.BinaryPrimitives.WriteUInt32BigEndian
void System::Buffers::Binary::BinaryPrimitives::WriteUInt32BigEndian(::System::Span_1<uint8_t> destination, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Binary::BinaryPrimitives::WriteUInt32BigEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Binary", "BinaryPrimitives", "WriteUInt32BigEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, destination, value);
}
// Autogenerated method: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32BigEndian
bool System::Buffers::Binary::BinaryPrimitives::TryWriteUInt32BigEndian(::System::Span_1<uint8_t> destination, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Binary::BinaryPrimitives::TryWriteUInt32BigEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Binary", "BinaryPrimitives", "TryWriteUInt32BigEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, destination, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.Text.FormattingHelpers
#include "System/Buffers/Text/FormattingHelpers.hpp"
// Including type: System.Buffers.Text.FormattingHelpers/HexCasing
#include "System/Buffers/Text/FormattingHelpers_HexCasing.hpp"
// Including type: System.Buffers.StandardFormat
#include "System/Buffers/StandardFormat.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Buffers.Text.FormattingHelpers.CountDigits
int System::Buffers::Text::FormattingHelpers::CountDigits(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::CountDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "CountDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.CountDigits
int System::Buffers::Text::FormattingHelpers::CountDigits(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::CountDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "CountDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.CountHexDigits
int System::Buffers::Text::FormattingHelpers::CountHexDigits(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::CountHexDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "CountHexDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.GetSymbolOrDefault
::Il2CppChar System::Buffers::Text::FormattingHelpers::GetSymbolOrDefault(ByRef<::System::Buffers::StandardFormat> format, ::Il2CppChar defaultSymbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::GetSymbolOrDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "GetSymbolOrDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(defaultSymbol)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(format), defaultSymbol);
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.FillWithAsciiZeros
void System::Buffers::Text::FormattingHelpers::FillWithAsciiZeros(::System::Span_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::FillWithAsciiZeros");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "FillWithAsciiZeros", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer);
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.WriteHexByte
void System::Buffers::Text::FormattingHelpers::WriteHexByte(uint8_t value, ::System::Span_1<uint8_t> buffer, int startingIndex, ::System::Buffers::Text::FormattingHelpers::HexCasing casing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::WriteHexByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "WriteHexByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(startingIndex), ::il2cpp_utils::ExtractType(casing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, buffer, startingIndex, casing);
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.WriteDigits
void System::Buffers::Text::FormattingHelpers::WriteDigits(uint64_t value, ::System::Span_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::WriteDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "WriteDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, buffer);
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.WriteDigitsWithGroupSeparator
void System::Buffers::Text::FormattingHelpers::WriteDigitsWithGroupSeparator(uint64_t value, ::System::Span_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::WriteDigitsWithGroupSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "WriteDigitsWithGroupSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, buffer);
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.WriteDigits
void System::Buffers::Text::FormattingHelpers::WriteDigits(uint value, ::System::Span_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::WriteDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "WriteDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, buffer);
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.WriteFourDecimalDigits
void System::Buffers::Text::FormattingHelpers::WriteFourDecimalDigits(uint value, ::System::Span_1<uint8_t> buffer, int startingIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::WriteFourDecimalDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "WriteFourDecimalDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(startingIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, buffer, startingIndex);
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.WriteTwoDecimalDigits
void System::Buffers::Text::FormattingHelpers::WriteTwoDecimalDigits(uint value, ::System::Span_1<uint8_t> buffer, int startingIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::WriteTwoDecimalDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "WriteTwoDecimalDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(startingIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, buffer, startingIndex);
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.DivMod
uint64_t System::Buffers::Text::FormattingHelpers::DivMod(uint64_t numerator, uint64_t denominator, ByRef<uint64_t> modulo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::DivMod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "DivMod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numerator), ::il2cpp_utils::ExtractType(denominator), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, numerator, denominator, byref(modulo));
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.DivMod
uint System::Buffers::Text::FormattingHelpers::DivMod(uint numerator, uint denominator, ByRef<uint> modulo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::DivMod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "DivMod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numerator), ::il2cpp_utils::ExtractType(denominator), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, numerator, denominator, byref(modulo));
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.CountDecimalTrailingZeros
int System::Buffers::Text::FormattingHelpers::CountDecimalTrailingZeros(uint value, ByRef<uint> valueWithoutTrailingZeros) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::CountDecimalTrailingZeros");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "CountDecimalTrailingZeros", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(valueWithoutTrailingZeros));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.Text.FormattingHelpers/HexCasing
#include "System/Buffers/Text/FormattingHelpers_HexCasing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Buffers.Text.FormattingHelpers/HexCasing Uppercase
::System::Buffers::Text::FormattingHelpers::HexCasing System::Buffers::Text::FormattingHelpers::HexCasing::_get_Uppercase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::HexCasing::_get_Uppercase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::Text::FormattingHelpers::HexCasing>("System.Buffers.Text", "FormattingHelpers/HexCasing", "Uppercase"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.Text.FormattingHelpers/HexCasing Uppercase
void System::Buffers::Text::FormattingHelpers::HexCasing::_set_Uppercase(::System::Buffers::Text::FormattingHelpers::HexCasing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::HexCasing::_set_Uppercase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "FormattingHelpers/HexCasing", "Uppercase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.Text.FormattingHelpers/HexCasing Lowercase
::System::Buffers::Text::FormattingHelpers::HexCasing System::Buffers::Text::FormattingHelpers::HexCasing::_get_Lowercase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::HexCasing::_get_Lowercase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::Text::FormattingHelpers::HexCasing>("System.Buffers.Text", "FormattingHelpers/HexCasing", "Lowercase"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.Text.FormattingHelpers/HexCasing Lowercase
void System::Buffers::Text::FormattingHelpers::HexCasing::_set_Lowercase(::System::Buffers::Text::FormattingHelpers::HexCasing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::HexCasing::_set_Lowercase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "FormattingHelpers/HexCasing", "Lowercase", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& System::Buffers::Text::FormattingHelpers::HexCasing::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers::HexCasing::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.Text.Utf8Constants
#include "System/Buffers/Text/Utf8Constants.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.TimeSpan s_nullUtcOffset
::System::TimeSpan System::Buffers::Text::Utf8Constants::_get_s_nullUtcOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Constants::_get_s_nullUtcOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Buffers.Text", "Utf8Constants", "s_nullUtcOffset"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeSpan s_nullUtcOffset
void System::Buffers::Text::Utf8Constants::_set_s_nullUtcOffset(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Constants::_set_s_nullUtcOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Utf8Constants", "s_nullUtcOffset", value));
}
// Autogenerated method: System.Buffers.Text.Utf8Constants..cctor
void System::Buffers::Text::Utf8Constants::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Constants::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Constants", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.Text.Utf8Formatter
#include "System/Buffers/Text/Utf8Formatter.hpp"
// Including type: System.Buffers.Text.Utf8Formatter/DecomposedGuid
#include "System/Buffers/Text/Utf8Formatter_DecomposedGuid.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Buffers.Text.NumberBuffer
#include "System/Buffers/Text/NumberBuffer.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.IFormattable
#include "System/IFormattable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] DayAbbreviations
::ArrayW<uint> System::Buffers::Text::Utf8Formatter::_get_DayAbbreviations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::_get_DayAbbreviations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Buffers.Text", "Utf8Formatter", "DayAbbreviations"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] DayAbbreviations
void System::Buffers::Text::Utf8Formatter::_set_DayAbbreviations(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::_set_DayAbbreviations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Utf8Formatter", "DayAbbreviations", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] DayAbbreviationsLowercase
::ArrayW<uint> System::Buffers::Text::Utf8Formatter::_get_DayAbbreviationsLowercase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::_get_DayAbbreviationsLowercase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Buffers.Text", "Utf8Formatter", "DayAbbreviationsLowercase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] DayAbbreviationsLowercase
void System::Buffers::Text::Utf8Formatter::_set_DayAbbreviationsLowercase(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::_set_DayAbbreviationsLowercase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Utf8Formatter", "DayAbbreviationsLowercase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] MonthAbbreviations
::ArrayW<uint> System::Buffers::Text::Utf8Formatter::_get_MonthAbbreviations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::_get_MonthAbbreviations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Buffers.Text", "Utf8Formatter", "MonthAbbreviations"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] MonthAbbreviations
void System::Buffers::Text::Utf8Formatter::_set_MonthAbbreviations(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::_set_MonthAbbreviations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Utf8Formatter", "MonthAbbreviations", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] MonthAbbreviationsLowercase
::ArrayW<uint> System::Buffers::Text::Utf8Formatter::_get_MonthAbbreviationsLowercase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::_get_MonthAbbreviationsLowercase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Buffers.Text", "Utf8Formatter", "MonthAbbreviationsLowercase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] MonthAbbreviationsLowercase
void System::Buffers::Text::Utf8Formatter::_set_MonthAbbreviationsLowercase(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::_set_MonthAbbreviationsLowercase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Utf8Formatter", "MonthAbbreviationsLowercase", value));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(bool value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatDateTimeG
bool System::Buffers::Text::Utf8Formatter::TryFormatDateTimeG(::System::DateTime value, ::System::TimeSpan offset, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatDateTimeG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatDateTimeG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, offset, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatDateTimeL
bool System::Buffers::Text::Utf8Formatter::TryFormatDateTimeL(::System::DateTime value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatDateTimeL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatDateTimeL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatDateTimeO
bool System::Buffers::Text::Utf8Formatter::TryFormatDateTimeO(::System::DateTime value, ::System::TimeSpan offset, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatDateTimeO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatDateTimeO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, offset, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatDateTimeR
bool System::Buffers::Text::Utf8Formatter::TryFormatDateTimeR(::System::DateTime value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatDateTimeR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatDateTimeR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(::System::DateTimeOffset value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(::System::DateTime value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatDecimalE
bool System::Buffers::Text::Utf8Formatter::TryFormatDecimalE(ByRef<::System::Buffers::Text::NumberBuffer> number, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, uint8_t precision, uint8_t exponentSymbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatDecimalE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatDecimalE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(precision), ::il2cpp_utils::ExtractType(exponentSymbol)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), destination, byref(bytesWritten), precision, exponentSymbol);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatDecimalF
bool System::Buffers::Text::Utf8Formatter::TryFormatDecimalF(ByRef<::System::Buffers::Text::NumberBuffer> number, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, uint8_t precision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatDecimalF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatDecimalF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(precision)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), destination, byref(bytesWritten), precision);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatDecimalG
bool System::Buffers::Text::Utf8Formatter::TryFormatDecimalG(ByRef<::System::Buffers::Text::NumberBuffer> number, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatDecimalG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatDecimalG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(::System::Decimal value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(double value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(float value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(::System::Guid value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatInt64D
bool System::Buffers::Text::Utf8Formatter::TryFormatInt64D(int64_t value, uint8_t precision, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatInt64D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatInt64D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(precision), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, precision, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatInt64Default
bool System::Buffers::Text::Utf8Formatter::TryFormatInt64Default(int64_t value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatInt64Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatInt64Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatInt32MultipleDigits
bool System::Buffers::Text::Utf8Formatter::TryFormatInt32MultipleDigits(int value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatInt32MultipleDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatInt32MultipleDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatInt64MultipleDigits
bool System::Buffers::Text::Utf8Formatter::TryFormatInt64MultipleDigits(int64_t value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatInt64MultipleDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatInt64MultipleDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatInt64MoreThanNegativeBillionMaxUInt
bool System::Buffers::Text::Utf8Formatter::TryFormatInt64MoreThanNegativeBillionMaxUInt(int64_t value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatInt64MoreThanNegativeBillionMaxUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatInt64MoreThanNegativeBillionMaxUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatInt64LessThanNegativeBillionMaxUInt
bool System::Buffers::Text::Utf8Formatter::TryFormatInt64LessThanNegativeBillionMaxUInt(int64_t value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatInt64LessThanNegativeBillionMaxUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatInt64LessThanNegativeBillionMaxUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatInt64N
bool System::Buffers::Text::Utf8Formatter::TryFormatInt64N(int64_t value, uint8_t precision, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatInt64N");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatInt64N", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(precision), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, precision, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatInt64
bool System::Buffers::Text::Utf8Formatter::TryFormatInt64(int64_t value, uint64_t mask, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, mask, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatUInt64D
bool System::Buffers::Text::Utf8Formatter::TryFormatUInt64D(uint64_t value, uint8_t precision, ::System::Span_1<uint8_t> destination, bool insertNegationSign, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatUInt64D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatUInt64D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(precision), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(insertNegationSign), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, precision, destination, insertNegationSign, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatUInt64Default
bool System::Buffers::Text::Utf8Formatter::TryFormatUInt64Default(uint64_t value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatUInt64Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatUInt64Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatUInt32SingleDigit
bool System::Buffers::Text::Utf8Formatter::TryFormatUInt32SingleDigit(uint value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatUInt32SingleDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatUInt32SingleDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatUInt32MultipleDigits
bool System::Buffers::Text::Utf8Formatter::TryFormatUInt32MultipleDigits(uint value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatUInt32MultipleDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatUInt32MultipleDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatUInt64MultipleDigits
bool System::Buffers::Text::Utf8Formatter::TryFormatUInt64MultipleDigits(uint64_t value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatUInt64MultipleDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatUInt64MultipleDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatUInt64LessThanBillionMaxUInt
bool System::Buffers::Text::Utf8Formatter::TryFormatUInt64LessThanBillionMaxUInt(uint64_t value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatUInt64LessThanBillionMaxUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatUInt64LessThanBillionMaxUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatUInt64MoreThanBillionMaxUInt
bool System::Buffers::Text::Utf8Formatter::TryFormatUInt64MoreThanBillionMaxUInt(uint64_t value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatUInt64MoreThanBillionMaxUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatUInt64MoreThanBillionMaxUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatUInt64N
bool System::Buffers::Text::Utf8Formatter::TryFormatUInt64N(uint64_t value, uint8_t precision, ::System::Span_1<uint8_t> destination, bool insertNegationSign, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatUInt64N");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatUInt64N", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(precision), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(insertNegationSign), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, precision, destination, insertNegationSign, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatUInt64X
bool System::Buffers::Text::Utf8Formatter::TryFormatUInt64X(uint64_t value, uint8_t precision, bool useLower, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatUInt64X");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatUInt64X", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(precision), ::il2cpp_utils::ExtractType(useLower), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, precision, useLower, destination, byref(bytesWritten));
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormatUInt64
bool System::Buffers::Text::Utf8Formatter::TryFormatUInt64(uint64_t value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormatUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormatUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(uint8_t value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(int8_t value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(uint16_t value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(int16_t value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(uint value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(int value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(uint64_t value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(int64_t value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter.TryFormat
bool System::Buffers::Text::Utf8Formatter::TryFormat(::System::TimeSpan value, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(bytesWritten), format);
}
// Autogenerated method: System.Buffers.Text.Utf8Formatter..cctor
void System::Buffers::Text::Utf8Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.Text.ParserHelpers
#include "System/Buffers/Text/ParserHelpers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] s_hexLookup
::ArrayW<uint8_t> System::Buffers::Text::ParserHelpers::_get_s_hexLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::ParserHelpers::_get_s_hexLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Buffers.Text", "ParserHelpers", "s_hexLookup"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] s_hexLookup
void System::Buffers::Text::ParserHelpers::_set_s_hexLookup(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::ParserHelpers::_set_s_hexLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "ParserHelpers", "s_hexLookup", value));
}
// Autogenerated method: System.Buffers.Text.ParserHelpers.IsDigit
bool System::Buffers::Text::ParserHelpers::IsDigit(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::ParserHelpers::IsDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "ParserHelpers", "IsDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: System.Buffers.Text.ParserHelpers..cctor
void System::Buffers::Text::ParserHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::ParserHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "ParserHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.Text.Utf8Parser
#include "System/Buffers/Text/Utf8Parser.hpp"
// Including type: System.Buffers.Text.Utf8Parser/ParseNumberOptions
#include "System/Buffers/Text/Utf8Parser_ParseNumberOptions.hpp"
// Including type: System.Buffers.Text.Utf8Parser/ComponentParseResult
#include "System/Buffers/Text/Utf8Parser_ComponentParseResult.hpp"
// Including type: System.Buffers.Text.Utf8Parser/TimeSpanSplitter
#include "System/Buffers/Text/Utf8Parser_TimeSpanSplitter.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeKind
#include "System/DateTimeKind.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.Buffers.Text.NumberBuffer
#include "System/Buffers/Text/NumberBuffer.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_daysToMonth365
::ArrayW<int> System::Buffers::Text::Utf8Parser::_get_s_daysToMonth365() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::_get_s_daysToMonth365");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Buffers.Text", "Utf8Parser", "s_daysToMonth365"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_daysToMonth365
void System::Buffers::Text::Utf8Parser::_set_s_daysToMonth365(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::_set_s_daysToMonth365");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Utf8Parser", "s_daysToMonth365", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_daysToMonth366
::ArrayW<int> System::Buffers::Text::Utf8Parser::_get_s_daysToMonth366() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::_get_s_daysToMonth366");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Buffers.Text", "Utf8Parser", "s_daysToMonth366"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_daysToMonth366
void System::Buffers::Text::Utf8Parser::_set_s_daysToMonth366(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::_set_s_daysToMonth366");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Utf8Parser", "s_daysToMonth366", value));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseDateTimeOffsetDefault
bool System::Buffers::Text::Utf8Parser::TryParseDateTimeOffsetDefault(::System::ReadOnlySpan_1<uint8_t> source, ByRef<::System::DateTimeOffset> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseDateTimeOffsetDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseDateTimeOffsetDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseDateTimeG
bool System::Buffers::Text::Utf8Parser::TryParseDateTimeG(::System::ReadOnlySpan_1<uint8_t> source, ByRef<::System::DateTime> value, ByRef<::System::DateTimeOffset> valueAsOffset, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseDateTimeG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseDateTimeG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>(), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(valueAsOffset), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryCreateDateTimeOffset
bool System::Buffers::Text::Utf8Parser::TryCreateDateTimeOffset(::System::DateTime dateTime, bool offsetNegative, int offsetHours, int offsetMinutes, ByRef<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryCreateDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryCreateDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(offsetNegative), ::il2cpp_utils::ExtractType(offsetHours), ::il2cpp_utils::ExtractType(offsetMinutes), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, offsetNegative, offsetHours, offsetMinutes, byref(value));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryCreateDateTimeOffset
bool System::Buffers::Text::Utf8Parser::TryCreateDateTimeOffset(int year, int month, int day, int hour, int minute, int second, int fraction, bool offsetNegative, int offsetHours, int offsetMinutes, ByRef<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryCreateDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryCreateDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(fraction), ::il2cpp_utils::ExtractType(offsetNegative), ::il2cpp_utils::ExtractType(offsetHours), ::il2cpp_utils::ExtractType(offsetMinutes), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, month, day, hour, minute, second, fraction, offsetNegative, offsetHours, offsetMinutes, byref(value));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryCreateDateTimeOffsetInterpretingDataAsLocalTime
bool System::Buffers::Text::Utf8Parser::TryCreateDateTimeOffsetInterpretingDataAsLocalTime(int year, int month, int day, int hour, int minute, int second, int fraction, ByRef<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryCreateDateTimeOffsetInterpretingDataAsLocalTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryCreateDateTimeOffsetInterpretingDataAsLocalTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(fraction), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, month, day, hour, minute, second, fraction, byref(value));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryCreateDateTime
bool System::Buffers::Text::Utf8Parser::TryCreateDateTime(int year, int month, int day, int hour, int minute, int second, int fraction, ::System::DateTimeKind kind, ByRef<::System::DateTime> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryCreateDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryCreateDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(fraction), ::il2cpp_utils::ExtractType(kind), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, month, day, hour, minute, second, fraction, kind, byref(value));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseDateTimeOffsetO
bool System::Buffers::Text::Utf8Parser::TryParseDateTimeOffsetO(::System::ReadOnlySpan_1<uint8_t> source, ByRef<::System::DateTimeOffset> value, ByRef<int> bytesConsumed, ByRef<::System::DateTimeKind> kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseDateTimeOffsetO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseDateTimeOffsetO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeKind&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed), byref(kind));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseDateTimeOffsetR
bool System::Buffers::Text::Utf8Parser::TryParseDateTimeOffsetR(::System::ReadOnlySpan_1<uint8_t> source, uint caseFlipXorMask, ByRef<::System::DateTimeOffset> dateTimeOffset, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseDateTimeOffsetR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseDateTimeOffsetR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(caseFlipXorMask), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, caseFlipXorMask, byref(dateTimeOffset), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParse
bool System::Buffers::Text::Utf8Parser::TryParse(::System::ReadOnlySpan_1<uint8_t> source, ByRef<::System::DateTime> value, ByRef<int> bytesConsumed, ::Il2CppChar standardFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(standardFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed), standardFormat);
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParse
bool System::Buffers::Text::Utf8Parser::TryParse(::System::ReadOnlySpan_1<uint8_t> source, ByRef<::System::DateTimeOffset> value, ByRef<int> bytesConsumed, ::Il2CppChar standardFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(standardFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed), standardFormat);
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParse
bool System::Buffers::Text::Utf8Parser::TryParse(::System::ReadOnlySpan_1<uint8_t> source, ByRef<::System::Decimal> value, ByRef<int> bytesConsumed, ::Il2CppChar standardFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<::System::Decimal&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(standardFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed), standardFormat);
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParse
bool System::Buffers::Text::Utf8Parser::TryParse(::System::ReadOnlySpan_1<uint8_t> source, ByRef<float> value, ByRef<int> bytesConsumed, ::Il2CppChar standardFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(standardFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed), standardFormat);
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParse
bool System::Buffers::Text::Utf8Parser::TryParse(::System::ReadOnlySpan_1<uint8_t> source, ByRef<double> value, ByRef<int> bytesConsumed, ::Il2CppChar standardFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<double&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(standardFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed), standardFormat);
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseNormalAsFloatingPoint
bool System::Buffers::Text::Utf8Parser::TryParseNormalAsFloatingPoint(::System::ReadOnlySpan_1<uint8_t> source, ByRef<double> value, ByRef<int> bytesConsumed, ::Il2CppChar standardFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseNormalAsFloatingPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseNormalAsFloatingPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<double&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(standardFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed), standardFormat);
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParse
bool System::Buffers::Text::Utf8Parser::TryParse(::System::ReadOnlySpan_1<uint8_t> source, ByRef<::System::Guid> value, ByRef<int> bytesConsumed, ::Il2CppChar standardFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(standardFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed), standardFormat);
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseGuidN
bool System::Buffers::Text::Utf8Parser::TryParseGuidN(::System::ReadOnlySpan_1<uint8_t> text, ByRef<::System::Guid> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseGuidN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseGuidN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseGuidCore
bool System::Buffers::Text::Utf8Parser::TryParseGuidCore(::System::ReadOnlySpan_1<uint8_t> source, bool ends, ::Il2CppChar begin, ::Il2CppChar end, ByRef<::System::Guid> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseGuidCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseGuidCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(ends), ::il2cpp_utils::ExtractType(begin), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, ends, begin, end, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseInt32D
bool System::Buffers::Text::Utf8Parser::TryParseInt32D(::System::ReadOnlySpan_1<uint8_t> source, ByRef<int> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseInt32D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseInt32D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseInt64D
bool System::Buffers::Text::Utf8Parser::TryParseInt64D(::System::ReadOnlySpan_1<uint8_t> source, ByRef<int64_t> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseInt64D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseInt64D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseInt32N
bool System::Buffers::Text::Utf8Parser::TryParseInt32N(::System::ReadOnlySpan_1<uint8_t> source, ByRef<int> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseInt32N");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseInt32N", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseInt64N
bool System::Buffers::Text::Utf8Parser::TryParseInt64N(::System::ReadOnlySpan_1<uint8_t> source, ByRef<int64_t> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseInt64N");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseInt64N", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParse
bool System::Buffers::Text::Utf8Parser::TryParse(::System::ReadOnlySpan_1<uint8_t> source, ByRef<int> value, ByRef<int> bytesConsumed, ::Il2CppChar standardFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(standardFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed), standardFormat);
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParse
bool System::Buffers::Text::Utf8Parser::TryParse(::System::ReadOnlySpan_1<uint8_t> source, ByRef<int64_t> value, ByRef<int> bytesConsumed, ::Il2CppChar standardFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(standardFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed), standardFormat);
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseUInt32D
bool System::Buffers::Text::Utf8Parser::TryParseUInt32D(::System::ReadOnlySpan_1<uint8_t> source, ByRef<uint> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseUInt32D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseUInt32D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseUInt64D
bool System::Buffers::Text::Utf8Parser::TryParseUInt64D(::System::ReadOnlySpan_1<uint8_t> source, ByRef<uint64_t> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseUInt64D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseUInt64D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<uint64_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseUInt32N
bool System::Buffers::Text::Utf8Parser::TryParseUInt32N(::System::ReadOnlySpan_1<uint8_t> source, ByRef<uint> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseUInt32N");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseUInt32N", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseUInt64N
bool System::Buffers::Text::Utf8Parser::TryParseUInt64N(::System::ReadOnlySpan_1<uint8_t> source, ByRef<uint64_t> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseUInt64N");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseUInt64N", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<uint64_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseUInt16X
bool System::Buffers::Text::Utf8Parser::TryParseUInt16X(::System::ReadOnlySpan_1<uint8_t> source, ByRef<uint16_t> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseUInt16X");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseUInt16X", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<uint16_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseUInt32X
bool System::Buffers::Text::Utf8Parser::TryParseUInt32X(::System::ReadOnlySpan_1<uint8_t> source, ByRef<uint> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseUInt32X");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseUInt32X", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseUInt64X
bool System::Buffers::Text::Utf8Parser::TryParseUInt64X(::System::ReadOnlySpan_1<uint8_t> source, ByRef<uint64_t> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseUInt64X");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseUInt64X", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<uint64_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParse
bool System::Buffers::Text::Utf8Parser::TryParse(::System::ReadOnlySpan_1<uint8_t> source, ByRef<uint> value, ByRef<int> bytesConsumed, ::Il2CppChar standardFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(standardFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed), standardFormat);
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParse
bool System::Buffers::Text::Utf8Parser::TryParse(::System::ReadOnlySpan_1<uint8_t> source, ByRef<uint64_t> value, ByRef<int> bytesConsumed, ::Il2CppChar standardFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<uint64_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(standardFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed), standardFormat);
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseNumber
bool System::Buffers::Text::Utf8Parser::TryParseNumber(::System::ReadOnlySpan_1<uint8_t> source, ByRef<::System::Buffers::Text::NumberBuffer> number, ByRef<int> bytesConsumed, ::System::Buffers::Text::Utf8Parser::ParseNumberOptions options, ByRef<bool> textUsedExponentNotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(number), byref(bytesConsumed), options, byref(textUsedExponentNotation));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseTimeSpanBigG
bool System::Buffers::Text::Utf8Parser::TryParseTimeSpanBigG(::System::ReadOnlySpan_1<uint8_t> source, ByRef<::System::TimeSpan> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseTimeSpanBigG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseTimeSpanBigG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseTimeSpanC
bool System::Buffers::Text::Utf8Parser::TryParseTimeSpanC(::System::ReadOnlySpan_1<uint8_t> source, ByRef<::System::TimeSpan> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseTimeSpanC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseTimeSpanC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseTimeSpanLittleG
bool System::Buffers::Text::Utf8Parser::TryParseTimeSpanLittleG(::System::ReadOnlySpan_1<uint8_t> source, ByRef<::System::TimeSpan> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseTimeSpanLittleG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseTimeSpanLittleG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParse
bool System::Buffers::Text::Utf8Parser::TryParse(::System::ReadOnlySpan_1<uint8_t> source, ByRef<::System::TimeSpan> value, ByRef<int> bytesConsumed, ::Il2CppChar standardFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(standardFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed), standardFormat);
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryParseTimeSpanFraction
bool System::Buffers::Text::Utf8Parser::TryParseTimeSpanFraction(::System::ReadOnlySpan_1<uint8_t> source, ByRef<uint> value, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryParseTimeSpanFraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryParseTimeSpanFraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(value), byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser.TryCreateTimeSpan
bool System::Buffers::Text::Utf8Parser::TryCreateTimeSpan(bool isNegative, uint days, uint hours, uint minutes, uint seconds, uint fraction, ByRef<::System::TimeSpan> timeSpan) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TryCreateTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", "TryCreateTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isNegative), ::il2cpp_utils::ExtractType(days), ::il2cpp_utils::ExtractType(hours), ::il2cpp_utils::ExtractType(minutes), ::il2cpp_utils::ExtractType(seconds), ::il2cpp_utils::ExtractType(fraction), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isNegative, days, hours, minutes, seconds, fraction, byref(timeSpan));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser..cctor
void System::Buffers::Text::Utf8Parser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.Text.Utf8Parser/ParseNumberOptions
#include "System/Buffers/Text/Utf8Parser_ParseNumberOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Buffers.Text.Utf8Parser/ParseNumberOptions AllowExponent
::System::Buffers::Text::Utf8Parser::ParseNumberOptions System::Buffers::Text::Utf8Parser::ParseNumberOptions::_get_AllowExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::ParseNumberOptions::_get_AllowExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::Text::Utf8Parser::ParseNumberOptions>("System.Buffers.Text", "Utf8Parser/ParseNumberOptions", "AllowExponent"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.Text.Utf8Parser/ParseNumberOptions AllowExponent
void System::Buffers::Text::Utf8Parser::ParseNumberOptions::_set_AllowExponent(::System::Buffers::Text::Utf8Parser::ParseNumberOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::ParseNumberOptions::_set_AllowExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Utf8Parser/ParseNumberOptions", "AllowExponent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Buffers::Text::Utf8Parser::ParseNumberOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::ParseNumberOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.Text.Utf8Parser/ComponentParseResult
#include "System/Buffers/Text/Utf8Parser_ComponentParseResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult NoMoreData
::System::Buffers::Text::Utf8Parser::ComponentParseResult System::Buffers::Text::Utf8Parser::ComponentParseResult::_get_NoMoreData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::ComponentParseResult::_get_NoMoreData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::Text::Utf8Parser::ComponentParseResult>("System.Buffers.Text", "Utf8Parser/ComponentParseResult", "NoMoreData"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult NoMoreData
void System::Buffers::Text::Utf8Parser::ComponentParseResult::_set_NoMoreData(::System::Buffers::Text::Utf8Parser::ComponentParseResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::ComponentParseResult::_set_NoMoreData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Utf8Parser/ComponentParseResult", "NoMoreData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult Colon
::System::Buffers::Text::Utf8Parser::ComponentParseResult System::Buffers::Text::Utf8Parser::ComponentParseResult::_get_Colon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::ComponentParseResult::_get_Colon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::Text::Utf8Parser::ComponentParseResult>("System.Buffers.Text", "Utf8Parser/ComponentParseResult", "Colon"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult Colon
void System::Buffers::Text::Utf8Parser::ComponentParseResult::_set_Colon(::System::Buffers::Text::Utf8Parser::ComponentParseResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::ComponentParseResult::_set_Colon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Utf8Parser/ComponentParseResult", "Colon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult Period
::System::Buffers::Text::Utf8Parser::ComponentParseResult System::Buffers::Text::Utf8Parser::ComponentParseResult::_get_Period() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::ComponentParseResult::_get_Period");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::Text::Utf8Parser::ComponentParseResult>("System.Buffers.Text", "Utf8Parser/ComponentParseResult", "Period"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult Period
void System::Buffers::Text::Utf8Parser::ComponentParseResult::_set_Period(::System::Buffers::Text::Utf8Parser::ComponentParseResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::ComponentParseResult::_set_Period");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Utf8Parser/ComponentParseResult", "Period", value));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult ParseFailure
::System::Buffers::Text::Utf8Parser::ComponentParseResult System::Buffers::Text::Utf8Parser::ComponentParseResult::_get_ParseFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::ComponentParseResult::_get_ParseFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::Text::Utf8Parser::ComponentParseResult>("System.Buffers.Text", "Utf8Parser/ComponentParseResult", "ParseFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.Text.Utf8Parser/ComponentParseResult ParseFailure
void System::Buffers::Text::Utf8Parser::ComponentParseResult::_set_ParseFailure(::System::Buffers::Text::Utf8Parser::ComponentParseResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::ComponentParseResult::_set_ParseFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Utf8Parser/ComponentParseResult", "ParseFailure", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::Utf8Parser::ComponentParseResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::ComponentParseResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.Text.Utf8Parser/TimeSpanSplitter
#include "System/Buffers/Text/Utf8Parser_TimeSpanSplitter.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Buffers.Text.Utf8Parser/ComponentParseResult
#include "System/Buffers/Text/Utf8Parser_ComponentParseResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 V1
[[deprecated("Use field access instead!")]] uint& System::Buffers::Text::Utf8Parser::TimeSpanSplitter::dyn_V1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TimeSpanSplitter::dyn_V1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "V1"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 V2
[[deprecated("Use field access instead!")]] uint& System::Buffers::Text::Utf8Parser::TimeSpanSplitter::dyn_V2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TimeSpanSplitter::dyn_V2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "V2"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 V3
[[deprecated("Use field access instead!")]] uint& System::Buffers::Text::Utf8Parser::TimeSpanSplitter::dyn_V3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TimeSpanSplitter::dyn_V3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "V3"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 V4
[[deprecated("Use field access instead!")]] uint& System::Buffers::Text::Utf8Parser::TimeSpanSplitter::dyn_V4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TimeSpanSplitter::dyn_V4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "V4"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 V5
[[deprecated("Use field access instead!")]] uint& System::Buffers::Text::Utf8Parser::TimeSpanSplitter::dyn_V5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TimeSpanSplitter::dyn_V5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "V5"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsNegative
[[deprecated("Use field access instead!")]] bool& System::Buffers::Text::Utf8Parser::TimeSpanSplitter::dyn_IsNegative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TimeSpanSplitter::dyn_IsNegative");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsNegative"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Separators
[[deprecated("Use field access instead!")]] uint& System::Buffers::Text::Utf8Parser::TimeSpanSplitter::dyn_Separators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TimeSpanSplitter::dyn_Separators");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Separators"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Buffers.Text.Utf8Parser/TimeSpanSplitter.TrySplitTimeSpan
bool System::Buffers::Text::Utf8Parser::TimeSpanSplitter::TrySplitTimeSpan(::System::ReadOnlySpan_1<uint8_t> source, bool periodUsedToSeparateDay, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TimeSpanSplitter::TrySplitTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrySplitTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(periodUsedToSeparateDay), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, source, periodUsedToSeparateDay, byref(bytesConsumed));
}
// Autogenerated method: System.Buffers.Text.Utf8Parser/TimeSpanSplitter.ParseComponent
::System::Buffers::Text::Utf8Parser::ComponentParseResult System::Buffers::Text::Utf8Parser::TimeSpanSplitter::ParseComponent(::System::ReadOnlySpan_1<uint8_t> source, bool neverParseAsFraction, ByRef<int> srcIndex, ByRef<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Utf8Parser::TimeSpanSplitter::ParseComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Utf8Parser/TimeSpanSplitter", "ParseComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(neverParseAsFraction), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Buffers::Text::Utf8Parser::ComponentParseResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, neverParseAsFraction, byref(srcIndex), byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.Text.Number
#include "System/Buffers/Text/Number.hpp"
// Including type: System.Buffers.Text.NumberBuffer
#include "System/Buffers/Text/NumberBuffer.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64[] s_rgval64Power10
::ArrayW<uint64_t> System::Buffers::Text::Number::_get_s_rgval64Power10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::_get_s_rgval64Power10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint64_t>>("System.Buffers.Text", "Number", "s_rgval64Power10"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64[] s_rgval64Power10
void System::Buffers::Text::Number::_set_s_rgval64Power10(::ArrayW<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::_set_s_rgval64Power10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Number", "s_rgval64Power10", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.SByte[] s_rgexp64Power10
::ArrayW<int8_t> System::Buffers::Text::Number::_get_s_rgexp64Power10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::_get_s_rgexp64Power10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int8_t>>("System.Buffers.Text", "Number", "s_rgexp64Power10"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.SByte[] s_rgexp64Power10
void System::Buffers::Text::Number::_set_s_rgexp64Power10(::ArrayW<int8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::_set_s_rgexp64Power10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Number", "s_rgexp64Power10", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64[] s_rgval64Power10By16
::ArrayW<uint64_t> System::Buffers::Text::Number::_get_s_rgval64Power10By16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::_get_s_rgval64Power10By16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint64_t>>("System.Buffers.Text", "Number", "s_rgval64Power10By16"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64[] s_rgval64Power10By16
void System::Buffers::Text::Number::_set_s_rgval64Power10By16(::ArrayW<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::_set_s_rgval64Power10By16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Number", "s_rgval64Power10By16", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int16[] s_rgexp64Power10By16
::ArrayW<int16_t> System::Buffers::Text::Number::_get_s_rgexp64Power10By16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::_get_s_rgexp64Power10By16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int16_t>>("System.Buffers.Text", "Number", "s_rgexp64Power10By16"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int16[] s_rgexp64Power10By16
void System::Buffers::Text::Number::_set_s_rgexp64Power10By16(::ArrayW<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::_set_s_rgexp64Power10By16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers.Text", "Number", "s_rgexp64Power10By16", value));
}
// Autogenerated method: System.Buffers.Text.Number.NumberBufferToDouble
bool System::Buffers::Text::Number::NumberBufferToDouble(ByRef<::System::Buffers::Text::NumberBuffer> number, ByRef<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::NumberBufferToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Number", "NumberBufferToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Buffers.Text.Number.NumberBufferToDecimal
bool System::Buffers::Text::Number::NumberBufferToDecimal(ByRef<::System::Buffers::Text::NumberBuffer> number, ByRef<::System::Decimal> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::NumberBufferToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Number", "NumberBufferToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Buffers.Text.Number.DecimalToNumber
void System::Buffers::Text::Number::DecimalToNumber(::System::Decimal value, ByRef<::System::Buffers::Text::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::DecimalToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Number", "DecimalToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(number));
}
// Autogenerated method: System.Buffers.Text.Number.DigitsToInt
uint System::Buffers::Text::Number::DigitsToInt(::System::ReadOnlySpan_1<uint8_t> digits, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::DigitsToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Number", "DigitsToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, digits, count);
}
// Autogenerated method: System.Buffers.Text.Number.Mul32x32To64
uint64_t System::Buffers::Text::Number::Mul32x32To64(uint a, uint b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::Mul32x32To64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Number", "Mul32x32To64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: System.Buffers.Text.Number.Mul64Lossy
uint64_t System::Buffers::Text::Number::Mul64Lossy(uint64_t a, uint64_t b, ByRef<int> pexp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::Mul64Lossy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Number", "Mul64Lossy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(pexp)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, byref(pexp));
}
// Autogenerated method: System.Buffers.Text.Number.abs
int System::Buffers::Text::Number::abs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Number", "abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Buffers.Text.Number.NumberToDouble
double System::Buffers::Text::Number::NumberToDouble(ByRef<::System::Buffers::Text::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::NumberToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Number", "NumberToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number));
}
// Autogenerated method: System.Buffers.Text.Number.RoundNumber
void System::Buffers::Text::Number::RoundNumber(ByRef<::System::Buffers::Text::NumberBuffer> number, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::RoundNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Number", "RoundNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), pos);
}
// Autogenerated method: System.Buffers.Text.Number..cctor
void System::Buffers::Text::Number::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::Number::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "Number", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.Text.NumberBuffer
#include "System/Buffers/Text/NumberBuffer.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Scale
[[deprecated("Use field access instead!")]] int& System::Buffers::Text::NumberBuffer::dyn_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn_Scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Scale"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsNegative
[[deprecated("Use field access instead!")]] bool& System::Buffers::Text::NumberBuffer::dyn_IsNegative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn_IsNegative");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsNegative"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b0
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b0"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b1
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b1"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b2
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b2"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b3
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b3"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b4
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b4"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b5
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b5"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b6
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b6"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b7
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b7"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b8
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b8");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b8"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b9
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b9");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b9"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b10
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b10"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b11
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b11"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b12
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b12"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b13
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b13"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b14
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b14");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b14"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b15
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b15");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b15"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b16
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b16");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b16"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b17
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b17");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b17"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b18
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b18");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b18"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b19
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b19() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b19");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b19"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b20
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b20");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b20"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b21
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b21");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b21"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b22
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b22");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b22"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b23
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b23");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b23"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b24
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b24");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b24"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b25
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b25");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b25"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b26
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b26() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b26");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b26"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b27
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b27() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b27");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b27"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b28
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b28() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b28");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b28"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b29
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b29() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b29");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b29"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b30
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b30");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b30"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b31
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b31() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b31");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b31"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b32
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b32");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b32"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b33
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b33() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b33");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b33"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b34
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b34() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b34");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b34"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b35
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b35() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b35");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b35"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b36
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b36() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b36");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b36"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b37
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b37() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b37");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b37"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b38
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b38() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b38");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b38"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b39
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b39() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b39");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b39"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b40
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b40() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b40");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b40"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b41
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b41() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b41");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b41"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b42
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b42() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b42");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b42"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b43
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b43() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b43");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b43"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b44
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b44() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b44");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b44"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b45
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b45() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b45");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b45"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b46
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b46() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b46");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b46"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b47
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b47() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b47");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b47"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b48
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b48() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b48");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b48"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b49
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b49() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b49");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b49"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _b50
[[deprecated("Use field access instead!")]] uint8_t& System::Buffers::Text::NumberBuffer::dyn__b50() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::dyn__b50");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b50"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Buffers.Text.NumberBuffer.get_Digits
::System::Span_1<uint8_t> System::Buffers::Text::NumberBuffer::get_Digits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::get_Digits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Digits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Span_1<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Buffers.Text.NumberBuffer.get_UnsafeDigits
uint8_t* System::Buffers::Text::NumberBuffer::get_UnsafeDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::get_UnsafeDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_UnsafeDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(this, ___internal__method);
}
// Autogenerated method: System.Buffers.Text.NumberBuffer.get_NumDigits
int System::Buffers::Text::NumberBuffer::get_NumDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::get_NumDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NumDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Buffers.Text.NumberBuffer.ToString
::StringW System::Buffers::Text::NumberBuffer::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::NumberBuffer::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Unity.ThrowStub
#include "Unity/ThrowStub.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.ThrowStub.ThrowNotSupportedException
void Unity::ThrowStub::ThrowNotSupportedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::ThrowStub::ThrowNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity", "ThrowStub", "ThrowNotSupportedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NanoSockets.Status
#include "NanoSockets/Status.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NanoSockets.Status Ok
::NanoSockets::Status NanoSockets::Status::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::Status::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NanoSockets::Status>("NanoSockets", "Status", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public NanoSockets.Status Ok
void NanoSockets::Status::_set_Ok(::NanoSockets::Status value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::Status::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NanoSockets", "Status", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public NanoSockets.Status Error
::NanoSockets::Status NanoSockets::Status::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::Status::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NanoSockets::Status>("NanoSockets", "Status", "Error"));
}
// Autogenerated static field setter
// Set static field: static public NanoSockets.Status Error
void NanoSockets::Status::_set_Error(::NanoSockets::Status value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::Status::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NanoSockets", "Status", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& NanoSockets::Status::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::Status::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NanoSockets.Socket
#include "NanoSockets/Socket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int64 handle
[[deprecated("Use field access instead!")]] int64_t& NanoSockets::Socket::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::Socket::dyn_handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NanoSockets.Socket.get_IsCreated
bool NanoSockets::Socket::get_IsCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::Socket::get_IsCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NanoSockets.Address
#include "NanoSockets/Address.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 _address0
[[deprecated("Use field access instead!")]] uint64_t& NanoSockets::Address::dyn__address0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::Address::dyn__address0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_address0"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 _address1
[[deprecated("Use field access instead!")]] uint64_t& NanoSockets::Address::dyn__address1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::Address::dyn__address1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_address1"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 Port
[[deprecated("Use field access instead!")]] uint16_t& NanoSockets::Address::dyn_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::Address::dyn_Port");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Port"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NanoSockets.Address.Equals
bool NanoSockets::Address::Equals(::NanoSockets::Address other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::Address::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::NanoSockets::Address), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: NanoSockets.Address.Equals
bool NanoSockets::Address::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::Address::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: NanoSockets.Address.GetHashCode
int NanoSockets::Address::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::Address::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NanoSockets.Address.ToString
::StringW NanoSockets::Address::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::Address::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NanoSockets.UDP
#include "NanoSockets/UDP.hpp"
// Including type: NanoSockets.Status
#include "NanoSockets/Status.hpp"
// Including type: NanoSockets.Address
#include "NanoSockets/Address.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NanoSockets.UDP.Initialize
::NanoSockets::Status NanoSockets::UDP::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::UDP::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NanoSockets", "UDP", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NanoSockets::Status, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NanoSockets.UDP.Create
int64_t NanoSockets::UDP::Create(int sendBufferSize, int receiveBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::UDP::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NanoSockets", "UDP", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sendBufferSize), ::il2cpp_utils::ExtractType(receiveBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sendBufferSize, receiveBufferSize);
}
// Autogenerated method: NanoSockets.UDP.Destroy
void NanoSockets::UDP::Destroy(ByRef<int64_t> socket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::UDP::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NanoSockets", "UDP", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(socket));
}
// Autogenerated method: NanoSockets.UDP.Bind
int NanoSockets::UDP::Bind(int64_t socket, ByRef<::NanoSockets::Address> address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::UDP::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NanoSockets", "UDP", "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, socket, byref(address));
}
// Autogenerated method: NanoSockets.UDP.SetNonBlocking
::NanoSockets::Status NanoSockets::UDP::SetNonBlocking(int64_t socket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::UDP::SetNonBlocking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NanoSockets", "UDP", "SetNonBlocking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket)})));
  return ::il2cpp_utils::RunMethodRethrow<::NanoSockets::Status, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, socket);
}
// Autogenerated method: NanoSockets.UDP.Send
int NanoSockets::UDP::Send(int64_t socket, ::NanoSockets::Address* address, uint8_t* buffer, int bufferLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::UDP::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NanoSockets", "UDP", "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, socket, address, buffer, bufferLength);
}
// Autogenerated method: NanoSockets.UDP.Receive
int NanoSockets::UDP::Receive(int64_t socket, ::NanoSockets::Address* address, uint8_t* buffer, int bufferLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::UDP::Receive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NanoSockets", "UDP", "Receive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, socket, address, buffer, bufferLength);
}
// Autogenerated method: NanoSockets.UDP.GetAddress
::NanoSockets::Status NanoSockets::UDP::GetAddress(int64_t socket, ByRef<::NanoSockets::Address> address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::UDP::GetAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NanoSockets", "UDP", "GetAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<::NanoSockets::Status, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, socket, byref(address));
}
// Autogenerated method: NanoSockets.UDP.SetIP
::NanoSockets::Status NanoSockets::UDP::SetIP(ByRef<::NanoSockets::Address> address, ::StringW ip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::UDP::SetIP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NanoSockets", "UDP", "SetIP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(ip)})));
  return ::il2cpp_utils::RunMethodRethrow<::NanoSockets::Status, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(address), ip);
}
// Autogenerated method: NanoSockets.UDP.GetIP
::NanoSockets::Status NanoSockets::UDP::GetIP(ByRef<::NanoSockets::Address> address, ::System::IntPtr ip, int ipLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NanoSockets::UDP::GetIP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NanoSockets", "UDP", "GetIP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(ip), ::il2cpp_utils::ExtractType(ipLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::NanoSockets::Status, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(address), ip, ipLength);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1___________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1___________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1___________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1___________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1___________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshLink
#include "UnityEngine/AI/NavMeshLink.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.AI.NavMeshLink> s_Tracked
::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshLink*>* UnityEngine::AI::NavMeshLink::_get_s_Tracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::_get_s_Tracked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshLink*>*>("UnityEngine.AI", "NavMeshLink", "s_Tracked"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.AI.NavMeshLink> s_Tracked
void UnityEngine::AI::NavMeshLink::_set_s_Tracked(::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshLink*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::_set_s_Tracked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshLink", "s_Tracked", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_AgentTypeID
[[deprecated("Use field access instead!")]] int& UnityEngine::AI::NavMeshLink::dyn_m_AgentTypeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::dyn_m_AgentTypeID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AgentTypeID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_StartPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::AI::NavMeshLink::dyn_m_StartPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::dyn_m_StartPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_EndPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::AI::NavMeshLink::dyn_m_EndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::dyn_m_EndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Width
[[deprecated("Use field access instead!")]] float& UnityEngine::AI::NavMeshLink::dyn_m_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::dyn_m_Width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_CostModifier
[[deprecated("Use field access instead!")]] int& UnityEngine::AI::NavMeshLink::dyn_m_CostModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::dyn_m_CostModifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CostModifier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Bidirectional
[[deprecated("Use field access instead!")]] bool& UnityEngine::AI::NavMeshLink::dyn_m_Bidirectional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::dyn_m_Bidirectional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Bidirectional"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AutoUpdatePosition
[[deprecated("Use field access instead!")]] bool& UnityEngine::AI::NavMeshLink::dyn_m_AutoUpdatePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::dyn_m_AutoUpdatePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AutoUpdatePosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Area
[[deprecated("Use field access instead!")]] int& UnityEngine::AI::NavMeshLink::dyn_m_Area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::dyn_m_Area");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Area"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AI.NavMeshLinkInstance m_LinkInstance
[[deprecated("Use field access instead!")]] ::UnityEngine::AI::NavMeshLinkInstance& UnityEngine::AI::NavMeshLink::dyn_m_LinkInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::dyn_m_LinkInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LinkInstance"))->offset;
  return *reinterpret_cast<::UnityEngine::AI::NavMeshLinkInstance*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_LastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::AI::NavMeshLink::dyn_m_LastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::dyn_m_LastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_LastRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::AI::NavMeshLink::dyn_m_LastRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::dyn_m_LastRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.get_agentTypeID
int UnityEngine::AI::NavMeshLink::get_agentTypeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::get_agentTypeID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_agentTypeID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.set_agentTypeID
void UnityEngine::AI::NavMeshLink::set_agentTypeID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::set_agentTypeID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_agentTypeID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.get_startPoint
::UnityEngine::Vector3 UnityEngine::AI::NavMeshLink::get_startPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::get_startPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.set_startPoint
void UnityEngine::AI::NavMeshLink::set_startPoint(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::set_startPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.get_endPoint
::UnityEngine::Vector3 UnityEngine::AI::NavMeshLink::get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::get_endPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.set_endPoint
void UnityEngine::AI::NavMeshLink::set_endPoint(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::set_endPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.get_width
float UnityEngine::AI::NavMeshLink::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.set_width
void UnityEngine::AI::NavMeshLink::set_width(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::set_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.get_costModifier
int UnityEngine::AI::NavMeshLink::get_costModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::get_costModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_costModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.set_costModifier
void UnityEngine::AI::NavMeshLink::set_costModifier(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::set_costModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_costModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.get_bidirectional
bool UnityEngine::AI::NavMeshLink::get_bidirectional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::get_bidirectional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bidirectional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.set_bidirectional
void UnityEngine::AI::NavMeshLink::set_bidirectional(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::set_bidirectional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bidirectional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.get_autoUpdate
bool UnityEngine::AI::NavMeshLink::get_autoUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::get_autoUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autoUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.set_autoUpdate
void UnityEngine::AI::NavMeshLink::set_autoUpdate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::set_autoUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_autoUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.get_area
int UnityEngine::AI::NavMeshLink::get_area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::get_area");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_area", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.set_area
void UnityEngine::AI::NavMeshLink::set_area(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::set_area");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_area", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.OnEnable
void UnityEngine::AI::NavMeshLink::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.OnDisable
void UnityEngine::AI::NavMeshLink::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.UpdateLink
void UnityEngine::AI::NavMeshLink::UpdateLink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::UpdateLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.AddTracking
void UnityEngine::AI::NavMeshLink::AddTracking(::UnityEngine::AI::NavMeshLink* link) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::AddTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshLink", "AddTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(link)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, link);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.RemoveTracking
void UnityEngine::AI::NavMeshLink::RemoveTracking(::UnityEngine::AI::NavMeshLink* link) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::RemoveTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshLink", "RemoveTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(link)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, link);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.SetAutoUpdate
void UnityEngine::AI::NavMeshLink::SetAutoUpdate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::SetAutoUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAutoUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.AddLink
void UnityEngine::AI::NavMeshLink::AddLink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::AddLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.HasTransformChanged
bool UnityEngine::AI::NavMeshLink::HasTransformChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::HasTransformChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasTransformChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.OnDidApplyAnimationProperties
void UnityEngine::AI::NavMeshLink::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::OnDidApplyAnimationProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink.UpdateTrackedInstances
void UnityEngine::AI::NavMeshLink::UpdateTrackedInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::UpdateTrackedInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshLink", "UpdateTrackedInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshLink..cctor
void UnityEngine::AI::NavMeshLink::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshLink::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshLink", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshModifier
#include "UnityEngine/AI/NavMeshModifier.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.AI.NavMeshModifier> s_NavMeshModifiers
::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshModifier*>* UnityEngine::AI::NavMeshModifier::_get_s_NavMeshModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::_get_s_NavMeshModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshModifier*>*>("UnityEngine.AI", "NavMeshModifier", "s_NavMeshModifiers"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.AI.NavMeshModifier> s_NavMeshModifiers
void UnityEngine::AI::NavMeshModifier::_set_s_NavMeshModifiers(::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshModifier*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::_set_s_NavMeshModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshModifier", "s_NavMeshModifiers", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_OverrideArea
[[deprecated("Use field access instead!")]] bool& UnityEngine::AI::NavMeshModifier::dyn_m_OverrideArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::dyn_m_OverrideArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverrideArea"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Area
[[deprecated("Use field access instead!")]] int& UnityEngine::AI::NavMeshModifier::dyn_m_Area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::dyn_m_Area");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Area"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IgnoreFromBuild
[[deprecated("Use field access instead!")]] bool& UnityEngine::AI::NavMeshModifier::dyn_m_IgnoreFromBuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::dyn_m_IgnoreFromBuild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IgnoreFromBuild"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> m_AffectedAgents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& UnityEngine::AI::NavMeshModifier::dyn_m_AffectedAgents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::dyn_m_AffectedAgents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AffectedAgents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifier.get_overrideArea
bool UnityEngine::AI::NavMeshModifier::get_overrideArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::get_overrideArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifier.set_overrideArea
void UnityEngine::AI::NavMeshModifier::set_overrideArea(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::set_overrideArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifier.get_area
int UnityEngine::AI::NavMeshModifier::get_area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::get_area");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_area", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifier.set_area
void UnityEngine::AI::NavMeshModifier::set_area(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::set_area");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_area", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifier.get_ignoreFromBuild
bool UnityEngine::AI::NavMeshModifier::get_ignoreFromBuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::get_ignoreFromBuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreFromBuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifier.set_ignoreFromBuild
void UnityEngine::AI::NavMeshModifier::set_ignoreFromBuild(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::set_ignoreFromBuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ignoreFromBuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifier.get_activeModifiers
::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshModifier*>* UnityEngine::AI::NavMeshModifier::get_activeModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::get_activeModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshModifier", "get_activeModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshModifier*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifier.OnEnable
void UnityEngine::AI::NavMeshModifier::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifier.OnDisable
void UnityEngine::AI::NavMeshModifier::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifier.AffectsAgentType
bool UnityEngine::AI::NavMeshModifier::AffectsAgentType(int agentTypeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::AffectsAgentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AffectsAgentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(agentTypeID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, agentTypeID);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifier..cctor
void UnityEngine::AI::NavMeshModifier::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifier::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshModifier", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshModifierVolume
#include "UnityEngine/AI/NavMeshModifierVolume.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.AI.NavMeshModifierVolume> s_NavMeshModifiers
::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshModifierVolume*>* UnityEngine::AI::NavMeshModifierVolume::_get_s_NavMeshModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::_get_s_NavMeshModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshModifierVolume*>*>("UnityEngine.AI", "NavMeshModifierVolume", "s_NavMeshModifiers"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.AI.NavMeshModifierVolume> s_NavMeshModifiers
void UnityEngine::AI::NavMeshModifierVolume::_set_s_NavMeshModifiers(::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshModifierVolume*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::_set_s_NavMeshModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshModifierVolume", "s_NavMeshModifiers", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Size
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::AI::NavMeshModifierVolume::dyn_m_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::dyn_m_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::AI::NavMeshModifierVolume::dyn_m_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::dyn_m_Center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Area
[[deprecated("Use field access instead!")]] int& UnityEngine::AI::NavMeshModifierVolume::dyn_m_Area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::dyn_m_Area");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Area"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> m_AffectedAgents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& UnityEngine::AI::NavMeshModifierVolume::dyn_m_AffectedAgents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::dyn_m_AffectedAgents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AffectedAgents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifierVolume.get_size
::UnityEngine::Vector3 UnityEngine::AI::NavMeshModifierVolume::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifierVolume.set_size
void UnityEngine::AI::NavMeshModifierVolume::set_size(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifierVolume.get_center
::UnityEngine::Vector3 UnityEngine::AI::NavMeshModifierVolume::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifierVolume.set_center
void UnityEngine::AI::NavMeshModifierVolume::set_center(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifierVolume.get_area
int UnityEngine::AI::NavMeshModifierVolume::get_area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::get_area");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_area", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifierVolume.set_area
void UnityEngine::AI::NavMeshModifierVolume::set_area(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::set_area");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_area", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifierVolume.get_activeModifiers
::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshModifierVolume*>* UnityEngine::AI::NavMeshModifierVolume::get_activeModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::get_activeModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshModifierVolume", "get_activeModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshModifierVolume*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifierVolume.OnEnable
void UnityEngine::AI::NavMeshModifierVolume::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifierVolume.OnDisable
void UnityEngine::AI::NavMeshModifierVolume::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifierVolume.AffectsAgentType
bool UnityEngine::AI::NavMeshModifierVolume::AffectsAgentType(int agentTypeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::AffectsAgentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AffectsAgentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(agentTypeID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, agentTypeID);
}
// Autogenerated method: UnityEngine.AI.NavMeshModifierVolume..cctor
void UnityEngine::AI::NavMeshModifierVolume::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshModifierVolume::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshModifierVolume", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.CollectObjects
#include "UnityEngine/AI/CollectObjects.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.CollectObjects All
::UnityEngine::AI::CollectObjects UnityEngine::AI::CollectObjects::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::CollectObjects::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AI::CollectObjects>("UnityEngine.AI", "CollectObjects", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.CollectObjects All
void UnityEngine::AI::CollectObjects::_set_All(::UnityEngine::AI::CollectObjects value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::CollectObjects::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "CollectObjects", "All", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.CollectObjects Volume
::UnityEngine::AI::CollectObjects UnityEngine::AI::CollectObjects::_get_Volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::CollectObjects::_get_Volume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AI::CollectObjects>("UnityEngine.AI", "CollectObjects", "Volume"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.CollectObjects Volume
void UnityEngine::AI::CollectObjects::_set_Volume(::UnityEngine::AI::CollectObjects value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::CollectObjects::_set_Volume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "CollectObjects", "Volume", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.CollectObjects Children
::UnityEngine::AI::CollectObjects UnityEngine::AI::CollectObjects::_get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::CollectObjects::_get_Children");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AI::CollectObjects>("UnityEngine.AI", "CollectObjects", "Children"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.CollectObjects Children
void UnityEngine::AI::CollectObjects::_set_Children(::UnityEngine::AI::CollectObjects value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::CollectObjects::_set_Children");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "CollectObjects", "Children", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AI::CollectObjects::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::CollectObjects::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshSurface
#include "UnityEngine/AI/NavMeshSurface.hpp"
// Including type: UnityEngine.AI.NavMeshSurface/<>c
#include "UnityEngine/AI/NavMeshSurface_--c.hpp"
// Including type: UnityEngine.AI.NavMeshData
#include "UnityEngine/AI/NavMeshData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AI.NavMeshBuildSettings
#include "UnityEngine/AI/NavMeshBuildSettings.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.AI.NavMeshSurface> s_NavMeshSurfaces
::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshSurface*>* UnityEngine::AI::NavMeshSurface::_get_s_NavMeshSurfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::_get_s_NavMeshSurfaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshSurface*>*>("UnityEngine.AI", "NavMeshSurface", "s_NavMeshSurfaces"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.AI.NavMeshSurface> s_NavMeshSurfaces
void UnityEngine::AI::NavMeshSurface::_set_s_NavMeshSurfaces(::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshSurface*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::_set_s_NavMeshSurfaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshSurface", "s_NavMeshSurfaces", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_AgentTypeID
[[deprecated("Use field access instead!")]] int& UnityEngine::AI::NavMeshSurface::dyn_m_AgentTypeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_AgentTypeID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AgentTypeID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AI.CollectObjects m_CollectObjects
[[deprecated("Use field access instead!")]] ::UnityEngine::AI::CollectObjects& UnityEngine::AI::NavMeshSurface::dyn_m_CollectObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_CollectObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CollectObjects"))->offset;
  return *reinterpret_cast<::UnityEngine::AI::CollectObjects*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Size
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::AI::NavMeshSurface::dyn_m_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::AI::NavMeshSurface::dyn_m_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_Center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_LayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::AI::NavMeshSurface::dyn_m_LayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_LayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AI.NavMeshCollectGeometry m_UseGeometry
[[deprecated("Use field access instead!")]] ::UnityEngine::AI::NavMeshCollectGeometry& UnityEngine::AI::NavMeshSurface::dyn_m_UseGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_UseGeometry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UseGeometry"))->offset;
  return *reinterpret_cast<::UnityEngine::AI::NavMeshCollectGeometry*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_DefaultArea
[[deprecated("Use field access instead!")]] int& UnityEngine::AI::NavMeshSurface::dyn_m_DefaultArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_DefaultArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DefaultArea"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IgnoreNavMeshAgent
[[deprecated("Use field access instead!")]] bool& UnityEngine::AI::NavMeshSurface::dyn_m_IgnoreNavMeshAgent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_IgnoreNavMeshAgent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IgnoreNavMeshAgent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IgnoreNavMeshObstacle
[[deprecated("Use field access instead!")]] bool& UnityEngine::AI::NavMeshSurface::dyn_m_IgnoreNavMeshObstacle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_IgnoreNavMeshObstacle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IgnoreNavMeshObstacle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_OverrideTileSize
[[deprecated("Use field access instead!")]] bool& UnityEngine::AI::NavMeshSurface::dyn_m_OverrideTileSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_OverrideTileSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverrideTileSize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_TileSize
[[deprecated("Use field access instead!")]] int& UnityEngine::AI::NavMeshSurface::dyn_m_TileSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_TileSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TileSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_OverrideVoxelSize
[[deprecated("Use field access instead!")]] bool& UnityEngine::AI::NavMeshSurface::dyn_m_OverrideVoxelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_OverrideVoxelSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverrideVoxelSize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_VoxelSize
[[deprecated("Use field access instead!")]] float& UnityEngine::AI::NavMeshSurface::dyn_m_VoxelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_VoxelSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VoxelSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_BuildHeightMesh
[[deprecated("Use field access instead!")]] bool& UnityEngine::AI::NavMeshSurface::dyn_m_BuildHeightMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_BuildHeightMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BuildHeightMesh"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AI.NavMeshData m_NavMeshData
[[deprecated("Use field access instead!")]] ::UnityEngine::AI::NavMeshData*& UnityEngine::AI::NavMeshSurface::dyn_m_NavMeshData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_NavMeshData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NavMeshData"))->offset;
  return *reinterpret_cast<::UnityEngine::AI::NavMeshData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AI.NavMeshDataInstance m_NavMeshDataInstance
[[deprecated("Use field access instead!")]] ::UnityEngine::AI::NavMeshDataInstance& UnityEngine::AI::NavMeshSurface::dyn_m_NavMeshDataInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_NavMeshDataInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NavMeshDataInstance"))->offset;
  return *reinterpret_cast<::UnityEngine::AI::NavMeshDataInstance*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_LastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::AI::NavMeshSurface::dyn_m_LastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_LastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_LastRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::AI::NavMeshSurface::dyn_m_LastRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::dyn_m_LastRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_agentTypeID
int UnityEngine::AI::NavMeshSurface::get_agentTypeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_agentTypeID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_agentTypeID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.set_agentTypeID
void UnityEngine::AI::NavMeshSurface::set_agentTypeID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::set_agentTypeID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_agentTypeID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_collectObjects
::UnityEngine::AI::CollectObjects UnityEngine::AI::NavMeshSurface::get_collectObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_collectObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_collectObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AI::CollectObjects, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.set_collectObjects
void UnityEngine::AI::NavMeshSurface::set_collectObjects(::UnityEngine::AI::CollectObjects value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::set_collectObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_collectObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_size
::UnityEngine::Vector3 UnityEngine::AI::NavMeshSurface::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.set_size
void UnityEngine::AI::NavMeshSurface::set_size(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_center
::UnityEngine::Vector3 UnityEngine::AI::NavMeshSurface::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.set_center
void UnityEngine::AI::NavMeshSurface::set_center(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_layerMask
::UnityEngine::LayerMask UnityEngine::AI::NavMeshSurface::get_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_layerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.set_layerMask
void UnityEngine::AI::NavMeshSurface::set_layerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::set_layerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_layerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_useGeometry
::UnityEngine::AI::NavMeshCollectGeometry UnityEngine::AI::NavMeshSurface::get_useGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_useGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AI::NavMeshCollectGeometry, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.set_useGeometry
void UnityEngine::AI::NavMeshSurface::set_useGeometry(::UnityEngine::AI::NavMeshCollectGeometry value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::set_useGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_defaultArea
int UnityEngine::AI::NavMeshSurface::get_defaultArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_defaultArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.set_defaultArea
void UnityEngine::AI::NavMeshSurface::set_defaultArea(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::set_defaultArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_defaultArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_ignoreNavMeshAgent
bool UnityEngine::AI::NavMeshSurface::get_ignoreNavMeshAgent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_ignoreNavMeshAgent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreNavMeshAgent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.set_ignoreNavMeshAgent
void UnityEngine::AI::NavMeshSurface::set_ignoreNavMeshAgent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::set_ignoreNavMeshAgent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ignoreNavMeshAgent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_ignoreNavMeshObstacle
bool UnityEngine::AI::NavMeshSurface::get_ignoreNavMeshObstacle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_ignoreNavMeshObstacle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreNavMeshObstacle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.set_ignoreNavMeshObstacle
void UnityEngine::AI::NavMeshSurface::set_ignoreNavMeshObstacle(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::set_ignoreNavMeshObstacle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ignoreNavMeshObstacle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_overrideTileSize
bool UnityEngine::AI::NavMeshSurface::get_overrideTileSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_overrideTileSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideTileSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.set_overrideTileSize
void UnityEngine::AI::NavMeshSurface::set_overrideTileSize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::set_overrideTileSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideTileSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_tileSize
int UnityEngine::AI::NavMeshSurface::get_tileSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_tileSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tileSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.set_tileSize
void UnityEngine::AI::NavMeshSurface::set_tileSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::set_tileSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tileSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_overrideVoxelSize
bool UnityEngine::AI::NavMeshSurface::get_overrideVoxelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_overrideVoxelSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideVoxelSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.set_overrideVoxelSize
void UnityEngine::AI::NavMeshSurface::set_overrideVoxelSize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::set_overrideVoxelSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideVoxelSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_voxelSize
float UnityEngine::AI::NavMeshSurface::get_voxelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_voxelSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_voxelSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.set_voxelSize
void UnityEngine::AI::NavMeshSurface::set_voxelSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::set_voxelSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_voxelSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_buildHeightMesh
bool UnityEngine::AI::NavMeshSurface::get_buildHeightMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_buildHeightMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buildHeightMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.set_buildHeightMesh
void UnityEngine::AI::NavMeshSurface::set_buildHeightMesh(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::set_buildHeightMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_buildHeightMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_navMeshData
::UnityEngine::AI::NavMeshData* UnityEngine::AI::NavMeshSurface::get_navMeshData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_navMeshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_navMeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AI::NavMeshData*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.set_navMeshData
void UnityEngine::AI::NavMeshSurface::set_navMeshData(::UnityEngine::AI::NavMeshData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::set_navMeshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_navMeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.get_activeSurfaces
::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshSurface*>* UnityEngine::AI::NavMeshSurface::get_activeSurfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::get_activeSurfaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshSurface", "get_activeSurfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshSurface*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.OnEnable
void UnityEngine::AI::NavMeshSurface::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.OnDisable
void UnityEngine::AI::NavMeshSurface::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.AddData
void UnityEngine::AI::NavMeshSurface::AddData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::AddData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.RemoveData
void UnityEngine::AI::NavMeshSurface::RemoveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::RemoveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.GetBuildSettings
::UnityEngine::AI::NavMeshBuildSettings UnityEngine::AI::NavMeshSurface::GetBuildSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::GetBuildSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuildSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AI::NavMeshBuildSettings, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.BuildNavMesh
void UnityEngine::AI::NavMeshSurface::BuildNavMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::BuildNavMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildNavMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.UpdateNavMesh
::UnityEngine::AsyncOperation* UnityEngine::AI::NavMeshSurface::UpdateNavMesh(::UnityEngine::AI::NavMeshData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::UpdateNavMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNavMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AsyncOperation*, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.Register
void UnityEngine::AI::NavMeshSurface::Register(::UnityEngine::AI::NavMeshSurface* surface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshSurface", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surface)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, surface);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.Unregister
void UnityEngine::AI::NavMeshSurface::Unregister(::UnityEngine::AI::NavMeshSurface* surface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::Unregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshSurface", "Unregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surface)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, surface);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.UpdateActive
void UnityEngine::AI::NavMeshSurface::UpdateActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::UpdateActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshSurface", "UpdateActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.AppendModifierVolumes
void UnityEngine::AI::NavMeshSurface::AppendModifierVolumes(ByRef<::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>*> sources) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::AppendModifierVolumes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendModifierVolumes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sources)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(sources));
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.CollectSources
::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>* UnityEngine::AI::NavMeshSurface::CollectSources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::CollectSources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollectSources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.Abs
::UnityEngine::Vector3 UnityEngine::AI::NavMeshSurface::Abs(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshSurface", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.GetWorldBounds
::UnityEngine::Bounds UnityEngine::AI::NavMeshSurface::GetWorldBounds(::UnityEngine::Matrix4x4 mat, ::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::GetWorldBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshSurface", "GetWorldBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mat, bounds);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.CalculateWorldBounds
::UnityEngine::Bounds UnityEngine::AI::NavMeshSurface::CalculateWorldBounds(::System::Collections::Generic::List_1<::UnityEngine::AI::NavMeshBuildSource>* sources) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::CalculateWorldBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateWorldBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sources)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method, sources);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.HasTransformChanged
bool UnityEngine::AI::NavMeshSurface::HasTransformChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::HasTransformChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasTransformChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface.UpdateDataIfTransformChanged
void UnityEngine::AI::NavMeshSurface::UpdateDataIfTransformChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::UpdateDataIfTransformChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDataIfTransformChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface..cctor
void UnityEngine::AI::NavMeshSurface::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshSurface", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshSurface/<>c
#include "UnityEngine/AI/NavMeshSurface_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: UnityEngine.AI.NavMeshModifierVolume
#include "UnityEngine/AI/NavMeshModifierVolume.hpp"
// Including type: UnityEngine.AI.NavMeshModifier
#include "UnityEngine/AI/NavMeshModifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.AI.NavMeshSurface/<>c <>9
::UnityEngine::AI::NavMeshSurface::$$c* UnityEngine::AI::NavMeshSurface::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::AI::NavMeshSurface::$$c*>("UnityEngine.AI", "NavMeshSurface/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.AI.NavMeshSurface/<>c <>9
void UnityEngine::AI::NavMeshSurface::$$c::_set_$$9(::UnityEngine::AI::NavMeshSurface::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshSurface/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<UnityEngine.AI.NavMeshModifierVolume> <>9__76_0
::System::Predicate_1<::UnityEngine::AI::NavMeshModifierVolume*>* UnityEngine::AI::NavMeshSurface::$$c::_get_$$9__76_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::$$c::_get_$$9__76_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::UnityEngine::AI::NavMeshModifierVolume*>*>("UnityEngine.AI", "NavMeshSurface/<>c", "<>9__76_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<UnityEngine.AI.NavMeshModifierVolume> <>9__76_0
void UnityEngine::AI::NavMeshSurface::$$c::_set_$$9__76_0(::System::Predicate_1<::UnityEngine::AI::NavMeshModifierVolume*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::$$c::_set_$$9__76_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshSurface/<>c", "<>9__76_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<UnityEngine.AI.NavMeshModifier> <>9__77_0
::System::Predicate_1<::UnityEngine::AI::NavMeshModifier*>* UnityEngine::AI::NavMeshSurface::$$c::_get_$$9__77_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::$$c::_get_$$9__77_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::UnityEngine::AI::NavMeshModifier*>*>("UnityEngine.AI", "NavMeshSurface/<>c", "<>9__77_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<UnityEngine.AI.NavMeshModifier> <>9__77_0
void UnityEngine::AI::NavMeshSurface::$$c::_set_$$9__77_0(::System::Predicate_1<::UnityEngine::AI::NavMeshModifier*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::$$c::_set_$$9__77_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshSurface/<>c", "<>9__77_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<UnityEngine.AI.NavMeshBuildSource> <>9__77_1
::System::Predicate_1<::UnityEngine::AI::NavMeshBuildSource>* UnityEngine::AI::NavMeshSurface::$$c::_get_$$9__77_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::$$c::_get_$$9__77_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::UnityEngine::AI::NavMeshBuildSource>*>("UnityEngine.AI", "NavMeshSurface/<>c", "<>9__77_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<UnityEngine.AI.NavMeshBuildSource> <>9__77_1
void UnityEngine::AI::NavMeshSurface::$$c::_set_$$9__77_1(::System::Predicate_1<::UnityEngine::AI::NavMeshBuildSource>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::$$c::_set_$$9__77_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshSurface/<>c", "<>9__77_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<UnityEngine.AI.NavMeshBuildSource> <>9__77_2
::System::Predicate_1<::UnityEngine::AI::NavMeshBuildSource>* UnityEngine::AI::NavMeshSurface::$$c::_get_$$9__77_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::$$c::_get_$$9__77_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::UnityEngine::AI::NavMeshBuildSource>*>("UnityEngine.AI", "NavMeshSurface/<>c", "<>9__77_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<UnityEngine.AI.NavMeshBuildSource> <>9__77_2
void UnityEngine::AI::NavMeshSurface::$$c::_set_$$9__77_2(::System::Predicate_1<::UnityEngine::AI::NavMeshBuildSource>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::$$c::_set_$$9__77_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshSurface/<>c", "<>9__77_2", value)));
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface/<>c..cctor
void UnityEngine::AI::NavMeshSurface::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshSurface/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface/<>c.<AppendModifierVolumes>b__76_0
bool UnityEngine::AI::NavMeshSurface::$$c::$AppendModifierVolumes$b__76_0(::UnityEngine::AI::NavMeshModifierVolume* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::$$c::<AppendModifierVolumes>b__76_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppendModifierVolumes>b__76_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface/<>c.<CollectSources>b__77_0
bool UnityEngine::AI::NavMeshSurface::$$c::$CollectSources$b__77_0(::UnityEngine::AI::NavMeshModifier* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::$$c::<CollectSources>b__77_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CollectSources>b__77_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface/<>c.<CollectSources>b__77_1
bool UnityEngine::AI::NavMeshSurface::$$c::$CollectSources$b__77_1(::UnityEngine::AI::NavMeshBuildSource x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::$$c::<CollectSources>b__77_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CollectSources>b__77_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: UnityEngine.AI.NavMeshSurface/<>c.<CollectSources>b__77_2
bool UnityEngine::AI::NavMeshSurface::$$c::$CollectSources$b__77_2(::UnityEngine::AI::NavMeshBuildSource x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshSurface::$$c::<CollectSources>b__77_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CollectSources>b__77_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.CodeAnalysis.EmbeddedAttribute
#include "Microsoft/CodeAnalysis/EmbeddedAttribute_____.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.IsReadOnlyAttribute
#include "System/Runtime/CompilerServices/IsReadOnlyAttribute____.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.NullableAttribute
#include "System/Runtime/CompilerServices/NullableAttribute_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] NullableFlags
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Runtime::CompilerServices::NullableAttribute_::dyn_NullableFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::NullableAttribute_::dyn_NullableFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NullableFlags"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.NullableContextAttribute
#include "System/Runtime/CompilerServices/NullableContextAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte Flag
[[deprecated("Use field access instead!")]] uint8_t& System::Runtime::CompilerServices::NullableContextAttribute::dyn_Flag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::NullableContextAttribute::dyn_Flag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Flag"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.CodeAnalysis.NotNullAttribute
#include "System/Diagnostics/CodeAnalysis/NotNullAttribute_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.CodeAnalysis.NotNullWhenAttribute
#include "System/Diagnostics/CodeAnalysis/NotNullWhenAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <ReturnValue>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::CodeAnalysis::NotNullWhenAttribute::dyn_$ReturnValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::CodeAnalysis::NotNullWhenAttribute::dyn_$ReturnValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReturnValue>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.ConstructorHandling
#include "Newtonsoft/Json/ConstructorHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ConstructorHandling Default
::Newtonsoft::Json::ConstructorHandling Newtonsoft::Json::ConstructorHandling::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ConstructorHandling::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ConstructorHandling>("Newtonsoft.Json", "ConstructorHandling", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ConstructorHandling Default
void Newtonsoft::Json::ConstructorHandling::_set_Default(::Newtonsoft::Json::ConstructorHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ConstructorHandling::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ConstructorHandling", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ConstructorHandling AllowNonPublicDefaultConstructor
::Newtonsoft::Json::ConstructorHandling Newtonsoft::Json::ConstructorHandling::_get_AllowNonPublicDefaultConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ConstructorHandling::_get_AllowNonPublicDefaultConstructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ConstructorHandling>("Newtonsoft.Json", "ConstructorHandling", "AllowNonPublicDefaultConstructor"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ConstructorHandling AllowNonPublicDefaultConstructor
void Newtonsoft::Json::ConstructorHandling::_set_AllowNonPublicDefaultConstructor(::Newtonsoft::Json::ConstructorHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ConstructorHandling::_set_AllowNonPublicDefaultConstructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ConstructorHandling", "AllowNonPublicDefaultConstructor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::ConstructorHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ConstructorHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.DateFormatHandling
#include "Newtonsoft/Json/DateFormatHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateFormatHandling IsoDateFormat
::Newtonsoft::Json::DateFormatHandling Newtonsoft::Json::DateFormatHandling::_get_IsoDateFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateFormatHandling::_get_IsoDateFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateFormatHandling>("Newtonsoft.Json", "DateFormatHandling", "IsoDateFormat"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateFormatHandling IsoDateFormat
void Newtonsoft::Json::DateFormatHandling::_set_IsoDateFormat(::Newtonsoft::Json::DateFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateFormatHandling::_set_IsoDateFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateFormatHandling", "IsoDateFormat", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateFormatHandling MicrosoftDateFormat
::Newtonsoft::Json::DateFormatHandling Newtonsoft::Json::DateFormatHandling::_get_MicrosoftDateFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateFormatHandling::_get_MicrosoftDateFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateFormatHandling>("Newtonsoft.Json", "DateFormatHandling", "MicrosoftDateFormat"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateFormatHandling MicrosoftDateFormat
void Newtonsoft::Json::DateFormatHandling::_set_MicrosoftDateFormat(::Newtonsoft::Json::DateFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateFormatHandling::_set_MicrosoftDateFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateFormatHandling", "MicrosoftDateFormat", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::DateFormatHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateFormatHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.DateParseHandling
#include "Newtonsoft/Json/DateParseHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateParseHandling None
::Newtonsoft::Json::DateParseHandling Newtonsoft::Json::DateParseHandling::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateParseHandling>("Newtonsoft.Json", "DateParseHandling", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateParseHandling None
void Newtonsoft::Json::DateParseHandling::_set_None(::Newtonsoft::Json::DateParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateParseHandling", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateParseHandling DateTime
::Newtonsoft::Json::DateParseHandling Newtonsoft::Json::DateParseHandling::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateParseHandling>("Newtonsoft.Json", "DateParseHandling", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateParseHandling DateTime
void Newtonsoft::Json::DateParseHandling::_set_DateTime(::Newtonsoft::Json::DateParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateParseHandling", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateParseHandling DateTimeOffset
::Newtonsoft::Json::DateParseHandling Newtonsoft::Json::DateParseHandling::_get_DateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_get_DateTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateParseHandling>("Newtonsoft.Json", "DateParseHandling", "DateTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateParseHandling DateTimeOffset
void Newtonsoft::Json::DateParseHandling::_set_DateTimeOffset(::Newtonsoft::Json::DateParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_set_DateTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateParseHandling", "DateTimeOffset", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::DateParseHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.DateTimeZoneHandling
#include "Newtonsoft/Json/DateTimeZoneHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateTimeZoneHandling Local
::Newtonsoft::Json::DateTimeZoneHandling Newtonsoft::Json::DateTimeZoneHandling::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateTimeZoneHandling>("Newtonsoft.Json", "DateTimeZoneHandling", "Local"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateTimeZoneHandling Local
void Newtonsoft::Json::DateTimeZoneHandling::_set_Local(::Newtonsoft::Json::DateTimeZoneHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateTimeZoneHandling", "Local", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateTimeZoneHandling Utc
::Newtonsoft::Json::DateTimeZoneHandling Newtonsoft::Json::DateTimeZoneHandling::_get_Utc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_get_Utc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateTimeZoneHandling>("Newtonsoft.Json", "DateTimeZoneHandling", "Utc"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateTimeZoneHandling Utc
void Newtonsoft::Json::DateTimeZoneHandling::_set_Utc(::Newtonsoft::Json::DateTimeZoneHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_set_Utc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateTimeZoneHandling", "Utc", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateTimeZoneHandling Unspecified
::Newtonsoft::Json::DateTimeZoneHandling Newtonsoft::Json::DateTimeZoneHandling::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateTimeZoneHandling>("Newtonsoft.Json", "DateTimeZoneHandling", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateTimeZoneHandling Unspecified
void Newtonsoft::Json::DateTimeZoneHandling::_set_Unspecified(::Newtonsoft::Json::DateTimeZoneHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateTimeZoneHandling", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateTimeZoneHandling RoundtripKind
::Newtonsoft::Json::DateTimeZoneHandling Newtonsoft::Json::DateTimeZoneHandling::_get_RoundtripKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_get_RoundtripKind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateTimeZoneHandling>("Newtonsoft.Json", "DateTimeZoneHandling", "RoundtripKind"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateTimeZoneHandling RoundtripKind
void Newtonsoft::Json::DateTimeZoneHandling::_set_RoundtripKind(::Newtonsoft::Json::DateTimeZoneHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_set_RoundtripKind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateTimeZoneHandling", "RoundtripKind", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::DateTimeZoneHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.DefaultJsonNameTable
#include "Newtonsoft/Json/DefaultJsonNameTable.hpp"
// Including type: Newtonsoft.Json.DefaultJsonNameTable/Entry
#include "Newtonsoft/Json/DefaultJsonNameTable_Entry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 HashCodeRandomizer
int Newtonsoft::Json::DefaultJsonNameTable::_get_HashCodeRandomizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultJsonNameTable::_get_HashCodeRandomizer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Newtonsoft.Json", "DefaultJsonNameTable", "HashCodeRandomizer"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 HashCodeRandomizer
void Newtonsoft::Json::DefaultJsonNameTable::_set_HashCodeRandomizer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultJsonNameTable::_set_HashCodeRandomizer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DefaultJsonNameTable", "HashCodeRandomizer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _count
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::DefaultJsonNameTable::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultJsonNameTable::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.DefaultJsonNameTable/Entry[] _entries
[[deprecated("Use field access instead!")]] ::ArrayW<::Newtonsoft::Json::DefaultJsonNameTable::Entry*>& Newtonsoft::Json::DefaultJsonNameTable::dyn__entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultJsonNameTable::dyn__entries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entries"))->offset;
  return *reinterpret_cast<::ArrayW<::Newtonsoft::Json::DefaultJsonNameTable::Entry*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _mask
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::DefaultJsonNameTable::dyn__mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultJsonNameTable::dyn__mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.DefaultJsonNameTable..cctor
void Newtonsoft::Json::DefaultJsonNameTable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultJsonNameTable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "DefaultJsonNameTable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.DefaultJsonNameTable.Add
::StringW Newtonsoft::Json::DefaultJsonNameTable::Add(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultJsonNameTable::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, key);
}
// Autogenerated method: Newtonsoft.Json.DefaultJsonNameTable.AddEntry
::StringW Newtonsoft::Json::DefaultJsonNameTable::AddEntry(::StringW str, int hashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultJsonNameTable::AddEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(hashCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, str, hashCode);
}
// Autogenerated method: Newtonsoft.Json.DefaultJsonNameTable.Grow
void Newtonsoft::Json::DefaultJsonNameTable::Grow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultJsonNameTable::Grow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.DefaultJsonNameTable.TextEquals
bool Newtonsoft::Json::DefaultJsonNameTable::TextEquals(::StringW str1, ::ArrayW<::Il2CppChar> str2, int str2Start, int str2Length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultJsonNameTable::TextEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "DefaultJsonNameTable", "TextEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(str2Start), ::il2cpp_utils::ExtractType(str2Length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str1, str2, str2Start, str2Length);
}
// Autogenerated method: Newtonsoft.Json.DefaultJsonNameTable.Get
::StringW Newtonsoft::Json::DefaultJsonNameTable::Get(::ArrayW<::Il2CppChar> key, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultJsonNameTable::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonNameTable*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, key, start, length);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.DefaultJsonNameTable/Entry
#include "Newtonsoft/Json/DefaultJsonNameTable_Entry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.String Value
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::DefaultJsonNameTable::Entry::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultJsonNameTable::Entry::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 HashCode
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::DefaultJsonNameTable::Entry::dyn_HashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultJsonNameTable::Entry::dyn_HashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Newtonsoft.Json.DefaultJsonNameTable/Entry Next
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::DefaultJsonNameTable::Entry*& Newtonsoft::Json::DefaultJsonNameTable::Entry::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultJsonNameTable::Entry::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::DefaultJsonNameTable::Entry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.DefaultValueHandling
#include "Newtonsoft/Json/DefaultValueHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DefaultValueHandling Include
::Newtonsoft::Json::DefaultValueHandling Newtonsoft::Json::DefaultValueHandling::_get_Include() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_get_Include");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DefaultValueHandling>("Newtonsoft.Json", "DefaultValueHandling", "Include"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DefaultValueHandling Include
void Newtonsoft::Json::DefaultValueHandling::_set_Include(::Newtonsoft::Json::DefaultValueHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_set_Include");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DefaultValueHandling", "Include", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DefaultValueHandling Ignore
::Newtonsoft::Json::DefaultValueHandling Newtonsoft::Json::DefaultValueHandling::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DefaultValueHandling>("Newtonsoft.Json", "DefaultValueHandling", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DefaultValueHandling Ignore
void Newtonsoft::Json::DefaultValueHandling::_set_Ignore(::Newtonsoft::Json::DefaultValueHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DefaultValueHandling", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DefaultValueHandling Populate
::Newtonsoft::Json::DefaultValueHandling Newtonsoft::Json::DefaultValueHandling::_get_Populate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_get_Populate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DefaultValueHandling>("Newtonsoft.Json", "DefaultValueHandling", "Populate"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DefaultValueHandling Populate
void Newtonsoft::Json::DefaultValueHandling::_set_Populate(::Newtonsoft::Json::DefaultValueHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_set_Populate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DefaultValueHandling", "Populate", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DefaultValueHandling IgnoreAndPopulate
::Newtonsoft::Json::DefaultValueHandling Newtonsoft::Json::DefaultValueHandling::_get_IgnoreAndPopulate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_get_IgnoreAndPopulate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DefaultValueHandling>("Newtonsoft.Json", "DefaultValueHandling", "IgnoreAndPopulate"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DefaultValueHandling IgnoreAndPopulate
void Newtonsoft::Json::DefaultValueHandling::_set_IgnoreAndPopulate(::Newtonsoft::Json::DefaultValueHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::_set_IgnoreAndPopulate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DefaultValueHandling", "IgnoreAndPopulate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::DefaultValueHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DefaultValueHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.FloatFormatHandling
#include "Newtonsoft/Json/FloatFormatHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.FloatFormatHandling String
::Newtonsoft::Json::FloatFormatHandling Newtonsoft::Json::FloatFormatHandling::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::FloatFormatHandling>("Newtonsoft.Json", "FloatFormatHandling", "String"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.FloatFormatHandling String
void Newtonsoft::Json::FloatFormatHandling::_set_String(::Newtonsoft::Json::FloatFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "FloatFormatHandling", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.FloatFormatHandling Symbol
::Newtonsoft::Json::FloatFormatHandling Newtonsoft::Json::FloatFormatHandling::_get_Symbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_get_Symbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::FloatFormatHandling>("Newtonsoft.Json", "FloatFormatHandling", "Symbol"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.FloatFormatHandling Symbol
void Newtonsoft::Json::FloatFormatHandling::_set_Symbol(::Newtonsoft::Json::FloatFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_set_Symbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "FloatFormatHandling", "Symbol", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.FloatFormatHandling DefaultValue
::Newtonsoft::Json::FloatFormatHandling Newtonsoft::Json::FloatFormatHandling::_get_DefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_get_DefaultValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::FloatFormatHandling>("Newtonsoft.Json", "FloatFormatHandling", "DefaultValue"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.FloatFormatHandling DefaultValue
void Newtonsoft::Json::FloatFormatHandling::_set_DefaultValue(::Newtonsoft::Json::FloatFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_set_DefaultValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "FloatFormatHandling", "DefaultValue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::FloatFormatHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.FloatParseHandling
#include "Newtonsoft/Json/FloatParseHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.FloatParseHandling Double
::Newtonsoft::Json::FloatParseHandling Newtonsoft::Json::FloatParseHandling::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatParseHandling::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::FloatParseHandling>("Newtonsoft.Json", "FloatParseHandling", "Double"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.FloatParseHandling Double
void Newtonsoft::Json::FloatParseHandling::_set_Double(::Newtonsoft::Json::FloatParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatParseHandling::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "FloatParseHandling", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.FloatParseHandling Decimal
::Newtonsoft::Json::FloatParseHandling Newtonsoft::Json::FloatParseHandling::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatParseHandling::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::FloatParseHandling>("Newtonsoft.Json", "FloatParseHandling", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.FloatParseHandling Decimal
void Newtonsoft::Json::FloatParseHandling::_set_Decimal(::Newtonsoft::Json::FloatParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatParseHandling::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "FloatParseHandling", "Decimal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::FloatParseHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatParseHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Formatting
#include "Newtonsoft/Json/Formatting.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Formatting None
::Newtonsoft::Json::Formatting Newtonsoft::Json::Formatting::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Formatting::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Formatting>("Newtonsoft.Json", "Formatting", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Formatting None
void Newtonsoft::Json::Formatting::_set_None(::Newtonsoft::Json::Formatting value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Formatting::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "Formatting", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Formatting Indented
::Newtonsoft::Json::Formatting Newtonsoft::Json::Formatting::_get_Indented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Formatting::_get_Indented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Formatting>("Newtonsoft.Json", "Formatting", "Indented"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Formatting Indented
void Newtonsoft::Json::Formatting::_set_Indented(::Newtonsoft::Json::Formatting value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Formatting::_set_Indented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "Formatting", "Indented", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Formatting::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Formatting::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.IJsonLineInfo
#include "Newtonsoft/Json/IJsonLineInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.IJsonLineInfo.HasLineInfo
bool Newtonsoft::Json::IJsonLineInfo::HasLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::IJsonLineInfo::HasLineInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::IJsonLineInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.IJsonLineInfo.get_LineNumber
int Newtonsoft::Json::IJsonLineInfo::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::IJsonLineInfo::get_LineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::IJsonLineInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.IJsonLineInfo.get_LinePosition
int Newtonsoft::Json::IJsonLineInfo::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::IJsonLineInfo::get_LinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::IJsonLineInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonConstructorAttribute
#include "Newtonsoft/Json/JsonConstructorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.JsonContainerAttribute
#include "Newtonsoft/Json/JsonContainerAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Serialization.NamingStrategy
#include "Newtonsoft/Json/Serialization/NamingStrategy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type <ItemConverterType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::JsonContainerAttribute::dyn_$ItemConverterType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn_$ItemConverterType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemConverterType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] <ItemConverterParameters>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& Newtonsoft::Json::JsonContainerAttribute::dyn_$ItemConverterParameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn_$ItemConverterParameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemConverterParameters>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.NamingStrategy <NamingStrategyInstance>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::NamingStrategy*& Newtonsoft::Json::JsonContainerAttribute::dyn_$NamingStrategyInstance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn_$NamingStrategyInstance$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NamingStrategyInstance>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::NamingStrategy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> _isReference
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& Newtonsoft::Json::JsonContainerAttribute::dyn__isReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn__isReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isReference"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> _itemIsReference
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& Newtonsoft::Json::JsonContainerAttribute::dyn__itemIsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn__itemIsReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemIsReference"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> _itemReferenceLoopHandling
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& Newtonsoft::Json::JsonContainerAttribute::dyn__itemReferenceLoopHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn__itemReferenceLoopHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemReferenceLoopHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.TypeNameHandling> _itemTypeNameHandling
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& Newtonsoft::Json::JsonContainerAttribute::dyn__itemTypeNameHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn__itemTypeNameHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemTypeNameHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type _namingStrategyType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::JsonContainerAttribute::dyn__namingStrategyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn__namingStrategyType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namingStrategyType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] _namingStrategyParameters
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& Newtonsoft::Json::JsonContainerAttribute::dyn__namingStrategyParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn__namingStrategyParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namingStrategyParameters"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonContainerAttribute.get_ItemConverterType
::System::Type* Newtonsoft::Json::JsonContainerAttribute::get_ItemConverterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::get_ItemConverterType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemConverterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonContainerAttribute.get_ItemConverterParameters
::ArrayW<::Il2CppObject*> Newtonsoft::Json::JsonContainerAttribute::get_ItemConverterParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::get_ItemConverterParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemConverterParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonContainerAttribute.get_NamingStrategyType
::System::Type* Newtonsoft::Json::JsonContainerAttribute::get_NamingStrategyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::get_NamingStrategyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamingStrategyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonContainerAttribute.get_NamingStrategyParameters
::ArrayW<::Il2CppObject*> Newtonsoft::Json::JsonContainerAttribute::get_NamingStrategyParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::get_NamingStrategyParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamingStrategyParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonContainerAttribute.get_NamingStrategyInstance
::Newtonsoft::Json::Serialization::NamingStrategy* Newtonsoft::Json::JsonContainerAttribute::get_NamingStrategyInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::get_NamingStrategyInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamingStrategyInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::NamingStrategy*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonContainerAttribute.set_NamingStrategyInstance
void Newtonsoft::Json::JsonContainerAttribute::set_NamingStrategyInstance(::Newtonsoft::Json::Serialization::NamingStrategy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::set_NamingStrategyInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NamingStrategyInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.JsonConvert
#include "Newtonsoft/Json/JsonConvert.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: Newtonsoft.Json.JsonSerializerSettings
#include "Newtonsoft/Json/JsonSerializerSettings.hpp"
// Including type: Newtonsoft.Json.FloatFormatHandling
#include "Newtonsoft/Json/FloatFormatHandling.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: Newtonsoft.Json.StringEscapeHandling
#include "Newtonsoft/Json/StringEscapeHandling.hpp"
// Including type: Newtonsoft.Json.Formatting
#include "Newtonsoft/Json/Formatting.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Func`1<Newtonsoft.Json.JsonSerializerSettings> <DefaultSettings>k__BackingField
::System::Func_1<::Newtonsoft::Json::JsonSerializerSettings*>* Newtonsoft::Json::JsonConvert::_get_$DefaultSettings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_get_$DefaultSettings$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::Newtonsoft::Json::JsonSerializerSettings*>*>("Newtonsoft.Json", "JsonConvert", "<DefaultSettings>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`1<Newtonsoft.Json.JsonSerializerSettings> <DefaultSettings>k__BackingField
void Newtonsoft::Json::JsonConvert::_set_$DefaultSettings$k__BackingField(::System::Func_1<::Newtonsoft::Json::JsonSerializerSettings*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_set_$DefaultSettings$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonConvert", "<DefaultSettings>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String True
::StringW Newtonsoft::Json::JsonConvert::_get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_get_True");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json", "JsonConvert", "True"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String True
void Newtonsoft::Json::JsonConvert::_set_True(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_set_True");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonConvert", "True", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String False
::StringW Newtonsoft::Json::JsonConvert::_get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_get_False");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json", "JsonConvert", "False"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String False
void Newtonsoft::Json::JsonConvert::_set_False(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_set_False");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonConvert", "False", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String Null
::StringW Newtonsoft::Json::JsonConvert::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json", "JsonConvert", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String Null
void Newtonsoft::Json::JsonConvert::_set_Null(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonConvert", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String Undefined
::StringW Newtonsoft::Json::JsonConvert::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json", "JsonConvert", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String Undefined
void Newtonsoft::Json::JsonConvert::_set_Undefined(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonConvert", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String PositiveInfinity
::StringW Newtonsoft::Json::JsonConvert::_get_PositiveInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_get_PositiveInfinity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json", "JsonConvert", "PositiveInfinity"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String PositiveInfinity
void Newtonsoft::Json::JsonConvert::_set_PositiveInfinity(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_set_PositiveInfinity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonConvert", "PositiveInfinity", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String NegativeInfinity
::StringW Newtonsoft::Json::JsonConvert::_get_NegativeInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_get_NegativeInfinity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json", "JsonConvert", "NegativeInfinity"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String NegativeInfinity
void Newtonsoft::Json::JsonConvert::_set_NegativeInfinity(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_set_NegativeInfinity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonConvert", "NegativeInfinity", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String NaN
::StringW Newtonsoft::Json::JsonConvert::_get_NaN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_get_NaN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Newtonsoft.Json", "JsonConvert", "NaN"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String NaN
void Newtonsoft::Json::JsonConvert::_set_NaN(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::_set_NaN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonConvert", "NaN", value));
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.get_DefaultSettings
::System::Func_1<::Newtonsoft::Json::JsonSerializerSettings*>* Newtonsoft::Json::JsonConvert::get_DefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::get_DefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "get_DefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<::Newtonsoft::Json::JsonSerializerSettings*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.ToString
::StringW Newtonsoft::Json::JsonConvert::ToString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.ToString
::StringW Newtonsoft::Json::JsonConvert::ToString(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.ToString
::StringW Newtonsoft::Json::JsonConvert::ToString(float value, ::Newtonsoft::Json::FloatFormatHandling floatFormatHandling, ::Il2CppChar quoteChar, bool nullable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(floatFormatHandling), ::il2cpp_utils::ExtractType(quoteChar), ::il2cpp_utils::ExtractType(nullable)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, floatFormatHandling, quoteChar, nullable);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.EnsureFloatFormat
::StringW Newtonsoft::Json::JsonConvert::EnsureFloatFormat(double value, ::StringW text, ::Newtonsoft::Json::FloatFormatHandling floatFormatHandling, ::Il2CppChar quoteChar, bool nullable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::EnsureFloatFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "EnsureFloatFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(floatFormatHandling), ::il2cpp_utils::ExtractType(quoteChar), ::il2cpp_utils::ExtractType(nullable)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, text, floatFormatHandling, quoteChar, nullable);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.ToString
::StringW Newtonsoft::Json::JsonConvert::ToString(double value, ::Newtonsoft::Json::FloatFormatHandling floatFormatHandling, ::Il2CppChar quoteChar, bool nullable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(floatFormatHandling), ::il2cpp_utils::ExtractType(quoteChar), ::il2cpp_utils::ExtractType(nullable)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, floatFormatHandling, quoteChar, nullable);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.EnsureDecimalPlace
::StringW Newtonsoft::Json::JsonConvert::EnsureDecimalPlace(double value, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::EnsureDecimalPlace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "EnsureDecimalPlace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, text);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.EnsureDecimalPlace
::StringW Newtonsoft::Json::JsonConvert::EnsureDecimalPlace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::EnsureDecimalPlace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "EnsureDecimalPlace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.ToString
::StringW Newtonsoft::Json::JsonConvert::ToString(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.ToString
::StringW Newtonsoft::Json::JsonConvert::ToString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.ToString
::StringW Newtonsoft::Json::JsonConvert::ToString(::StringW value, ::Il2CppChar delimiter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(delimiter)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, delimiter);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.ToString
::StringW Newtonsoft::Json::JsonConvert::ToString(::StringW value, ::Il2CppChar delimiter, ::Newtonsoft::Json::StringEscapeHandling stringEscapeHandling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(delimiter), ::il2cpp_utils::ExtractType(stringEscapeHandling)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, delimiter, stringEscapeHandling);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.SerializeObject
::StringW Newtonsoft::Json::JsonConvert::SerializeObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::SerializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "SerializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.SerializeObject
::StringW Newtonsoft::Json::JsonConvert::SerializeObject(::Il2CppObject* value, ::Newtonsoft::Json::Formatting formatting) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::SerializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "SerializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatting)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, formatting);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.SerializeObject
::StringW Newtonsoft::Json::JsonConvert::SerializeObject(::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializerSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::SerializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "SerializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, settings);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.SerializeObject
::StringW Newtonsoft::Json::JsonConvert::SerializeObject(::Il2CppObject* value, ::System::Type* type, ::Newtonsoft::Json::JsonSerializerSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::SerializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "SerializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type, settings);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.SerializeObject
::StringW Newtonsoft::Json::JsonConvert::SerializeObject(::Il2CppObject* value, ::Newtonsoft::Json::Formatting formatting, ::Newtonsoft::Json::JsonSerializerSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::SerializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "SerializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatting), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, formatting, settings);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.SerializeObject
::StringW Newtonsoft::Json::JsonConvert::SerializeObject(::Il2CppObject* value, ::System::Type* type, ::Newtonsoft::Json::Formatting formatting, ::Newtonsoft::Json::JsonSerializerSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::SerializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "SerializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(formatting), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type, formatting, settings);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.SerializeObjectInternal
::StringW Newtonsoft::Json::JsonConvert::SerializeObjectInternal(::Il2CppObject* value, ::System::Type* type, ::Newtonsoft::Json::JsonSerializer* jsonSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::SerializeObjectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "SerializeObjectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(jsonSerializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type, jsonSerializer);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert.DeserializeObject
::Il2CppObject* Newtonsoft::Json::JsonConvert::DeserializeObject(::StringW value, ::System::Type* type, ::Newtonsoft::Json::JsonSerializerSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::DeserializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", "DeserializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type, settings);
}
// Autogenerated method: Newtonsoft.Json.JsonConvert..cctor
void Newtonsoft::Json::JsonConvert::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConvert::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonConvert", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.JsonConverter.WriteJson
void Newtonsoft::Json::JsonConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.JsonConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::JsonConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.JsonConverter.CanConvert
bool Newtonsoft::Json::JsonConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.JsonConverter.get_CanRead
bool Newtonsoft::Json::JsonConverter::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverter::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonConverter.get_CanWrite
bool Newtonsoft::Json::JsonConverter::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverter::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonConverter*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.JsonConverterAttribute
#include "Newtonsoft/Json/JsonConverterAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _converterType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::JsonConverterAttribute::dyn__converterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverterAttribute::dyn__converterType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_converterType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object[] <ConverterParameters>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& Newtonsoft::Json::JsonConverterAttribute::dyn_$ConverterParameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverterAttribute::dyn_$ConverterParameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ConverterParameters>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonConverterAttribute.get_ConverterType
::System::Type* Newtonsoft::Json::JsonConverterAttribute::get_ConverterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverterAttribute::get_ConverterType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConverterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonConverterAttribute.get_ConverterParameters
::ArrayW<::Il2CppObject*> Newtonsoft::Json::JsonConverterAttribute::get_ConverterParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonConverterAttribute::get_ConverterParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConverterParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonConverterCollection
#include "Newtonsoft/Json/JsonConverterCollection.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonException
#include "Newtonsoft/Json/JsonException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonExtensionDataAttribute
#include "Newtonsoft/Json/JsonExtensionDataAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <WriteData>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::JsonExtensionDataAttribute::dyn_$WriteData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::dyn_$WriteData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WriteData>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ReadData>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::JsonExtensionDataAttribute::dyn_$ReadData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::dyn_$ReadData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReadData>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonExtensionDataAttribute.get_WriteData
bool Newtonsoft::Json::JsonExtensionDataAttribute::get_WriteData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::get_WriteData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonExtensionDataAttribute.get_ReadData
bool Newtonsoft::Json::JsonExtensionDataAttribute::get_ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::get_ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonNameTable
#include "Newtonsoft/Json/JsonNameTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.JsonNameTable.Get
::StringW Newtonsoft::Json::JsonNameTable::Get(::ArrayW<::Il2CppChar> key, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonNameTable::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonNameTable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, key, start, length);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonObjectAttribute
#include "Newtonsoft/Json/JsonObjectAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.MemberSerialization _memberSerialization
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::MemberSerialization& Newtonsoft::Json::JsonObjectAttribute::dyn__memberSerialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonObjectAttribute::dyn__memberSerialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_memberSerialization"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::MemberSerialization*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.MissingMemberHandling> _missingMemberHandling
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::MissingMemberHandling>& Newtonsoft::Json::JsonObjectAttribute::dyn__missingMemberHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonObjectAttribute::dyn__missingMemberHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missingMemberHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::MissingMemberHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.Required> _itemRequired
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::Required>& Newtonsoft::Json::JsonObjectAttribute::dyn__itemRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonObjectAttribute::dyn__itemRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemRequired"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::Required>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.NullValueHandling> _itemNullValueHandling
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>& Newtonsoft::Json::JsonObjectAttribute::dyn__itemNullValueHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonObjectAttribute::dyn__itemNullValueHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemNullValueHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonObjectAttribute.get_MemberSerialization
::Newtonsoft::Json::MemberSerialization Newtonsoft::Json::JsonObjectAttribute::get_MemberSerialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonObjectAttribute::get_MemberSerialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberSerialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::MemberSerialization, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonContainerType
#include "Newtonsoft/Json/JsonContainerType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonContainerType None
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonContainerType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonContainerType>("Newtonsoft.Json", "JsonContainerType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonContainerType None
void Newtonsoft::Json::JsonContainerType::_set_None(::Newtonsoft::Json::JsonContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonContainerType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonContainerType Object
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonContainerType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonContainerType>("Newtonsoft.Json", "JsonContainerType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonContainerType Object
void Newtonsoft::Json::JsonContainerType::_set_Object(::Newtonsoft::Json::JsonContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonContainerType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonContainerType Array
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonContainerType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonContainerType>("Newtonsoft.Json", "JsonContainerType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonContainerType Array
void Newtonsoft::Json::JsonContainerType::_set_Array(::Newtonsoft::Json::JsonContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonContainerType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonContainerType Constructor
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonContainerType::_get_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_get_Constructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonContainerType>("Newtonsoft.Json", "JsonContainerType", "Constructor"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonContainerType Constructor
void Newtonsoft::Json::JsonContainerType::_set_Constructor(::Newtonsoft::Json::JsonContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_set_Constructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonContainerType", "Constructor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::JsonContainerType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonPosition
#include "Newtonsoft/Json/JsonPosition.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IO.StringWriter
#include "System/IO/StringWriter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Newtonsoft.Json.IJsonLineInfo
#include "Newtonsoft/Json/IJsonLineInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] SpecialCharacters
::ArrayW<::Il2CppChar> Newtonsoft::Json::JsonPosition::_get_SpecialCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::_get_SpecialCharacters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("Newtonsoft.Json", "JsonPosition", "SpecialCharacters"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] SpecialCharacters
void Newtonsoft::Json::JsonPosition::_set_SpecialCharacters(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::_set_SpecialCharacters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonPosition", "SpecialCharacters", value));
}
// Autogenerated instance field getter
// Get instance field: Newtonsoft.Json.JsonContainerType Type
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonContainerType& Newtonsoft::Json::JsonPosition::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::dyn_Type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonContainerType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Position
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::JsonPosition::dyn_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::dyn_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String PropertyName
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::JsonPosition::dyn_PropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::dyn_PropertyName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean HasIndex
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::JsonPosition::dyn_HasIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::dyn_HasIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HasIndex"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition..ctor
Newtonsoft::Json::JsonPosition::JsonPosition(::Newtonsoft::Json::JsonContainerType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition.CalculateLength
int Newtonsoft::Json::JsonPosition::CalculateLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::CalculateLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CalculateLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition.WriteTo
void Newtonsoft::Json::JsonPosition::WriteTo(::System::Text::StringBuilder* sb, ByRef<::System::IO::StringWriter*> writer, ByRef<::ArrayW<::Il2CppChar>> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::WriteTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb, byref(writer), byref(buffer));
}
// Autogenerated method: Newtonsoft.Json.JsonPosition.TypeHasIndex
bool Newtonsoft::Json::JsonPosition::TypeHasIndex(::Newtonsoft::Json::JsonContainerType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::TypeHasIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonPosition", "TypeHasIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition.BuildPath
::StringW Newtonsoft::Json::JsonPosition::BuildPath(::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>* positions, ::System::Nullable_1<::Newtonsoft::Json::JsonPosition> currentPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::BuildPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonPosition", "BuildPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(currentPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, positions, currentPosition);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition.FormatMessage
::StringW Newtonsoft::Json::JsonPosition::FormatMessage(::Newtonsoft::Json::IJsonLineInfo* lineInfo, ::StringW path, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::FormatMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonPosition", "FormatMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineInfo), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineInfo, path, message);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition..cctor
void Newtonsoft::Json::JsonPosition::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonPosition", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.JsonPropertyAttribute
#include "Newtonsoft/Json/JsonPropertyAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.NullValueHandling> _nullValueHandling
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>& Newtonsoft::Json::JsonPropertyAttribute::dyn__nullValueHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__nullValueHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nullValueHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.DefaultValueHandling> _defaultValueHandling
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling>& Newtonsoft::Json::JsonPropertyAttribute::dyn__defaultValueHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__defaultValueHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultValueHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> _referenceLoopHandling
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& Newtonsoft::Json::JsonPropertyAttribute::dyn__referenceLoopHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__referenceLoopHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceLoopHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.ObjectCreationHandling> _objectCreationHandling
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling>& Newtonsoft::Json::JsonPropertyAttribute::dyn__objectCreationHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__objectCreationHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectCreationHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.TypeNameHandling> _typeNameHandling
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& Newtonsoft::Json::JsonPropertyAttribute::dyn__typeNameHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__typeNameHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeNameHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> _isReference
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& Newtonsoft::Json::JsonPropertyAttribute::dyn__isReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__isReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isReference"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Int32> _order
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& Newtonsoft::Json::JsonPropertyAttribute::dyn__order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_order"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.Required> _required
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::Required>& Newtonsoft::Json::JsonPropertyAttribute::dyn__required() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__required");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_required"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::Required>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> _itemIsReference
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& Newtonsoft::Json::JsonPropertyAttribute::dyn__itemIsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__itemIsReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemIsReference"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> _itemReferenceLoopHandling
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& Newtonsoft::Json::JsonPropertyAttribute::dyn__itemReferenceLoopHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__itemReferenceLoopHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemReferenceLoopHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.TypeNameHandling> _itemTypeNameHandling
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& Newtonsoft::Json::JsonPropertyAttribute::dyn__itemTypeNameHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn__itemTypeNameHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemTypeNameHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <ItemConverterType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::JsonPropertyAttribute::dyn_$ItemConverterType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn_$ItemConverterType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemConverterType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] <ItemConverterParameters>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& Newtonsoft::Json::JsonPropertyAttribute::dyn_$ItemConverterParameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn_$ItemConverterParameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemConverterParameters>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <NamingStrategyType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::JsonPropertyAttribute::dyn_$NamingStrategyType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn_$NamingStrategyType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NamingStrategyType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] <NamingStrategyParameters>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& Newtonsoft::Json::JsonPropertyAttribute::dyn_$NamingStrategyParameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn_$NamingStrategyParameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NamingStrategyParameters>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <PropertyName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::JsonPropertyAttribute::dyn_$PropertyName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::dyn_$PropertyName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PropertyName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonPropertyAttribute.get_ItemConverterType
::System::Type* Newtonsoft::Json::JsonPropertyAttribute::get_ItemConverterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::get_ItemConverterType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemConverterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonPropertyAttribute.get_ItemConverterParameters
::ArrayW<::Il2CppObject*> Newtonsoft::Json::JsonPropertyAttribute::get_ItemConverterParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::get_ItemConverterParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemConverterParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonPropertyAttribute.get_NamingStrategyType
::System::Type* Newtonsoft::Json::JsonPropertyAttribute::get_NamingStrategyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::get_NamingStrategyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamingStrategyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonPropertyAttribute.get_NamingStrategyParameters
::ArrayW<::Il2CppObject*> Newtonsoft::Json::JsonPropertyAttribute::get_NamingStrategyParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::get_NamingStrategyParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamingStrategyParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonPropertyAttribute.get_PropertyName
::StringW Newtonsoft::Json::JsonPropertyAttribute::get_PropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPropertyAttribute::get_PropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonContainerType
#include "Newtonsoft/Json/JsonContainerType.hpp"
// Including type: Newtonsoft.Json.JsonReaderException
#include "Newtonsoft/Json/JsonReaderException.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContract
#include "Newtonsoft/Json/Serialization/JsonContract.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.JsonToken _tokenType
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonToken& Newtonsoft::Json::JsonReader::dyn__tokenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::dyn__tokenType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tokenType"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::JsonReader::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char _quoteChar
[[deprecated("Use field access instead!")]] ::Il2CppChar& Newtonsoft::Json::JsonReader::dyn__quoteChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::dyn__quoteChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_quoteChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Newtonsoft.Json.JsonReader/State _currentState
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonReader::State& Newtonsoft::Json::JsonReader::dyn__currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::dyn__currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentState"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonReader::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.JsonPosition _currentPosition
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonPosition& Newtonsoft::Json::JsonReader::dyn__currentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::dyn__currentPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPosition"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonPosition*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo _culture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& Newtonsoft::Json::JsonReader::dyn__culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::dyn__culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.DateTimeZoneHandling _dateTimeZoneHandling
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::DateTimeZoneHandling& Newtonsoft::Json::JsonReader::dyn__dateTimeZoneHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::dyn__dateTimeZoneHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateTimeZoneHandling"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::DateTimeZoneHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int32> _maxDepth
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& Newtonsoft::Json::JsonReader::dyn__maxDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::dyn__maxDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxDepth"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasExceededMaxDepth
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::JsonReader::dyn__hasExceededMaxDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::dyn__hasExceededMaxDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasExceededMaxDepth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Newtonsoft.Json.DateParseHandling _dateParseHandling
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::DateParseHandling& Newtonsoft::Json::JsonReader::dyn__dateParseHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::dyn__dateParseHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateParseHandling"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::DateParseHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Newtonsoft.Json.FloatParseHandling _floatParseHandling
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::FloatParseHandling& Newtonsoft::Json::JsonReader::dyn__floatParseHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::dyn__floatParseHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_floatParseHandling"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::FloatParseHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _dateFormatString
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::JsonReader::dyn__dateFormatString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::dyn__dateFormatString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateFormatString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.JsonPosition> _stack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>*& Newtonsoft::Json::JsonReader::dyn__stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::dyn__stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <CloseInput>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::JsonReader::dyn_$CloseInput$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::dyn_$CloseInput$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CloseInput>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SupportMultipleContent>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::JsonReader::dyn_$SupportMultipleContent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::dyn_$SupportMultipleContent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SupportMultipleContent>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.get_CurrentState
::Newtonsoft::Json::JsonReader::State Newtonsoft::Json::JsonReader::get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::get_CurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonReader::State, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.get_CloseInput
bool Newtonsoft::Json::JsonReader::get_CloseInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::get_CloseInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CloseInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.set_CloseInput
void Newtonsoft::Json::JsonReader::set_CloseInput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::set_CloseInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CloseInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.get_SupportMultipleContent
bool Newtonsoft::Json::JsonReader::get_SupportMultipleContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::get_SupportMultipleContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportMultipleContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.set_SupportMultipleContent
void Newtonsoft::Json::JsonReader::set_SupportMultipleContent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::set_SupportMultipleContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SupportMultipleContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.get_DateTimeZoneHandling
::Newtonsoft::Json::DateTimeZoneHandling Newtonsoft::Json::JsonReader::get_DateTimeZoneHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::get_DateTimeZoneHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateTimeZoneHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::DateTimeZoneHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.set_DateTimeZoneHandling
void Newtonsoft::Json::JsonReader::set_DateTimeZoneHandling(::Newtonsoft::Json::DateTimeZoneHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::set_DateTimeZoneHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DateTimeZoneHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.get_DateParseHandling
::Newtonsoft::Json::DateParseHandling Newtonsoft::Json::JsonReader::get_DateParseHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::get_DateParseHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateParseHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::DateParseHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.set_DateParseHandling
void Newtonsoft::Json::JsonReader::set_DateParseHandling(::Newtonsoft::Json::DateParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::set_DateParseHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DateParseHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.get_FloatParseHandling
::Newtonsoft::Json::FloatParseHandling Newtonsoft::Json::JsonReader::get_FloatParseHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::get_FloatParseHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FloatParseHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::FloatParseHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.set_FloatParseHandling
void Newtonsoft::Json::JsonReader::set_FloatParseHandling(::Newtonsoft::Json::FloatParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::set_FloatParseHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FloatParseHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.get_DateFormatString
::StringW Newtonsoft::Json::JsonReader::get_DateFormatString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::get_DateFormatString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateFormatString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.set_DateFormatString
void Newtonsoft::Json::JsonReader::set_DateFormatString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::set_DateFormatString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DateFormatString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.get_MaxDepth
::System::Nullable_1<int> Newtonsoft::Json::JsonReader::get_MaxDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::get_MaxDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.set_MaxDepth
void Newtonsoft::Json::JsonReader::set_MaxDepth(::System::Nullable_1<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::set_MaxDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.get_TokenType
::Newtonsoft::Json::JsonToken Newtonsoft::Json::JsonReader::get_TokenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::get_TokenType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonToken, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.get_Value
::Il2CppObject* Newtonsoft::Json::JsonReader::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.get_ValueType
::System::Type* Newtonsoft::Json::JsonReader::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.get_Depth
int Newtonsoft::Json::JsonReader::get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::get_Depth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.get_Path
::StringW Newtonsoft::Json::JsonReader::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::get_Path");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.get_Culture
::System::Globalization::CultureInfo* Newtonsoft::Json::JsonReader::get_Culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::get_Culture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Culture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.set_Culture
void Newtonsoft::Json::JsonReader::set_Culture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::set_Culture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Culture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.GetPosition
::Newtonsoft::Json::JsonPosition Newtonsoft::Json::JsonReader::GetPosition(int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonPosition, false>(this, ___internal__method, depth);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.Push
void Newtonsoft::Json::JsonReader::Push(::Newtonsoft::Json::JsonContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.Pop
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonReader::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonContainerType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.Peek
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::Peek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonContainerType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.Read
bool Newtonsoft::Json::JsonReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadAsInt32
::System::Nullable_1<int> Newtonsoft::Json::JsonReader::ReadAsInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadAsInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadInt32String
::System::Nullable_1<int> Newtonsoft::Json::JsonReader::ReadInt32String(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadInt32String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt32String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(this, ___internal__method, s);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadAsString
::StringW Newtonsoft::Json::JsonReader::ReadAsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadAsString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadAsBytes
::ArrayW<uint8_t> Newtonsoft::Json::JsonReader::ReadAsBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadAsBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray
::ArrayW<uint8_t> Newtonsoft::Json::JsonReader::ReadArrayIntoByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadArrayIntoByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadArrayIntoByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadArrayElementIntoByteArrayReportDone
bool Newtonsoft::Json::JsonReader::ReadArrayElementIntoByteArrayReportDone(::System::Collections::Generic::List_1<uint8_t>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadArrayElementIntoByteArrayReportDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadArrayElementIntoByteArrayReportDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadAsDouble
::System::Nullable_1<double> Newtonsoft::Json::JsonReader::ReadAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadAsDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<double>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadDoubleString
::System::Nullable_1<double> Newtonsoft::Json::JsonReader::ReadDoubleString(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadDoubleString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDoubleString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<double>, false>(this, ___internal__method, s);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadAsBoolean
::System::Nullable_1<bool> Newtonsoft::Json::JsonReader::ReadAsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadAsBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadBooleanString
::System::Nullable_1<bool> Newtonsoft::Json::JsonReader::ReadBooleanString(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadBooleanString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBooleanString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method, s);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadAsDecimal
::System::Nullable_1<::System::Decimal> Newtonsoft::Json::JsonReader::ReadAsDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadAsDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::Decimal>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadDecimalString
::System::Nullable_1<::System::Decimal> Newtonsoft::Json::JsonReader::ReadDecimalString(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadDecimalString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDecimalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::Decimal>, false>(this, ___internal__method, s);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadAsDateTime
::System::Nullable_1<::System::DateTime> Newtonsoft::Json::JsonReader::ReadAsDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadAsDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadDateTimeString
::System::Nullable_1<::System::DateTime> Newtonsoft::Json::JsonReader::ReadDateTimeString(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadDateTimeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDateTimeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTime>, false>(this, ___internal__method, s);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset
::System::Nullable_1<::System::DateTimeOffset> Newtonsoft::Json::JsonReader::ReadAsDateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadAsDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString
::System::Nullable_1<::System::DateTimeOffset> Newtonsoft::Json::JsonReader::ReadDateTimeOffsetString(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadDateTimeOffsetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDateTimeOffsetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTimeOffset>, false>(this, ___internal__method, s);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReaderReadAndAssert
void Newtonsoft::Json::JsonReader::ReaderReadAndAssert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReaderReadAndAssert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReaderReadAndAssert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.CreateUnexpectedEndException
::Newtonsoft::Json::JsonReaderException* Newtonsoft::Json::JsonReader::CreateUnexpectedEndException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::CreateUnexpectedEndException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUnexpectedEndException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonReaderException*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject
void Newtonsoft::Json::JsonReader::ReadIntoWrappedTypeObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadIntoWrappedTypeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadIntoWrappedTypeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.Skip
void Newtonsoft::Json::JsonReader::Skip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::Skip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Skip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.SetToken
void Newtonsoft::Json::JsonReader::SetToken(::Newtonsoft::Json::JsonToken newToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::SetToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newToken);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.SetToken
void Newtonsoft::Json::JsonReader::SetToken(::Newtonsoft::Json::JsonToken newToken, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::SetToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newToken), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newToken, value);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.SetToken
void Newtonsoft::Json::JsonReader::SetToken(::Newtonsoft::Json::JsonToken newToken, ::Il2CppObject* value, bool updateIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::SetToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newToken), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(updateIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newToken, value, updateIndex);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.SetPostValueState
void Newtonsoft::Json::JsonReader::SetPostValueState(bool updateIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::SetPostValueState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPostValueState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateIndex);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue
void Newtonsoft::Json::JsonReader::UpdateScopeWithFinishedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::UpdateScopeWithFinishedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScopeWithFinishedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ValidateEnd
void Newtonsoft::Json::JsonReader::ValidateEnd(::Newtonsoft::Json::JsonToken endToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ValidateEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, endToken);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent
void Newtonsoft::Json::JsonReader::SetStateBasedOnCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::SetStateBasedOnCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStateBasedOnCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.SetFinished
void Newtonsoft::Json::JsonReader::SetFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::SetFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.GetTypeForCloseToken
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonReader::GetTypeForCloseToken(::Newtonsoft::Json::JsonToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::GetTypeForCloseToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeForCloseToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonContainerType, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.System.IDisposable.Dispose
void Newtonsoft::Json::JsonReader::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.Dispose
void Newtonsoft::Json::JsonReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.Close
void Newtonsoft::Json::JsonReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Newtonsoft::Json::JsonReader*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadAndAssert
void Newtonsoft::Json::JsonReader::ReadAndAssert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadAndAssert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAndAssert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadForTypeAndAssert
void Newtonsoft::Json::JsonReader::ReadForTypeAndAssert(::Newtonsoft::Json::Serialization::JsonContract* contract, bool hasConverter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadForTypeAndAssert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadForTypeAndAssert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(hasConverter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, contract, hasConverter);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadForType
bool Newtonsoft::Json::JsonReader::ReadForType(::Newtonsoft::Json::Serialization::JsonContract* contract, bool hasConverter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(hasConverter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, contract, hasConverter);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.ReadAndMoveToContent
bool Newtonsoft::Json::JsonReader::ReadAndMoveToContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::ReadAndMoveToContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAndMoveToContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.MoveToContent
bool Newtonsoft::Json::JsonReader::MoveToContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::MoveToContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonReader.GetContentToken
::Newtonsoft::Json::JsonToken Newtonsoft::Json::JsonReader::GetContentToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::GetContentToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContentToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonToken, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonReader/State
#include "Newtonsoft/Json/JsonReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonReader/State Start
::Newtonsoft::Json::JsonReader::State Newtonsoft::Json::JsonReader::State::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonReader::State>("Newtonsoft.Json", "JsonReader/State", "Start"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonReader/State Start
void Newtonsoft::Json::JsonReader::State::_set_Start(::Newtonsoft::Json::JsonReader::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonReader/State", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonReader/State Complete
::Newtonsoft::Json::JsonReader::State Newtonsoft::Json::JsonReader::State::_get_Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_get_Complete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonReader::State>("Newtonsoft.Json", "JsonReader/State", "Complete"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonReader/State Complete
void Newtonsoft::Json::JsonReader::State::_set_Complete(::Newtonsoft::Json::JsonReader::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_set_Complete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonReader/State", "Complete", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonReader/State Property
::Newtonsoft::Json::JsonReader::State Newtonsoft::Json::JsonReader::State::_get_Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_get_Property");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonReader::State>("Newtonsoft.Json", "JsonReader/State", "Property"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonReader/State Property
void Newtonsoft::Json::JsonReader::State::_set_Property(::Newtonsoft::Json::JsonReader::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_set_Property");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonReader/State", "Property", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonReader/State ObjectStart
::Newtonsoft::Json::JsonReader::State Newtonsoft::Json::JsonReader::State::_get_ObjectStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_get_ObjectStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonReader::State>("Newtonsoft.Json", "JsonReader/State", "ObjectStart"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonReader/State ObjectStart
void Newtonsoft::Json::JsonReader::State::_set_ObjectStart(::Newtonsoft::Json::JsonReader::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_set_ObjectStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonReader/State", "ObjectStart", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonReader/State Object
::Newtonsoft::Json::JsonReader::State Newtonsoft::Json::JsonReader::State::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonReader::State>("Newtonsoft.Json", "JsonReader/State", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonReader/State Object
void Newtonsoft::Json::JsonReader::State::_set_Object(::Newtonsoft::Json::JsonReader::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonReader/State", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonReader/State ArrayStart
::Newtonsoft::Json::JsonReader::State Newtonsoft::Json::JsonReader::State::_get_ArrayStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_get_ArrayStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonReader::State>("Newtonsoft.Json", "JsonReader/State", "ArrayStart"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonReader/State ArrayStart
void Newtonsoft::Json::JsonReader::State::_set_ArrayStart(::Newtonsoft::Json::JsonReader::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_set_ArrayStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonReader/State", "ArrayStart", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonReader/State Array
::Newtonsoft::Json::JsonReader::State Newtonsoft::Json::JsonReader::State::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonReader::State>("Newtonsoft.Json", "JsonReader/State", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonReader/State Array
void Newtonsoft::Json::JsonReader::State::_set_Array(::Newtonsoft::Json::JsonReader::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonReader/State", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonReader/State Closed
::Newtonsoft::Json::JsonReader::State Newtonsoft::Json::JsonReader::State::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonReader::State>("Newtonsoft.Json", "JsonReader/State", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonReader/State Closed
void Newtonsoft::Json::JsonReader::State::_set_Closed(::Newtonsoft::Json::JsonReader::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonReader/State", "Closed", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonReader/State PostValue
::Newtonsoft::Json::JsonReader::State Newtonsoft::Json::JsonReader::State::_get_PostValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_get_PostValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonReader::State>("Newtonsoft.Json", "JsonReader/State", "PostValue"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonReader/State PostValue
void Newtonsoft::Json::JsonReader::State::_set_PostValue(::Newtonsoft::Json::JsonReader::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_set_PostValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonReader/State", "PostValue", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonReader/State ConstructorStart
::Newtonsoft::Json::JsonReader::State Newtonsoft::Json::JsonReader::State::_get_ConstructorStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_get_ConstructorStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonReader::State>("Newtonsoft.Json", "JsonReader/State", "ConstructorStart"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonReader/State ConstructorStart
void Newtonsoft::Json::JsonReader::State::_set_ConstructorStart(::Newtonsoft::Json::JsonReader::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_set_ConstructorStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonReader/State", "ConstructorStart", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonReader/State Constructor
::Newtonsoft::Json::JsonReader::State Newtonsoft::Json::JsonReader::State::_get_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_get_Constructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonReader::State>("Newtonsoft.Json", "JsonReader/State", "Constructor"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonReader/State Constructor
void Newtonsoft::Json::JsonReader::State::_set_Constructor(::Newtonsoft::Json::JsonReader::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_set_Constructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonReader/State", "Constructor", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonReader/State Error
::Newtonsoft::Json::JsonReader::State Newtonsoft::Json::JsonReader::State::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonReader::State>("Newtonsoft.Json", "JsonReader/State", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonReader/State Error
void Newtonsoft::Json::JsonReader::State::_set_Error(::Newtonsoft::Json::JsonReader::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonReader/State", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonReader/State Finished
::Newtonsoft::Json::JsonReader::State Newtonsoft::Json::JsonReader::State::_get_Finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_get_Finished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonReader::State>("Newtonsoft.Json", "JsonReader/State", "Finished"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonReader/State Finished
void Newtonsoft::Json::JsonReader::State::_set_Finished(::Newtonsoft::Json::JsonReader::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::_set_Finished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonReader/State", "Finished", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::JsonReader::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReader::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonReaderException
#include "Newtonsoft/Json/JsonReaderException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.IJsonLineInfo
#include "Newtonsoft/Json/IJsonLineInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <LineNumber>k__BackingField
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::JsonReaderException::dyn_$LineNumber$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReaderException::dyn_$LineNumber$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LineNumber>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <LinePosition>k__BackingField
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::JsonReaderException::dyn_$LinePosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReaderException::dyn_$LinePosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LinePosition>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Path>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::JsonReaderException::dyn_$Path$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReaderException::dyn_$Path$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Path>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonReaderException.Create
::Newtonsoft::Json::JsonReaderException* Newtonsoft::Json::JsonReaderException::Create(::Newtonsoft::Json::JsonReader* reader, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReaderException::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonReaderException", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonReaderException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, message);
}
// Autogenerated method: Newtonsoft.Json.JsonReaderException.Create
::Newtonsoft::Json::JsonReaderException* Newtonsoft::Json::JsonReaderException::Create(::Newtonsoft::Json::JsonReader* reader, ::StringW message, ::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReaderException::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonReaderException", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(ex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonReaderException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, message, ex);
}
// Autogenerated method: Newtonsoft.Json.JsonReaderException.Create
::Newtonsoft::Json::JsonReaderException* Newtonsoft::Json::JsonReaderException::Create(::Newtonsoft::Json::IJsonLineInfo* lineInfo, ::StringW path, ::StringW message, ::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonReaderException::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonReaderException", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineInfo), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(ex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonReaderException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineInfo, path, message, ex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonSerializationException
#include "Newtonsoft/Json/JsonSerializationException.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.IJsonLineInfo
#include "Newtonsoft/Json/IJsonLineInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <LineNumber>k__BackingField
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::JsonSerializationException::dyn_$LineNumber$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializationException::dyn_$LineNumber$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LineNumber>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <LinePosition>k__BackingField
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::JsonSerializationException::dyn_$LinePosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializationException::dyn_$LinePosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LinePosition>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Path>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::JsonSerializationException::dyn_$Path$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializationException::dyn_$Path$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Path>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializationException.Create
::Newtonsoft::Json::JsonSerializationException* Newtonsoft::Json::JsonSerializationException::Create(::Newtonsoft::Json::JsonReader* reader, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializationException::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonSerializationException", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonSerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, message);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializationException.Create
::Newtonsoft::Json::JsonSerializationException* Newtonsoft::Json::JsonSerializationException::Create(::Newtonsoft::Json::JsonReader* reader, ::StringW message, ::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializationException::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonSerializationException", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(ex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonSerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, message, ex);
}
// Autogenerated method: Newtonsoft.Json.JsonSerializationException.Create
::Newtonsoft::Json::JsonSerializationException* Newtonsoft::Json::JsonSerializationException::Create(::Newtonsoft::Json::IJsonLineInfo* lineInfo, ::StringW path, ::StringW message, ::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonSerializationException::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonSerializationException", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineInfo), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(ex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonSerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineInfo, path, message, ex);
}
