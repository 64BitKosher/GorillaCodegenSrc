// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Util.Guid
#include "Pathfinding/Util/Guid.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String hex
::StringW Pathfinding::Util::Guid::_get_hex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_get_hex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Pathfinding.Util", "Guid", "hex"));
}
// Autogenerated static field setter
// Set static field: static private System.String hex
void Pathfinding::Util::Guid::_set_hex(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_set_hex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "Guid", "hex", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Pathfinding.Util.Guid zero
::Pathfinding::Util::Guid Pathfinding::Util::Guid::_get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_get_zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Util::Guid>("Pathfinding.Util", "Guid", "zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly Pathfinding.Util.Guid zero
void Pathfinding::Util::Guid::_set_zero(::Pathfinding::Util::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_set_zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "Guid", "zero", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String zeroString
::StringW Pathfinding::Util::Guid::_get_zeroString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_get_zeroString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Pathfinding.Util", "Guid", "zeroString"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String zeroString
void Pathfinding::Util::Guid::_set_zeroString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_set_zeroString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "Guid", "zeroString", value));
}
// Autogenerated static field getter
// Get static field: static private System.Random random
::System::Random* Pathfinding::Util::Guid::_get_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_get_random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Random*>("Pathfinding.Util", "Guid", "random"));
}
// Autogenerated static field setter
// Set static field: static private System.Random random
void Pathfinding::Util::Guid::_set_random(::System::Random* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_set_random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "Guid", "random", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.StringBuilder text
::System::Text::StringBuilder* Pathfinding::Util::Guid::_get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_get_text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::StringBuilder*>("Pathfinding.Util", "Guid", "text"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.StringBuilder text
void Pathfinding::Util::Guid::_set_text(::System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_set_text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "Guid", "text", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 _a
[[deprecated("Use field access instead!")]] uint64_t& Pathfinding::Util::Guid::dyn__a() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::dyn__a");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_a"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 _b
[[deprecated("Use field access instead!")]] uint64_t& Pathfinding::Util::Guid::dyn__b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::dyn__b");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Util.Guid..ctor
Pathfinding::Util::Guid::Guid(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated method: Pathfinding.Util.Guid..ctor
Pathfinding::Util::Guid::Guid(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str);
}
// Autogenerated method: Pathfinding.Util.Guid.Parse
::Pathfinding::Util::Guid Pathfinding::Util::Guid::Parse(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Guid", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: Pathfinding.Util.Guid.SwapEndianness
uint64_t Pathfinding::Util::Guid::SwapEndianness(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::SwapEndianness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Guid", "SwapEndianness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Pathfinding.Util.Guid.ToByteArray
::ArrayW<uint8_t> Pathfinding::Util::Guid::ToByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.Guid.NewGuid
::Pathfinding::Util::Guid Pathfinding::Util::Guid::NewGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::NewGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Guid", "NewGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Util.Guid..cctor
void Pathfinding::Util::Guid::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Guid", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Util.Guid.Equals
bool Pathfinding::Util::Guid::Equals(::Il2CppObject* _rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, _rhs);
}
// Autogenerated method: Pathfinding.Util.Guid.GetHashCode
int Pathfinding::Util::Guid::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.Guid.ToString
::StringW Pathfinding::Util::Guid::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.Guid.op_Equality
bool Pathfinding::Util::operator ==(const ::Pathfinding::Util::Guid& lhs, const ::Pathfinding::Util::Guid& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Guid", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.Util.Guid.op_Inequality
bool Pathfinding::Util::operator !=(const ::Pathfinding::Util::Guid& lhs, const ::Pathfinding::Util::Guid& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Guid", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.GraphGizmoHelper
#include "Pathfinding/Util/GraphGizmoHelper.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: Pathfinding.Util.RetainedGizmos/Builder
#include "Pathfinding/Util/RetainedGizmos_Builder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Util.RetainedGizmos/Hasher <hasher>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::RetainedGizmos::Hasher& Pathfinding::Util::GraphGizmoHelper::dyn_$hasher$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::dyn_$hasher$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hasher>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::RetainedGizmos::Hasher*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Util.RetainedGizmos gizmos
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::RetainedGizmos*& Pathfinding::Util::GraphGizmoHelper::dyn_gizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::dyn_gizmos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gizmos"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::RetainedGizmos**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PathHandler debugData
[[deprecated("Use field access instead!")]] ::Pathfinding::PathHandler*& Pathfinding::Util::GraphGizmoHelper::dyn_debugData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::dyn_debugData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugData"))->offset;
  return *reinterpret_cast<::Pathfinding::PathHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 debugPathID
[[deprecated("Use field access instead!")]] uint16_t& Pathfinding::Util::GraphGizmoHelper::dyn_debugPathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::dyn_debugPathID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugPathID"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GraphDebugMode debugMode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphDebugMode& Pathfinding::Util::GraphGizmoHelper::dyn_debugMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::dyn_debugMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugMode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphDebugMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean showSearchTree
[[deprecated("Use field access instead!")]] bool& Pathfinding::Util::GraphGizmoHelper::dyn_showSearchTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::dyn_showSearchTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showSearchTree"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single debugFloor
[[deprecated("Use field access instead!")]] float& Pathfinding::Util::GraphGizmoHelper::dyn_debugFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::dyn_debugFloor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugFloor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single debugRoof
[[deprecated("Use field access instead!")]] float& Pathfinding::Util::GraphGizmoHelper::dyn_debugRoof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::dyn_debugRoof");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugRoof"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Util.RetainedGizmos/Builder <builder>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::RetainedGizmos::Builder*& Pathfinding::Util::GraphGizmoHelper::dyn_$builder$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::dyn_$builder$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<builder>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::RetainedGizmos::Builder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 drawConnectionStart
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Util::GraphGizmoHelper::dyn_drawConnectionStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::dyn_drawConnectionStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drawConnectionStart"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color drawConnectionColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Pathfinding::Util::GraphGizmoHelper::dyn_drawConnectionColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::dyn_drawConnectionColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drawConnectionColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`1<Pathfinding.GraphNode> drawConnection
[[deprecated("Use field access instead!")]] ::System::Action_1<::Pathfinding::GraphNode*>*& Pathfinding::Util::GraphGizmoHelper::dyn_drawConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::dyn_drawConnection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drawConnection"))->offset;
  return *reinterpret_cast<::System::Action_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Util.GraphGizmoHelper.get_hasher
::Pathfinding::Util::RetainedGizmos::Hasher Pathfinding::Util::GraphGizmoHelper::get_hasher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::get_hasher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::RetainedGizmos::Hasher, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.GraphGizmoHelper.set_hasher
void Pathfinding::Util::GraphGizmoHelper::set_hasher(::Pathfinding::Util::RetainedGizmos::Hasher value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::set_hasher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Util.GraphGizmoHelper.get_builder
::Pathfinding::Util::RetainedGizmos::Builder* Pathfinding::Util::GraphGizmoHelper::get_builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::get_builder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_builder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::RetainedGizmos::Builder*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.GraphGizmoHelper.set_builder
void Pathfinding::Util::GraphGizmoHelper::set_builder(::Pathfinding::Util::RetainedGizmos::Builder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::set_builder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_builder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Util.GraphGizmoHelper.Init
void Pathfinding::Util::GraphGizmoHelper::Init(::GlobalNamespace::AstarPath* active, ::Pathfinding::Util::RetainedGizmos::Hasher hasher, ::Pathfinding::Util::RetainedGizmos* gizmos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active), ::il2cpp_utils::ExtractType(hasher), ::il2cpp_utils::ExtractType(gizmos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active, hasher, gizmos);
}
// Autogenerated method: Pathfinding.Util.GraphGizmoHelper.OnEnterPool
void Pathfinding::Util::GraphGizmoHelper::OnEnterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::OnEnterPool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::GraphGizmoHelper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.GraphGizmoHelper.DrawConnections
void Pathfinding::Util::GraphGizmoHelper::DrawConnections(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::DrawConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.Util.GraphGizmoHelper.DrawConnection
void Pathfinding::Util::GraphGizmoHelper::DrawConnection(::Pathfinding::GraphNode* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::DrawConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: Pathfinding.Util.GraphGizmoHelper.NodeColor
::UnityEngine::Color Pathfinding::Util::GraphGizmoHelper::NodeColor(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::NodeColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NodeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.Util.GraphGizmoHelper.InSearchTree
bool Pathfinding::Util::GraphGizmoHelper::InSearchTree(::Pathfinding::GraphNode* node, ::Pathfinding::PathHandler* handler, uint16_t pathID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::InSearchTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "GraphGizmoHelper", "InSearchTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(pathID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, handler, pathID);
}
// Autogenerated method: Pathfinding.Util.GraphGizmoHelper.DrawWireTriangle
void Pathfinding::Util::GraphGizmoHelper::DrawWireTriangle(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 c, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::DrawWireTriangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawWireTriangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b, c, color);
}
// Autogenerated method: Pathfinding.Util.GraphGizmoHelper.DrawTriangles
void Pathfinding::Util::GraphGizmoHelper::DrawTriangles(::ArrayW<::UnityEngine::Vector3> vertices, ::ArrayW<::UnityEngine::Color> colors, int numTriangles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::DrawTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(numTriangles)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertices, colors, numTriangles);
}
// Autogenerated method: Pathfinding.Util.GraphGizmoHelper.DrawWireTriangles
void Pathfinding::Util::GraphGizmoHelper::DrawWireTriangles(::ArrayW<::UnityEngine::Vector3> vertices, ::ArrayW<::UnityEngine::Color> colors, int numTriangles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::DrawWireTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawWireTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(numTriangles)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertices, colors, numTriangles);
}
// Autogenerated method: Pathfinding.Util.GraphGizmoHelper.Submit
void Pathfinding::Util::GraphGizmoHelper::Submit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::Submit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Submit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.GraphGizmoHelper.System.IDisposable.Dispose
void Pathfinding::Util::GraphGizmoHelper::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::GraphGizmoHelper::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::GraphGizmoHelper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.RetainedGizmos
#include "Pathfinding/Util/RetainedGizmos.hpp"
// Including type: Pathfinding.Util.RetainedGizmos/Hasher
#include "Pathfinding/Util/RetainedGizmos_Hasher.hpp"
// Including type: Pathfinding.Util.RetainedGizmos/Builder
#include "Pathfinding/Util/RetainedGizmos_Builder.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: Pathfinding.Util.GraphGizmoHelper
#include "Pathfinding/Util/GraphGizmoHelper.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.Util.RetainedGizmos/MeshWithHash> meshes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::Util::RetainedGizmos::MeshWithHash>*& Pathfinding::Util::RetainedGizmos::dyn_meshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::dyn_meshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::Util::RetainedGizmos::MeshWithHash>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.UInt64> usedHashes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<uint64_t>*& Pathfinding::Util::RetainedGizmos::dyn_usedHashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::dyn_usedHashes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usedHashes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<uint64_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.UInt64> existingHashes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<uint64_t>*& Pathfinding::Util::RetainedGizmos::dyn_existingHashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::dyn_existingHashes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "existingHashes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<uint64_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Stack`1<UnityEngine.Mesh> cachedMeshes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::UnityEngine::Mesh*>*& Pathfinding::Util::RetainedGizmos::dyn_cachedMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::dyn_cachedMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedMeshes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::UnityEngine::Mesh*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material surfaceMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Pathfinding::Util::RetainedGizmos::dyn_surfaceMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::dyn_surfaceMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "surfaceMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material lineMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Pathfinding::Util::RetainedGizmos::dyn_lineMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::dyn_lineMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos.GetSingleFrameGizmoHelper
::Pathfinding::Util::GraphGizmoHelper* Pathfinding::Util::RetainedGizmos::GetSingleFrameGizmoHelper(::GlobalNamespace::AstarPath* active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::GetSingleFrameGizmoHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSingleFrameGizmoHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::GraphGizmoHelper*, false>(this, ___internal__method, active);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos.GetGizmoHelper
::Pathfinding::Util::GraphGizmoHelper* Pathfinding::Util::RetainedGizmos::GetGizmoHelper(::GlobalNamespace::AstarPath* active, ::Pathfinding::Util::RetainedGizmos::Hasher hasher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::GetGizmoHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGizmoHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active), ::il2cpp_utils::ExtractType(hasher)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::GraphGizmoHelper*, false>(this, ___internal__method, active, hasher);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos.PoolMesh
void Pathfinding::Util::RetainedGizmos::PoolMesh(::UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::PoolMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PoolMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos.GetMesh
::UnityEngine::Mesh* Pathfinding::Util::RetainedGizmos::GetMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::GetMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos.HasCachedMesh
bool Pathfinding::Util::RetainedGizmos::HasCachedMesh(::Pathfinding::Util::RetainedGizmos::Hasher hasher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::HasCachedMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCachedMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasher)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hasher);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos.Draw
bool Pathfinding::Util::RetainedGizmos::Draw(::Pathfinding::Util::RetainedGizmos::Hasher hasher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Draw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Draw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasher)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hasher);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos.DrawExisting
void Pathfinding::Util::RetainedGizmos::DrawExisting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::DrawExisting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawExisting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos.FinalizeDraw
void Pathfinding::Util::RetainedGizmos::FinalizeDraw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::FinalizeDraw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeDraw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos.ClearCache
void Pathfinding::Util::RetainedGizmos::ClearCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::ClearCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos.RemoveUnusedMeshes
void Pathfinding::Util::RetainedGizmos::RemoveUnusedMeshes(::System::Collections::Generic::List_1<::Pathfinding::Util::RetainedGizmos::MeshWithHash>* meshList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::RemoveUnusedMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveUnusedMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, meshList);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.RetainedGizmos/Hasher
#include "Pathfinding/Util/RetainedGizmos_Hasher.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 hash
[[deprecated("Use field access instead!")]] uint64_t& Pathfinding::Util::RetainedGizmos::Hasher::dyn_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Hasher::dyn_hash");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean includePathSearchInfo
[[deprecated("Use field access instead!")]] bool& Pathfinding::Util::RetainedGizmos::Hasher::dyn_includePathSearchInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Hasher::dyn_includePathSearchInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includePathSearchInfo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean includeAreaInfo
[[deprecated("Use field access instead!")]] bool& Pathfinding::Util::RetainedGizmos::Hasher::dyn_includeAreaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Hasher::dyn_includeAreaInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeAreaInfo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PathHandler debugData
[[deprecated("Use field access instead!")]] ::Pathfinding::PathHandler*& Pathfinding::Util::RetainedGizmos::Hasher::dyn_debugData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Hasher::dyn_debugData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugData"))->offset;
  return *reinterpret_cast<::Pathfinding::PathHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos/Hasher..ctor
Pathfinding::Util::RetainedGizmos::Hasher::Hasher(::GlobalNamespace::AstarPath* active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Hasher::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos/Hasher.AddHash
void Pathfinding::Util::RetainedGizmos::Hasher::AddHash(int hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Hasher::AddHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hash);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos/Hasher.HashNode
void Pathfinding::Util::RetainedGizmos::Hasher::HashNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Hasher::HashNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "HashNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos/Hasher.get_Hash
uint64_t Pathfinding::Util::RetainedGizmos::Hasher::get_Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Hasher::get_Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.RetainedGizmos/Builder
#include "Pathfinding/Util/RetainedGizmos_Builder.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: Pathfinding.Util.RetainedGizmos/Hasher
#include "Pathfinding/Util/RetainedGizmos_Hasher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> lines
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Pathfinding::Util::RetainedGizmos::Builder::dyn_lines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Builder::dyn_lines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lines"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Color32> lineColors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Color32>*& Pathfinding::Util::RetainedGizmos::Builder::dyn_lineColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Builder::dyn_lineColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineColors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Color32>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Mesh> meshes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Mesh*>*& Pathfinding::Util::RetainedGizmos::Builder::dyn_meshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Builder::dyn_meshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Mesh*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos/Builder.DrawMesh
void Pathfinding::Util::RetainedGizmos::Builder::DrawMesh(::Pathfinding::Util::RetainedGizmos* gizmos, ::ArrayW<::UnityEngine::Vector3> vertices, ::System::Collections::Generic::List_1<int>* triangles, ::ArrayW<::UnityEngine::Color> colors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Builder::DrawMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gizmos), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(colors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gizmos, vertices, triangles, colors);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos/Builder.DrawWireCube
void Pathfinding::Util::RetainedGizmos::Builder::DrawWireCube(::Pathfinding::Util::GraphTransform* tr, ::UnityEngine::Bounds bounds, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Builder::DrawWireCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawWireCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tr), ::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tr, bounds, color);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos/Builder.DrawLine
void Pathfinding::Util::RetainedGizmos::Builder::DrawLine(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Builder::DrawLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, color);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos/Builder.Submit
void Pathfinding::Util::RetainedGizmos::Builder::Submit(::Pathfinding::Util::RetainedGizmos* gizmos, ::Pathfinding::Util::RetainedGizmos::Hasher hasher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Builder::Submit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Submit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gizmos), ::il2cpp_utils::ExtractType(hasher)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gizmos, hasher);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos/Builder.SubmitMeshes
void Pathfinding::Util::RetainedGizmos::Builder::SubmitMeshes(::Pathfinding::Util::RetainedGizmos* gizmos, uint64_t hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Builder::SubmitMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gizmos), ::il2cpp_utils::ExtractType(hash)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gizmos, hash);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos/Builder.SubmitLines
void Pathfinding::Util::RetainedGizmos::Builder::SubmitLines(::Pathfinding::Util::RetainedGizmos* gizmos, uint64_t hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Builder::SubmitLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gizmos), ::il2cpp_utils::ExtractType(hash)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gizmos, hash);
}
// Autogenerated method: Pathfinding.Util.RetainedGizmos/Builder.Pathfinding.Util.IAstarPooledObject.OnEnterPool
void Pathfinding::Util::RetainedGizmos::Builder::Pathfinding_Util_IAstarPooledObject_OnEnterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::RetainedGizmos::Builder::Pathfinding.Util.IAstarPooledObject.OnEnterPool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::RetainedGizmos::Builder*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.ObstacleVertex
#include "Pathfinding/RVO/ObstacleVertex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean ignore
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::ObstacleVertex::dyn_ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::ObstacleVertex::dyn_ignore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignore"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::RVO::ObstacleVertex::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::ObstacleVertex::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 dir
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::ObstacleVertex::dyn_dir() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::ObstacleVertex::dyn_dir");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dir"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single height
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::ObstacleVertex::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::ObstacleVertex::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.RVOLayer layer
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVOLayer& Pathfinding::RVO::ObstacleVertex::dyn_layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::ObstacleVertex::dyn_layer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layer"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVOLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.ObstacleVertex next
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::ObstacleVertex*& Pathfinding::RVO::ObstacleVertex::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::ObstacleVertex::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::ObstacleVertex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.ObstacleVertex prev
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::ObstacleVertex*& Pathfinding::RVO::ObstacleVertex::dyn_prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::ObstacleVertex::dyn_prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prev"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::ObstacleVertex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.IAgent
#include "Pathfinding/RVO/IAgent.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: Pathfinding.RVO.RVOLayer
#include "Pathfinding/RVO/RVOLayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.RVO.ObstacleVertex
#include "Pathfinding/RVO/ObstacleVertex.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.RVO.IAgent.get_Position
::UnityEngine::Vector2 Pathfinding::RVO::IAgent::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.set_Position
void Pathfinding::RVO::IAgent::set_Position(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.IAgent.get_ElevationCoordinate
float Pathfinding::RVO::IAgent::get_ElevationCoordinate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_ElevationCoordinate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.set_ElevationCoordinate
void Pathfinding::RVO::IAgent::set_ElevationCoordinate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::set_ElevationCoordinate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.IAgent.get_CalculatedTargetPoint
::UnityEngine::Vector2 Pathfinding::RVO::IAgent::get_CalculatedTargetPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_CalculatedTargetPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.get_CalculatedSpeed
float Pathfinding::RVO::IAgent::get_CalculatedSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_CalculatedSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.SetTarget
void Pathfinding::RVO::IAgent::SetTarget(::UnityEngine::Vector2 targetPoint, float desiredSpeed, float maxSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::SetTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPoint, desiredSpeed, maxSpeed);
}
// Autogenerated method: Pathfinding.RVO.IAgent.get_Locked
bool Pathfinding::RVO::IAgent::get_Locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_Locked");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.set_Locked
void Pathfinding::RVO::IAgent::set_Locked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::set_Locked");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.IAgent.get_Radius
float Pathfinding::RVO::IAgent::get_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_Radius");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.set_Radius
void Pathfinding::RVO::IAgent::set_Radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::set_Radius");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.IAgent.get_Height
float Pathfinding::RVO::IAgent::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_Height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.set_Height
void Pathfinding::RVO::IAgent::set_Height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::set_Height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.IAgent.get_AgentTimeHorizon
float Pathfinding::RVO::IAgent::get_AgentTimeHorizon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_AgentTimeHorizon");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.set_AgentTimeHorizon
void Pathfinding::RVO::IAgent::set_AgentTimeHorizon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::set_AgentTimeHorizon");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.IAgent.get_ObstacleTimeHorizon
float Pathfinding::RVO::IAgent::get_ObstacleTimeHorizon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_ObstacleTimeHorizon");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.set_ObstacleTimeHorizon
void Pathfinding::RVO::IAgent::set_ObstacleTimeHorizon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::set_ObstacleTimeHorizon");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.IAgent.get_MaxNeighbours
int Pathfinding::RVO::IAgent::get_MaxNeighbours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_MaxNeighbours");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.set_MaxNeighbours
void Pathfinding::RVO::IAgent::set_MaxNeighbours(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::set_MaxNeighbours");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.IAgent.get_NeighbourCount
int Pathfinding::RVO::IAgent::get_NeighbourCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_NeighbourCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.get_Layer
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::IAgent::get_Layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_Layer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::RVOLayer, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.set_Layer
void Pathfinding::RVO::IAgent::set_Layer(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::set_Layer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.IAgent.get_CollidesWith
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::IAgent::get_CollidesWith() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_CollidesWith");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::RVOLayer, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.set_CollidesWith
void Pathfinding::RVO::IAgent::set_CollidesWith(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::set_CollidesWith");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.IAgent.get_DebugDraw
bool Pathfinding::RVO::IAgent::get_DebugDraw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_DebugDraw");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.set_DebugDraw
void Pathfinding::RVO::IAgent::set_DebugDraw(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::set_DebugDraw");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.IAgent.get_NeighbourObstacles
::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>* Pathfinding::RVO::IAgent::get_NeighbourObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_NeighbourObstacles");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.get_Priority
float Pathfinding::RVO::IAgent::get_Priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::get_Priority");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.IAgent.set_Priority
void Pathfinding::RVO::IAgent::set_Priority(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::set_Priority");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.IAgent.set_PreCalculationCallback
void Pathfinding::RVO::IAgent::set_PreCalculationCallback(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::set_PreCalculationCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.IAgent.SetCollisionNormal
void Pathfinding::RVO::IAgent::SetCollisionNormal(::UnityEngine::Vector2 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::SetCollisionNormal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, normal);
}
// Autogenerated method: Pathfinding.RVO.IAgent.ForceSetVelocity
void Pathfinding::RVO::IAgent::ForceSetVelocity(::UnityEngine::Vector2 velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::IAgent::ForceSetVelocity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::IAgent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, velocity);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.MovementPlane
#include "Pathfinding/RVO/MovementPlane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.MovementPlane XZ
::Pathfinding::RVO::MovementPlane Pathfinding::RVO::MovementPlane::_get_XZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::MovementPlane::_get_XZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::MovementPlane>("Pathfinding.RVO", "MovementPlane", "XZ"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.MovementPlane XZ
void Pathfinding::RVO::MovementPlane::_set_XZ(::Pathfinding::RVO::MovementPlane value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::MovementPlane::_set_XZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "MovementPlane", "XZ", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.MovementPlane XY
::Pathfinding::RVO::MovementPlane Pathfinding::RVO::MovementPlane::_get_XY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::MovementPlane::_get_XY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::MovementPlane>("Pathfinding.RVO", "MovementPlane", "XY"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.MovementPlane XY
void Pathfinding::RVO::MovementPlane::_set_XY(::Pathfinding::RVO::MovementPlane value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::MovementPlane::_set_XY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "MovementPlane", "XY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::RVO::MovementPlane::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::MovementPlane::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.RVOLayer
#include "Pathfinding/RVO/RVOLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer DefaultAgent
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_DefaultAgent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_DefaultAgent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "DefaultAgent"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer DefaultAgent
void Pathfinding::RVO::RVOLayer::_set_DefaultAgent(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_DefaultAgent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "DefaultAgent", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer DefaultObstacle
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_DefaultObstacle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_DefaultObstacle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "DefaultObstacle"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer DefaultObstacle
void Pathfinding::RVO::RVOLayer::_set_DefaultObstacle(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_DefaultObstacle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "DefaultObstacle", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer2
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer2"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer2
void Pathfinding::RVO::RVOLayer::_set_Layer2(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer2", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer3
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer3"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer3
void Pathfinding::RVO::RVOLayer::_set_Layer3(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer3", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer4
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer4"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer4
void Pathfinding::RVO::RVOLayer::_set_Layer4(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer4", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer5
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer5"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer5
void Pathfinding::RVO::RVOLayer::_set_Layer5(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer5", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer6
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer6"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer6
void Pathfinding::RVO::RVOLayer::_set_Layer6(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer6", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer7
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer7"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer7
void Pathfinding::RVO::RVOLayer::_set_Layer7(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer7", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer8
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer8"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer8
void Pathfinding::RVO::RVOLayer::_set_Layer8(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer8", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer9
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer9"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer9
void Pathfinding::RVO::RVOLayer::_set_Layer9(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer9", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer10
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer10"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer10
void Pathfinding::RVO::RVOLayer::_set_Layer10(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer10", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer11
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer11"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer11
void Pathfinding::RVO::RVOLayer::_set_Layer11(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer11", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer12
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer12"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer12
void Pathfinding::RVO::RVOLayer::_set_Layer12(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer12", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer13
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer13"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer13
void Pathfinding::RVO::RVOLayer::_set_Layer13(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer13", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer14
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer14"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer14
void Pathfinding::RVO::RVOLayer::_set_Layer14(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer14", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer15
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer15"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer15
void Pathfinding::RVO::RVOLayer::_set_Layer15(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer15", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer16
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer16"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer16
void Pathfinding::RVO::RVOLayer::_set_Layer16(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer16", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer17
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer17");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer17"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer17
void Pathfinding::RVO::RVOLayer::_set_Layer17(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer17");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer17", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer18
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer18");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer18"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer18
void Pathfinding::RVO::RVOLayer::_set_Layer18(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer18");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer18", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer19
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer19() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer19");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer19"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer19
void Pathfinding::RVO::RVOLayer::_set_Layer19(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer19");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer19", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer20
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer20");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer20"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer20
void Pathfinding::RVO::RVOLayer::_set_Layer20(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer20");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer20", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer21
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer21");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer21"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer21
void Pathfinding::RVO::RVOLayer::_set_Layer21(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer21");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer21", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer22
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer22");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer22"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer22
void Pathfinding::RVO::RVOLayer::_set_Layer22(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer22");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer22", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer23
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer23");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer23"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer23
void Pathfinding::RVO::RVOLayer::_set_Layer23(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer23");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer23", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer24
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer24");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer24"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer24
void Pathfinding::RVO::RVOLayer::_set_Layer24(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer24");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer24", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer25
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer25");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer25"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer25
void Pathfinding::RVO::RVOLayer::_set_Layer25(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer25");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer25", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer26
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer26() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer26");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer26"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer26
void Pathfinding::RVO::RVOLayer::_set_Layer26(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer26");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer26", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer27
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer27() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer27");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer27"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer27
void Pathfinding::RVO::RVOLayer::_set_Layer27(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer27");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer27", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer28
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer28() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer28");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer28"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer28
void Pathfinding::RVO::RVOLayer::_set_Layer28(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer28");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer28", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer29
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer29() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer29");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer29"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer29
void Pathfinding::RVO::RVOLayer::_set_Layer29(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer29");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer29", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOLayer Layer30
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::RVOLayer::_get_Layer30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_get_Layer30");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOLayer>("Pathfinding.RVO", "RVOLayer", "Layer30"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOLayer Layer30
void Pathfinding::RVO::RVOLayer::_set_Layer30(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::_set_Layer30");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOLayer", "Layer30", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::RVO::RVOLayer::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOLayer::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.Simulator
#include "Pathfinding/RVO/Simulator.hpp"
// Including type: Pathfinding.RVO.Simulator/WorkerContext
#include "Pathfinding/RVO/Simulator_WorkerContext.hpp"
// Including type: Pathfinding.RVO.Simulator/Worker
#include "Pathfinding/RVO/Simulator_Worker.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.RVO.Sampled.Agent
#include "Pathfinding/RVO/Sampled/Agent.hpp"
// Including type: Pathfinding.RVO.ObstacleVertex
#include "Pathfinding/RVO/ObstacleVertex.hpp"
// Including type: Pathfinding.RVO.RVOQuadtree
#include "Pathfinding/RVO/RVOQuadtree.hpp"
// Including type: Pathfinding.RVO.IAgent
#include "Pathfinding/RVO/IAgent.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: Pathfinding.RVO.RVOLayer
#include "Pathfinding/RVO/RVOLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean doubleBuffering
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::Simulator::dyn_doubleBuffering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::dyn_doubleBuffering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doubleBuffering"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single desiredDeltaTime
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Simulator::dyn_desiredDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::dyn_desiredDeltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "desiredDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.RVO.Simulator/Worker[] workers
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::RVO::Simulator::Worker*>& Pathfinding::RVO::Simulator::dyn_workers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::dyn_workers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workers"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::RVO::Simulator::Worker*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.RVO.Sampled.Agent> agents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::RVO::Sampled::Agent*>*& Pathfinding::RVO::Simulator::dyn_agents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::dyn_agents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::RVO::Sampled::Agent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.RVO.ObstacleVertex> obstacles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>*& Pathfinding::RVO::Simulator::dyn_obstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::dyn_obstacles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.RVOQuadtree <Quadtree>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVOQuadtree*& Pathfinding::RVO::Simulator::dyn_$Quadtree$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::dyn_$Quadtree$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Quadtree>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVOQuadtree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single deltaTime
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Simulator::dyn_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::dyn_deltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastStep
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Simulator::dyn_lastStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::dyn_lastStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean doUpdateObstacles
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::Simulator::dyn_doUpdateObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::dyn_doUpdateObstacles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doUpdateObstacles"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean doCleanObstacles
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::Simulator::dyn_doCleanObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::dyn_doCleanObstacles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doCleanObstacles"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single symmetryBreakingBias
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Simulator::dyn_symmetryBreakingBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::dyn_symmetryBreakingBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symmetryBreakingBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Pathfinding.RVO.MovementPlane movementPlane
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::MovementPlane& Pathfinding::RVO::Simulator::dyn_movementPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::dyn_movementPlane");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "movementPlane"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::MovementPlane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.Simulator/WorkerContext coroutineWorkerContext
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Simulator::WorkerContext*& Pathfinding::RVO::Simulator::dyn_coroutineWorkerContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::dyn_coroutineWorkerContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutineWorkerContext"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Simulator::WorkerContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RVO.Simulator.get_Quadtree
::Pathfinding::RVO::RVOQuadtree* Pathfinding::RVO::Simulator::get_Quadtree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::get_Quadtree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Quadtree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::RVOQuadtree*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator.set_Quadtree
void Pathfinding::RVO::Simulator::set_Quadtree(::Pathfinding::RVO::RVOQuadtree* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::set_Quadtree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Quadtree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Simulator.get_DeltaTime
float Pathfinding::RVO::Simulator::get_DeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::get_DeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator.get_Multithreading
bool Pathfinding::RVO::Simulator::get_Multithreading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::get_Multithreading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Multithreading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator.get_DesiredDeltaTime
float Pathfinding::RVO::Simulator::get_DesiredDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::get_DesiredDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DesiredDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator.set_DesiredDeltaTime
void Pathfinding::RVO::Simulator::set_DesiredDeltaTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::set_DesiredDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DesiredDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Simulator.GetAgents
::System::Collections::Generic::List_1<::Pathfinding::RVO::Sampled::Agent*>* Pathfinding::RVO::Simulator::GetAgents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::GetAgents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAgents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::RVO::Sampled::Agent*>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator.GetObstacles
::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>* Pathfinding::RVO::Simulator::GetObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::GetObstacles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObstacles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator.ClearAgents
void Pathfinding::RVO::Simulator::ClearAgents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::ClearAgents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAgents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator.OnDestroy
void Pathfinding::RVO::Simulator::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator.AddAgent
::Pathfinding::RVO::IAgent* Pathfinding::RVO::Simulator::AddAgent(::Pathfinding::RVO::IAgent* agent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::AddAgent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAgent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(agent)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::IAgent*, false>(this, ___internal__method, agent);
}
// Autogenerated method: Pathfinding.RVO.Simulator.AddAgent
::Pathfinding::RVO::IAgent* Pathfinding::RVO::Simulator::AddAgent(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::AddAgent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAgent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::IAgent*, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.RVO.Simulator.AddAgent
::Pathfinding::RVO::IAgent* Pathfinding::RVO::Simulator::AddAgent(::UnityEngine::Vector2 position, float elevationCoordinate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::AddAgent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAgent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(elevationCoordinate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::IAgent*, false>(this, ___internal__method, position, elevationCoordinate);
}
// Autogenerated method: Pathfinding.RVO.Simulator.RemoveAgent
void Pathfinding::RVO::Simulator::RemoveAgent(::Pathfinding::RVO::IAgent* agent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::RemoveAgent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAgent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(agent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, agent);
}
// Autogenerated method: Pathfinding.RVO.Simulator.AddObstacle
::Pathfinding::RVO::ObstacleVertex* Pathfinding::RVO::Simulator::AddObstacle(::Pathfinding::RVO::ObstacleVertex* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::AddObstacle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddObstacle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::ObstacleVertex*, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.RVO.Simulator.AddObstacle
::Pathfinding::RVO::ObstacleVertex* Pathfinding::RVO::Simulator::AddObstacle(::ArrayW<::UnityEngine::Vector3> vertices, float height, bool cycle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::AddObstacle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddObstacle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(cycle)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::ObstacleVertex*, false>(this, ___internal__method, vertices, height, cycle);
}
// Autogenerated method: Pathfinding.RVO.Simulator.AddObstacle
::Pathfinding::RVO::ObstacleVertex* Pathfinding::RVO::Simulator::AddObstacle(::ArrayW<::UnityEngine::Vector3> vertices, float height, ::UnityEngine::Matrix4x4 matrix, ::Pathfinding::RVO::RVOLayer layer, bool cycle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::AddObstacle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddObstacle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(matrix), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(cycle)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::ObstacleVertex*, false>(this, ___internal__method, vertices, height, matrix, layer, cycle);
}
// Autogenerated method: Pathfinding.RVO.Simulator.AddObstacle
::Pathfinding::RVO::ObstacleVertex* Pathfinding::RVO::Simulator::AddObstacle(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::AddObstacle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddObstacle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::ObstacleVertex*, false>(this, ___internal__method, a, b, height);
}
// Autogenerated method: Pathfinding.RVO.Simulator.UpdateObstacle
void Pathfinding::RVO::Simulator::UpdateObstacle(::Pathfinding::RVO::ObstacleVertex* obstacle, ::ArrayW<::UnityEngine::Vector3> vertices, ::UnityEngine::Matrix4x4 matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::UpdateObstacle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateObstacle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacle), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(matrix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacle, vertices, matrix);
}
// Autogenerated method: Pathfinding.RVO.Simulator.ScheduleCleanObstacles
void Pathfinding::RVO::Simulator::ScheduleCleanObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::ScheduleCleanObstacles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScheduleCleanObstacles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator.CleanObstacles
void Pathfinding::RVO::Simulator::CleanObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::CleanObstacles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanObstacles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator.RemoveObstacle
void Pathfinding::RVO::Simulator::RemoveObstacle(::Pathfinding::RVO::ObstacleVertex* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::RemoveObstacle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveObstacle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.RVO.Simulator.UpdateObstacles
void Pathfinding::RVO::Simulator::UpdateObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::UpdateObstacles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateObstacles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator.BuildQuadtree
void Pathfinding::RVO::Simulator::BuildQuadtree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::BuildQuadtree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildQuadtree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator.BlockUntilSimulationStepIsDone
void Pathfinding::RVO::Simulator::BlockUntilSimulationStepIsDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::BlockUntilSimulationStepIsDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUntilSimulationStepIsDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator.PreCalculation
void Pathfinding::RVO::Simulator::PreCalculation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::PreCalculation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreCalculation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator.CleanAndUpdateObstaclesIfNecessary
void Pathfinding::RVO::Simulator::CleanAndUpdateObstaclesIfNecessary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::CleanAndUpdateObstaclesIfNecessary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanAndUpdateObstaclesIfNecessary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator.Update
void Pathfinding::RVO::Simulator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.Simulator/WorkerContext
#include "Pathfinding/RVO/Simulator_WorkerContext.hpp"
// Including type: Pathfinding.RVO.Sampled.Agent/VOBuffer
#include "Pathfinding/RVO/Sampled/Agent_VOBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 KeepCount
int Pathfinding::RVO::Simulator::WorkerContext::_get_KeepCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::WorkerContext::_get_KeepCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.RVO", "Simulator/WorkerContext", "KeepCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 KeepCount
void Pathfinding::RVO::Simulator::WorkerContext::_set_KeepCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::WorkerContext::_set_KeepCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "Simulator/WorkerContext", "KeepCount", value));
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.Sampled.Agent/VOBuffer vos
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Sampled::Agent::VOBuffer*& Pathfinding::RVO::Simulator::WorkerContext::dyn_vos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::WorkerContext::dyn_vos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vos"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Sampled::Agent::VOBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2[] bestPos
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& Pathfinding::RVO::Simulator::WorkerContext::dyn_bestPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::WorkerContext::dyn_bestPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bestPos"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] bestSizes
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Pathfinding::RVO::Simulator::WorkerContext::dyn_bestSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::WorkerContext::dyn_bestSizes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bestSizes"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] bestScores
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Pathfinding::RVO::Simulator::WorkerContext::dyn_bestScores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::WorkerContext::dyn_bestScores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bestScores"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2[] samplePos
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& Pathfinding::RVO::Simulator::WorkerContext::dyn_samplePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::WorkerContext::dyn_samplePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "samplePos"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] sampleSize
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Pathfinding::RVO::Simulator::WorkerContext::dyn_sampleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::WorkerContext::dyn_sampleSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sampleSize"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.Simulator/Worker
#include "Pathfinding/RVO/Simulator_Worker.hpp"
// Including type: System.Threading.ManualResetEventSlim
#include "System/Threading/ManualResetEventSlim.hpp"
// Including type: Pathfinding.RVO.Simulator/WorkerContext
#include "Pathfinding/RVO/Simulator_WorkerContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 start
[[deprecated("Use field access instead!")]] int& Pathfinding::RVO::Simulator::Worker::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::Worker::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 end
[[deprecated("Use field access instead!")]] int& Pathfinding::RVO::Simulator::Worker::dyn_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::Worker::dyn_end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.ManualResetEventSlim runFlag
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEventSlim*& Pathfinding::RVO::Simulator::Worker::dyn_runFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::Worker::dyn_runFlag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runFlag"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEventSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.ManualResetEventSlim waitFlag
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEventSlim*& Pathfinding::RVO::Simulator::Worker::dyn_waitFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::Worker::dyn_waitFlag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitFlag"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEventSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.RVO.Simulator simulator
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Simulator*& Pathfinding::RVO::Simulator::Worker::dyn_simulator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::Worker::dyn_simulator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simulator"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Simulator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 task
[[deprecated("Use field access instead!")]] int& Pathfinding::RVO::Simulator::Worker::dyn_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::Worker::dyn_task");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "task"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean terminate
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::Simulator::Worker::dyn_terminate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::Worker::dyn_terminate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "terminate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.Simulator/WorkerContext context
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Simulator::WorkerContext*& Pathfinding::RVO::Simulator::Worker::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::Worker::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Simulator::WorkerContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RVO.Simulator/Worker.Execute
void Pathfinding::RVO::Simulator::Worker::Execute(int task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::Worker::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated method: Pathfinding.RVO.Simulator/Worker.WaitOne
void Pathfinding::RVO::Simulator::Worker::WaitOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::Worker::WaitOne");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitOne", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator/Worker.Terminate
void Pathfinding::RVO::Simulator::Worker::Terminate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::Worker::Terminate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Terminate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Simulator/Worker.Run
void Pathfinding::RVO::Simulator::Worker::Run() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Simulator::Worker::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.RVOQuadtree
#include "Pathfinding/RVO/RVOQuadtree.hpp"
// Including type: Pathfinding.RVO.Sampled.Agent
#include "Pathfinding/RVO/Sampled/Agent.hpp"
// Including type: Pathfinding.RVO.RVOQuadtree/QuadtreeQuery
#include "Pathfinding/RVO/RVOQuadtree_QuadtreeQuery.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 LeafSize
int Pathfinding::RVO::RVOQuadtree::_get_LeafSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::_get_LeafSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.RVO", "RVOQuadtree", "LeafSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LeafSize
void Pathfinding::RVO::RVOQuadtree::_set_LeafSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::_set_LeafSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOQuadtree", "LeafSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single maxRadius
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOQuadtree::dyn_maxRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::dyn_maxRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.RVOQuadtree/Node[] nodes
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::RVO::RVOQuadtree::Node>& Pathfinding::RVO::RVOQuadtree::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::RVO::RVOQuadtree::Node>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 filledNodes
[[deprecated("Use field access instead!")]] int& Pathfinding::RVO::RVOQuadtree::dyn_filledNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::dyn_filledNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filledNodes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect bounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& Pathfinding::RVO::RVOQuadtree::dyn_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::dyn_bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RVO.RVOQuadtree.Clear
void Pathfinding::RVO::RVOQuadtree::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOQuadtree.SetBounds
void Pathfinding::RVO::RVOQuadtree::SetBounds(::UnityEngine::Rect r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::SetBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r);
}
// Autogenerated method: Pathfinding.RVO.RVOQuadtree.GetNodeIndex
int Pathfinding::RVO::RVOQuadtree::GetNodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::GetNodeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOQuadtree.Insert
void Pathfinding::RVO::RVOQuadtree::Insert(::Pathfinding::RVO::Sampled::Agent* agent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(agent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, agent);
}
// Autogenerated method: Pathfinding.RVO.RVOQuadtree.CalculateSpeeds
void Pathfinding::RVO::RVOQuadtree::CalculateSpeeds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::CalculateSpeeds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateSpeeds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOQuadtree.Query
void Pathfinding::RVO::RVOQuadtree::Query(::UnityEngine::Vector2 p, float speed, float timeHorizon, float agentRadius, ::Pathfinding::RVO::Sampled::Agent* agent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::Query");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Query", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(speed), ::il2cpp_utils::ExtractType(timeHorizon), ::il2cpp_utils::ExtractType(agentRadius), ::il2cpp_utils::ExtractType(agent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p, speed, timeHorizon, agentRadius, agent);
}
// Autogenerated method: Pathfinding.RVO.RVOQuadtree.DebugDraw
void Pathfinding::RVO::RVOQuadtree::DebugDraw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::DebugDraw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugDraw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOQuadtree.DebugDrawRec
void Pathfinding::RVO::RVOQuadtree::DebugDrawRec(int i, ::UnityEngine::Rect r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::DebugDrawRec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugDrawRec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, r);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.RVOQuadtree/Node
#include "Pathfinding/RVO/RVOQuadtree.hpp"
// Including type: Pathfinding.RVO.Sampled.Agent
#include "Pathfinding/RVO/Sampled/Agent.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 child00
[[deprecated("Use field access instead!")]] int& Pathfinding::RVO::RVOQuadtree::Node::dyn_child00() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::Node::dyn_child00");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "child00"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.Sampled.Agent linkedList
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Sampled::Agent*& Pathfinding::RVO::RVOQuadtree::Node::dyn_linkedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::Node::dyn_linkedList");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkedList"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Sampled::Agent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte count
[[deprecated("Use field access instead!")]] uint8_t& Pathfinding::RVO::RVOQuadtree::Node::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::Node::dyn_count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOQuadtree::Node::dyn_maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::Node::dyn_maxSpeed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RVO.RVOQuadtree/Node.Add
void Pathfinding::RVO::RVOQuadtree::Node::Add(::Pathfinding::RVO::Sampled::Agent* agent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::Node::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(agent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, agent);
}
// Autogenerated method: Pathfinding.RVO.RVOQuadtree/Node.Distribute
void Pathfinding::RVO::RVOQuadtree::Node::Distribute(::ArrayW<::Pathfinding::RVO::RVOQuadtree::Node> nodes, ::UnityEngine::Rect r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::Node::Distribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Distribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodes, r);
}
// Autogenerated method: Pathfinding.RVO.RVOQuadtree/Node.CalculateMaxSpeed
float Pathfinding::RVO::RVOQuadtree::Node::CalculateMaxSpeed(::ArrayW<::Pathfinding::RVO::RVOQuadtree::Node> nodes, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::Node::CalculateMaxSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CalculateMaxSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, nodes, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.RVOQuadtree/QuadtreeQuery
#include "Pathfinding/RVO/RVOQuadtree_QuadtreeQuery.hpp"
// Including type: Pathfinding.RVO.Sampled.Agent
#include "Pathfinding/RVO/Sampled/Agent.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 p
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::dyn_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::dyn_p");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single speed
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::dyn_speed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeHorizon
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::dyn_timeHorizon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::dyn_timeHorizon");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeHorizon"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single agentRadius
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::dyn_agentRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::dyn_agentRadius");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agentRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxRadius
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::dyn_maxRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::dyn_maxRadius");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.Sampled.Agent agent
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Sampled::Agent*& Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::dyn_agent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::dyn_agent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agent"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Sampled::Agent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.RVOQuadtree/Node[] nodes
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::RVO::RVOQuadtree::Node>& Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::dyn_nodes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::RVO::RVOQuadtree::Node>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RVO.RVOQuadtree/QuadtreeQuery.QueryRec
void Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::QueryRec(int i, ::UnityEngine::Rect r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOQuadtree::QuadtreeQuery::QueryRec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "QueryRec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, r);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.RVOController
#include "Pathfinding/RVO/RVOController.hpp"
// Including type: Pathfinding.RVO.IAgent
#include "Pathfinding/RVO/IAgent.hpp"
// Including type: Pathfinding.RVO.Simulator
#include "Pathfinding/RVO/Simulator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Pathfinding.IAstarAI
#include "Pathfinding/IAstarAI.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: Pathfinding.RVO.MovementPlane
#include "Pathfinding/RVO/MovementPlane.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Single radiusBackingField
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOController::dyn_radiusBackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_radiusBackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radiusBackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single heightBackingField
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOController::dyn_heightBackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_heightBackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightBackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single centerBackingField
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOController::dyn_centerBackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_centerBackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "centerBackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean locked
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::RVOController::dyn_locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean lockWhenNotMoving
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::RVOController::dyn_lockWhenNotMoving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_lockWhenNotMoving");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockWhenNotMoving"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single agentTimeHorizon
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOController::dyn_agentTimeHorizon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_agentTimeHorizon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agentTimeHorizon"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single obstacleTimeHorizon
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOController::dyn_obstacleTimeHorizon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_obstacleTimeHorizon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacleTimeHorizon"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxNeighbours
[[deprecated("Use field access instead!")]] int& Pathfinding::RVO::RVOController::dyn_maxNeighbours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_maxNeighbours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNeighbours"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.RVOLayer layer
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVOLayer& Pathfinding::RVO::RVOController::dyn_layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_layer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layer"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVOLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.RVOLayer collidesWith
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVOLayer& Pathfinding::RVO::RVOController::dyn_collidesWith() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_collidesWith");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collidesWith"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVOLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single wallAvoidForce
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOController::dyn_wallAvoidForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_wallAvoidForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallAvoidForce"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single wallAvoidFalloff
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOController::dyn_wallAvoidFalloff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_wallAvoidFalloff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallAvoidFalloff"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single priority
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOController::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.IAgent <rvoAgent>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::IAgent*& Pathfinding::RVO::RVOController::dyn_$rvoAgent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_$rvoAgent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rvoAgent>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::IAgent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.Simulator <simulator>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Simulator*& Pathfinding::RVO::RVOController::dyn_$simulator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_$simulator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<simulator>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Simulator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform tr
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::RVO::RVOController::dyn_tr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_tr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tr"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.IAstarAI aiBackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::IAstarAI*& Pathfinding::RVO::RVOController::dyn_aiBackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_aiBackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aiBackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::IAstarAI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean debug
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::RVOController::dyn_debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::dyn_debug");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debug"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RVO.RVOController.get_radius
float Pathfinding::RVO::RVOController::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::get_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.set_radius
void Pathfinding::RVO::RVOController::set_radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::set_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.RVOController.get_height
float Pathfinding::RVO::RVOController::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.set_height
void Pathfinding::RVO::RVOController::set_height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.RVOController.get_center
float Pathfinding::RVO::RVOController::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.set_center
void Pathfinding::RVO::RVOController::set_center(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.RVOController.get_mask
::UnityEngine::LayerMask Pathfinding::RVO::RVOController::get_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::get_mask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.set_mask
void Pathfinding::RVO::RVOController::set_mask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::set_mask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.RVOController.get_enableRotation
bool Pathfinding::RVO::RVOController::get_enableRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::get_enableRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.set_enableRotation
void Pathfinding::RVO::RVOController::set_enableRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::set_enableRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.RVOController.get_rotationSpeed
float Pathfinding::RVO::RVOController::get_rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::get_rotationSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.set_rotationSpeed
void Pathfinding::RVO::RVOController::set_rotationSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::set_rotationSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.RVOController.get_maxSpeed
float Pathfinding::RVO::RVOController::get_maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::get_maxSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.set_maxSpeed
void Pathfinding::RVO::RVOController::set_maxSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::set_maxSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.RVOController.get_movementPlane
::Pathfinding::RVO::MovementPlane Pathfinding::RVO::RVOController::get_movementPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::get_movementPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_movementPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::MovementPlane, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.get_rvoAgent
::Pathfinding::RVO::IAgent* Pathfinding::RVO::RVOController::get_rvoAgent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::get_rvoAgent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rvoAgent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::IAgent*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.set_rvoAgent
void Pathfinding::RVO::RVOController::set_rvoAgent(::Pathfinding::RVO::IAgent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::set_rvoAgent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rvoAgent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.RVOController.get_simulator
::Pathfinding::RVO::Simulator* Pathfinding::RVO::RVOController::get_simulator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::get_simulator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_simulator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::Simulator*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.set_simulator
void Pathfinding::RVO::RVOController::set_simulator(::Pathfinding::RVO::Simulator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::set_simulator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_simulator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.RVOController.get_ai
::Pathfinding::IAstarAI* Pathfinding::RVO::RVOController::get_ai() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::get_ai");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ai", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::IAstarAI*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.set_ai
void Pathfinding::RVO::RVOController::set_ai(::Pathfinding::IAstarAI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::set_ai");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ai", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.RVOController.get_position
::UnityEngine::Vector3 Pathfinding::RVO::RVOController::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.get_velocity
::UnityEngine::Vector3 Pathfinding::RVO::RVOController::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.set_velocity
void Pathfinding::RVO::RVOController::set_velocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.RVOController.CalculateMovementDelta
::UnityEngine::Vector3 Pathfinding::RVO::RVOController::CalculateMovementDelta(float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::CalculateMovementDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateMovementDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: Pathfinding.RVO.RVOController.CalculateMovementDelta
::UnityEngine::Vector3 Pathfinding::RVO::RVOController::CalculateMovementDelta(::UnityEngine::Vector3 position, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::CalculateMovementDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateMovementDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position, deltaTime);
}
// Autogenerated method: Pathfinding.RVO.RVOController.SetCollisionNormal
void Pathfinding::RVO::RVOController::SetCollisionNormal(::UnityEngine::Vector3 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::SetCollisionNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCollisionNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, normal);
}
// Autogenerated method: Pathfinding.RVO.RVOController.ForceSetVelocity
void Pathfinding::RVO::RVOController::ForceSetVelocity(::UnityEngine::Vector3 velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::ForceSetVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceSetVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(velocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, velocity);
}
// Autogenerated method: Pathfinding.RVO.RVOController.To2D
::UnityEngine::Vector2 Pathfinding::RVO::RVOController::To2D(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::To2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "To2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.RVO.RVOController.To2D
::UnityEngine::Vector2 Pathfinding::RVO::RVOController::To2D(::UnityEngine::Vector3 p, ByRef<float> elevation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::To2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "To2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, p, byref(elevation));
}
// Autogenerated method: Pathfinding.RVO.RVOController.To3D
::UnityEngine::Vector3 Pathfinding::RVO::RVOController::To3D(::UnityEngine::Vector2 p, float elevationCoordinate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::To3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "To3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(elevationCoordinate)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p, elevationCoordinate);
}
// Autogenerated method: Pathfinding.RVO.RVOController.OnDisable
void Pathfinding::RVO::RVOController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.OnEnable
void Pathfinding::RVO::RVOController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.UpdateAgentProperties
void Pathfinding::RVO::RVOController::UpdateAgentProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::UpdateAgentProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAgentProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.SetTarget
void Pathfinding::RVO::RVOController::SetTarget(::UnityEngine::Vector3 pos, float speed, float maxSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::SetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(speed), ::il2cpp_utils::ExtractType(maxSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, speed, maxSpeed);
}
// Autogenerated method: Pathfinding.RVO.RVOController.Move
void Pathfinding::RVO::RVOController::Move(::UnityEngine::Vector3 vel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::Move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vel);
}
// Autogenerated method: Pathfinding.RVO.RVOController.Teleport
void Pathfinding::RVO::RVOController::Teleport(::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::Teleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Teleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: Pathfinding.RVO.RVOController.OnDrawGizmos
void Pathfinding::RVO::RVOController::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOController.OnUpgradeSerializedData
int Pathfinding::RVO::RVOController::OnUpgradeSerializedData(int version, bool unityThread) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOController::OnUpgradeSerializedData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, version, unityThread);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.RVONavmesh
#include "Pathfinding/RVO/RVONavmesh.hpp"
// Including type: Pathfinding.RVO.RVONavmesh/<>c__DisplayClass8_0
#include "Pathfinding/RVO/RVONavmesh_--c__DisplayClass8_0.hpp"
// Including type: Pathfinding.RVO.RVONavmesh/<>c__DisplayClass9_0
#include "Pathfinding/RVO/RVONavmesh_--c__DisplayClass9_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.RVO.ObstacleVertex
#include "Pathfinding/RVO/ObstacleVertex.hpp"
// Including type: Pathfinding.RVO.Simulator
#include "Pathfinding/RVO/Simulator.hpp"
// Including type: Pathfinding.GridGraph
#include "Pathfinding/GridGraph.hpp"
// Including type: Pathfinding.INavmesh
#include "Pathfinding/INavmesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single wallHeight
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVONavmesh::dyn_wallHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::dyn_wallHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Pathfinding.RVO.ObstacleVertex> obstacles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>*& Pathfinding::RVO::RVONavmesh::dyn_obstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::dyn_obstacles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.Simulator lastSim
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Simulator*& Pathfinding::RVO::RVONavmesh::dyn_lastSim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::dyn_lastSim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastSim"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Simulator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RVO.RVONavmesh.RemoveObstacles
void Pathfinding::RVO::RVONavmesh::RemoveObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::RemoveObstacles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveObstacles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVONavmesh.AddGraphObstacles
void Pathfinding::RVO::RVONavmesh::AddGraphObstacles(::Pathfinding::RVO::Simulator* sim, ::Pathfinding::GridGraph* grid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::AddGraphObstacles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGraphObstacles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sim), ::il2cpp_utils::ExtractType(grid)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sim, grid);
}
// Autogenerated method: Pathfinding.RVO.RVONavmesh.AddGraphObstacles
void Pathfinding::RVO::RVONavmesh::AddGraphObstacles(::Pathfinding::RVO::Simulator* simulator, ::Pathfinding::INavmesh* navmesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::AddGraphObstacles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGraphObstacles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(simulator), ::il2cpp_utils::ExtractType(navmesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, simulator, navmesh);
}
// Autogenerated method: Pathfinding.RVO.RVONavmesh.OnPostCacheLoad
void Pathfinding::RVO::RVONavmesh::OnPostCacheLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::OnPostCacheLoad");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVONavmesh.OnGraphsPostUpdate
void Pathfinding::RVO::RVONavmesh::OnGraphsPostUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::OnGraphsPostUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVONavmesh.OnLatePostScan
void Pathfinding::RVO::RVONavmesh::OnLatePostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::OnLatePostScan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVONavmesh.OnDisable
void Pathfinding::RVO::RVONavmesh::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphModifier*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.RVONavmesh/<>c__DisplayClass8_0
#include "Pathfinding/RVO/RVONavmesh_--c__DisplayClass8_0.hpp"
// Including type: Pathfinding.RVO.Simulator
#include "Pathfinding/RVO/Simulator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean reverse
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::RVONavmesh::$$c__DisplayClass8_0::dyn_reverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::$$c__DisplayClass8_0::dyn_reverse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.RVONavmesh <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVONavmesh*& Pathfinding::RVO::RVONavmesh::$$c__DisplayClass8_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::$$c__DisplayClass8_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVONavmesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.Simulator sim
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Simulator*& Pathfinding::RVO::RVONavmesh::$$c__DisplayClass8_0::dyn_sim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::$$c__DisplayClass8_0::dyn_sim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sim"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Simulator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RVO.RVONavmesh/<>c__DisplayClass8_0.<AddGraphObstacles>b__0
void Pathfinding::RVO::RVONavmesh::$$c__DisplayClass8_0::$AddGraphObstacles$b__0(::ArrayW<::UnityEngine::Vector3> vertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::$$c__DisplayClass8_0::<AddGraphObstacles>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddGraphObstacles>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertices);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.RVONavmesh/<>c__DisplayClass9_0
#include "Pathfinding/RVO/RVONavmesh_--c__DisplayClass9_0.hpp"
// Including type: Pathfinding.RVO.Simulator
#include "Pathfinding/RVO/Simulator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.RVONavmesh <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVONavmesh*& Pathfinding::RVO::RVONavmesh::$$c__DisplayClass9_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::$$c__DisplayClass9_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVONavmesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.Simulator simulator
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Simulator*& Pathfinding::RVO::RVONavmesh::$$c__DisplayClass9_0::dyn_simulator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::$$c__DisplayClass9_0::dyn_simulator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simulator"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Simulator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RVO.RVONavmesh/<>c__DisplayClass9_0.<AddGraphObstacles>b__0
void Pathfinding::RVO::RVONavmesh::$$c__DisplayClass9_0::$AddGraphObstacles$b__0(::System::Collections::Generic::List_1<::Pathfinding::Int3>* vertices, bool cycle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVONavmesh::$$c__DisplayClass9_0::<AddGraphObstacles>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddGraphObstacles>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(cycle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertices, cycle);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.RVOObstacle
#include "Pathfinding/RVO/RVOObstacle.hpp"
// Including type: Pathfinding.RVO.Simulator
#include "Pathfinding/RVO/Simulator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.RVO.ObstacleVertex
#include "Pathfinding/RVO/ObstacleVertex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.RVOObstacle/ObstacleVertexWinding obstacleMode
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding& Pathfinding::RVO::RVOObstacle::dyn_obstacleMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::dyn_obstacleMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacleMode"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.RVOLayer layer
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVOLayer& Pathfinding::RVO::RVOObstacle::dyn_layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::dyn_layer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layer"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVOLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.RVO.Simulator sim
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Simulator*& Pathfinding::RVO::RVOObstacle::dyn_sim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::dyn_sim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sim"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Simulator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.RVO.ObstacleVertex> addedObstacles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>*& Pathfinding::RVO::RVOObstacle::dyn_addedObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::dyn_addedObstacles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addedObstacles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3[]> sourceObstacles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::ArrayW<::UnityEngine::Vector3>>*& Pathfinding::RVO::RVOObstacle::dyn_sourceObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::dyn_sourceObstacles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceObstacles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::ArrayW<::UnityEngine::Vector3>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean gizmoDrawing
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::RVOObstacle::dyn_gizmoDrawing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::dyn_gizmoDrawing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gizmoDrawing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3[]> gizmoVerts
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::ArrayW<::UnityEngine::Vector3>>*& Pathfinding::RVO::RVOObstacle::dyn_gizmoVerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::dyn_gizmoVerts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gizmoVerts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::ArrayW<::UnityEngine::Vector3>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.RVOObstacle/ObstacleVertexWinding _obstacleMode
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding& Pathfinding::RVO::RVOObstacle::dyn__obstacleMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::dyn__obstacleMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleMode"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 prevUpdateMatrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Pathfinding::RVO::RVOObstacle::dyn_prevUpdateMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::dyn_prevUpdateMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevUpdateMatrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.CreateObstacles
void Pathfinding::RVO::RVOObstacle::CreateObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::CreateObstacles");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::RVOObstacle*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.get_ExecuteInEditor
bool Pathfinding::RVO::RVOObstacle::get_ExecuteInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::get_ExecuteInEditor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::RVOObstacle*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.get_LocalCoordinates
bool Pathfinding::RVO::RVOObstacle::get_LocalCoordinates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::get_LocalCoordinates");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::RVOObstacle*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.get_StaticObstacle
bool Pathfinding::RVO::RVOObstacle::get_StaticObstacle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::get_StaticObstacle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::RVOObstacle*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.get_Height
float Pathfinding::RVO::RVOObstacle::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::get_Height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::RVOObstacle*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.AreGizmosDirty
bool Pathfinding::RVO::RVOObstacle::AreGizmosDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::AreGizmosDirty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::RVOObstacle*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.OnDrawGizmos
void Pathfinding::RVO::RVOObstacle::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.OnDrawGizmosSelected
void Pathfinding::RVO::RVOObstacle::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.OnDrawGizmos
void Pathfinding::RVO::RVOObstacle::OnDrawGizmos(bool selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selected);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.GetMatrix
::UnityEngine::Matrix4x4 Pathfinding::RVO::RVOObstacle::GetMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::GetMatrix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::RVOObstacle*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.OnDisable
void Pathfinding::RVO::RVOObstacle::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.OnEnable
void Pathfinding::RVO::RVOObstacle::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.Start
void Pathfinding::RVO::RVOObstacle::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.Update
void Pathfinding::RVO::RVOObstacle::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.FindSimulator
void Pathfinding::RVO::RVOObstacle::FindSimulator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::FindSimulator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSimulator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.AddObstacle
void Pathfinding::RVO::RVOObstacle::AddObstacle(::ArrayW<::UnityEngine::Vector3> vertices, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::AddObstacle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddObstacle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertices, height);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.AddObstacleInternal
void Pathfinding::RVO::RVOObstacle::AddObstacleInternal(::ArrayW<::UnityEngine::Vector3> vertices, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::AddObstacleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddObstacleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertices, height);
}
// Autogenerated method: Pathfinding.RVO.RVOObstacle.WindCorrectly
void Pathfinding::RVO::RVOObstacle::WindCorrectly(::ArrayW<::UnityEngine::Vector3> vertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::WindCorrectly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WindCorrectly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertices);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.RVOObstacle/ObstacleVertexWinding
#include "Pathfinding/RVO/RVOObstacle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOObstacle/ObstacleVertexWinding KeepOut
::Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding::_get_KeepOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding::_get_KeepOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding>("Pathfinding.RVO", "RVOObstacle/ObstacleVertexWinding", "KeepOut"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOObstacle/ObstacleVertexWinding KeepOut
void Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding::_set_KeepOut(::Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding::_set_KeepOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOObstacle/ObstacleVertexWinding", "KeepOut", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RVO.RVOObstacle/ObstacleVertexWinding KeepIn
::Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding::_get_KeepIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding::_get_KeepIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding>("Pathfinding.RVO", "RVOObstacle/ObstacleVertexWinding", "KeepIn"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RVO.RVOObstacle/ObstacleVertexWinding KeepIn
void Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding::_set_KeepIn(::Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding::_set_KeepIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOObstacle/ObstacleVertexWinding", "KeepIn", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOObstacle::ObstacleVertexWinding::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.RVOSimulator
#include "Pathfinding/RVO/RVOSimulator.hpp"
// Including type: Pathfinding.RVO.Simulator
#include "Pathfinding/RVO/Simulator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Pathfinding.RVO.RVOSimulator <active>k__BackingField
::Pathfinding::RVO::RVOSimulator* Pathfinding::RVO::RVOSimulator::_get_$active$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::_get_$active$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Pathfinding::RVO::RVOSimulator*>("Pathfinding.RVO", "RVOSimulator", "<active>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Pathfinding.RVO.RVOSimulator <active>k__BackingField
void Pathfinding::RVO::RVOSimulator::_set_$active$k__BackingField(::Pathfinding::RVO::RVOSimulator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::_set_$active$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO", "RVOSimulator", "<active>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 desiredSimulationFPS
[[deprecated("Use field access instead!")]] int& Pathfinding::RVO::RVOSimulator::dyn_desiredSimulationFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::dyn_desiredSimulationFPS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "desiredSimulationFPS"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ThreadCount workerThreads
[[deprecated("Use field access instead!")]] ::Pathfinding::ThreadCount& Pathfinding::RVO::RVOSimulator::dyn_workerThreads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::dyn_workerThreads");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workerThreads"))->offset;
  return *reinterpret_cast<::Pathfinding::ThreadCount*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean doubleBuffering
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::RVOSimulator::dyn_doubleBuffering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::dyn_doubleBuffering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doubleBuffering"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single symmetryBreakingBias
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOSimulator::dyn_symmetryBreakingBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::dyn_symmetryBreakingBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symmetryBreakingBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.MovementPlane movementPlane
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::MovementPlane& Pathfinding::RVO::RVOSimulator::dyn_movementPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::dyn_movementPlane");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "movementPlane"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::MovementPlane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean drawObstacles
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::RVOSimulator::dyn_drawObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::dyn_drawObstacles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drawObstacles"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.Simulator simulator
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Simulator*& Pathfinding::RVO::RVOSimulator::dyn_simulator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::dyn_simulator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simulator"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Simulator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RVO.RVOSimulator.get_active
::Pathfinding::RVO::RVOSimulator* Pathfinding::RVO::RVOSimulator::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::get_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.RVO", "RVOSimulator", "get_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::RVOSimulator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOSimulator.set_active
void Pathfinding::RVO::RVOSimulator::set_active(::Pathfinding::RVO::RVOSimulator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::set_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.RVO", "RVOSimulator", "set_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.RVOSimulator.GetSimulator
::Pathfinding::RVO::Simulator* Pathfinding::RVO::RVOSimulator::GetSimulator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::GetSimulator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSimulator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::Simulator*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOSimulator.OnEnable
void Pathfinding::RVO::RVOSimulator::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOSimulator.Update
void Pathfinding::RVO::RVOSimulator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOSimulator.OnDestroy
void Pathfinding::RVO::RVOSimulator::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOSimulator.Awake
void Pathfinding::RVO::RVOSimulator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSimulator::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.RVOSquareObstacle
#include "Pathfinding/RVO/RVOSquareObstacle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single height
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::RVOSquareObstacle::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSquareObstacle::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 size
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::RVOSquareObstacle::dyn_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSquareObstacle::dyn_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::RVOSquareObstacle::dyn_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSquareObstacle::dyn_center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RVO.RVOSquareObstacle.get_StaticObstacle
bool Pathfinding::RVO::RVOSquareObstacle::get_StaticObstacle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSquareObstacle::get_StaticObstacle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::RVOObstacle*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOSquareObstacle.get_ExecuteInEditor
bool Pathfinding::RVO::RVOSquareObstacle::get_ExecuteInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSquareObstacle::get_ExecuteInEditor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::RVOObstacle*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOSquareObstacle.get_LocalCoordinates
bool Pathfinding::RVO::RVOSquareObstacle::get_LocalCoordinates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSquareObstacle::get_LocalCoordinates");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::RVOObstacle*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOSquareObstacle.get_Height
float Pathfinding::RVO::RVOSquareObstacle::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSquareObstacle::get_Height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::RVOObstacle*), 14));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOSquareObstacle.AreGizmosDirty
bool Pathfinding::RVO::RVOSquareObstacle::AreGizmosDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSquareObstacle::AreGizmosDirty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::RVOObstacle*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.RVOSquareObstacle.CreateObstacles
void Pathfinding::RVO::RVOSquareObstacle::CreateObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::RVOSquareObstacle::CreateObstacles");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::RVOObstacle*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.Sampled.Agent
#include "Pathfinding/RVO/Sampled/Agent.hpp"
// Including type: Pathfinding.RVO.Sampled.Agent/VO
#include "Pathfinding/RVO/Sampled/Agent_VO.hpp"
// Including type: Pathfinding.RVO.Sampled.Agent/VOBuffer
#include "Pathfinding/RVO/Sampled/Agent_VOBuffer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.RVO.ObstacleVertex
#include "Pathfinding/RVO/ObstacleVertex.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Pathfinding.RVO.Simulator/WorkerContext
#include "Pathfinding/RVO/Simulator_WorkerContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single DesiredVelocityWeight
float Pathfinding::RVO::Sampled::Agent::_get_DesiredVelocityWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::_get_DesiredVelocityWeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pathfinding.RVO.Sampled", "Agent", "DesiredVelocityWeight"));
}
// Autogenerated static field setter
// Set static field: static private System.Single DesiredVelocityWeight
void Pathfinding::RVO::Sampled::Agent::_set_DesiredVelocityWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::_set_DesiredVelocityWeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO.Sampled", "Agent", "DesiredVelocityWeight", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single WallWeight
float Pathfinding::RVO::Sampled::Agent::_get_WallWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::_get_WallWeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pathfinding.RVO.Sampled", "Agent", "WallWeight"));
}
// Autogenerated static field setter
// Set static field: static private System.Single WallWeight
void Pathfinding::RVO::Sampled::Agent::_set_WallWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::_set_WallWeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.RVO.Sampled", "Agent", "WallWeight", value));
}
// Autogenerated instance field getter
// Get instance field: System.Single radius
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single height
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single desiredSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_desiredSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_desiredSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "desiredSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single maxSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_maxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single agentTimeHorizon
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_agentTimeHorizon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_agentTimeHorizon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agentTimeHorizon"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single obstacleTimeHorizon
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_obstacleTimeHorizon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_obstacleTimeHorizon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacleTimeHorizon"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean locked
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::Sampled::Agent::dyn_locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.RVOLayer layer
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVOLayer& Pathfinding::RVO::Sampled::Agent::dyn_layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_layer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layer"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVOLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.RVOLayer collidesWith
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVOLayer& Pathfinding::RVO::Sampled::Agent::dyn_collidesWith() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_collidesWith");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collidesWith"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVOLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxNeighbours
[[deprecated("Use field access instead!")]] int& Pathfinding::RVO::Sampled::Agent::dyn_maxNeighbours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_maxNeighbours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNeighbours"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector2 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single elevationCoordinate
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_elevationCoordinate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_elevationCoordinate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elevationCoordinate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 currentVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::dyn_currentVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_currentVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 desiredTargetPointInVelocitySpace
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::dyn_desiredTargetPointInVelocitySpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_desiredTargetPointInVelocitySpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "desiredTargetPointInVelocitySpace"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 desiredVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::dyn_desiredVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_desiredVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "desiredVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 nextTargetPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::dyn_nextTargetPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_nextTargetPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextTargetPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextDesiredSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_nextDesiredSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_nextDesiredSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextDesiredSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextMaxSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_nextMaxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_nextMaxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextMaxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 collisionNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::dyn_collisionNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_collisionNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collisionNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean manuallyControlled
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::Sampled::Agent::dyn_manuallyControlled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_manuallyControlled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "manuallyControlled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean debugDraw
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::Sampled::Agent::dyn_debugDraw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_debugDraw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugDraw"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <Position>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::dyn_$Position$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_$Position$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Position>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <ElevationCoordinate>k__BackingField
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_$ElevationCoordinate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_$ElevationCoordinate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ElevationCoordinate>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <CalculatedTargetPoint>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::dyn_$CalculatedTargetPoint$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_$CalculatedTargetPoint$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CalculatedTargetPoint>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <CalculatedSpeed>k__BackingField
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_$CalculatedSpeed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_$CalculatedSpeed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CalculatedSpeed>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Locked>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::Sampled::Agent::dyn_$Locked$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_$Locked$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Locked>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Radius>k__BackingField
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_$Radius$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_$Radius$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Radius>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Height>k__BackingField
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_$Height$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_$Height$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Height>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <AgentTimeHorizon>k__BackingField
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_$AgentTimeHorizon$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_$AgentTimeHorizon$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AgentTimeHorizon>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <ObstacleTimeHorizon>k__BackingField
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_$ObstacleTimeHorizon$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_$ObstacleTimeHorizon$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ObstacleTimeHorizon>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <MaxNeighbours>k__BackingField
[[deprecated("Use field access instead!")]] int& Pathfinding::RVO::Sampled::Agent::dyn_$MaxNeighbours$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_$MaxNeighbours$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxNeighbours>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <NeighbourCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Pathfinding::RVO::Sampled::Agent::dyn_$NeighbourCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_$NeighbourCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NeighbourCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.RVOLayer <Layer>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVOLayer& Pathfinding::RVO::Sampled::Agent::dyn_$Layer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_$Layer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Layer>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVOLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.RVOLayer <CollidesWith>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVOLayer& Pathfinding::RVO::Sampled::Agent::dyn_$CollidesWith$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_$CollidesWith$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CollidesWith>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVOLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Priority>k__BackingField
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_$Priority$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_$Priority$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Priority>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action <PreCalculationCallback>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Action*& Pathfinding::RVO::Sampled::Agent::dyn_$PreCalculationCallback$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_$PreCalculationCallback$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PreCalculationCallback>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.RVO.Sampled.Agent next
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Sampled::Agent*& Pathfinding::RVO::Sampled::Agent::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Sampled::Agent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single calculatedSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::dyn_calculatedSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_calculatedSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calculatedSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 calculatedTargetPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::dyn_calculatedTargetPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_calculatedTargetPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calculatedTargetPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.RVO.Simulator simulator
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Simulator*& Pathfinding::RVO::Sampled::Agent::dyn_simulator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_simulator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simulator"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Simulator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.RVO.Sampled.Agent> neighbours
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::RVO::Sampled::Agent*>*& Pathfinding::RVO::Sampled::Agent::dyn_neighbours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_neighbours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neighbours"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::RVO::Sampled::Agent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single> neighbourDists
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& Pathfinding::RVO::Sampled::Agent::dyn_neighbourDists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_neighbourDists");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neighbourDists"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.RVO.ObstacleVertex> obstaclesBuffered
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>*& Pathfinding::RVO::Sampled::Agent::dyn_obstaclesBuffered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_obstaclesBuffered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstaclesBuffered"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.RVO.ObstacleVertex> obstacles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>*& Pathfinding::RVO::Sampled::Agent::dyn_obstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::dyn_obstacles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_Position
::UnityEngine::Vector2 Pathfinding::RVO::Sampled::Agent::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_Position
void Pathfinding::RVO::Sampled::Agent::set_Position(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_ElevationCoordinate
float Pathfinding::RVO::Sampled::Agent::get_ElevationCoordinate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_ElevationCoordinate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_ElevationCoordinate
void Pathfinding::RVO::Sampled::Agent::set_ElevationCoordinate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_ElevationCoordinate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_CalculatedTargetPoint
::UnityEngine::Vector2 Pathfinding::RVO::Sampled::Agent::get_CalculatedTargetPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_CalculatedTargetPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_CalculatedTargetPoint
void Pathfinding::RVO::Sampled::Agent::set_CalculatedTargetPoint(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_CalculatedTargetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CalculatedTargetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_CalculatedSpeed
float Pathfinding::RVO::Sampled::Agent::get_CalculatedSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_CalculatedSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 9));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_CalculatedSpeed
void Pathfinding::RVO::Sampled::Agent::set_CalculatedSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_CalculatedSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CalculatedSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_Locked
bool Pathfinding::RVO::Sampled::Agent::get_Locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_Locked");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_Locked
void Pathfinding::RVO::Sampled::Agent::set_Locked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_Locked");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_Radius
float Pathfinding::RVO::Sampled::Agent::get_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_Radius");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_Radius
void Pathfinding::RVO::Sampled::Agent::set_Radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_Radius");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_Height
float Pathfinding::RVO::Sampled::Agent::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_Height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 15));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_Height
void Pathfinding::RVO::Sampled::Agent::set_Height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_Height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_AgentTimeHorizon
float Pathfinding::RVO::Sampled::Agent::get_AgentTimeHorizon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_AgentTimeHorizon");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 17));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_AgentTimeHorizon
void Pathfinding::RVO::Sampled::Agent::set_AgentTimeHorizon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_AgentTimeHorizon");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_ObstacleTimeHorizon
float Pathfinding::RVO::Sampled::Agent::get_ObstacleTimeHorizon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_ObstacleTimeHorizon");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 19));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_ObstacleTimeHorizon
void Pathfinding::RVO::Sampled::Agent::set_ObstacleTimeHorizon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_ObstacleTimeHorizon");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_MaxNeighbours
int Pathfinding::RVO::Sampled::Agent::get_MaxNeighbours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_MaxNeighbours");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_MaxNeighbours
void Pathfinding::RVO::Sampled::Agent::set_MaxNeighbours(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_MaxNeighbours");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_NeighbourCount
int Pathfinding::RVO::Sampled::Agent::get_NeighbourCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_NeighbourCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_NeighbourCount
void Pathfinding::RVO::Sampled::Agent::set_NeighbourCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_NeighbourCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NeighbourCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_Layer
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::Sampled::Agent::get_Layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_Layer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::RVOLayer, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_Layer
void Pathfinding::RVO::Sampled::Agent::set_Layer(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_Layer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_CollidesWith
::Pathfinding::RVO::RVOLayer Pathfinding::RVO::Sampled::Agent::get_CollidesWith() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_CollidesWith");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::RVOLayer, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_CollidesWith
void Pathfinding::RVO::Sampled::Agent::set_CollidesWith(::Pathfinding::RVO::RVOLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_CollidesWith");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_DebugDraw
bool Pathfinding::RVO::Sampled::Agent::get_DebugDraw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_DebugDraw");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_DebugDraw
void Pathfinding::RVO::Sampled::Agent::set_DebugDraw(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_DebugDraw");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_Priority
float Pathfinding::RVO::Sampled::Agent::get_Priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_Priority");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 31));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_Priority
void Pathfinding::RVO::Sampled::Agent::set_Priority(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_Priority");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_PreCalculationCallback
::System::Action* Pathfinding::RVO::Sampled::Agent::get_PreCalculationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_PreCalculationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PreCalculationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.set_PreCalculationCallback
void Pathfinding::RVO::Sampled::Agent::set_PreCalculationCallback(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::set_PreCalculationCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.SetTarget
void Pathfinding::RVO::Sampled::Agent::SetTarget(::UnityEngine::Vector2 targetPoint, float desiredSpeed, float maxSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::SetTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPoint, desiredSpeed, maxSpeed);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.SetCollisionNormal
void Pathfinding::RVO::Sampled::Agent::SetCollisionNormal(::UnityEngine::Vector2 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::SetCollisionNormal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, normal);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.ForceSetVelocity
void Pathfinding::RVO::Sampled::Agent::ForceSetVelocity(::UnityEngine::Vector2 velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::ForceSetVelocity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, velocity);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.get_NeighbourObstacles
::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>* Pathfinding::RVO::Sampled::Agent::get_NeighbourObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::get_NeighbourObstacles");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RVO::Sampled::Agent*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::RVO::ObstacleVertex*>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.BufferSwitch
void Pathfinding::RVO::Sampled::Agent::BufferSwitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::BufferSwitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferSwitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.PreCalculation
void Pathfinding::RVO::Sampled::Agent::PreCalculation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::PreCalculation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreCalculation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.PostCalculation
void Pathfinding::RVO::Sampled::Agent::PostCalculation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::PostCalculation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostCalculation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.CalculateNeighbours
void Pathfinding::RVO::Sampled::Agent::CalculateNeighbours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::CalculateNeighbours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateNeighbours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.Sqr
float Pathfinding::RVO::Sampled::Agent::Sqr(float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::Sqr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.RVO.Sampled", "Agent", "Sqr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.InsertAgentNeighbour
float Pathfinding::RVO::Sampled::Agent::InsertAgentNeighbour(::Pathfinding::RVO::Sampled::Agent* agent, float rangeSq) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::InsertAgentNeighbour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertAgentNeighbour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(agent), ::il2cpp_utils::ExtractType(rangeSq)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, agent, rangeSq);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.FromXZ
::UnityEngine::Vector3 Pathfinding::RVO::Sampled::Agent::FromXZ(::UnityEngine::Vector2 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::FromXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.RVO.Sampled", "Agent", "FromXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.ToXZ
::UnityEngine::Vector2 Pathfinding::RVO::Sampled::Agent::ToXZ(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::ToXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.RVO.Sampled", "Agent", "ToXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.To2D
::UnityEngine::Vector2 Pathfinding::RVO::Sampled::Agent::To2D(::UnityEngine::Vector3 p, ByRef<float> elevation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::To2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "To2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, p, byref(elevation));
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.DrawVO
void Pathfinding::RVO::Sampled::Agent::DrawVO(::UnityEngine::Vector2 circleCenter, float radius, ::UnityEngine::Vector2 origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::DrawVO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.RVO.Sampled", "Agent", "DrawVO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(circleCenter), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, circleCenter, radius, origin);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.CalculateVelocity
void Pathfinding::RVO::Sampled::Agent::CalculateVelocity(::Pathfinding::RVO::Simulator::WorkerContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::CalculateVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.Rainbow
::UnityEngine::Color Pathfinding::RVO::Sampled::Agent::Rainbow(float v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::Rainbow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.RVO.Sampled", "Agent", "Rainbow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.GenerateObstacleVOs
void Pathfinding::RVO::Sampled::Agent::GenerateObstacleVOs(::Pathfinding::RVO::Sampled::Agent::VOBuffer* vos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::GenerateObstacleVOs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateObstacleVOs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vos);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.GenerateNeighbourAgentVOs
void Pathfinding::RVO::Sampled::Agent::GenerateNeighbourAgentVOs(::Pathfinding::RVO::Sampled::Agent::VOBuffer* vos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::GenerateNeighbourAgentVOs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateNeighbourAgentVOs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vos);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.GradientDescent
::UnityEngine::Vector2 Pathfinding::RVO::Sampled::Agent::GradientDescent(::Pathfinding::RVO::Sampled::Agent::VOBuffer* vos, ::UnityEngine::Vector2 sampleAround1, ::UnityEngine::Vector2 sampleAround2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::GradientDescent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GradientDescent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vos), ::il2cpp_utils::ExtractType(sampleAround1), ::il2cpp_utils::ExtractType(sampleAround2)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, vos, sampleAround1, sampleAround2);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.BiasDesiredVelocity
bool Pathfinding::RVO::Sampled::Agent::BiasDesiredVelocity(::Pathfinding::RVO::Sampled::Agent::VOBuffer* vos, ByRef<::UnityEngine::Vector2> desiredVelocity, ByRef<::UnityEngine::Vector2> targetPointInVelocitySpace, float maxBiasRadians) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::BiasDesiredVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.RVO.Sampled", "Agent", "BiasDesiredVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vos), ::il2cpp_utils::ExtractType(desiredVelocity), ::il2cpp_utils::ExtractType(targetPointInVelocitySpace), ::il2cpp_utils::ExtractType(maxBiasRadians)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vos, byref(desiredVelocity), byref(targetPointInVelocitySpace), maxBiasRadians);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.EvaluateGradient
::UnityEngine::Vector2 Pathfinding::RVO::Sampled::Agent::EvaluateGradient(::Pathfinding::RVO::Sampled::Agent::VOBuffer* vos, ::UnityEngine::Vector2 p, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::EvaluateGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vos), ::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, vos, p, byref(value));
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent.Trace
::UnityEngine::Vector2 Pathfinding::RVO::Sampled::Agent::Trace(::Pathfinding::RVO::Sampled::Agent::VOBuffer* vos, ::UnityEngine::Vector2 p, ByRef<float> score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::Trace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vos), ::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, vos, p, byref(score));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.Sampled.Agent/VO
#include "Pathfinding/RVO/Sampled/Agent_VO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 line1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::VO::dyn_line1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::dyn_line1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "line1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 line2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::VO::dyn_line2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::dyn_line2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "line2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 dir1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::VO::dyn_dir1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::dyn_dir1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dir1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 dir2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::VO::dyn_dir2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::dyn_dir2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dir2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 cutoffLine
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::VO::dyn_cutoffLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::dyn_cutoffLine");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutoffLine"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 cutoffDir
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::VO::dyn_cutoffDir() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::dyn_cutoffDir");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutoffDir"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 circleCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::VO::dyn_circleCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::dyn_circleCenter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "circleCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean colliding
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::Sampled::Agent::VO::dyn_colliding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::dyn_colliding");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colliding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single radius
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::VO::dyn_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::dyn_radius");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single weightFactor
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::VO::dyn_weightFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::dyn_weightFactor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weightFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single weightBonus
[[deprecated("Use field access instead!")]] float& Pathfinding::RVO::Sampled::Agent::VO::dyn_weightBonus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::dyn_weightBonus");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weightBonus"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 segmentStart
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::VO::dyn_segmentStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::dyn_segmentStart");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "segmentStart"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 segmentEnd
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::RVO::Sampled::Agent::VO::dyn_segmentEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::dyn_segmentEnd");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "segmentEnd"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean segment
[[deprecated("Use field access instead!")]] bool& Pathfinding::RVO::Sampled::Agent::VO::dyn_segment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::dyn_segment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "segment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent/VO..ctor
Pathfinding::RVO::Sampled::Agent::VO::VO(::UnityEngine::Vector2 center, ::UnityEngine::Vector2 offset, float radius, float inverseDt, float inverseDeltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(inverseDt), ::il2cpp_utils::ExtractType(inverseDeltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, center, offset, radius, inverseDt, inverseDeltaTime);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent/VO.SegmentObstacle
::Pathfinding::RVO::Sampled::Agent::VO Pathfinding::RVO::Sampled::Agent::VO::SegmentObstacle(::UnityEngine::Vector2 segmentStart, ::UnityEngine::Vector2 segmentEnd, ::UnityEngine::Vector2 offset, float radius, float inverseDt, float inverseDeltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::SegmentObstacle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.RVO.Sampled", "Agent/VO", "SegmentObstacle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentStart), ::il2cpp_utils::ExtractType(segmentEnd), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(inverseDt), ::il2cpp_utils::ExtractType(inverseDeltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RVO::Sampled::Agent::VO, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, segmentStart, segmentEnd, offset, radius, inverseDt, inverseDeltaTime);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent/VO.SignedDistanceFromLine
float Pathfinding::RVO::Sampled::Agent::VO::SignedDistanceFromLine(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 dir, ::UnityEngine::Vector2 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::SignedDistanceFromLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.RVO.Sampled", "Agent/VO", "SignedDistanceFromLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(dir), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, dir, p);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent/VO.ScaledGradient
::UnityEngine::Vector2 Pathfinding::RVO::Sampled::Agent::VO::ScaledGradient(::UnityEngine::Vector2 p, ByRef<float> weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::ScaledGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ScaledGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, p, byref(weight));
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent/VO.Gradient
::UnityEngine::Vector2 Pathfinding::RVO::Sampled::Agent::VO::Gradient(::UnityEngine::Vector2 p, ByRef<float> weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VO::Gradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Gradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, p, byref(weight));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RVO.Sampled.Agent/VOBuffer
#include "Pathfinding/RVO/Sampled/Agent_VOBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RVO.Sampled.Agent/VO[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::RVO::Sampled::Agent::VO>& Pathfinding::RVO::Sampled::Agent::VOBuffer::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VOBuffer::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::RVO::Sampled::Agent::VO>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 length
[[deprecated("Use field access instead!")]] int& Pathfinding::RVO::Sampled::Agent::VOBuffer::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VOBuffer::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent/VOBuffer.Clear
void Pathfinding::RVO::Sampled::Agent::VOBuffer::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VOBuffer::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RVO.Sampled.Agent/VOBuffer.Add
void Pathfinding::RVO::Sampled::Agent::VOBuffer::Add(::Pathfinding::RVO::Sampled::Agent::VO vo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RVO::Sampled::Agent::VOBuffer::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.TurnBasedAI
#include "Pathfinding/Examples/TurnBasedAI.hpp"
// Including type: Pathfinding.BlockManager/TraversalProvider
#include "Pathfinding/BlockManager_TraversalProvider.hpp"
// Including type: Pathfinding.SingleNodeBlocker
#include "Pathfinding/SingleNodeBlocker.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 movementPoints
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::TurnBasedAI::dyn_movementPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedAI::dyn_movementPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "movementPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.BlockManager blockManager
[[deprecated("Use field access instead!")]] ::Pathfinding::BlockManager*& Pathfinding::Examples::TurnBasedAI::dyn_blockManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedAI::dyn_blockManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockManager"))->offset;
  return *reinterpret_cast<::Pathfinding::BlockManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.SingleNodeBlocker blocker
[[deprecated("Use field access instead!")]] ::Pathfinding::SingleNodeBlocker*& Pathfinding::Examples::TurnBasedAI::dyn_blocker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedAI::dyn_blocker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blocker"))->offset;
  return *reinterpret_cast<::Pathfinding::SingleNodeBlocker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode targetNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::Examples::TurnBasedAI::dyn_targetNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedAI::dyn_targetNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.BlockManager/TraversalProvider traversalProvider
[[deprecated("Use field access instead!")]] ::Pathfinding::BlockManager::TraversalProvider*& Pathfinding::Examples::TurnBasedAI::dyn_traversalProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedAI::dyn_traversalProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "traversalProvider"))->offset;
  return *reinterpret_cast<::Pathfinding::BlockManager::TraversalProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedAI.Start
void Pathfinding::Examples::TurnBasedAI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedAI::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedAI.Awake
void Pathfinding::Examples::TurnBasedAI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedAI::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.GroupController
#include "Pathfinding/Examples/GroupController.hpp"
// Including type: UnityEngine.GUIStyle
#include "UnityEngine/GUIStyle.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Examples.RVOExampleAgent
#include "Pathfinding/Examples/RVOExampleAgent.hpp"
// Including type: Pathfinding.RVO.Simulator
#include "Pathfinding/RVO/Simulator.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single rad2Deg
float Pathfinding::Examples::GroupController::_get_rad2Deg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::_get_rad2Deg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pathfinding.Examples", "GroupController", "rad2Deg"));
}
// Autogenerated static field setter
// Set static field: static private System.Single rad2Deg
void Pathfinding::Examples::GroupController::_set_rad2Deg(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::_set_rad2Deg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "GroupController", "rad2Deg", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GUIStyle selectionBox
[[deprecated("Use field access instead!")]] ::UnityEngine::GUIStyle*& Pathfinding::Examples::GroupController::dyn_selectionBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::dyn_selectionBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionBox"))->offset;
  return *reinterpret_cast<::UnityEngine::GUIStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean adjustCamera
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::GroupController::dyn_adjustCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::dyn_adjustCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "adjustCamera"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 start
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::Examples::GroupController::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 end
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::Examples::GroupController::dyn_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::dyn_end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean wasDown
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::GroupController::dyn_wasDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::dyn_wasDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasDown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.Examples.RVOExampleAgent> selection
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::Examples::RVOExampleAgent*>*& Pathfinding::Examples::GroupController::dyn_selection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::dyn_selection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selection"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::Examples::RVOExampleAgent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.Simulator sim
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Simulator*& Pathfinding::Examples::GroupController::dyn_sim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::dyn_sim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sim"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Simulator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera cam
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& Pathfinding::Examples::GroupController::dyn_cam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::dyn_cam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cam"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.GroupController.Start
void Pathfinding::Examples::GroupController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.GroupController.Update
void Pathfinding::Examples::GroupController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.GroupController.OnGUI
void Pathfinding::Examples::GroupController::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.GroupController.Order
void Pathfinding::Examples::GroupController::Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.GroupController.Select
void Pathfinding::Examples::GroupController::Select(::UnityEngine::Vector2 _start, ::UnityEngine::Vector2 _end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::Select");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Select", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_start), ::il2cpp_utils::ExtractType(_end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _start, _end);
}
// Autogenerated method: Pathfinding.Examples.GroupController.GetColor
::UnityEngine::Color Pathfinding::Examples::GroupController::GetColor(float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::GroupController::GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, angle);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.LightweightRVO
#include "Pathfinding/Examples/LightweightRVO.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: Pathfinding.RVO.Simulator
#include "Pathfinding/RVO/Simulator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.RVO.IAgent
#include "Pathfinding/RVO/IAgent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 agentCount
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::LightweightRVO::dyn_agentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_agentCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agentCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single exampleScale
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::LightweightRVO::dyn_exampleScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_exampleScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exampleScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.LightweightRVO/RVOExampleType type
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::LightweightRVO::RVOExampleType& Pathfinding::Examples::LightweightRVO::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::LightweightRVO::RVOExampleType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single radius
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::LightweightRVO::dyn_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::LightweightRVO::dyn_maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_maxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single agentTimeHorizon
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::LightweightRVO::dyn_agentTimeHorizon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_agentTimeHorizon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agentTimeHorizon"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single obstacleTimeHorizon
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::LightweightRVO::dyn_obstacleTimeHorizon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_obstacleTimeHorizon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacleTimeHorizon"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxNeighbours
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::LightweightRVO::dyn_maxNeighbours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_maxNeighbours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNeighbours"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 renderingOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Examples::LightweightRVO::dyn_renderingOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_renderingOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderingOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean debug
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::LightweightRVO::dyn_debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_debug");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debug"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& Pathfinding::Examples::LightweightRVO::dyn_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.Simulator sim
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::Simulator*& Pathfinding::Examples::LightweightRVO::dyn_sim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_sim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sim"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::Simulator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.RVO.IAgent> agents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::RVO::IAgent*>*& Pathfinding::Examples::LightweightRVO::dyn_agents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_agents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::RVO::IAgent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> goals
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Pathfinding::Examples::LightweightRVO::dyn_goals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_goals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goals"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Color> colors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Color>*& Pathfinding::Examples::LightweightRVO::dyn_colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] verts
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Pathfinding::Examples::LightweightRVO::dyn_verts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_verts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2[] uv
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& Pathfinding::Examples::LightweightRVO::dyn_uv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_uv");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uv"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] tris
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Examples::LightweightRVO::dyn_tris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_tris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tris"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] meshColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& Pathfinding::Examples::LightweightRVO::dyn_meshColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_meshColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2[] interpolatedVelocities
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& Pathfinding::Examples::LightweightRVO::dyn_interpolatedVelocities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_interpolatedVelocities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interpolatedVelocities"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2[] interpolatedRotations
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& Pathfinding::Examples::LightweightRVO::dyn_interpolatedRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::dyn_interpolatedRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interpolatedRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.LightweightRVO.Start
void Pathfinding::Examples::LightweightRVO::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.LightweightRVO.OnGUI
void Pathfinding::Examples::LightweightRVO::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.LightweightRVO.uniformDistance
float Pathfinding::Examples::LightweightRVO::uniformDistance(float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::uniformDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "uniformDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radius)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, radius);
}
// Autogenerated method: Pathfinding.Examples.LightweightRVO.CreateAgents
void Pathfinding::Examples::LightweightRVO::CreateAgents(int num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::CreateAgents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAgents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, num);
}
// Autogenerated method: Pathfinding.Examples.LightweightRVO.SetAgentSettings
void Pathfinding::Examples::LightweightRVO::SetAgentSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::SetAgentSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAgentSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.LightweightRVO.Update
void Pathfinding::Examples::LightweightRVO::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.LightweightRVO/RVOExampleType
#include "Pathfinding/Examples/LightweightRVO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.LightweightRVO/RVOExampleType Circle
::Pathfinding::Examples::LightweightRVO::RVOExampleType Pathfinding::Examples::LightweightRVO::RVOExampleType::_get_Circle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::RVOExampleType::_get_Circle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::LightweightRVO::RVOExampleType>("Pathfinding.Examples", "LightweightRVO/RVOExampleType", "Circle"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.LightweightRVO/RVOExampleType Circle
void Pathfinding::Examples::LightweightRVO::RVOExampleType::_set_Circle(::Pathfinding::Examples::LightweightRVO::RVOExampleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::RVOExampleType::_set_Circle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "LightweightRVO/RVOExampleType", "Circle", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.LightweightRVO/RVOExampleType Line
::Pathfinding::Examples::LightweightRVO::RVOExampleType Pathfinding::Examples::LightweightRVO::RVOExampleType::_get_Line() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::RVOExampleType::_get_Line");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::LightweightRVO::RVOExampleType>("Pathfinding.Examples", "LightweightRVO/RVOExampleType", "Line"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.LightweightRVO/RVOExampleType Line
void Pathfinding::Examples::LightweightRVO::RVOExampleType::_set_Line(::Pathfinding::Examples::LightweightRVO::RVOExampleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::RVOExampleType::_set_Line");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "LightweightRVO/RVOExampleType", "Line", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.LightweightRVO/RVOExampleType Point
::Pathfinding::Examples::LightweightRVO::RVOExampleType Pathfinding::Examples::LightweightRVO::RVOExampleType::_get_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::RVOExampleType::_get_Point");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::LightweightRVO::RVOExampleType>("Pathfinding.Examples", "LightweightRVO/RVOExampleType", "Point"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.LightweightRVO/RVOExampleType Point
void Pathfinding::Examples::LightweightRVO::RVOExampleType::_set_Point(::Pathfinding::Examples::LightweightRVO::RVOExampleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::RVOExampleType::_set_Point");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "LightweightRVO/RVOExampleType", "Point", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.LightweightRVO/RVOExampleType RandomStreams
::Pathfinding::Examples::LightweightRVO::RVOExampleType Pathfinding::Examples::LightweightRVO::RVOExampleType::_get_RandomStreams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::RVOExampleType::_get_RandomStreams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::LightweightRVO::RVOExampleType>("Pathfinding.Examples", "LightweightRVO/RVOExampleType", "RandomStreams"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.LightweightRVO/RVOExampleType RandomStreams
void Pathfinding::Examples::LightweightRVO::RVOExampleType::_set_RandomStreams(::Pathfinding::Examples::LightweightRVO::RVOExampleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::RVOExampleType::_set_RandomStreams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "LightweightRVO/RVOExampleType", "RandomStreams", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.LightweightRVO/RVOExampleType Crossing
::Pathfinding::Examples::LightweightRVO::RVOExampleType Pathfinding::Examples::LightweightRVO::RVOExampleType::_get_Crossing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::RVOExampleType::_get_Crossing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::LightweightRVO::RVOExampleType>("Pathfinding.Examples", "LightweightRVO/RVOExampleType", "Crossing"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.LightweightRVO/RVOExampleType Crossing
void Pathfinding::Examples::LightweightRVO::RVOExampleType::_set_Crossing(::Pathfinding::Examples::LightweightRVO::RVOExampleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::RVOExampleType::_set_Crossing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "LightweightRVO/RVOExampleType", "Crossing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::LightweightRVO::RVOExampleType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LightweightRVO::RVOExampleType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.RVOAgentPlacer
#include "Pathfinding/Examples/RVOAgentPlacer.hpp"
// Including type: Pathfinding.Examples.RVOAgentPlacer/<Start>d__6
#include "Pathfinding/Examples/RVOAgentPlacer_-Start-d__6.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single rad2Deg
float Pathfinding::Examples::RVOAgentPlacer::_get_rad2Deg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::_get_rad2Deg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pathfinding.Examples", "RVOAgentPlacer", "rad2Deg"));
}
// Autogenerated static field setter
// Set static field: static private System.Single rad2Deg
void Pathfinding::Examples::RVOAgentPlacer::_set_rad2Deg(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::_set_rad2Deg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "RVOAgentPlacer", "rad2Deg", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 agents
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::RVOAgentPlacer::dyn_agents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::dyn_agents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agents"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ringSize
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::RVOAgentPlacer::dyn_ringSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::dyn_ringSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ringSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask mask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::Examples::RVOAgentPlacer::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Pathfinding::Examples::RVOAgentPlacer::dyn_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::dyn_prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 goalOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Examples::RVOAgentPlacer::dyn_goalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::dyn_goalOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goalOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single repathRate
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::RVOAgentPlacer::dyn_repathRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::dyn_repathRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "repathRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.RVOAgentPlacer.Start
::System::Collections::IEnumerator* Pathfinding::Examples::RVOAgentPlacer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.RVOAgentPlacer.GetColor
::UnityEngine::Color Pathfinding::Examples::RVOAgentPlacer::GetColor(float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, angle);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Examples.RVOAgentPlacer/<Start>d__6
#include "Pathfinding/Examples/RVOAgentPlacer_-Start-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.RVOAgentPlacer <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::RVOAgentPlacer*& Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::RVOAgentPlacer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.RVOAgentPlacer/<Start>d__6.System.IDisposable.Dispose
void Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::RVOAgentPlacer::$Start$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.RVOAgentPlacer/<Start>d__6.MoveNext
bool Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::RVOAgentPlacer::$Start$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.RVOAgentPlacer/<Start>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::RVOAgentPlacer::$Start$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.RVOAgentPlacer/<Start>d__6.System.Collections.IEnumerator.Reset
void Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::RVOAgentPlacer::$Start$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.RVOAgentPlacer/<Start>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOAgentPlacer::$Start$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::RVOAgentPlacer::$Start$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.RVOExampleAgent
#include "Pathfinding/Examples/RVOExampleAgent.hpp"
// Including type: Pathfinding.RVO.RVOController
#include "Pathfinding/RVO/RVOController.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Seeker
#include "Pathfinding/Seeker.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single repathRate
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::RVOExampleAgent::dyn_repathRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::dyn_repathRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "repathRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextRepath
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::RVOExampleAgent::dyn_nextRepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::dyn_nextRepath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextRepath"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 target
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Examples::RVOExampleAgent::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canSearchAgain
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::RVOExampleAgent::dyn_canSearchAgain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::dyn_canSearchAgain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canSearchAgain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.RVOController controller
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVOController*& Pathfinding::Examples::RVOExampleAgent::dyn_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::dyn_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controller"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVOController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::RVOExampleAgent::dyn_maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::dyn_maxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Path path
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::Examples::RVOExampleAgent::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> vectorPath
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Pathfinding::Examples::RVOExampleAgent::dyn_vectorPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::dyn_vectorPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vectorPath"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 wp
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::RVOExampleAgent::dyn_wp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::dyn_wp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveNextDist
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::RVOExampleAgent::dyn_moveNextDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::dyn_moveNextDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveNextDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slowdownDistance
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::RVOExampleAgent::dyn_slowdownDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::dyn_slowdownDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slowdownDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask groundMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::Examples::RVOExampleAgent::dyn_groundMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::dyn_groundMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groundMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Seeker seeker
[[deprecated("Use field access instead!")]] ::Pathfinding::Seeker*& Pathfinding::Examples::RVOExampleAgent::dyn_seeker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::dyn_seeker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seeker"))->offset;
  return *reinterpret_cast<::Pathfinding::Seeker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] rends
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::MeshRenderer*>& Pathfinding::Examples::RVOExampleAgent::dyn_rends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::dyn_rends");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rends"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.RVOExampleAgent.Awake
void Pathfinding::Examples::RVOExampleAgent::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.RVOExampleAgent.SetTarget
void Pathfinding::Examples::RVOExampleAgent::SetTarget(::UnityEngine::Vector3 target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::SetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Pathfinding.Examples.RVOExampleAgent.SetColor
void Pathfinding::Examples::RVOExampleAgent::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: Pathfinding.Examples.RVOExampleAgent.RecalculatePath
void Pathfinding::Examples::RVOExampleAgent::RecalculatePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::RecalculatePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculatePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.RVOExampleAgent.OnPathComplete
void Pathfinding::Examples::RVOExampleAgent::OnPathComplete(::Pathfinding::Path* _p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::OnPathComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPathComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _p);
}
// Autogenerated method: Pathfinding.Examples.RVOExampleAgent.Update
void Pathfinding::Examples::RVOExampleAgent::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::RVOExampleAgent::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.ProceduralWorld
#include "Pathfinding/Examples/ProceduralWorld.hpp"
// Including type: Pathfinding.Examples.ProceduralWorld/RotationRandomness
#include "Pathfinding/Examples/ProceduralWorld_RotationRandomness.hpp"
// Including type: Pathfinding.Examples.ProceduralWorld/ProceduralPrefab
#include "Pathfinding/Examples/ProceduralWorld_ProceduralPrefab.hpp"
// Including type: Pathfinding.Examples.ProceduralWorld/ProceduralTile
#include "Pathfinding/Examples/ProceduralWorld_ProceduralTile.hpp"
// Including type: Pathfinding.Examples.ProceduralWorld/<GenerateTiles>d__13
#include "Pathfinding/Examples/ProceduralWorld_-GenerateTiles-d__13.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::Examples::ProceduralWorld::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.ProceduralWorld/ProceduralPrefab[] prefabs
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::Examples::ProceduralWorld::ProceduralPrefab*>& Pathfinding::Examples::ProceduralWorld::dyn_prefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::dyn_prefabs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabs"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::Examples::ProceduralWorld::ProceduralPrefab*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 range
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ProceduralWorld::dyn_range() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::dyn_range");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "range"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 disableAsyncLoadWithinRange
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ProceduralWorld::dyn_disableAsyncLoadWithinRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::dyn_disableAsyncLoadWithinRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableAsyncLoadWithinRange"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tileSize
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::ProceduralWorld::dyn_tileSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::dyn_tileSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tileSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 subTiles
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ProceduralWorld::dyn_subTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::dyn_subTiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subTiles"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean staticBatching
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::ProceduralWorld::dyn_staticBatching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::dyn_staticBatching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "staticBatching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Collections.IEnumerator> tileGenerationQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::System::Collections::IEnumerator*>*& Pathfinding::Examples::ProceduralWorld::dyn_tileGenerationQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::dyn_tileGenerationQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tileGenerationQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::System::Collections::IEnumerator*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Pathfinding.Int2,Pathfinding.Examples.ProceduralWorld/ProceduralTile> tiles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Pathfinding::Int2, ::Pathfinding::Examples::ProceduralWorld::ProceduralTile*>*& Pathfinding::Examples::ProceduralWorld::dyn_tiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::dyn_tiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tiles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Pathfinding::Int2, ::Pathfinding::Examples::ProceduralWorld::ProceduralTile*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld.Start
void Pathfinding::Examples::ProceduralWorld::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld.Update
void Pathfinding::Examples::ProceduralWorld::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld.GenerateTiles
::System::Collections::IEnumerator* Pathfinding::Examples::ProceduralWorld::GenerateTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::GenerateTiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.ProceduralWorld/RotationRandomness
#include "Pathfinding/Examples/ProceduralWorld_RotationRandomness.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.ProceduralWorld/RotationRandomness AllAxes
::Pathfinding::Examples::ProceduralWorld::RotationRandomness Pathfinding::Examples::ProceduralWorld::RotationRandomness::_get_AllAxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::RotationRandomness::_get_AllAxes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::ProceduralWorld::RotationRandomness>("Pathfinding.Examples", "ProceduralWorld/RotationRandomness", "AllAxes"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.ProceduralWorld/RotationRandomness AllAxes
void Pathfinding::Examples::ProceduralWorld::RotationRandomness::_set_AllAxes(::Pathfinding::Examples::ProceduralWorld::RotationRandomness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::RotationRandomness::_set_AllAxes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "ProceduralWorld/RotationRandomness", "AllAxes", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.ProceduralWorld/RotationRandomness Y
::Pathfinding::Examples::ProceduralWorld::RotationRandomness Pathfinding::Examples::ProceduralWorld::RotationRandomness::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::RotationRandomness::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::ProceduralWorld::RotationRandomness>("Pathfinding.Examples", "ProceduralWorld/RotationRandomness", "Y"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.ProceduralWorld/RotationRandomness Y
void Pathfinding::Examples::ProceduralWorld::RotationRandomness::_set_Y(::Pathfinding::Examples::ProceduralWorld::RotationRandomness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::RotationRandomness::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "ProceduralWorld/RotationRandomness", "Y", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ProceduralWorld::RotationRandomness::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::RotationRandomness::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.ProceduralWorld/ProceduralPrefab
#include "Pathfinding/Examples/ProceduralWorld_ProceduralPrefab.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single density
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_density() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_density");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "density"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perlin
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_perlin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_perlin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perlinPower
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_perlinPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_perlinPower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinPower"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 perlinOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_perlinOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_perlinOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perlinScale
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_perlinScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_perlinScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single random
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.ProceduralWorld/RotationRandomness randomRotation
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::ProceduralWorld::RotationRandomness& Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_randomRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_randomRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomRotation"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::ProceduralWorld::RotationRandomness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean singleFixed
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_singleFixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralPrefab::dyn_singleFixed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "singleFixed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.ProceduralWorld/ProceduralTile
#include "Pathfinding/Examples/ProceduralWorld_ProceduralTile.hpp"
// Including type: Pathfinding.Examples.ProceduralWorld/ProceduralTile/<Generate>d__11
#include "Pathfinding/Examples/ProceduralWorld_ProceduralTile_-Generate-d__11.hpp"
// Including type: Pathfinding.Examples.ProceduralWorld/ProceduralTile/<InternalGenerate>d__16
#include "Pathfinding/Examples/ProceduralWorld_ProceduralTile_-InternalGenerate-d__16.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: Pathfinding.Examples.ProceduralWorld/ProceduralPrefab
#include "Pathfinding/Examples/ProceduralWorld_ProceduralPrefab.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 x
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ProceduralWorld::ProceduralTile::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 z
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ProceduralWorld::ProceduralTile::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::dyn_z");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Random rnd
[[deprecated("Use field access instead!")]] ::System::Random*& Pathfinding::Examples::ProceduralWorld::ProceduralTile::dyn_rnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::dyn_rnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rnd"))->offset;
  return *reinterpret_cast<::System::Random**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Examples.ProceduralWorld world
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::ProceduralWorld*& Pathfinding::Examples::ProceduralWorld::ProceduralTile::dyn_world() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::dyn_world");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "world"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::ProceduralWorld**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <destroyed>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::ProceduralWorld::ProceduralTile::dyn_$destroyed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::dyn_$destroyed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<destroyed>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform root
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::Examples::ProceduralWorld::ProceduralTile::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator ie
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& Pathfinding::Examples::ProceduralWorld::ProceduralTile::dyn_ie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::dyn_ie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ie"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile.get_destroyed
bool Pathfinding::Examples::ProceduralWorld::ProceduralTile::get_destroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::get_destroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile.set_destroyed
void Pathfinding::Examples::ProceduralWorld::ProceduralTile::set_destroyed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::set_destroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_destroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile.Generate
::System::Collections::IEnumerator* Pathfinding::Examples::ProceduralWorld::ProceduralTile::Generate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::Generate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Generate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile.ForceFinish
void Pathfinding::Examples::ProceduralWorld::ProceduralTile::ForceFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::ForceFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile.RandomInside
::UnityEngine::Vector3 Pathfinding::Examples::ProceduralWorld::ProceduralTile::RandomInside() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::RandomInside");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomInside", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile.RandomInside
::UnityEngine::Vector3 Pathfinding::Examples::ProceduralWorld::ProceduralTile::RandomInside(float px, float pz) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::RandomInside");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomInside", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(px), ::il2cpp_utils::ExtractType(pz)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, px, pz);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile.RandomYRot
::UnityEngine::Quaternion Pathfinding::Examples::ProceduralWorld::ProceduralTile::RandomYRot(::Pathfinding::Examples::ProceduralWorld::ProceduralPrefab* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::RandomYRot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomYRot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile.InternalGenerate
::System::Collections::IEnumerator* Pathfinding::Examples::ProceduralWorld::ProceduralTile::InternalGenerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::InternalGenerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGenerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile.Destroy
void Pathfinding::Examples::ProceduralWorld::ProceduralTile::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Examples.ProceduralWorld/ProceduralTile/<Generate>d__11
#include "Pathfinding/Examples/ProceduralWorld_ProceduralTile_-Generate-d__11.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.ProceduralWorld/ProceduralTile <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::ProceduralWorld::ProceduralTile*& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::ProceduralWorld::ProceduralTile**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile/<Generate>d__11.System.IDisposable.Dispose
void Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile/<Generate>d__11.MoveNext
bool Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile/<Generate>d__11.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile/<Generate>d__11.System.Collections.IEnumerator.Reset
void Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile/<Generate>d__11.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$Generate$d__11*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Examples.ProceduralWorld/ProceduralTile/<InternalGenerate>d__16
#include "Pathfinding/Examples/ProceduralWorld_ProceduralTile_-InternalGenerate-d__16.hpp"
// Including type: Pathfinding.Examples.ProceduralWorld/ProceduralPrefab
#include "Pathfinding/Examples/ProceduralWorld_ProceduralPrefab.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.ProceduralWorld/ProceduralTile <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::ProceduralWorld::ProceduralTile*& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::ProceduralWorld::ProceduralTile**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <counter>5__2
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$counter$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$counter$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<counter>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[,] <ditherMap>5__3
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$ditherMap$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$ditherMap$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ditherMap>5__3"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__4
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$i$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$i$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Examples.ProceduralWorld/ProceduralPrefab <pref>5__5
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::ProceduralWorld::ProceduralPrefab*& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$pref$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$pref$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pref>5__5"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::ProceduralWorld::ProceduralPrefab**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <subSize>5__6
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$subSize$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$subSize$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<subSize>5__6"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <sx>5__7
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$sx$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$sx$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sx>5__7"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <sz>5__8
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$sz$5__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$sz$5__8");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sz>5__8"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <px>5__9
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$px$5__9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$px$5__9");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<px>5__9"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <pz>5__10
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$pz$5__10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$pz$5__10");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pz>5__10"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <count>5__11
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$count$5__11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$count$5__11");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<count>5__11"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <j>5__12
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$j$5__12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::dyn_$j$5__12");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<j>5__12"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile/<InternalGenerate>d__16.System.IDisposable.Dispose
void Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile/<InternalGenerate>d__16.MoveNext
bool Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile/<InternalGenerate>d__16.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile/<InternalGenerate>d__16.System.Collections.IEnumerator.Reset
void Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/ProceduralTile/<InternalGenerate>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ProceduralWorld::ProceduralTile::$InternalGenerate$d__16*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Examples.ProceduralWorld/<GenerateTiles>d__13
#include "Pathfinding/Examples/ProceduralWorld_-GenerateTiles-d__13.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.ProceduralWorld <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::ProceduralWorld*& Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::ProceduralWorld**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/<GenerateTiles>d__13.System.IDisposable.Dispose
void Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/<GenerateTiles>d__13.MoveNext
bool Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/<GenerateTiles>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/<GenerateTiles>d__13.System.Collections.IEnumerator.Reset
void Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ProceduralWorld/<GenerateTiles>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ProceduralWorld::$GenerateTiles$d__13*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.BezierMover
#include "Pathfinding/Examples/BezierMover.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] points
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& Pathfinding::Examples::BezierMover::dyn_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::BezierMover::dyn_points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "points"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single speed
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::BezierMover::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::BezierMover::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tiltAmount
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::BezierMover::dyn_tiltAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::BezierMover::dyn_tiltAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tiltAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single time
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::BezierMover::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::BezierMover::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.BezierMover.Position
::UnityEngine::Vector3 Pathfinding::Examples::BezierMover::Position(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::BezierMover::Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, t);
}
// Autogenerated method: Pathfinding.Examples.BezierMover.Update
void Pathfinding::Examples::BezierMover::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::BezierMover::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.BezierMover.OnDrawGizmos
void Pathfinding::Examples::BezierMover::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::BezierMover::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.LocalSpaceRichAI
#include "Pathfinding/Examples/LocalSpaceRichAI.hpp"
// Including type: Pathfinding.LocalSpaceGraph
#include "Pathfinding/LocalSpaceGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.LocalSpaceGraph graph
[[deprecated("Use field access instead!")]] ::Pathfinding::LocalSpaceGraph*& Pathfinding::Examples::LocalSpaceRichAI::dyn_graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LocalSpaceRichAI::dyn_graph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graph"))->offset;
  return *reinterpret_cast<::Pathfinding::LocalSpaceGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.LocalSpaceRichAI.RefreshTransform
void Pathfinding::Examples::LocalSpaceRichAI::RefreshTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LocalSpaceRichAI::RefreshTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.LocalSpaceRichAI.Start
void Pathfinding::Examples::LocalSpaceRichAI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LocalSpaceRichAI::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.LocalSpaceRichAI.CalculatePathRequestEndpoints
void Pathfinding::Examples::LocalSpaceRichAI::CalculatePathRequestEndpoints(ByRef<::UnityEngine::Vector3> start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LocalSpaceRichAI::CalculatePathRequestEndpoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(start), byref(end));
}
// Autogenerated method: Pathfinding.Examples.LocalSpaceRichAI.Update
void Pathfinding::Examples::LocalSpaceRichAI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::LocalSpaceRichAI::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.Astar3DButton
#include "Pathfinding/Examples/Astar3DButton.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode node
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::Examples::Astar3DButton::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::Astar3DButton::dyn_node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.Astar3DButton.OnHover
void Pathfinding::Examples::Astar3DButton::OnHover(bool hover) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::Astar3DButton::OnHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hover)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hover);
}
// Autogenerated method: Pathfinding.Examples.Astar3DButton.OnClick
void Pathfinding::Examples::Astar3DButton::OnClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::Astar3DButton::OnClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.HexagonTrigger
#include "Pathfinding/Examples/HexagonTrigger.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Button button
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& Pathfinding::Examples::HexagonTrigger::dyn_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::HexagonTrigger::dyn_button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "button"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator anim
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& Pathfinding::Examples::HexagonTrigger::dyn_anim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::HexagonTrigger::dyn_anim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anim"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean visible
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::HexagonTrigger::dyn_visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::HexagonTrigger::dyn_visible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.HexagonTrigger.Awake
void Pathfinding::Examples::HexagonTrigger::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::HexagonTrigger::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.HexagonTrigger.OnTriggerEnter
void Pathfinding::Examples::HexagonTrigger::OnTriggerEnter(::UnityEngine::Collider* coll) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::HexagonTrigger::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coll)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, coll);
}
// Autogenerated method: Pathfinding.Examples.HexagonTrigger.OnTriggerExit
void Pathfinding::Examples::HexagonTrigger::OnTriggerExit(::UnityEngine::Collider* coll) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::HexagonTrigger::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coll)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, coll);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.TurnBasedDoor
#include "Pathfinding/Examples/TurnBasedDoor.hpp"
// Including type: Pathfinding.Examples.TurnBasedDoor/<WaitAndClose>d__6
#include "Pathfinding/Examples/TurnBasedDoor_-WaitAndClose-d__6.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: Pathfinding.SingleNodeBlocker
#include "Pathfinding/SingleNodeBlocker.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& Pathfinding::Examples::TurnBasedDoor::dyn_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::dyn_animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.SingleNodeBlocker blocker
[[deprecated("Use field access instead!")]] ::Pathfinding::SingleNodeBlocker*& Pathfinding::Examples::TurnBasedDoor::dyn_blocker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::dyn_blocker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blocker"))->offset;
  return *reinterpret_cast<::Pathfinding::SingleNodeBlocker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean open
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::TurnBasedDoor::dyn_open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::dyn_open");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "open"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedDoor.Awake
void Pathfinding::Examples::TurnBasedDoor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedDoor.Start
void Pathfinding::Examples::TurnBasedDoor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedDoor.Close
void Pathfinding::Examples::TurnBasedDoor::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedDoor.WaitAndClose
::System::Collections::IEnumerator* Pathfinding::Examples::TurnBasedDoor::WaitAndClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::WaitAndClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitAndClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedDoor.Open
void Pathfinding::Examples::TurnBasedDoor::Open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedDoor.Toggle
void Pathfinding::Examples::TurnBasedDoor::Toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::Toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Examples.TurnBasedDoor/<WaitAndClose>d__6
#include "Pathfinding/Examples/TurnBasedDoor_-WaitAndClose-d__6.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.SingleNodeBlocker
#include "Pathfinding/SingleNodeBlocker.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.TurnBasedDoor <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::TurnBasedDoor*& Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::TurnBasedDoor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.SingleNodeBlocker> <selector>5__2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::SingleNodeBlocker*>*& Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::dyn_$selector$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::dyn_$selector$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<selector>5__2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::SingleNodeBlocker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GraphNode <node>5__3
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::dyn_$node$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::dyn_$node$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<node>5__3"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedDoor/<WaitAndClose>d__6.System.IDisposable.Dispose
void Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedDoor/<WaitAndClose>d__6.MoveNext
bool Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedDoor/<WaitAndClose>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedDoor/<WaitAndClose>d__6.System.Collections.IEnumerator.Reset
void Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedDoor/<WaitAndClose>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::TurnBasedDoor::$WaitAndClose$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.TurnBasedManager
#include "Pathfinding/Examples/TurnBasedManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Pathfinding.Examples.TurnBasedManager/<MoveAlongPath>d__14
#include "Pathfinding/Examples/TurnBasedManager_-MoveAlongPath-d__14.hpp"
// Including type: Pathfinding.Examples.TurnBasedManager/<MoveToNode>d__13
#include "Pathfinding/Examples/TurnBasedManager_-MoveToNode-d__13.hpp"
// Including type: Pathfinding.Examples.TurnBasedAI
#include "Pathfinding/Examples/TurnBasedAI.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.ABPath
#include "Pathfinding/ABPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Examples.TurnBasedAI selected
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::TurnBasedAI*& Pathfinding::Examples::TurnBasedManager::dyn_selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::dyn_selected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selected"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::TurnBasedAI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single movementSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::TurnBasedManager::dyn_movementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::dyn_movementSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "movementSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject nodePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Pathfinding::Examples::TurnBasedManager::dyn_nodePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::dyn_nodePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask layerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::Examples::TurnBasedManager::dyn_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::dyn_layerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> possibleMoves
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& Pathfinding::Examples::TurnBasedManager::dyn_possibleMoves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::dyn_possibleMoves");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "possibleMoves"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.EventSystem eventSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::EventSystem*& Pathfinding::Examples::TurnBasedManager::dyn_eventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::dyn_eventSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::EventSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.TurnBasedManager/State state
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::TurnBasedManager::State& Pathfinding::Examples::TurnBasedManager::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::TurnBasedManager::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager.Awake
void Pathfinding::Examples::TurnBasedManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager.Update
void Pathfinding::Examples::TurnBasedManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager.HandleButtonUnderRay
void Pathfinding::Examples::TurnBasedManager::HandleButtonUnderRay(::UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::HandleButtonUnderRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleButtonUnderRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ray);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager.Select
void Pathfinding::Examples::TurnBasedManager::Select(::Pathfinding::Examples::TurnBasedAI* unit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::Select");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Select", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unit);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager.MoveToNode
::System::Collections::IEnumerator* Pathfinding::Examples::TurnBasedManager::MoveToNode(::Pathfinding::Examples::TurnBasedAI* unit, ::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::MoveToNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unit), ::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, unit, node);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager.MoveAlongPath
::System::Collections::IEnumerator* Pathfinding::Examples::TurnBasedManager::MoveAlongPath(::Pathfinding::Examples::TurnBasedAI* unit, ::Pathfinding::ABPath* path, float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::MoveAlongPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Examples", "TurnBasedManager", "MoveAlongPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unit), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(speed)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unit, path, speed);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager.DestroyPossibleMoves
void Pathfinding::Examples::TurnBasedManager::DestroyPossibleMoves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::DestroyPossibleMoves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPossibleMoves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager.GeneratePossibleMoves
void Pathfinding::Examples::TurnBasedManager::GeneratePossibleMoves(::Pathfinding::Examples::TurnBasedAI* unit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::GeneratePossibleMoves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GeneratePossibleMoves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unit);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.TurnBasedManager/State
#include "Pathfinding/Examples/TurnBasedManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.TurnBasedManager/State SelectUnit
::Pathfinding::Examples::TurnBasedManager::State Pathfinding::Examples::TurnBasedManager::State::_get_SelectUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::State::_get_SelectUnit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::TurnBasedManager::State>("Pathfinding.Examples", "TurnBasedManager/State", "SelectUnit"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.TurnBasedManager/State SelectUnit
void Pathfinding::Examples::TurnBasedManager::State::_set_SelectUnit(::Pathfinding::Examples::TurnBasedManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::State::_set_SelectUnit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "TurnBasedManager/State", "SelectUnit", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.TurnBasedManager/State SelectTarget
::Pathfinding::Examples::TurnBasedManager::State Pathfinding::Examples::TurnBasedManager::State::_get_SelectTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::State::_get_SelectTarget");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::TurnBasedManager::State>("Pathfinding.Examples", "TurnBasedManager/State", "SelectTarget"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.TurnBasedManager/State SelectTarget
void Pathfinding::Examples::TurnBasedManager::State::_set_SelectTarget(::Pathfinding::Examples::TurnBasedManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::State::_set_SelectTarget");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "TurnBasedManager/State", "SelectTarget", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.TurnBasedManager/State Move
::Pathfinding::Examples::TurnBasedManager::State Pathfinding::Examples::TurnBasedManager::State::_get_Move() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::State::_get_Move");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::TurnBasedManager::State>("Pathfinding.Examples", "TurnBasedManager/State", "Move"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.TurnBasedManager/State Move
void Pathfinding::Examples::TurnBasedManager::State::_set_Move(::Pathfinding::Examples::TurnBasedManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::State::_set_Move");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "TurnBasedManager/State", "Move", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::TurnBasedManager::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Examples.TurnBasedManager/<MoveAlongPath>d__14
#include "Pathfinding/Examples/TurnBasedManager_-MoveAlongPath-d__14.hpp"
// Including type: Pathfinding.ABPath
#include "Pathfinding/ABPath.hpp"
// Including type: Pathfinding.Examples.TurnBasedAI
#include "Pathfinding/Examples/TurnBasedAI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ABPath path
[[deprecated("Use field access instead!")]] ::Pathfinding::ABPath*& Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Pathfinding::ABPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.TurnBasedAI unit
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::TurnBasedAI*& Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_unit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unit"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::TurnBasedAI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single speed
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <distanceAlongSegment>5__2
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$distanceAlongSegment$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$distanceAlongSegment$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<distanceAlongSegment>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__3
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$i$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$i$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <p0>5__4
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$p0$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$p0$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<p0>5__4"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <p1>5__5
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$p1$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$p1$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<p1>5__5"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <p2>5__6
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$p2$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$p2$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<p2>5__6"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <p3>5__7
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$p3$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$p3$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<p3>5__7"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <segmentLength>5__8
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$segmentLength$5__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::dyn_$segmentLength$5__8");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<segmentLength>5__8"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager/<MoveAlongPath>d__14.System.IDisposable.Dispose
void Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager/<MoveAlongPath>d__14.MoveNext
bool Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager/<MoveAlongPath>d__14.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager/<MoveAlongPath>d__14.System.Collections.IEnumerator.Reset
void Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager/<MoveAlongPath>d__14.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::TurnBasedManager::$MoveAlongPath$d__14*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Examples.TurnBasedManager/<MoveToNode>d__13
#include "Pathfinding/Examples/TurnBasedManager_-MoveToNode-d__13.hpp"
// Including type: Pathfinding.Examples.TurnBasedAI
#include "Pathfinding/Examples/TurnBasedAI.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.ABPath
#include "Pathfinding/ABPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.TurnBasedAI unit
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::TurnBasedAI*& Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::dyn_unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::dyn_unit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unit"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::TurnBasedAI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode node
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::dyn_node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.TurnBasedManager <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::TurnBasedManager*& Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::TurnBasedManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.ABPath <path>5__2
[[deprecated("Use field access instead!")]] ::Pathfinding::ABPath*& Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::dyn_$path$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::dyn_$path$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<path>5__2"))->offset;
  return *reinterpret_cast<::Pathfinding::ABPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager/<MoveToNode>d__13.System.IDisposable.Dispose
void Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager/<MoveToNode>d__13.MoveNext
bool Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager/<MoveToNode>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager/<MoveToNode>d__13.System.Collections.IEnumerator.Reset
void Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.TurnBasedManager/<MoveToNode>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::TurnBasedManager::$MoveToNode$d__13*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.ExampleMover
#include "Pathfinding/Examples/ExampleMover.hpp"
// Including type: Pathfinding.Examples.RVOExampleAgent
#include "Pathfinding/Examples/RVOExampleAgent.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Examples.RVOExampleAgent agent
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::RVOExampleAgent*& Pathfinding::Examples::ExampleMover::dyn_agent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ExampleMover::dyn_agent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agent"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::RVOExampleAgent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::Examples::ExampleMover::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ExampleMover::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.ExampleMover.Awake
void Pathfinding::Examples::ExampleMover::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ExampleMover::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ExampleMover.Start
void Pathfinding::Examples::ExampleMover::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ExampleMover::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ExampleMover.LateUpdate
void Pathfinding::Examples::ExampleMover::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ExampleMover::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.MecanimBridge
#include "Pathfinding/Examples/MecanimBridge.hpp"
// Including type: Pathfinding.IAstarAI
#include "Pathfinding/IAstarAI.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single velocitySmoothing
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::MecanimBridge::dyn_velocitySmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MecanimBridge::dyn_velocitySmoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocitySmoothing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.IAstarAI ai
[[deprecated("Use field access instead!")]] ::Pathfinding::IAstarAI*& Pathfinding::Examples::MecanimBridge::dyn_ai() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MecanimBridge::dyn_ai");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ai"))->offset;
  return *reinterpret_cast<::Pathfinding::IAstarAI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator anim
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& Pathfinding::Examples::MecanimBridge::dyn_anim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MecanimBridge::dyn_anim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anim"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform tr
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::Examples::MecanimBridge::dyn_tr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MecanimBridge::dyn_tr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tr"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 smoothedVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Examples::MecanimBridge::dyn_smoothedVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MecanimBridge::dyn_smoothedVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothedVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] prevFootPos
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Pathfinding::Examples::MecanimBridge::dyn_prevFootPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MecanimBridge::dyn_prevFootPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevFootPos"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] footTransforms
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& Pathfinding::Examples::MecanimBridge::dyn_footTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MecanimBridge::dyn_footTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "footTransforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.MecanimBridge.Update
void Pathfinding::Examples::MecanimBridge::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MecanimBridge::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.MecanimBridge.CalculateBlendPoint
::UnityEngine::Vector3 Pathfinding::Examples::MecanimBridge::CalculateBlendPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MecanimBridge::CalculateBlendPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateBlendPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.MecanimBridge.OnAnimatorMove
void Pathfinding::Examples::MecanimBridge::OnAnimatorMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MecanimBridge::OnAnimatorMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAnimatorMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.MecanimBridge.RotatePointAround
::UnityEngine::Vector3 Pathfinding::Examples::MecanimBridge::RotatePointAround(::UnityEngine::Vector3 point, ::UnityEngine::Vector3 around, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MecanimBridge::RotatePointAround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Examples", "MecanimBridge", "RotatePointAround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(around), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, around, rotation);
}
// Autogenerated method: Pathfinding.Examples.MecanimBridge.RotateTowards
::UnityEngine::Quaternion Pathfinding::Examples::MecanimBridge::RotateTowards(::UnityEngine::Vector3 direction, float maxDegrees) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MecanimBridge::RotateTowards");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::MecanimBridge*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, direction, maxDegrees);
}
// Autogenerated method: Pathfinding.Examples.MecanimBridge.Awake
void Pathfinding::Examples::MecanimBridge::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MecanimBridge::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.PathTypesDemo
#include "Pathfinding/Examples/PathTypesDemo.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Pathfinding.Examples.PathTypesDemo/<DemoConstantPath>d__22
#include "Pathfinding/Examples/PathTypesDemo_-DemoConstantPath-d__22.hpp"
// Including type: Pathfinding.Examples.PathTypesDemo/<DemoMultiTargetPath>d__21
#include "Pathfinding/Examples/PathTypesDemo_-DemoMultiTargetPath-d__21.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.FloodPath
#include "Pathfinding/FloodPath.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.PathTypesDemo/DemoMode activeDemo
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::PathTypesDemo::DemoMode& Pathfinding::Examples::PathTypesDemo::dyn_activeDemo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::dyn_activeDemo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeDemo"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::PathTypesDemo::DemoMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform start
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::Examples::PathTypesDemo::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform end
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::Examples::PathTypesDemo::dyn_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::dyn_end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 pathOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Examples::PathTypesDemo::dyn_pathOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::dyn_pathOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material lineMat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Pathfinding::Examples::PathTypesDemo::dyn_lineMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::dyn_lineMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineMat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material squareMat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Pathfinding::Examples::PathTypesDemo::dyn_squareMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::dyn_squareMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "squareMat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lineWidth
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::PathTypesDemo::dyn_lineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::dyn_lineWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 searchLength
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::PathTypesDemo::dyn_searchLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::dyn_searchLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "searchLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 spread
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::PathTypesDemo::dyn_spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::dyn_spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spread"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single aimStrength
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::PathTypesDemo::dyn_aimStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::dyn_aimStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aimStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Path lastPath
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::Examples::PathTypesDemo::dyn_lastPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::dyn_lastPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPath"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.FloodPath lastFloodPath
[[deprecated("Use field access instead!")]] ::Pathfinding::FloodPath*& Pathfinding::Examples::PathTypesDemo::dyn_lastFloodPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::dyn_lastFloodPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastFloodPath"))->offset;
  return *reinterpret_cast<::Pathfinding::FloodPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> lastRender
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& Pathfinding::Examples::PathTypesDemo::dyn_lastRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::dyn_lastRender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRender"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> multipoints
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Pathfinding::Examples::PathTypesDemo::dyn_multipoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::dyn_multipoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multipoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo.Update
void Pathfinding::Examples::PathTypesDemo::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo.OnGUI
void Pathfinding::Examples::PathTypesDemo::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo.OnPathComplete
void Pathfinding::Examples::PathTypesDemo::OnPathComplete(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::OnPathComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPathComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo.ClearPrevious
void Pathfinding::Examples::PathTypesDemo::ClearPrevious() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::ClearPrevious");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPrevious", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo.OnDestroy
void Pathfinding::Examples::PathTypesDemo::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo.DemoPath
void Pathfinding::Examples::PathTypesDemo::DemoPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DemoPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo.DemoMultiTargetPath
::System::Collections::IEnumerator* Pathfinding::Examples::PathTypesDemo::DemoMultiTargetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMultiTargetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DemoMultiTargetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo.DemoConstantPath
::System::Collections::IEnumerator* Pathfinding::Examples::PathTypesDemo::DemoConstantPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoConstantPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DemoConstantPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.PathTypesDemo/DemoMode
#include "Pathfinding/Examples/PathTypesDemo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.PathTypesDemo/DemoMode ABPath
::Pathfinding::Examples::PathTypesDemo::DemoMode Pathfinding::Examples::PathTypesDemo::DemoMode::_get_ABPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMode::_get_ABPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::PathTypesDemo::DemoMode>("Pathfinding.Examples", "PathTypesDemo/DemoMode", "ABPath"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.PathTypesDemo/DemoMode ABPath
void Pathfinding::Examples::PathTypesDemo::DemoMode::_set_ABPath(::Pathfinding::Examples::PathTypesDemo::DemoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMode::_set_ABPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "PathTypesDemo/DemoMode", "ABPath", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.PathTypesDemo/DemoMode MultiTargetPath
::Pathfinding::Examples::PathTypesDemo::DemoMode Pathfinding::Examples::PathTypesDemo::DemoMode::_get_MultiTargetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMode::_get_MultiTargetPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::PathTypesDemo::DemoMode>("Pathfinding.Examples", "PathTypesDemo/DemoMode", "MultiTargetPath"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.PathTypesDemo/DemoMode MultiTargetPath
void Pathfinding::Examples::PathTypesDemo::DemoMode::_set_MultiTargetPath(::Pathfinding::Examples::PathTypesDemo::DemoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMode::_set_MultiTargetPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "PathTypesDemo/DemoMode", "MultiTargetPath", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.PathTypesDemo/DemoMode RandomPath
::Pathfinding::Examples::PathTypesDemo::DemoMode Pathfinding::Examples::PathTypesDemo::DemoMode::_get_RandomPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMode::_get_RandomPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::PathTypesDemo::DemoMode>("Pathfinding.Examples", "PathTypesDemo/DemoMode", "RandomPath"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.PathTypesDemo/DemoMode RandomPath
void Pathfinding::Examples::PathTypesDemo::DemoMode::_set_RandomPath(::Pathfinding::Examples::PathTypesDemo::DemoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMode::_set_RandomPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "PathTypesDemo/DemoMode", "RandomPath", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.PathTypesDemo/DemoMode FleePath
::Pathfinding::Examples::PathTypesDemo::DemoMode Pathfinding::Examples::PathTypesDemo::DemoMode::_get_FleePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMode::_get_FleePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::PathTypesDemo::DemoMode>("Pathfinding.Examples", "PathTypesDemo/DemoMode", "FleePath"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.PathTypesDemo/DemoMode FleePath
void Pathfinding::Examples::PathTypesDemo::DemoMode::_set_FleePath(::Pathfinding::Examples::PathTypesDemo::DemoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMode::_set_FleePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "PathTypesDemo/DemoMode", "FleePath", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.PathTypesDemo/DemoMode ConstantPath
::Pathfinding::Examples::PathTypesDemo::DemoMode Pathfinding::Examples::PathTypesDemo::DemoMode::_get_ConstantPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMode::_get_ConstantPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::PathTypesDemo::DemoMode>("Pathfinding.Examples", "PathTypesDemo/DemoMode", "ConstantPath"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.PathTypesDemo/DemoMode ConstantPath
void Pathfinding::Examples::PathTypesDemo::DemoMode::_set_ConstantPath(::Pathfinding::Examples::PathTypesDemo::DemoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMode::_set_ConstantPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "PathTypesDemo/DemoMode", "ConstantPath", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.PathTypesDemo/DemoMode FloodPath
::Pathfinding::Examples::PathTypesDemo::DemoMode Pathfinding::Examples::PathTypesDemo::DemoMode::_get_FloodPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMode::_get_FloodPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::PathTypesDemo::DemoMode>("Pathfinding.Examples", "PathTypesDemo/DemoMode", "FloodPath"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.PathTypesDemo/DemoMode FloodPath
void Pathfinding::Examples::PathTypesDemo::DemoMode::_set_FloodPath(::Pathfinding::Examples::PathTypesDemo::DemoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMode::_set_FloodPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "PathTypesDemo/DemoMode", "FloodPath", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Examples.PathTypesDemo/DemoMode FloodPathTracer
::Pathfinding::Examples::PathTypesDemo::DemoMode Pathfinding::Examples::PathTypesDemo::DemoMode::_get_FloodPathTracer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMode::_get_FloodPathTracer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Examples::PathTypesDemo::DemoMode>("Pathfinding.Examples", "PathTypesDemo/DemoMode", "FloodPathTracer"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Examples.PathTypesDemo/DemoMode FloodPathTracer
void Pathfinding::Examples::PathTypesDemo::DemoMode::_set_FloodPathTracer(::Pathfinding::Examples::PathTypesDemo::DemoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMode::_set_FloodPathTracer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Examples", "PathTypesDemo/DemoMode", "FloodPathTracer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::PathTypesDemo::DemoMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::DemoMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Examples.PathTypesDemo/<DemoConstantPath>d__22
#include "Pathfinding/Examples/PathTypesDemo_-DemoConstantPath-d__22.hpp"
// Including type: Pathfinding.ConstantPath
#include "Pathfinding/ConstantPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.PathTypesDemo <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::PathTypesDemo*& Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::PathTypesDemo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.ConstantPath <constPath>5__2
[[deprecated("Use field access instead!")]] ::Pathfinding::ConstantPath*& Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::dyn_$constPath$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::dyn_$constPath$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<constPath>5__2"))->offset;
  return *reinterpret_cast<::Pathfinding::ConstantPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo/<DemoConstantPath>d__22.System.IDisposable.Dispose
void Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo/<DemoConstantPath>d__22.MoveNext
bool Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo/<DemoConstantPath>d__22.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo/<DemoConstantPath>d__22.System.Collections.IEnumerator.Reset
void Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo/<DemoConstantPath>d__22.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::PathTypesDemo::$DemoConstantPath$d__22*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Examples.PathTypesDemo/<DemoMultiTargetPath>d__21
#include "Pathfinding/Examples/PathTypesDemo_-DemoMultiTargetPath-d__21.hpp"
// Including type: Pathfinding.MultiTargetPath
#include "Pathfinding/MultiTargetPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.PathTypesDemo <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::PathTypesDemo*& Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::PathTypesDemo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.MultiTargetPath <mp>5__2
[[deprecated("Use field access instead!")]] ::Pathfinding::MultiTargetPath*& Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::dyn_$mp$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::dyn_$mp$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<mp>5__2"))->offset;
  return *reinterpret_cast<::Pathfinding::MultiTargetPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo/<DemoMultiTargetPath>d__21.System.IDisposable.Dispose
void Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo/<DemoMultiTargetPath>d__21.MoveNext
bool Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo/<DemoMultiTargetPath>d__21.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo/<DemoMultiTargetPath>d__21.System.Collections.IEnumerator.Reset
void Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.PathTypesDemo/<DemoMultiTargetPath>d__21.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::PathTypesDemo::$DemoMultiTargetPath$d__21*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.AstarSmoothFollow2
#include "Pathfinding/Examples/AstarSmoothFollow2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::Examples::AstarSmoothFollow2::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AstarSmoothFollow2::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single distance
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::AstarSmoothFollow2::dyn_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AstarSmoothFollow2::dyn_distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single height
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::AstarSmoothFollow2::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AstarSmoothFollow2::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single damping
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::AstarSmoothFollow2::dyn_damping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AstarSmoothFollow2::dyn_damping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "damping"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean smoothRotation
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::AstarSmoothFollow2::dyn_smoothRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AstarSmoothFollow2::dyn_smoothRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean followBehind
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::AstarSmoothFollow2::dyn_followBehind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AstarSmoothFollow2::dyn_followBehind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followBehind"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationDamping
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::AstarSmoothFollow2::dyn_rotationDamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AstarSmoothFollow2::dyn_rotationDamping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationDamping"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean staticOffset
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::AstarSmoothFollow2::dyn_staticOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AstarSmoothFollow2::dyn_staticOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "staticOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.AstarSmoothFollow2.LateUpdate
void Pathfinding::Examples::AstarSmoothFollow2::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AstarSmoothFollow2::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.DoorController
#include "Pathfinding/Examples/DoorController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean open
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::DoorController::dyn_open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::DoorController::dyn_open");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "open"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 opentag
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::DoorController::dyn_opentag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::DoorController::dyn_opentag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opentag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 closedtag
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::DoorController::dyn_closedtag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::DoorController::dyn_closedtag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closedtag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updateGraphsWithGUO
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::DoorController::dyn_updateGraphsWithGUO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::DoorController::dyn_updateGraphsWithGUO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateGraphsWithGUO"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single yOffset
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::DoorController::dyn_yOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::DoorController::dyn_yOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bounds bounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& Pathfinding::Examples::DoorController::dyn_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::DoorController::dyn_bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.DoorController.Start
void Pathfinding::Examples::DoorController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::DoorController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.DoorController.OnGUI
void Pathfinding::Examples::DoorController::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::DoorController::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.DoorController.SetState
void Pathfinding::Examples::DoorController::SetState(bool open) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::DoorController::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(open)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, open);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.ManualRVOAgent
#include "Pathfinding/Examples/ManualRVOAgent.hpp"
// Including type: Pathfinding.RVO.RVOController
#include "Pathfinding/RVO/RVOController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RVO.RVOController rvo
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVOController*& Pathfinding::Examples::ManualRVOAgent::dyn_rvo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ManualRVOAgent::dyn_rvo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rvo"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVOController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single speed
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::ManualRVOAgent::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ManualRVOAgent::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.ManualRVOAgent.Awake
void Pathfinding::Examples::ManualRVOAgent::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ManualRVOAgent::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ManualRVOAgent.Update
void Pathfinding::Examples::ManualRVOAgent::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ManualRVOAgent::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.MineBotAI
#include "Pathfinding/Examples/MineBotAI.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animation anim
[[deprecated("Use field access instead!")]] ::UnityEngine::Animation*& Pathfinding::Examples::MineBotAI::dyn_anim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MineBotAI::dyn_anim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anim"))->offset;
  return *reinterpret_cast<::UnityEngine::Animation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sleepVelocity
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::MineBotAI::dyn_sleepVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MineBotAI::dyn_sleepVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sleepVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single animationSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::Examples::MineBotAI::dyn_animationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MineBotAI::dyn_animationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject endOfPathEffect
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Pathfinding::Examples::MineBotAI::dyn_endOfPathEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MineBotAI::dyn_endOfPathEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endOfPathEffect"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.MineBotAnimation
#include "Pathfinding/Examples/MineBotAnimation.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Pathfinding.IAstarAI
#include "Pathfinding/IAstarAI.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animator anim
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& Pathfinding::Examples::MineBotAnimation::dyn_anim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MineBotAnimation::dyn_anim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anim"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject endOfPathEffect
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Pathfinding::Examples::MineBotAnimation::dyn_endOfPathEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MineBotAnimation::dyn_endOfPathEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endOfPathEffect"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isAtDestination
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::MineBotAnimation::dyn_isAtDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MineBotAnimation::dyn_isAtDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isAtDestination"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.IAstarAI ai
[[deprecated("Use field access instead!")]] ::Pathfinding::IAstarAI*& Pathfinding::Examples::MineBotAnimation::dyn_ai() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MineBotAnimation::dyn_ai");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ai"))->offset;
  return *reinterpret_cast<::Pathfinding::IAstarAI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform tr
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::Examples::MineBotAnimation::dyn_tr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MineBotAnimation::dyn_tr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tr"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 lastTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::Examples::MineBotAnimation::dyn_lastTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MineBotAnimation::dyn_lastTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.MineBotAnimation.OnTargetReached
void Pathfinding::Examples::MineBotAnimation::OnTargetReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MineBotAnimation::OnTargetReached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTargetReached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.MineBotAnimation.Update
void Pathfinding::Examples::MineBotAnimation::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MineBotAnimation::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.MineBotAnimation.Awake
void Pathfinding::Examples::MineBotAnimation::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::MineBotAnimation::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.ObjectPlacer
#include "Pathfinding/Examples/ObjectPlacer.hpp"
// Including type: Pathfinding.Examples.ObjectPlacer/<RemoveObject>d__5
#include "Pathfinding/Examples/ObjectPlacer_-RemoveObject-d__5.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject go
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Pathfinding::Examples::ObjectPlacer::dyn_go() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ObjectPlacer::dyn_go");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "go"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean direct
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::ObjectPlacer::dyn_direct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ObjectPlacer::dyn_direct");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "direct"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean issueGUOs
[[deprecated("Use field access instead!")]] bool& Pathfinding::Examples::ObjectPlacer::dyn_issueGUOs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ObjectPlacer::dyn_issueGUOs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "issueGUOs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.ObjectPlacer.Update
void Pathfinding::Examples::ObjectPlacer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ObjectPlacer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ObjectPlacer.PlaceObject
void Pathfinding::Examples::ObjectPlacer::PlaceObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ObjectPlacer::PlaceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ObjectPlacer.RemoveObject
::System::Collections::IEnumerator* Pathfinding::Examples::ObjectPlacer::RemoveObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ObjectPlacer::RemoveObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Examples.ObjectPlacer/<RemoveObject>d__5
#include "Pathfinding/Examples/ObjectPlacer_-RemoveObject-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.ObjectPlacer <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::ObjectPlacer*& Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::ObjectPlacer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bounds <b>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::dyn_$b$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::dyn_$b$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<b>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.ObjectPlacer/<RemoveObject>d__5.System.IDisposable.Dispose
void Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ObjectPlacer/<RemoveObject>d__5.MoveNext
bool Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ObjectPlacer/<RemoveObject>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ObjectPlacer/<RemoveObject>d__5.System.Collections.IEnumerator.Reset
void Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.ObjectPlacer/<RemoveObject>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::ObjectPlacer::$RemoveObject$d__5*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.SnapToNode
#include "Pathfinding/Examples/SnapToNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Examples.SnapToNode.Update
void Pathfinding::Examples::SnapToNode::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::SnapToNode::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Examples.AnimationLinkTraverser
#include "Pathfinding/Examples/AnimationLinkTraverser.hpp"
// Including type: Pathfinding.Examples.AnimationLinkTraverser/<TraverseOffMeshLink>d__4
#include "Pathfinding/Examples/AnimationLinkTraverser_-TraverseOffMeshLink-d__4.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
// Including type: Pathfinding.RichAI
#include "Pathfinding/RichAI.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Pathfinding.RichSpecial
#include "Pathfinding/RichSpecial.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animation anim
[[deprecated("Use field access instead!")]] ::UnityEngine::Animation*& Pathfinding::Examples::AnimationLinkTraverser::dyn_anim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AnimationLinkTraverser::dyn_anim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anim"))->offset;
  return *reinterpret_cast<::UnityEngine::Animation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RichAI ai
[[deprecated("Use field access instead!")]] ::Pathfinding::RichAI*& Pathfinding::Examples::AnimationLinkTraverser::dyn_ai() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AnimationLinkTraverser::dyn_ai");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ai"))->offset;
  return *reinterpret_cast<::Pathfinding::RichAI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.AnimationLinkTraverser.OnEnable
void Pathfinding::Examples::AnimationLinkTraverser::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AnimationLinkTraverser::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.AnimationLinkTraverser.OnDisable
void Pathfinding::Examples::AnimationLinkTraverser::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AnimationLinkTraverser::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.AnimationLinkTraverser.TraverseOffMeshLink
::System::Collections::IEnumerator* Pathfinding::Examples::AnimationLinkTraverser::TraverseOffMeshLink(::Pathfinding::RichSpecial* rs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AnimationLinkTraverser::TraverseOffMeshLink");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::AnimationLinkTraverser*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, rs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Examples.AnimationLinkTraverser/<TraverseOffMeshLink>d__4
#include "Pathfinding/Examples/AnimationLinkTraverser_-TraverseOffMeshLink-d__4.hpp"
// Including type: Pathfinding.RichSpecial
#include "Pathfinding/RichSpecial.hpp"
// Including type: Pathfinding.AnimationLink
#include "Pathfinding/AnimationLink.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RichSpecial rs
[[deprecated("Use field access instead!")]] ::Pathfinding::RichSpecial*& Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::dyn_rs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::dyn_rs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rs"))->offset;
  return *reinterpret_cast<::Pathfinding::RichSpecial**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Examples.AnimationLinkTraverser <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::Examples::AnimationLinkTraverser*& Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::Examples::AnimationLinkTraverser**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.AnimationLink <link>5__2
[[deprecated("Use field access instead!")]] ::Pathfinding::AnimationLink*& Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::dyn_$link$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::dyn_$link$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<link>5__2"))->offset;
  return *reinterpret_cast<::Pathfinding::AnimationLink**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Examples.AnimationLinkTraverser/<TraverseOffMeshLink>d__4.System.IDisposable.Dispose
void Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.AnimationLinkTraverser/<TraverseOffMeshLink>d__4.MoveNext
bool Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.AnimationLinkTraverser/<TraverseOffMeshLink>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.AnimationLinkTraverser/<TraverseOffMeshLink>d__4.System.Collections.IEnumerator.Reset
void Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Examples.AnimationLinkTraverser/<TraverseOffMeshLink>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Examples::AnimationLinkTraverser::$TraverseOffMeshLink$d__4*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1____.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.BacktraceClient
#include "Backtrace/Unity/BacktraceClient.hpp"
// Including type: Backtrace.Unity.BacktraceClient/<>c
#include "Backtrace/Unity/BacktraceClient_--c.hpp"
// Including type: Backtrace.Unity.BacktraceClient/<>c__DisplayClass87_0
#include "Backtrace/Unity/BacktraceClient_--c__DisplayClass87_0.hpp"
// Including type: Backtrace.Unity.BacktraceClient/<CollectDataAndSend>d__87
#include "Backtrace/Unity/BacktraceClient_-CollectDataAndSend-d__87.hpp"
// Including type: Backtrace.Unity.Model.BacktraceConfiguration
#include "Backtrace/Unity/Model/BacktraceConfiguration.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs
#include "Backtrace/Unity/Model/Breadcrumbs/BacktraceBreadcrumbs.hpp"
// Including type: Backtrace.Unity.Model.JsonData.AttributeProvider
#include "Backtrace/Unity/Model/JsonData/AttributeProvider.hpp"
// Including type: Backtrace.Unity.Services.BacktraceMetrics
#include "Backtrace/Unity/Services/BacktraceMetrics.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceReport
#include "Backtrace/Unity/Model/BacktraceReport.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Backtrace.Unity.Interfaces.IBacktraceDatabase
#include "Backtrace/Unity/Interfaces/IBacktraceDatabase.hpp"
// Including type: Backtrace.Unity.Interfaces.IBacktraceApi
#include "Backtrace/Unity/Interfaces/IBacktraceApi.hpp"
// Including type: Backtrace.Unity.Services.ReportLimitWatcher
#include "Backtrace/Unity/Services/ReportLimitWatcher.hpp"
// Including type: Backtrace.Unity.Model.BacktraceLogManager
#include "Backtrace/Unity/Model/BacktraceLogManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
// Including type: System.Func`4
#include "System/Func_4.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Backtrace.Unity.Runtime.Native.INativeClient
#include "Backtrace/Unity/Runtime/Native/INativeClient.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs
#include "Backtrace/Unity/Model/Breadcrumbs/IBacktraceBreadcrumbs.hpp"
// Including type: Backtrace.Unity.Interfaces.IBacktraceMetrics
#include "Backtrace/Unity/Interfaces/IBacktraceMetrics.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: Backtrace.Unity.Model.BacktraceResult
#include "Backtrace/Unity/Model/BacktraceResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
// Including type: Backtrace.Unity.Model.BacktraceUnhandledException
#include "Backtrace/Unity/Model/BacktraceUnhandledException.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String VERSION
::StringW Backtrace::Unity::BacktraceClient::_get_VERSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::_get_VERSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity", "BacktraceClient", "VERSION"));
}
// Autogenerated static field setter
// Set static field: static public System.String VERSION
void Backtrace::Unity::BacktraceClient::_set_VERSION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::_set_VERSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity", "BacktraceClient", "VERSION", value));
}
// Autogenerated static field getter
// Get static field: static System.String DefaultBacktraceGameObjectName
::StringW Backtrace::Unity::BacktraceClient::_get_DefaultBacktraceGameObjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::_get_DefaultBacktraceGameObjectName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity", "BacktraceClient", "DefaultBacktraceGameObjectName"));
}
// Autogenerated static field setter
// Set static field: static System.String DefaultBacktraceGameObjectName
void Backtrace::Unity::BacktraceClient::_set_DefaultBacktraceGameObjectName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::_set_DefaultBacktraceGameObjectName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity", "BacktraceClient", "DefaultBacktraceGameObjectName", value));
}
// Autogenerated static field getter
// Get static field: static private Backtrace.Unity.BacktraceClient _instance
::Backtrace::Unity::BacktraceClient* Backtrace::Unity::BacktraceClient::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::BacktraceClient*>("Backtrace.Unity", "BacktraceClient", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Backtrace.Unity.BacktraceClient _instance
void Backtrace::Unity::BacktraceClient::_set__instance(::Backtrace::Unity::BacktraceClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity", "BacktraceClient", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.BacktraceConfiguration Configuration
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceConfiguration*& Backtrace::Unity::BacktraceClient::dyn_Configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn_Configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Configuration"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs _breadcrumbs
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*& Backtrace::Unity::BacktraceClient::dyn__breadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn__breadcrumbs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_breadcrumbs"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Enabled>k__BackingField
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::BacktraceClient::dyn_$Enabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn_$Enabled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Enabled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Model.JsonData.AttributeProvider _attributeProvider
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::JsonData::AttributeProvider*& Backtrace::Unity::BacktraceClient::dyn__attributeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn__attributeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributeProvider"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::JsonData::AttributeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Services.BacktraceMetrics _metrics
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Services::BacktraceMetrics*& Backtrace::Unity::BacktraceClient::dyn__metrics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn__metrics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_metrics"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Services::BacktraceMetrics**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Random _random
[[deprecated("Use field access instead!")]] ::System::Random*& Backtrace::Unity::BacktraceClient::dyn__random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn__random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_random"))->offset;
  return *reinterpret_cast<::System::Random**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.Stack`1<Backtrace.Unity.Model.BacktraceReport> BackgroundExceptions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::Backtrace::Unity::Model::BacktraceReport*>*& Backtrace::Unity::BacktraceClient::dyn_BackgroundExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn_BackgroundExceptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BackgroundExceptions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::Backtrace::Unity::Model::BacktraceReport*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _clientReportAttachments
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& Backtrace::Unity::BacktraceClient::dyn__clientReportAttachments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn__clientReportAttachments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clientReportAttachments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Interfaces.IBacktraceDatabase Database
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Interfaces::IBacktraceDatabase*& Backtrace::Unity::BacktraceClient::dyn_Database() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn_Database");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Database"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Interfaces::IBacktraceDatabase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Interfaces.IBacktraceApi _backtraceApi
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Interfaces::IBacktraceApi*& Backtrace::Unity::BacktraceClient::dyn__backtraceApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn__backtraceApi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backtraceApi"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Interfaces::IBacktraceApi**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Services.ReportLimitWatcher _reportLimitWatcher
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Services::ReportLimitWatcher*& Backtrace::Unity::BacktraceClient::dyn__reportLimitWatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn__reportLimitWatcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reportLimitWatcher"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Services::ReportLimitWatcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Model.BacktraceLogManager _backtraceLogManager
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceLogManager*& Backtrace::Unity::BacktraceClient::dyn__backtraceLogManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn__backtraceLogManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backtraceLogManager"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceLogManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Action`1<Backtrace.Unity.Model.BacktraceReport> _onClientReportLimitReached
[[deprecated("Use field access instead!")]] ::System::Action_1<::Backtrace::Unity::Model::BacktraceReport*>*& Backtrace::Unity::BacktraceClient::dyn__onClientReportLimitReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn__onClientReportLimitReached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onClientReportLimitReached"))->offset;
  return *reinterpret_cast<::System::Action_1<::Backtrace::Unity::Model::BacktraceReport*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Backtrace.Unity.Model.BacktraceData,Backtrace.Unity.Model.BacktraceData> BeforeSend
[[deprecated("Use field access instead!")]] ::System::Func_2<::Backtrace::Unity::Model::BacktraceData*, ::Backtrace::Unity::Model::BacktraceData*>*& Backtrace::Unity::BacktraceClient::dyn_BeforeSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn_BeforeSend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BeforeSend"))->offset;
  return *reinterpret_cast<::System::Func_2<::Backtrace::Unity::Model::BacktraceData*, ::Backtrace::Unity::Model::BacktraceData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`4<Backtrace.Unity.Types.ReportFilterType,System.Exception,System.String,System.Boolean> SkipReport
[[deprecated("Use field access instead!")]] ::System::Func_4<::Backtrace::Unity::Types::ReportFilterType, ::System::Exception*, ::StringW, bool>*& Backtrace::Unity::BacktraceClient::dyn_SkipReport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn_SkipReport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipReport"))->offset;
  return *reinterpret_cast<::System::Func_4<::Backtrace::Unity::Types::ReportFilterType, ::System::Exception*, ::StringW, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Exception> OnUnhandledApplicationException
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Exception*>*& Backtrace::Unity::BacktraceClient::dyn_OnUnhandledApplicationException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn_OnUnhandledApplicationException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnUnhandledApplicationException"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Runtime.Native.INativeClient _nativeClient
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Runtime::Native::INativeClient*& Backtrace::Unity::BacktraceClient::dyn__nativeClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn__nativeClient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeClient"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Runtime::Native::INativeClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Thread _current
[[deprecated("Use field access instead!")]] ::System::Threading::Thread*& Backtrace::Unity::BacktraceClient::dyn__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::dyn__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_current"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_Breadcrumbs
::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs* Backtrace::Unity::BacktraceClient::get_Breadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_Breadcrumbs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceClient*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_Enabled
bool Backtrace::Unity::BacktraceClient::get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_Enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.set_Enabled
void Backtrace::Unity::BacktraceClient::set_Enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::set_Enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_AttributeProvider
::Backtrace::Unity::Model::JsonData::AttributeProvider* Backtrace::Unity::BacktraceClient::get_AttributeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_AttributeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttributeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::JsonData::AttributeProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.set_AttributeProvider
void Backtrace::Unity::BacktraceClient::set_AttributeProvider(::Backtrace::Unity::Model::JsonData::AttributeProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::set_AttributeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AttributeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_Metrics
::Backtrace::Unity::Interfaces::IBacktraceMetrics* Backtrace::Unity::BacktraceClient::get_Metrics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_Metrics");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceClient*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Interfaces::IBacktraceMetrics*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_Random
::System::Random* Backtrace::Unity::BacktraceClient::get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_Random");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Random", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Random*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_Item
::StringW Backtrace::Unity::BacktraceClient::get_Item(::StringW index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.set_Item
void Backtrace::Unity::BacktraceClient::set_Item(::StringW index, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.AddAttachment
void Backtrace::Unity::BacktraceClient::AddAttachment(::StringW pathToAttachment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::AddAttachment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttachment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pathToAttachment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pathToAttachment);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.GetAttachments
::System::Collections::Generic::IEnumerable_1<::StringW>* Backtrace::Unity::BacktraceClient::GetAttachments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::GetAttachments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttachments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.SetAttributes
void Backtrace::Unity::BacktraceClient::SetAttributes(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::SetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.GetAttributesCount
int Backtrace::Unity::BacktraceClient::GetAttributesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::GetAttributesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_Instance
::Backtrace::Unity::BacktraceClient* Backtrace::Unity::BacktraceClient::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity", "BacktraceClient", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::BacktraceClient*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_OnServerError
::System::Action_1<::System::Exception*>* Backtrace::Unity::BacktraceClient::get_OnServerError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_OnServerError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnServerError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action_1<::System::Exception*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.set_OnServerError
void Backtrace::Unity::BacktraceClient::set_OnServerError(::System::Action_1<::System::Exception*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::set_OnServerError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OnServerError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_RequestHandler
::System::Func_3<::StringW, ::Backtrace::Unity::Model::BacktraceData*, ::Backtrace::Unity::Model::BacktraceResult*>* Backtrace::Unity::BacktraceClient::get_RequestHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_RequestHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_3<::StringW, ::Backtrace::Unity::Model::BacktraceData*, ::Backtrace::Unity::Model::BacktraceResult*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.set_RequestHandler
void Backtrace::Unity::BacktraceClient::set_RequestHandler(::System::Func_3<::StringW, ::Backtrace::Unity::Model::BacktraceData*, ::Backtrace::Unity::Model::BacktraceResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::set_RequestHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_OnServerResponse
::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* Backtrace::Unity::BacktraceClient::get_OnServerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_OnServerResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnServerResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.set_OnServerResponse
void Backtrace::Unity::BacktraceClient::set_OnServerResponse(::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::set_OnServerResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OnServerResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.set_OnClientReportLimitReached
void Backtrace::Unity::BacktraceClient::set_OnClientReportLimitReached(::System::Action_1<::Backtrace::Unity::Model::BacktraceReport*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::set_OnClientReportLimitReached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OnClientReportLimitReached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_OnClientReportLimitReached
::System::Action_1<::Backtrace::Unity::Model::BacktraceReport*>* Backtrace::Unity::BacktraceClient::get_OnClientReportLimitReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_OnClientReportLimitReached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnClientReportLimitReached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action_1<::Backtrace::Unity::Model::BacktraceReport*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_NativeClient
::Backtrace::Unity::Runtime::Native::INativeClient* Backtrace::Unity::BacktraceClient::get_NativeClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_NativeClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NativeClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Runtime::Native::INativeClient*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_EnablePerformanceStatistics
bool Backtrace::Unity::BacktraceClient::get_EnablePerformanceStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_EnablePerformanceStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnablePerformanceStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_GameObjectDepth
int Backtrace::Unity::BacktraceClient::get_GameObjectDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_GameObjectDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GameObjectDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_BacktraceApi
::Backtrace::Unity::Interfaces::IBacktraceApi* Backtrace::Unity::BacktraceClient::get_BacktraceApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_BacktraceApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BacktraceApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Interfaces::IBacktraceApi*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.set_BacktraceApi
void Backtrace::Unity::BacktraceClient::set_BacktraceApi(::Backtrace::Unity::Interfaces::IBacktraceApi* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::set_BacktraceApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BacktraceApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.get_ReportLimitWatcher
::Backtrace::Unity::Services::ReportLimitWatcher* Backtrace::Unity::BacktraceClient::get_ReportLimitWatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::get_ReportLimitWatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReportLimitWatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Services::ReportLimitWatcher*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.set_ReportLimitWatcher
void Backtrace::Unity::BacktraceClient::set_ReportLimitWatcher(::Backtrace::Unity::Services::ReportLimitWatcher* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::set_ReportLimitWatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReportLimitWatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.Initialize
::Backtrace::Unity::BacktraceClient* Backtrace::Unity::BacktraceClient::Initialize(::Backtrace::Unity::Model::BacktraceConfiguration* configuration, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributes, ::StringW gameObjectName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity", "BacktraceClient", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(attributes), ::il2cpp_utils::ExtractType(gameObjectName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::BacktraceClient*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, configuration, attributes, gameObjectName);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.Initialize
::Backtrace::Unity::BacktraceClient* Backtrace::Unity::BacktraceClient::Initialize(::StringW url, ::StringW databasePath, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributes, ::StringW gameObjectName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity", "BacktraceClient", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(databasePath), ::il2cpp_utils::ExtractType(attributes), ::il2cpp_utils::ExtractType(gameObjectName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::BacktraceClient*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, databasePath, attributes, gameObjectName);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.Initialize
::Backtrace::Unity::BacktraceClient* Backtrace::Unity::BacktraceClient::Initialize(::StringW url, ::StringW databasePath, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributes, ::ArrayW<::StringW> attachments, ::StringW gameObjectName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity", "BacktraceClient", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(databasePath), ::il2cpp_utils::ExtractType(attributes), ::il2cpp_utils::ExtractType(attachments), ::il2cpp_utils::ExtractType(gameObjectName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::BacktraceClient*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, databasePath, attributes, attachments, gameObjectName);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.Initialize
::Backtrace::Unity::BacktraceClient* Backtrace::Unity::BacktraceClient::Initialize(::StringW url, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributes, ::StringW gameObjectName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity", "BacktraceClient", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(attributes), ::il2cpp_utils::ExtractType(gameObjectName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::BacktraceClient*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, attributes, gameObjectName);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.Initialize
::Backtrace::Unity::BacktraceClient* Backtrace::Unity::BacktraceClient::Initialize(::StringW url, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributes, ::ArrayW<::StringW> attachments, ::StringW gameObjectName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity", "BacktraceClient", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(attributes), ::il2cpp_utils::ExtractType(attachments), ::il2cpp_utils::ExtractType(gameObjectName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::BacktraceClient*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, attributes, attachments, gameObjectName);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.OnDisable
void Backtrace::Unity::BacktraceClient::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.Refresh
void Backtrace::Unity::BacktraceClient::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::Refresh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceClient*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.EnableBreadcrumbsSupport
bool Backtrace::Unity::BacktraceClient::EnableBreadcrumbsSupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::EnableBreadcrumbsSupport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceClient*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.EnableMetrics
bool Backtrace::Unity::BacktraceClient::EnableMetrics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::EnableMetrics");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceClient*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.EnableMetrics
bool Backtrace::Unity::BacktraceClient::EnableMetrics(bool enableIfConfigurationIsDisabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::EnableMetrics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMetrics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enableIfConfigurationIsDisabled)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, enableIfConfigurationIsDisabled);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.EnableMetrics
bool Backtrace::Unity::BacktraceClient::EnableMetrics(::StringW uniqueAttributeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::EnableMetrics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMetrics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uniqueAttributeName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uniqueAttributeName);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.EnableMetrics
bool Backtrace::Unity::BacktraceClient::EnableMetrics(::StringW uniqueEventsSubmissionUrl, ::StringW summedEventsSubmissionUrl, uint timeIntervalInSec, ::StringW uniqueAttributeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::EnableMetrics");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceClient*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uniqueEventsSubmissionUrl, summedEventsSubmissionUrl, timeIntervalInSec, uniqueAttributeName);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.StartupMetrics
void Backtrace::Unity::BacktraceClient::StartupMetrics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::StartupMetrics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartupMetrics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.OnApplicationQuit
void Backtrace::Unity::BacktraceClient::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.Awake
void Backtrace::Unity::BacktraceClient::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.LateUpdate
void Backtrace::Unity::BacktraceClient::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.OnDestroy
void Backtrace::Unity::BacktraceClient::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.SetClientReportLimit
void Backtrace::Unity::BacktraceClient::SetClientReportLimit(uint reportPerMin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::SetClientReportLimit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceClient*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reportPerMin);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.Send
void Backtrace::Unity::BacktraceClient::Send(::StringW message, ::System::Collections::Generic::List_1<::StringW>* attachmentPaths, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceClient*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, attachmentPaths, attributes);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.Send
void Backtrace::Unity::BacktraceClient::Send(::System::Exception* exception, ::System::Collections::Generic::List_1<::StringW>* attachmentPaths, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceClient*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception, attachmentPaths, attributes);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.Send
void Backtrace::Unity::BacktraceClient::Send(::Backtrace::Unity::Model::BacktraceReport* report, ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceClient*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, report, sendCallback);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.SendReport
void Backtrace::Unity::BacktraceClient::SendReport(::Backtrace::Unity::Model::BacktraceReport* report, ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::SendReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(report), ::il2cpp_utils::ExtractType(sendCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, report, sendCallback);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.CollectDataAndSend
::System::Collections::IEnumerator* Backtrace::Unity::BacktraceClient::CollectDataAndSend(::Backtrace::Unity::Model::BacktraceReport* report, ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::CollectDataAndSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollectDataAndSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(report), ::il2cpp_utils::ExtractType(sendCallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, report, sendCallback);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.SetupBacktraceData
::Backtrace::Unity::Model::BacktraceData* Backtrace::Unity::BacktraceClient::SetupBacktraceData(::Backtrace::Unity::Model::BacktraceReport* report) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::SetupBacktraceData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupBacktraceData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(report)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceData*, false>(this, ___internal__method, report);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.OnAnrDetected
void Backtrace::Unity::BacktraceClient::OnAnrDetected(::StringW stackTrace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::OnAnrDetected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAnrDetected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stackTrace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stackTrace);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.HandleUnhandledExceptionsFromAndroidBackgroundThread
void Backtrace::Unity::BacktraceClient::HandleUnhandledExceptionsFromAndroidBackgroundThread(::StringW backgroundExceptionMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::HandleUnhandledExceptionsFromAndroidBackgroundThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUnhandledExceptionsFromAndroidBackgroundThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backgroundExceptionMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, backgroundExceptionMessage);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.CaptureUnityMessages
void Backtrace::Unity::BacktraceClient::CaptureUnityMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::CaptureUnityMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CaptureUnityMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.OnApplicationPause
void Backtrace::Unity::BacktraceClient::OnApplicationPause(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.HandleUnityBackgroundException
void Backtrace::Unity::BacktraceClient::HandleUnityBackgroundException(::StringW message, ::StringW stackTrace, ::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::HandleUnityBackgroundException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUnityBackgroundException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, stackTrace, type);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.HandleLowMemory
void Backtrace::Unity::BacktraceClient::HandleLowMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::HandleLowMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLowMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.HandleUnityMessage
void Backtrace::Unity::BacktraceClient::HandleUnityMessage(::StringW message, ::StringW stackTrace, ::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::HandleUnityMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUnityMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, stackTrace, type);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.SamplingShouldSkip
bool Backtrace::Unity::BacktraceClient::SamplingShouldSkip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::SamplingShouldSkip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SamplingShouldSkip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.SendUnhandledException
void Backtrace::Unity::BacktraceClient::SendUnhandledException(::Backtrace::Unity::Model::BacktraceUnhandledException* exception, bool invokeSkipApi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::SendUnhandledException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUnhandledException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(invokeSkipApi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception, invokeSkipApi);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.ShouldSendReport
bool Backtrace::Unity::BacktraceClient::ShouldSendReport(::System::Exception* exception, ::System::Collections::Generic::List_1<::StringW>* attachmentPaths, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributes, bool invokeSkipApi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::ShouldSendReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSendReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(attachmentPaths), ::il2cpp_utils::ExtractType(attributes), ::il2cpp_utils::ExtractType(invokeSkipApi)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, exception, attachmentPaths, attributes, invokeSkipApi);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.ShouldSendReport
bool Backtrace::Unity::BacktraceClient::ShouldSendReport(::StringW message, ::System::Collections::Generic::List_1<::StringW>* attachmentPaths, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::ShouldSendReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSendReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(attachmentPaths), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, attachmentPaths, attributes);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.ShouldSendReport
bool Backtrace::Unity::BacktraceClient::ShouldSendReport(::Backtrace::Unity::Model::BacktraceReport* report) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::ShouldSendReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSendReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(report)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, report);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.HandleInnerException
void Backtrace::Unity::BacktraceClient::HandleInnerException(::Backtrace::Unity::Model::BacktraceReport* report) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::HandleInnerException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInnerException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(report)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, report);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.ValidClientConfiguration
bool Backtrace::Unity::BacktraceClient::ValidClientConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::ValidClientConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidClientConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.ShouldSkipReport
bool Backtrace::Unity::BacktraceClient::ShouldSkipReport(::Backtrace::Unity::Types::ReportFilterType type, ::System::Exception* exception, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::ShouldSkipReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSkipReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type, exception, message);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient.GetNativeAttachments
::System::Collections::Generic::IList_1<::StringW>* Backtrace::Unity::BacktraceClient::GetNativeAttachments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::GetNativeAttachments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNativeAttachments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.BacktraceClient/<>c
#include "Backtrace/Unity/BacktraceClient_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Backtrace.Unity.BacktraceClient/<>c <>9
::Backtrace::Unity::BacktraceClient::$$c* Backtrace::Unity::BacktraceClient::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Backtrace::Unity::BacktraceClient::$$c*>("Backtrace.Unity", "BacktraceClient/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Backtrace.Unity.BacktraceClient/<>c <>9
void Backtrace::Unity::BacktraceClient::$$c::_set_$$9(::Backtrace::Unity::BacktraceClient::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity", "BacktraceClient/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,System.Boolean> <>9__105_0
::System::Func_2<::StringW, bool>* Backtrace::Unity::BacktraceClient::$$c::_get_$$9__105_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$$c::_get_$$9__105_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::StringW, bool>*>("Backtrace.Unity", "BacktraceClient/<>c", "<>9__105_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,System.Boolean> <>9__105_0
void Backtrace::Unity::BacktraceClient::$$c::_set_$$9__105_0(::System::Func_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$$c::_set_$$9__105_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity", "BacktraceClient/<>c", "<>9__105_0", value)));
}
// Autogenerated method: Backtrace.Unity.BacktraceClient/<>c..cctor
void Backtrace::Unity::BacktraceClient::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity", "BacktraceClient/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient/<>c.<GetNativeAttachments>b__105_0
bool Backtrace::Unity::BacktraceClient::$$c::$GetNativeAttachments$b__105_0(::StringW n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$$c::<GetNativeAttachments>b__105_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetNativeAttachments>b__105_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.BacktraceClient/<>c__DisplayClass87_0
#include "Backtrace/Unity/BacktraceClient_--c__DisplayClass87_0.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseRecord.hpp"
// Including type: Backtrace.Unity.Model.BacktraceReport
#include "Backtrace/Unity/Model/BacktraceReport.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceResult
#include "Backtrace/Unity/Model/BacktraceResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.Database.BacktraceDatabaseRecord record
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*& Backtrace::Unity::BacktraceClient::$$c__DisplayClass87_0::dyn_record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$$c__DisplayClass87_0::dyn_record");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "record"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.BacktraceClient <>4__this
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::BacktraceClient*& Backtrace::Unity::BacktraceClient::$$c__DisplayClass87_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$$c__DisplayClass87_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::BacktraceClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.BacktraceReport report
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceReport*& Backtrace::Unity::BacktraceClient::$$c__DisplayClass87_0::dyn_report() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$$c__DisplayClass87_0::dyn_report");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "report"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceReport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Backtrace.Unity.Model.BacktraceResult> sendCallback
[[deprecated("Use field access instead!")]] ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>*& Backtrace::Unity::BacktraceClient::$$c__DisplayClass87_0::dyn_sendCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$$c__DisplayClass87_0::dyn_sendCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sendCallback"))->offset;
  return *reinterpret_cast<::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient/<>c__DisplayClass87_0.<CollectDataAndSend>b__0
void Backtrace::Unity::BacktraceClient::$$c__DisplayClass87_0::$CollectDataAndSend$b__0(::Backtrace::Unity::Model::BacktraceResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$$c__DisplayClass87_0::<CollectDataAndSend>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CollectDataAndSend>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Backtrace.Unity.BacktraceClient/<CollectDataAndSend>d__87
#include "Backtrace/Unity/BacktraceClient_-CollectDataAndSend-d__87.hpp"
// Including type: Backtrace.Unity.Model.BacktraceReport
#include "Backtrace/Unity/Model/BacktraceReport.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceResult
#include "Backtrace/Unity/Model/BacktraceResult.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
// Including type: Backtrace.Unity.BacktraceClient/<>c__DisplayClass87_0
#include "Backtrace/Unity/BacktraceClient_--c__DisplayClass87_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.BacktraceClient <>4__this
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::BacktraceClient*& Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::BacktraceClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.BacktraceReport report
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceReport*& Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_report() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_report");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "report"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceReport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Backtrace.Unity.Model.BacktraceResult> sendCallback
[[deprecated("Use field access instead!")]] ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>*& Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_sendCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_sendCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sendCallback"))->offset;
  return *reinterpret_cast<::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.BacktraceClient/<>c__DisplayClass87_0 <>8__1
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::BacktraceClient::$$c__DisplayClass87_0*& Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::BacktraceClient::$$c__DisplayClass87_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.String> <queryAttributes>5__2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$queryAttributes$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$queryAttributes$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<queryAttributes>5__2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Stopwatch <stopWatch>5__3
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$stopWatch$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$stopWatch$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<stopWatch>5__3"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Model.BacktraceData <data>5__4
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceData*& Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$data$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$data$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<data>5__4"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <json>5__5
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$json$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::dyn_$json$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<json>5__5"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient/<CollectDataAndSend>d__87.System.IDisposable.Dispose
void Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient/<CollectDataAndSend>d__87.MoveNext
bool Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient/<CollectDataAndSend>d__87.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient/<CollectDataAndSend>d__87.System.Collections.IEnumerator.Reset
void Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceClient/<CollectDataAndSend>d__87.System.Collections.IEnumerator.get_Current
::Il2CppObject* Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceClient::$CollectDataAndSend$d__87*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.BacktraceDatabase
#include "Backtrace/Unity/BacktraceDatabase.hpp"
// Including type: Backtrace.Unity.BacktraceDatabase/<>c__DisplayClass59_0
#include "Backtrace/Unity/BacktraceDatabase_--c__DisplayClass59_0.hpp"
// Including type: Backtrace.Unity.BacktraceDatabase/<>c__DisplayClass60_0
#include "Backtrace/Unity/BacktraceDatabase_--c__DisplayClass60_0.hpp"
// Including type: Backtrace.Unity.Model.BacktraceConfiguration
#include "Backtrace/Unity/Model/BacktraceConfiguration.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs
#include "Backtrace/Unity/Model/Breadcrumbs/BacktraceBreadcrumbs.hpp"
// Including type: Backtrace.Unity.BacktraceClient
#include "Backtrace/Unity/BacktraceClient.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseSettings.hpp"
// Including type: Backtrace.Unity.Interfaces.IBacktraceApi
#include "Backtrace/Unity/Interfaces/IBacktraceApi.hpp"
// Including type: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext
#include "Backtrace/Unity/Interfaces/IBacktraceDatabaseContext.hpp"
// Including type: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext
#include "Backtrace/Unity/Interfaces/IBacktraceDatabaseFileContext.hpp"
// Including type: Backtrace.Unity.Services.ReportLimitWatcher
#include "Backtrace/Unity/Services/ReportLimitWatcher.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs
#include "Backtrace/Unity/Model/Breadcrumbs/IBacktraceBreadcrumbs.hpp"
// Including type: Backtrace.Unity.Types.DeduplicationStrategy
#include "Backtrace/Unity/Types/DeduplicationStrategy.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseRecord.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
// Including type: Backtrace.Unity.Model.BacktraceReport
#include "Backtrace/Unity/Model/BacktraceReport.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Backtrace.Unity.Types.MiniDumpType
#include "Backtrace/Unity/Types/MiniDumpType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Single LastFrameTime
float Backtrace::Unity::BacktraceDatabase::_get_LastFrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::_get_LastFrameTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Backtrace.Unity", "BacktraceDatabase", "LastFrameTime"));
}
// Autogenerated static field setter
// Set static field: static System.Single LastFrameTime
void Backtrace::Unity::BacktraceDatabase::_set_LastFrameTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::_set_LastFrameTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity", "BacktraceDatabase", "LastFrameTime", value));
}
// Autogenerated static field getter
// Get static field: static private Backtrace.Unity.BacktraceDatabase _instance
::Backtrace::Unity::BacktraceDatabase* Backtrace::Unity::BacktraceDatabase::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::BacktraceDatabase*>("Backtrace.Unity", "BacktraceDatabase", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Backtrace.Unity.BacktraceDatabase _instance
void Backtrace::Unity::BacktraceDatabase::_set__instance(::Backtrace::Unity::BacktraceDatabase* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity", "BacktraceDatabase", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _timerBackgroundWork
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::BacktraceDatabase::dyn__timerBackgroundWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::dyn__timerBackgroundWork");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timerBackgroundWork"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.BacktraceConfiguration Configuration
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceConfiguration*& Backtrace::Unity::BacktraceDatabase::dyn_Configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::dyn_Configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Configuration"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs _breadcrumbs
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*& Backtrace::Unity::BacktraceDatabase::dyn__breadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::dyn__breadcrumbs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_breadcrumbs"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.BacktraceClient _client
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::BacktraceClient*& Backtrace::Unity::BacktraceDatabase::dyn__client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::dyn__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::BacktraceClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <DatabasePath>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::BacktraceDatabase::dyn_$DatabasePath$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::dyn_$DatabasePath$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DatabasePath>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Model.Database.BacktraceDatabaseSettings <DatabaseSettings>k__BackingField
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings*& Backtrace::Unity::BacktraceDatabase::dyn_$DatabaseSettings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::dyn_$DatabaseSettings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DatabaseSettings>k__BackingField"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastConnection
[[deprecated("Use field access instead!")]] float& Backtrace::Unity::BacktraceDatabase::dyn__lastConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::dyn__lastConnection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastConnection"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Interfaces.IBacktraceApi <BacktraceApi>k__BackingField
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Interfaces::IBacktraceApi*& Backtrace::Unity::BacktraceDatabase::dyn_$BacktraceApi$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::dyn_$BacktraceApi$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BacktraceApi>k__BackingField"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Interfaces::IBacktraceApi**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Interfaces.IBacktraceDatabaseContext <BacktraceDatabaseContext>k__BackingField
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*& Backtrace::Unity::BacktraceDatabase::dyn_$BacktraceDatabaseContext$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::dyn_$BacktraceDatabaseContext$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BacktraceDatabaseContext>k__BackingField"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext <BacktraceDatabaseFileContext>k__BackingField
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*& Backtrace::Unity::BacktraceDatabase::dyn_$BacktraceDatabaseFileContext$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::dyn_$BacktraceDatabaseFileContext$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BacktraceDatabaseFileContext>k__BackingField"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Enable>k__BackingField
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::BacktraceDatabase::dyn_$Enable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::dyn_$Enable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Enable>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Services.ReportLimitWatcher _reportLimitWatcher
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Services::ReportLimitWatcher*& Backtrace::Unity::BacktraceDatabase::dyn__reportLimitWatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::dyn__reportLimitWatcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reportLimitWatcher"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Services::ReportLimitWatcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.get_Breadcrumbs
::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs* Backtrace::Unity::BacktraceDatabase::get_Breadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::get_Breadcrumbs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.get_DatabasePath
::StringW Backtrace::Unity::BacktraceDatabase::get_DatabasePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::get_DatabasePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DatabasePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.set_DatabasePath
void Backtrace::Unity::BacktraceDatabase::set_DatabasePath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::set_DatabasePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DatabasePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.get_ScreenshotQuality
int Backtrace::Unity::BacktraceDatabase::get_ScreenshotQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::get_ScreenshotQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.set_ScreenshotQuality
void Backtrace::Unity::BacktraceDatabase::set_ScreenshotQuality(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::set_ScreenshotQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.get_ScreenshotMaxHeight
int Backtrace::Unity::BacktraceDatabase::get_ScreenshotMaxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::get_ScreenshotMaxHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.set_ScreenshotMaxHeight
void Backtrace::Unity::BacktraceDatabase::set_ScreenshotMaxHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::set_ScreenshotMaxHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.get_Instance
::Backtrace::Unity::BacktraceDatabase* Backtrace::Unity::BacktraceDatabase::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity", "BacktraceDatabase", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::BacktraceDatabase*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.get_DeduplicationStrategy
::Backtrace::Unity::Types::DeduplicationStrategy Backtrace::Unity::BacktraceDatabase::get_DeduplicationStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::get_DeduplicationStrategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeduplicationStrategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Types::DeduplicationStrategy, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.set_DeduplicationStrategy
void Backtrace::Unity::BacktraceDatabase::set_DeduplicationStrategy(::Backtrace::Unity::Types::DeduplicationStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::set_DeduplicationStrategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DeduplicationStrategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.get_DatabaseSettings
::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings* Backtrace::Unity::BacktraceDatabase::get_DatabaseSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::get_DatabaseSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DatabaseSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.set_DatabaseSettings
void Backtrace::Unity::BacktraceDatabase::set_DatabaseSettings(::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::set_DatabaseSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DatabaseSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.get_BacktraceApi
::Backtrace::Unity::Interfaces::IBacktraceApi* Backtrace::Unity::BacktraceDatabase::get_BacktraceApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::get_BacktraceApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BacktraceApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Interfaces::IBacktraceApi*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.set_BacktraceApi
void Backtrace::Unity::BacktraceDatabase::set_BacktraceApi(::Backtrace::Unity::Interfaces::IBacktraceApi* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::set_BacktraceApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BacktraceApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.get_BacktraceDatabaseContext
::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext* Backtrace::Unity::BacktraceDatabase::get_BacktraceDatabaseContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::get_BacktraceDatabaseContext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.set_BacktraceDatabaseContext
void Backtrace::Unity::BacktraceDatabase::set_BacktraceDatabaseContext(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::set_BacktraceDatabaseContext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.get_BacktraceDatabaseFileContext
::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext* Backtrace::Unity::BacktraceDatabase::get_BacktraceDatabaseFileContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::get_BacktraceDatabaseFileContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BacktraceDatabaseFileContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.set_BacktraceDatabaseFileContext
void Backtrace::Unity::BacktraceDatabase::set_BacktraceDatabaseFileContext(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::set_BacktraceDatabaseFileContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BacktraceDatabaseFileContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.get_Enable
bool Backtrace::Unity::BacktraceDatabase::get_Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::get_Enable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.set_Enable
void Backtrace::Unity::BacktraceDatabase::set_Enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::set_Enable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.Reload
void Backtrace::Unity::BacktraceDatabase::Reload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::Reload");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.OnDisable
void Backtrace::Unity::BacktraceDatabase::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.Awake
void Backtrace::Unity::BacktraceDatabase::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.Update
void Backtrace::Unity::BacktraceDatabase::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.Start
void Backtrace::Unity::BacktraceDatabase::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.SetApi
void Backtrace::Unity::BacktraceDatabase::SetApi(::Backtrace::Unity::Interfaces::IBacktraceApi* backtraceApi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::SetApi");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, backtraceApi);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.Enabled
bool Backtrace::Unity::BacktraceDatabase::Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::Enabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.GetSettings
::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings* Backtrace::Unity::BacktraceDatabase::GetSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::GetSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.Clear
void Backtrace::Unity::BacktraceDatabase::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.Add
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::BacktraceDatabase::Add(::Backtrace::Unity::Model::BacktraceData* data, bool lock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method, data, lock);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.Add
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::BacktraceDatabase::Add(::Backtrace::Unity::Model::BacktraceReport* backtraceReport, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributes, ::Backtrace::Unity::Types::MiniDumpType miniDumpType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method, backtraceReport, attributes, miniDumpType);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.Get
::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>* Backtrace::Unity::BacktraceDatabase::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.Delete
void Backtrace::Unity::BacktraceDatabase::Delete(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::Delete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.Flush
void Backtrace::Unity::BacktraceDatabase::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.Send
void Backtrace::Unity::BacktraceDatabase::Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.FlushRecord
void Backtrace::Unity::BacktraceDatabase::FlushRecord(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::FlushRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.SendData
void Backtrace::Unity::BacktraceDatabase::SendData(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::SendData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.Count
int Backtrace::Unity::BacktraceDatabase::Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.RemoveOrphaned
void Backtrace::Unity::BacktraceDatabase::RemoveOrphaned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::RemoveOrphaned");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.SetupMultisceneSupport
void Backtrace::Unity::BacktraceDatabase::SetupMultisceneSupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::SetupMultisceneSupport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.InitializeDatabasePaths
bool Backtrace::Unity::BacktraceDatabase::InitializeDatabasePaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::InitializeDatabasePaths");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.LoadReports
void Backtrace::Unity::BacktraceDatabase::LoadReports(::StringW breadcrumbPath, ::StringW breadcrumbArchive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::LoadReports");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, breadcrumbPath, breadcrumbArchive);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.ValidateDatabaseSize
bool Backtrace::Unity::BacktraceDatabase::ValidateDatabaseSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::ValidateDatabaseSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateDatabaseSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.ReachedDiskSpaceLimit
bool Backtrace::Unity::BacktraceDatabase::ReachedDiskSpaceLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::ReachedDiskSpaceLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReachedDiskSpaceLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.ReachedMaximumNumberOfRecords
bool Backtrace::Unity::BacktraceDatabase::ReachedMaximumNumberOfRecords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::ReachedMaximumNumberOfRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReachedMaximumNumberOfRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.ValidConsistency
bool Backtrace::Unity::BacktraceDatabase::ValidConsistency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::ValidConsistency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.GetDatabaseSize
int64_t Backtrace::Unity::BacktraceDatabase::GetDatabaseSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::GetDatabaseSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.SetReportWatcher
void Backtrace::Unity::BacktraceDatabase::SetReportWatcher(::Backtrace::Unity::Services::ReportLimitWatcher* reportLimitWatcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::SetReportWatcher");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reportLimitWatcher);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.IncrementBatchRetry
void Backtrace::Unity::BacktraceDatabase::IncrementBatchRetry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::IncrementBatchRetry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementBatchRetry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.GetBreadcrumbsPath
::StringW Backtrace::Unity::BacktraceDatabase::GetBreadcrumbsPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::GetBreadcrumbsPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBreadcrumbsPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase.EnableBreadcrumbsSupport
bool Backtrace::Unity::BacktraceDatabase::EnableBreadcrumbsSupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::EnableBreadcrumbsSupport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::BacktraceDatabase*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.BacktraceDatabase/<>c__DisplayClass59_0
#include "Backtrace/Unity/BacktraceDatabase_--c__DisplayClass59_0.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseRecord.hpp"
// Including type: Backtrace.Unity.Model.BacktraceResult
#include "Backtrace/Unity/Model/BacktraceResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.Database.BacktraceDatabaseRecord record
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*& Backtrace::Unity::BacktraceDatabase::$$c__DisplayClass59_0::dyn_record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::$$c__DisplayClass59_0::dyn_record");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "record"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.BacktraceDatabase <>4__this
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::BacktraceDatabase*& Backtrace::Unity::BacktraceDatabase::$$c__DisplayClass59_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::$$c__DisplayClass59_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::BacktraceDatabase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase/<>c__DisplayClass59_0.<FlushRecord>b__0
void Backtrace::Unity::BacktraceDatabase::$$c__DisplayClass59_0::$FlushRecord$b__0(::Backtrace::Unity::Model::BacktraceResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::$$c__DisplayClass59_0::<FlushRecord>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FlushRecord>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.BacktraceDatabase/<>c__DisplayClass60_0
#include "Backtrace/Unity/BacktraceDatabase_--c__DisplayClass60_0.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseRecord.hpp"
// Including type: Backtrace.Unity.Model.BacktraceResult
#include "Backtrace/Unity/Model/BacktraceResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.Database.BacktraceDatabaseRecord record
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*& Backtrace::Unity::BacktraceDatabase::$$c__DisplayClass60_0::dyn_record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::$$c__DisplayClass60_0::dyn_record");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "record"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.BacktraceDatabase <>4__this
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::BacktraceDatabase*& Backtrace::Unity::BacktraceDatabase::$$c__DisplayClass60_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::$$c__DisplayClass60_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::BacktraceDatabase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.BacktraceDatabase/<>c__DisplayClass60_0.<SendData>b__0
void Backtrace::Unity::BacktraceDatabase::$$c__DisplayClass60_0::$SendData$b__0(::Backtrace::Unity::Model::BacktraceResult* sendResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::BacktraceDatabase::$$c__DisplayClass60_0::<SendData>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendData>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sendResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sendResult);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Types.BacktraceResultStatus
#include "Backtrace/Unity/Types/BacktraceResultStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.BacktraceResultStatus LimitReached
::Backtrace::Unity::Types::BacktraceResultStatus Backtrace::Unity::Types::BacktraceResultStatus::_get_LimitReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceResultStatus::_get_LimitReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::BacktraceResultStatus>("Backtrace.Unity.Types", "BacktraceResultStatus", "LimitReached"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.BacktraceResultStatus LimitReached
void Backtrace::Unity::Types::BacktraceResultStatus::_set_LimitReached(::Backtrace::Unity::Types::BacktraceResultStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceResultStatus::_set_LimitReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "BacktraceResultStatus", "LimitReached", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.BacktraceResultStatus ServerError
::Backtrace::Unity::Types::BacktraceResultStatus Backtrace::Unity::Types::BacktraceResultStatus::_get_ServerError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceResultStatus::_get_ServerError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::BacktraceResultStatus>("Backtrace.Unity.Types", "BacktraceResultStatus", "ServerError"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.BacktraceResultStatus ServerError
void Backtrace::Unity::Types::BacktraceResultStatus::_set_ServerError(::Backtrace::Unity::Types::BacktraceResultStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceResultStatus::_set_ServerError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "BacktraceResultStatus", "ServerError", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.BacktraceResultStatus Ok
::Backtrace::Unity::Types::BacktraceResultStatus Backtrace::Unity::Types::BacktraceResultStatus::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceResultStatus::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::BacktraceResultStatus>("Backtrace.Unity.Types", "BacktraceResultStatus", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.BacktraceResultStatus Ok
void Backtrace::Unity::Types::BacktraceResultStatus::_set_Ok(::Backtrace::Unity::Types::BacktraceResultStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceResultStatus::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "BacktraceResultStatus", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.BacktraceResultStatus Empty
::Backtrace::Unity::Types::BacktraceResultStatus Backtrace::Unity::Types::BacktraceResultStatus::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceResultStatus::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::BacktraceResultStatus>("Backtrace.Unity.Types", "BacktraceResultStatus", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.BacktraceResultStatus Empty
void Backtrace::Unity::Types::BacktraceResultStatus::_set_Empty(::Backtrace::Unity::Types::BacktraceResultStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceResultStatus::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "BacktraceResultStatus", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.BacktraceResultStatus NetworkError
::Backtrace::Unity::Types::BacktraceResultStatus Backtrace::Unity::Types::BacktraceResultStatus::_get_NetworkError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceResultStatus::_get_NetworkError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::BacktraceResultStatus>("Backtrace.Unity.Types", "BacktraceResultStatus", "NetworkError"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.BacktraceResultStatus NetworkError
void Backtrace::Unity::Types::BacktraceResultStatus::_set_NetworkError(::Backtrace::Unity::Types::BacktraceResultStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceResultStatus::_set_NetworkError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "BacktraceResultStatus", "NetworkError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Types::BacktraceResultStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceResultStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Types.BacktraceStackFrameType
#include "Backtrace/Unity/Types/BacktraceStackFrameType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.BacktraceStackFrameType Unknown
::Backtrace::Unity::Types::BacktraceStackFrameType Backtrace::Unity::Types::BacktraceStackFrameType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceStackFrameType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::BacktraceStackFrameType>("Backtrace.Unity.Types", "BacktraceStackFrameType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.BacktraceStackFrameType Unknown
void Backtrace::Unity::Types::BacktraceStackFrameType::_set_Unknown(::Backtrace::Unity::Types::BacktraceStackFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceStackFrameType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "BacktraceStackFrameType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.BacktraceStackFrameType Dotnet
::Backtrace::Unity::Types::BacktraceStackFrameType Backtrace::Unity::Types::BacktraceStackFrameType::_get_Dotnet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceStackFrameType::_get_Dotnet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::BacktraceStackFrameType>("Backtrace.Unity.Types", "BacktraceStackFrameType", "Dotnet"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.BacktraceStackFrameType Dotnet
void Backtrace::Unity::Types::BacktraceStackFrameType::_set_Dotnet(::Backtrace::Unity::Types::BacktraceStackFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceStackFrameType::_set_Dotnet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "BacktraceStackFrameType", "Dotnet", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.BacktraceStackFrameType Android
::Backtrace::Unity::Types::BacktraceStackFrameType Backtrace::Unity::Types::BacktraceStackFrameType::_get_Android() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceStackFrameType::_get_Android");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::BacktraceStackFrameType>("Backtrace.Unity.Types", "BacktraceStackFrameType", "Android"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.BacktraceStackFrameType Android
void Backtrace::Unity::Types::BacktraceStackFrameType::_set_Android(::Backtrace::Unity::Types::BacktraceStackFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceStackFrameType::_set_Android");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "BacktraceStackFrameType", "Android", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.BacktraceStackFrameType Native
::Backtrace::Unity::Types::BacktraceStackFrameType Backtrace::Unity::Types::BacktraceStackFrameType::_get_Native() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceStackFrameType::_get_Native");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::BacktraceStackFrameType>("Backtrace.Unity.Types", "BacktraceStackFrameType", "Native"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.BacktraceStackFrameType Native
void Backtrace::Unity::Types::BacktraceStackFrameType::_set_Native(::Backtrace::Unity::Types::BacktraceStackFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceStackFrameType::_set_Native");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "BacktraceStackFrameType", "Native", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Types::BacktraceStackFrameType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::BacktraceStackFrameType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Types.DeduplicationStrategy
#include "Backtrace/Unity/Types/DeduplicationStrategy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.DeduplicationStrategy None
::Backtrace::Unity::Types::DeduplicationStrategy Backtrace::Unity::Types::DeduplicationStrategy::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::DeduplicationStrategy::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::DeduplicationStrategy>("Backtrace.Unity.Types", "DeduplicationStrategy", "None"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.DeduplicationStrategy None
void Backtrace::Unity::Types::DeduplicationStrategy::_set_None(::Backtrace::Unity::Types::DeduplicationStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::DeduplicationStrategy::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "DeduplicationStrategy", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.DeduplicationStrategy Default
::Backtrace::Unity::Types::DeduplicationStrategy Backtrace::Unity::Types::DeduplicationStrategy::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::DeduplicationStrategy::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::DeduplicationStrategy>("Backtrace.Unity.Types", "DeduplicationStrategy", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.DeduplicationStrategy Default
void Backtrace::Unity::Types::DeduplicationStrategy::_set_Default(::Backtrace::Unity::Types::DeduplicationStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::DeduplicationStrategy::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "DeduplicationStrategy", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.DeduplicationStrategy Classifier
::Backtrace::Unity::Types::DeduplicationStrategy Backtrace::Unity::Types::DeduplicationStrategy::_get_Classifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::DeduplicationStrategy::_get_Classifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::DeduplicationStrategy>("Backtrace.Unity.Types", "DeduplicationStrategy", "Classifier"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.DeduplicationStrategy Classifier
void Backtrace::Unity::Types::DeduplicationStrategy::_set_Classifier(::Backtrace::Unity::Types::DeduplicationStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::DeduplicationStrategy::_set_Classifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "DeduplicationStrategy", "Classifier", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.DeduplicationStrategy Message
::Backtrace::Unity::Types::DeduplicationStrategy Backtrace::Unity::Types::DeduplicationStrategy::_get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::DeduplicationStrategy::_get_Message");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::DeduplicationStrategy>("Backtrace.Unity.Types", "DeduplicationStrategy", "Message"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.DeduplicationStrategy Message
void Backtrace::Unity::Types::DeduplicationStrategy::_set_Message(::Backtrace::Unity::Types::DeduplicationStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::DeduplicationStrategy::_set_Message");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "DeduplicationStrategy", "Message", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Types::DeduplicationStrategy::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::DeduplicationStrategy::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Types.MinidumpException
#include "Backtrace/Unity/Types/MinidumpException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MinidumpException None
::Backtrace::Unity::Types::MinidumpException Backtrace::Unity::Types::MinidumpException::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MinidumpException::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MinidumpException>("Backtrace.Unity.Types", "MinidumpException", "None"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MinidumpException None
void Backtrace::Unity::Types::MinidumpException::_set_None(::Backtrace::Unity::Types::MinidumpException value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MinidumpException::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MinidumpException", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MinidumpException Present
::Backtrace::Unity::Types::MinidumpException Backtrace::Unity::Types::MinidumpException::_get_Present() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MinidumpException::_get_Present");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MinidumpException>("Backtrace.Unity.Types", "MinidumpException", "Present"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MinidumpException Present
void Backtrace::Unity::Types::MinidumpException::_set_Present(::Backtrace::Unity::Types::MinidumpException value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MinidumpException::_set_Present");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MinidumpException", "Present", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Types::MinidumpException::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MinidumpException::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Types.MiniDumpType
#include "Backtrace/Unity/Types/MiniDumpType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType None
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType None
void Backtrace::Unity::Types::MiniDumpType::_set_None(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType Normal
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType Normal
void Backtrace::Unity::Types::MiniDumpType::_set_Normal(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType WithDataSegs
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_WithDataSegs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_WithDataSegs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "WithDataSegs"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType WithDataSegs
void Backtrace::Unity::Types::MiniDumpType::_set_WithDataSegs(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_WithDataSegs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "WithDataSegs", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType WithFullMemory
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_WithFullMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_WithFullMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "WithFullMemory"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType WithFullMemory
void Backtrace::Unity::Types::MiniDumpType::_set_WithFullMemory(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_WithFullMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "WithFullMemory", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType WithHandleData
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_WithHandleData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_WithHandleData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "WithHandleData"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType WithHandleData
void Backtrace::Unity::Types::MiniDumpType::_set_WithHandleData(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_WithHandleData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "WithHandleData", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType FilterMemory
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_FilterMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_FilterMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "FilterMemory"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType FilterMemory
void Backtrace::Unity::Types::MiniDumpType::_set_FilterMemory(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_FilterMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "FilterMemory", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType ScanMemory
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_ScanMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_ScanMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "ScanMemory"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType ScanMemory
void Backtrace::Unity::Types::MiniDumpType::_set_ScanMemory(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_ScanMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "ScanMemory", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType WithUnloadedModules
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_WithUnloadedModules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_WithUnloadedModules");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "WithUnloadedModules"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType WithUnloadedModules
void Backtrace::Unity::Types::MiniDumpType::_set_WithUnloadedModules(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_WithUnloadedModules");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "WithUnloadedModules", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType WithIndirectlyReferencedMemory
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_WithIndirectlyReferencedMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_WithIndirectlyReferencedMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "WithIndirectlyReferencedMemory"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType WithIndirectlyReferencedMemory
void Backtrace::Unity::Types::MiniDumpType::_set_WithIndirectlyReferencedMemory(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_WithIndirectlyReferencedMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "WithIndirectlyReferencedMemory", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType FilterModulePaths
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_FilterModulePaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_FilterModulePaths");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "FilterModulePaths"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType FilterModulePaths
void Backtrace::Unity::Types::MiniDumpType::_set_FilterModulePaths(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_FilterModulePaths");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "FilterModulePaths", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType WithProcessThreadData
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_WithProcessThreadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_WithProcessThreadData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "WithProcessThreadData"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType WithProcessThreadData
void Backtrace::Unity::Types::MiniDumpType::_set_WithProcessThreadData(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_WithProcessThreadData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "WithProcessThreadData", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType WithPrivateReadWriteMemory
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_WithPrivateReadWriteMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_WithPrivateReadWriteMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "WithPrivateReadWriteMemory"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType WithPrivateReadWriteMemory
void Backtrace::Unity::Types::MiniDumpType::_set_WithPrivateReadWriteMemory(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_WithPrivateReadWriteMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "WithPrivateReadWriteMemory", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType WithoutOptionalData
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_WithoutOptionalData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_WithoutOptionalData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "WithoutOptionalData"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType WithoutOptionalData
void Backtrace::Unity::Types::MiniDumpType::_set_WithoutOptionalData(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_WithoutOptionalData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "WithoutOptionalData", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType WithFullMemoryInfo
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_WithFullMemoryInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_WithFullMemoryInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "WithFullMemoryInfo"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType WithFullMemoryInfo
void Backtrace::Unity::Types::MiniDumpType::_set_WithFullMemoryInfo(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_WithFullMemoryInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "WithFullMemoryInfo", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType WithThreadInfo
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_WithThreadInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_WithThreadInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "WithThreadInfo"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType WithThreadInfo
void Backtrace::Unity::Types::MiniDumpType::_set_WithThreadInfo(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_WithThreadInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "WithThreadInfo", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType WithCodeSegs
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_WithCodeSegs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_WithCodeSegs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "WithCodeSegs"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType WithCodeSegs
void Backtrace::Unity::Types::MiniDumpType::_set_WithCodeSegs(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_WithCodeSegs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "WithCodeSegs", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType WithoutAuxiliaryState
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_WithoutAuxiliaryState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_WithoutAuxiliaryState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "WithoutAuxiliaryState"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType WithoutAuxiliaryState
void Backtrace::Unity::Types::MiniDumpType::_set_WithoutAuxiliaryState(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_WithoutAuxiliaryState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "WithoutAuxiliaryState", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType WithFullAuxiliaryState
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_WithFullAuxiliaryState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_WithFullAuxiliaryState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "WithFullAuxiliaryState"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType WithFullAuxiliaryState
void Backtrace::Unity::Types::MiniDumpType::_set_WithFullAuxiliaryState(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_WithFullAuxiliaryState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "WithFullAuxiliaryState", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType WithPrivateWriteCopyMemory
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_WithPrivateWriteCopyMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_WithPrivateWriteCopyMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "WithPrivateWriteCopyMemory"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType WithPrivateWriteCopyMemory
void Backtrace::Unity::Types::MiniDumpType::_set_WithPrivateWriteCopyMemory(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_WithPrivateWriteCopyMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "WithPrivateWriteCopyMemory", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType IgnoreInaccessibleMemory
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_IgnoreInaccessibleMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_IgnoreInaccessibleMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "IgnoreInaccessibleMemory"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType IgnoreInaccessibleMemory
void Backtrace::Unity::Types::MiniDumpType::_set_IgnoreInaccessibleMemory(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_IgnoreInaccessibleMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "IgnoreInaccessibleMemory", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.MiniDumpType ValidTypeFlags
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Types::MiniDumpType::_get_ValidTypeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_get_ValidTypeFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::MiniDumpType>("Backtrace.Unity.Types", "MiniDumpType", "ValidTypeFlags"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.MiniDumpType ValidTypeFlags
void Backtrace::Unity::Types::MiniDumpType::_set_ValidTypeFlags(::Backtrace::Unity::Types::MiniDumpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::_set_ValidTypeFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "MiniDumpType", "ValidTypeFlags", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Backtrace::Unity::Types::MiniDumpType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::MiniDumpType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Types.ReportFilterType
#include "Backtrace/Unity/Types/ReportFilterType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.ReportFilterType None
::Backtrace::Unity::Types::ReportFilterType Backtrace::Unity::Types::ReportFilterType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::ReportFilterType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::ReportFilterType>("Backtrace.Unity.Types", "ReportFilterType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.ReportFilterType None
void Backtrace::Unity::Types::ReportFilterType::_set_None(::Backtrace::Unity::Types::ReportFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::ReportFilterType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "ReportFilterType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.ReportFilterType Message
::Backtrace::Unity::Types::ReportFilterType Backtrace::Unity::Types::ReportFilterType::_get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::ReportFilterType::_get_Message");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::ReportFilterType>("Backtrace.Unity.Types", "ReportFilterType", "Message"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.ReportFilterType Message
void Backtrace::Unity::Types::ReportFilterType::_set_Message(::Backtrace::Unity::Types::ReportFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::ReportFilterType::_set_Message");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "ReportFilterType", "Message", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.ReportFilterType Exception
::Backtrace::Unity::Types::ReportFilterType Backtrace::Unity::Types::ReportFilterType::_get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::ReportFilterType::_get_Exception");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::ReportFilterType>("Backtrace.Unity.Types", "ReportFilterType", "Exception"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.ReportFilterType Exception
void Backtrace::Unity::Types::ReportFilterType::_set_Exception(::Backtrace::Unity::Types::ReportFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::ReportFilterType::_set_Exception");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "ReportFilterType", "Exception", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.ReportFilterType UnhandledException
::Backtrace::Unity::Types::ReportFilterType Backtrace::Unity::Types::ReportFilterType::_get_UnhandledException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::ReportFilterType::_get_UnhandledException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::ReportFilterType>("Backtrace.Unity.Types", "ReportFilterType", "UnhandledException"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.ReportFilterType UnhandledException
void Backtrace::Unity::Types::ReportFilterType::_set_UnhandledException(::Backtrace::Unity::Types::ReportFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::ReportFilterType::_set_UnhandledException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "ReportFilterType", "UnhandledException", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.ReportFilterType Hang
::Backtrace::Unity::Types::ReportFilterType Backtrace::Unity::Types::ReportFilterType::_get_Hang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::ReportFilterType::_get_Hang");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::ReportFilterType>("Backtrace.Unity.Types", "ReportFilterType", "Hang"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.ReportFilterType Hang
void Backtrace::Unity::Types::ReportFilterType::_set_Hang(::Backtrace::Unity::Types::ReportFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::ReportFilterType::_set_Hang");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "ReportFilterType", "Hang", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.ReportFilterType Error
::Backtrace::Unity::Types::ReportFilterType Backtrace::Unity::Types::ReportFilterType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::ReportFilterType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::ReportFilterType>("Backtrace.Unity.Types", "ReportFilterType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.ReportFilterType Error
void Backtrace::Unity::Types::ReportFilterType::_set_Error(::Backtrace::Unity::Types::ReportFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::ReportFilterType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "ReportFilterType", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Types::ReportFilterType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::ReportFilterType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Types.RetryBehavior
#include "Backtrace/Unity/Types/RetryBehavior.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.RetryBehavior ByInterval
::Backtrace::Unity::Types::RetryBehavior Backtrace::Unity::Types::RetryBehavior::_get_ByInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::RetryBehavior::_get_ByInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::RetryBehavior>("Backtrace.Unity.Types", "RetryBehavior", "ByInterval"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.RetryBehavior ByInterval
void Backtrace::Unity::Types::RetryBehavior::_set_ByInterval(::Backtrace::Unity::Types::RetryBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::RetryBehavior::_set_ByInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "RetryBehavior", "ByInterval", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.RetryBehavior NoRetry
::Backtrace::Unity::Types::RetryBehavior Backtrace::Unity::Types::RetryBehavior::_get_NoRetry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::RetryBehavior::_get_NoRetry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::RetryBehavior>("Backtrace.Unity.Types", "RetryBehavior", "NoRetry"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.RetryBehavior NoRetry
void Backtrace::Unity::Types::RetryBehavior::_set_NoRetry(::Backtrace::Unity::Types::RetryBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::RetryBehavior::_set_NoRetry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "RetryBehavior", "NoRetry", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Types::RetryBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::RetryBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Types.RetryOrder
#include "Backtrace/Unity/Types/RetryOrder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.RetryOrder Stack
::Backtrace::Unity::Types::RetryOrder Backtrace::Unity::Types::RetryOrder::_get_Stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::RetryOrder::_get_Stack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::RetryOrder>("Backtrace.Unity.Types", "RetryOrder", "Stack"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.RetryOrder Stack
void Backtrace::Unity::Types::RetryOrder::_set_Stack(::Backtrace::Unity::Types::RetryOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::RetryOrder::_set_Stack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "RetryOrder", "Stack", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Types.RetryOrder Queue
::Backtrace::Unity::Types::RetryOrder Backtrace::Unity::Types::RetryOrder::_get_Queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::RetryOrder::_get_Queue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Types::RetryOrder>("Backtrace.Unity.Types", "RetryOrder", "Queue"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Types.RetryOrder Queue
void Backtrace::Unity::Types::RetryOrder::_set_Queue(::Backtrace::Unity::Types::RetryOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::RetryOrder::_set_Queue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Types", "RetryOrder", "Queue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Types::RetryOrder::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Types::RetryOrder::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Services.BacktraceApi
#include "Backtrace/Unity/Services/BacktraceApi.hpp"
// Including type: Backtrace.Unity.Services.BacktraceApi/<Send>d__25
#include "Backtrace/Unity/Services/BacktraceApi_-Send-d__25.hpp"
// Including type: Backtrace.Unity.Services.BacktraceApi/<Send>d__26
#include "Backtrace/Unity/Services/BacktraceApi_-Send-d__26.hpp"
// Including type: Backtrace.Unity.Services.BacktraceApi/<Send>d__27
#include "Backtrace/Unity/Services/BacktraceApi_-Send-d__27.hpp"
// Including type: Backtrace.Unity.Services.BacktraceApi/<SendMinidump>d__24
#include "Backtrace/Unity/Services/BacktraceApi_-SendMinidump-d__24.hpp"
// Including type: Backtrace.Unity.Model.BacktraceHttpClient
#include "Backtrace/Unity/Model/BacktraceHttpClient.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
// Including type: Backtrace.Unity.Model.BacktraceResult
#include "Backtrace/Unity/Model/BacktraceResult.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: Backtrace.Unity.Model.BacktraceCredentials
#include "Backtrace/Unity/Model/BacktraceCredentials.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Model.BacktraceHttpClient _httpClient
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceHttpClient*& Backtrace::Unity::Services::BacktraceApi::dyn__httpClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::dyn__httpClient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_httpClient"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceHttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`3<System.String,Backtrace.Unity.Model.BacktraceData,Backtrace.Unity.Model.BacktraceResult> <RequestHandler>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_3<::StringW, ::Backtrace::Unity::Model::BacktraceData*, ::Backtrace::Unity::Model::BacktraceResult*>*& Backtrace::Unity::Services::BacktraceApi::dyn_$RequestHandler$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::dyn_$RequestHandler$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RequestHandler>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_3<::StringW, ::Backtrace::Unity::Model::BacktraceData*, ::Backtrace::Unity::Model::BacktraceResult*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _shouldDisplayFailureMessage
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Services::BacktraceApi::dyn__shouldDisplayFailureMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::dyn__shouldDisplayFailureMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shouldDisplayFailureMessage"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Exception> <OnServerError>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Exception*>*& Backtrace::Unity::Services::BacktraceApi::dyn_$OnServerError$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::dyn_$OnServerError$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OnServerError>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Backtrace.Unity.Model.BacktraceResult> <OnServerResponse>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>*& Backtrace::Unity::Services::BacktraceApi::dyn_$OnServerResponse$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::dyn_$OnServerResponse$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OnServerResponse>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Uri _serverUrl
[[deprecated("Use field access instead!")]] ::System::Uri*& Backtrace::Unity::Services::BacktraceApi::dyn__serverUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::dyn__serverUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverUrl"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EnablePerformanceStatistics>k__BackingField
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Services::BacktraceApi::dyn_$EnablePerformanceStatistics$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::dyn_$EnablePerformanceStatistics$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnablePerformanceStatistics>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _minidumpUrl
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Services::BacktraceApi::dyn__minidumpUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::dyn__minidumpUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minidumpUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Backtrace.Unity.Model.BacktraceCredentials _credentials
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceCredentials*& Backtrace::Unity::Services::BacktraceApi::dyn__credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::dyn__credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_credentials"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceCredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi.get_RequestHandler
::System::Func_3<::StringW, ::Backtrace::Unity::Model::BacktraceData*, ::Backtrace::Unity::Model::BacktraceResult*>* Backtrace::Unity::Services::BacktraceApi::get_RequestHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::get_RequestHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_3<::StringW, ::Backtrace::Unity::Model::BacktraceData*, ::Backtrace::Unity::Model::BacktraceResult*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi.set_RequestHandler
void Backtrace::Unity::Services::BacktraceApi::set_RequestHandler(::System::Func_3<::StringW, ::Backtrace::Unity::Model::BacktraceData*, ::Backtrace::Unity::Model::BacktraceResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::set_RequestHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi.get_OnServerError
::System::Action_1<::System::Exception*>* Backtrace::Unity::Services::BacktraceApi::get_OnServerError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::get_OnServerError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action_1<::System::Exception*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi.set_OnServerError
void Backtrace::Unity::Services::BacktraceApi::set_OnServerError(::System::Action_1<::System::Exception*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::set_OnServerError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi.get_OnServerResponse
::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* Backtrace::Unity::Services::BacktraceApi::get_OnServerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::get_OnServerResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi.set_OnServerResponse
void Backtrace::Unity::Services::BacktraceApi::set_OnServerResponse(::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::set_OnServerResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi.get_EnablePerformanceStatistics
bool Backtrace::Unity::Services::BacktraceApi::get_EnablePerformanceStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::get_EnablePerformanceStatistics");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi.set_EnablePerformanceStatistics
void Backtrace::Unity::Services::BacktraceApi::set_EnablePerformanceStatistics(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::set_EnablePerformanceStatistics");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi.get_ServerUrl
::StringW Backtrace::Unity::Services::BacktraceApi::get_ServerUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::get_ServerUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi.SendMinidump
::System::Collections::IEnumerator* Backtrace::Unity::Services::BacktraceApi::SendMinidump(::StringW minidumpPath, ::System::Collections::Generic::IEnumerable_1<::StringW>* attachments, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes, ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::SendMinidump");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, minidumpPath, attachments, attributes, callback);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi.Send
::System::Collections::IEnumerator* Backtrace::Unity::Services::BacktraceApi::Send(::Backtrace::Unity::Model::BacktraceData* data, ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, data, callback);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi.Send
::System::Collections::IEnumerator* Backtrace::Unity::Services::BacktraceApi::Send(::StringW json, ::System::Collections::Generic::IEnumerable_1<::StringW>* attachments, int deduplication, ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, json, attachments, deduplication, callback);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi.Send
::System::Collections::IEnumerator* Backtrace::Unity::Services::BacktraceApi::Send(::StringW json, ::System::Collections::Generic::IEnumerable_1<::StringW>* attachments, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributes, ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, json, attachments, attributes, callback);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi.PrintLog
void Backtrace::Unity::Services::BacktraceApi::PrintLog(::UnityEngine::Networking::UnityWebRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::PrintLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrintLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Backtrace.Unity.Services.BacktraceApi/<Send>d__25
#include "Backtrace/Unity/Services/BacktraceApi_-Send-d__25.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceResult
#include "Backtrace/Unity/Model/BacktraceResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Services::BacktraceApi::$Send$d__25::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__25::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Backtrace::Unity::Services::BacktraceApi::$Send$d__25::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__25::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Services.BacktraceApi <>4__this
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Services::BacktraceApi*& Backtrace::Unity::Services::BacktraceApi::$Send$d__25::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__25::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Services::BacktraceApi**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.BacktraceData data
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceData*& Backtrace::Unity::Services::BacktraceApi::$Send$d__25::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__25::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Backtrace.Unity.Model.BacktraceResult> callback
[[deprecated("Use field access instead!")]] ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>*& Backtrace::Unity::Services::BacktraceApi::$Send$d__25::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__25::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__25.System.IDisposable.Dispose
void Backtrace::Unity::Services::BacktraceApi::$Send$d__25::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__25::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$Send$d__25*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__25.MoveNext
bool Backtrace::Unity::Services::BacktraceApi::$Send$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__25::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$Send$d__25*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__25.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Backtrace::Unity::Services::BacktraceApi::$Send$d__25::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__25::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$Send$d__25*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__25.System.Collections.IEnumerator.Reset
void Backtrace::Unity::Services::BacktraceApi::$Send$d__25::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__25::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$Send$d__25*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__25.System.Collections.IEnumerator.get_Current
::Il2CppObject* Backtrace::Unity::Services::BacktraceApi::$Send$d__25::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__25::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$Send$d__25*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Backtrace.Unity.Services.BacktraceApi/<Send>d__26
#include "Backtrace/Unity/Services/BacktraceApi_-Send-d__26.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceResult
#include "Backtrace/Unity/Model/BacktraceResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Services::BacktraceApi::$Send$d__26::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__26::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Backtrace::Unity::Services::BacktraceApi::$Send$d__26::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__26::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 deduplication
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Services::BacktraceApi::$Send$d__26::dyn_deduplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__26::dyn_deduplication");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deduplication"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Services.BacktraceApi <>4__this
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Services::BacktraceApi*& Backtrace::Unity::Services::BacktraceApi::$Send$d__26::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__26::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Services::BacktraceApi**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String json
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Services::BacktraceApi::$Send$d__26::dyn_json() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__26::dyn_json");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "json"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IEnumerable`1<System.String> attachments
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::StringW>*& Backtrace::Unity::Services::BacktraceApi::$Send$d__26::dyn_attachments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__26::dyn_attachments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Backtrace.Unity.Model.BacktraceResult> callback
[[deprecated("Use field access instead!")]] ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>*& Backtrace::Unity::Services::BacktraceApi::$Send$d__26::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__26::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__26.System.IDisposable.Dispose
void Backtrace::Unity::Services::BacktraceApi::$Send$d__26::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__26::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$Send$d__26*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__26.MoveNext
bool Backtrace::Unity::Services::BacktraceApi::$Send$d__26::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__26::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$Send$d__26*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__26.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Backtrace::Unity::Services::BacktraceApi::$Send$d__26::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__26::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$Send$d__26*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__26.System.Collections.IEnumerator.Reset
void Backtrace::Unity::Services::BacktraceApi::$Send$d__26::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__26::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$Send$d__26*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__26.System.Collections.IEnumerator.get_Current
::Il2CppObject* Backtrace::Unity::Services::BacktraceApi::$Send$d__26::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__26::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$Send$d__26*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Backtrace.Unity.Services.BacktraceApi/<Send>d__27
#include "Backtrace/Unity/Services/BacktraceApi_-Send-d__27.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceResult
#include "Backtrace/Unity/Model/BacktraceResult.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Services.BacktraceApi <>4__this
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Services::BacktraceApi*& Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Services::BacktraceApi**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String json
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_json() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_json");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "json"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IEnumerable`1<System.String> attachments
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::StringW>*& Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_attachments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_attachments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.String> attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Backtrace.Unity.Model.BacktraceResult> callback
[[deprecated("Use field access instead!")]] ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>*& Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Stopwatch <stopWatch>5__2
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_$stopWatch$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_$stopWatch$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<stopWatch>5__2"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <request>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_$request$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__27::dyn_$request$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__27.System.IDisposable.Dispose
void Backtrace::Unity::Services::BacktraceApi::$Send$d__27::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__27::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$Send$d__27*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__27.MoveNext
bool Backtrace::Unity::Services::BacktraceApi::$Send$d__27::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__27::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$Send$d__27*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__27.<>m__Finally1
void Backtrace::Unity::Services::BacktraceApi::$Send$d__27::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__27::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__27.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Backtrace::Unity::Services::BacktraceApi::$Send$d__27::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__27::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$Send$d__27*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__27.System.Collections.IEnumerator.Reset
void Backtrace::Unity::Services::BacktraceApi::$Send$d__27::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__27::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$Send$d__27*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<Send>d__27.System.Collections.IEnumerator.get_Current
::Il2CppObject* Backtrace::Unity::Services::BacktraceApi::$Send$d__27::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$Send$d__27::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$Send$d__27*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Backtrace.Unity.Services.BacktraceApi/<SendMinidump>d__24
#include "Backtrace/Unity/Services/BacktraceApi_-SendMinidump-d__24.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceResult
#include "Backtrace/Unity/Model/BacktraceResult.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IEnumerable`1<System.String> attachments
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::StringW>*& Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_attachments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_attachments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Services.BacktraceApi <>4__this
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Services::BacktraceApi*& Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Services::BacktraceApi**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String minidumpPath
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_minidumpPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_minidumpPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minidumpPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IDictionary`2<System.String,System.String> attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*& Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Backtrace.Unity.Model.BacktraceResult> callback
[[deprecated("Use field access instead!")]] ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>*& Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Stopwatch <stopWatch>5__2
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_$stopWatch$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_$stopWatch$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<stopWatch>5__2"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <request>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_$request$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::dyn_$request$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<SendMinidump>d__24.System.IDisposable.Dispose
void Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<SendMinidump>d__24.MoveNext
bool Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<SendMinidump>d__24.<>m__Finally1
void Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<SendMinidump>d__24.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<SendMinidump>d__24.System.Collections.IEnumerator.Reset
void Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceApi/<SendMinidump>d__24.System.Collections.IEnumerator.get_Current
::Il2CppObject* Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceApi::$SendMinidump$d__24*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Services.BacktraceDatabaseContext
#include "Backtrace/Unity/Services/BacktraceDatabaseContext.hpp"
// Including type: Backtrace.Unity.Services.BacktraceDatabaseContext/<>c
#include "Backtrace/Unity/Services/BacktraceDatabaseContext_--c.hpp"
// Including type: Backtrace.Unity.Services.BacktraceDatabaseContext/<>c__DisplayClass20_0
#include "Backtrace/Unity/Services/BacktraceDatabaseContext_--c__DisplayClass20_0.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseRecord.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseSettings.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IDictionary`2<System.Int32,System.Collections.Generic.List`1<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord>> <BatchRetry>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>*& Backtrace::Unity::Services::BacktraceDatabaseContext::dyn_$BatchRetry$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::dyn_$BatchRetry$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BatchRetry>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int64 TotalSize
[[deprecated("Use field access instead!")]] int64_t& Backtrace::Unity::Services::BacktraceDatabaseContext::dyn_TotalSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::dyn_TotalSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 TotalRecords
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Services::BacktraceDatabaseContext::dyn_TotalRecords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::dyn_TotalRecords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalRecords"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _retryNumber
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Services::BacktraceDatabaseContext::dyn__retryNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::dyn__retryNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_retryNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Types.RetryOrder <RetryOrder>k__BackingField
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Types::RetryOrder& Backtrace::Unity::Services::BacktraceDatabaseContext::dyn_$RetryOrder$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::dyn_$RetryOrder$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RetryOrder>k__BackingField"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Types::RetryOrder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Types.DeduplicationStrategy <DeduplicationStrategy>k__BackingField
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Types::DeduplicationStrategy& Backtrace::Unity::Services::BacktraceDatabaseContext::dyn_$DeduplicationStrategy$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::dyn_$DeduplicationStrategy$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DeduplicationStrategy>k__BackingField"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Types::DeduplicationStrategy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.get_BatchRetry
::System::Collections::Generic::IDictionary_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>* Backtrace::Unity::Services::BacktraceDatabaseContext::get_BatchRetry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::get_BatchRetry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BatchRetry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.set_BatchRetry
void Backtrace::Unity::Services::BacktraceDatabaseContext::set_BatchRetry(::System::Collections::Generic::IDictionary_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::set_BatchRetry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BatchRetry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.get_RetryOrder
::Backtrace::Unity::Types::RetryOrder Backtrace::Unity::Services::BacktraceDatabaseContext::get_RetryOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::get_RetryOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RetryOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Types::RetryOrder, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.set_RetryOrder
void Backtrace::Unity::Services::BacktraceDatabaseContext::set_RetryOrder(::Backtrace::Unity::Types::RetryOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::set_RetryOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RetryOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.get_DeduplicationStrategy
::Backtrace::Unity::Types::DeduplicationStrategy Backtrace::Unity::Services::BacktraceDatabaseContext::get_DeduplicationStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::get_DeduplicationStrategy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Types::DeduplicationStrategy, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.set_DeduplicationStrategy
void Backtrace::Unity::Services::BacktraceDatabaseContext::set_DeduplicationStrategy(::Backtrace::Unity::Types::DeduplicationStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::set_DeduplicationStrategy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.SetupBatch
void Backtrace::Unity::Services::BacktraceDatabaseContext::SetupBatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::SetupBatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupBatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.GetHash
::StringW Backtrace::Unity::Services::BacktraceDatabaseContext::GetHash(::Backtrace::Unity::Model::BacktraceData* backtraceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::GetHash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, backtraceData);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.GetRecordByHash
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Services::BacktraceDatabaseContext::GetRecordByHash(::StringW hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::GetRecordByHash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method, hash);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.Add
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Services::BacktraceDatabaseContext::Add(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* backtraceRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method, backtraceRecord);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.Any
bool Backtrace::Unity::Services::BacktraceDatabaseContext::Any(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::Any");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.Any
bool Backtrace::Unity::Services::BacktraceDatabaseContext::Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::Any");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.Delete
void Backtrace::Unity::Services::BacktraceDatabaseContext::Delete(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::Delete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.IncrementBatchRetry
void Backtrace::Unity::Services::BacktraceDatabaseContext::IncrementBatchRetry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::IncrementBatchRetry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.IncrementBatches
void Backtrace::Unity::Services::BacktraceDatabaseContext::IncrementBatches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::IncrementBatches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementBatches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.RemoveMaxRetries
void Backtrace::Unity::Services::BacktraceDatabaseContext::RemoveMaxRetries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::RemoveMaxRetries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveMaxRetries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.Get
::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>* Backtrace::Unity::Services::BacktraceDatabaseContext::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.Count
int Backtrace::Unity::Services::BacktraceDatabaseContext::Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.Dispose
void Backtrace::Unity::Services::BacktraceDatabaseContext::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.Clear
void Backtrace::Unity::Services::BacktraceDatabaseContext::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.LastOrDefault
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Services::BacktraceDatabaseContext::LastOrDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::LastOrDefault");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.FirstOrDefault
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Services::BacktraceDatabaseContext::FirstOrDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::FirstOrDefault");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.FirstOrDefault
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Services::BacktraceDatabaseContext::FirstOrDefault(::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::FirstOrDefault");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method, predicate);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.GetFirstRecord
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Services::BacktraceDatabaseContext::GetFirstRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::GetFirstRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.GetLastRecord
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Services::BacktraceDatabaseContext::GetLastRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::GetLastRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.GetSize
int64_t Backtrace::Unity::Services::BacktraceDatabaseContext::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::GetSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.GetTotalNumberOfRecords
int Backtrace::Unity::Services::BacktraceDatabaseContext::GetTotalNumberOfRecords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::GetTotalNumberOfRecords");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.GetRecordsToDelete
::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>* Backtrace::Unity::Services::BacktraceDatabaseContext::GetRecordsToDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::GetRecordsToDelete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext.AddDuplicate
void Backtrace::Unity::Services::BacktraceDatabaseContext::AddDuplicate(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::AddDuplicate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseContext*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Services.BacktraceDatabaseContext/<>c
#include "Backtrace/Unity/Services/BacktraceDatabaseContext_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseRecord.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Backtrace.Unity.Services.BacktraceDatabaseContext/<>c <>9
::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c* Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c*>("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Backtrace.Unity.Services.BacktraceDatabaseContext/<>c <>9
void Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9(::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.Int32,System.Collections.Generic.List`1<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord>>,System.Collections.Generic.IEnumerable`1<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord>> <>9__20_0
::System::Func_2<::System::Collections::Generic::KeyValuePair_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>, ::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>* Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9__20_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9__20_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::KeyValuePair_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>, ::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>*>("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9__20_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.Int32,System.Collections.Generic.List`1<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord>>,System.Collections.Generic.IEnumerable`1<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord>> <>9__20_0
void Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9__20_0(::System::Func_2<::System::Collections::Generic::KeyValuePair_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>, ::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9__20_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9__20_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.Int32,System.Collections.Generic.List`1<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord>>,System.Collections.Generic.IEnumerable`1<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord>> <>9__26_0
::System::Func_2<::System::Collections::Generic::KeyValuePair_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>, ::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>* Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9__26_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9__26_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::KeyValuePair_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>, ::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>*>("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9__26_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.Int32,System.Collections.Generic.List`1<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord>>,System.Collections.Generic.IEnumerable`1<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord>> <>9__26_0
void Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9__26_0(::System::Func_2<::System::Collections::Generic::KeyValuePair_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>, ::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9__26_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9__26_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.Int32,System.Collections.Generic.List`1<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord>>,System.Collections.Generic.IEnumerable`1<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord>> <>9__32_0
::System::Func_2<::System::Collections::Generic::KeyValuePair_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>, ::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>* Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9__32_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9__32_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::KeyValuePair_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>, ::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>*>("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9__32_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.Int32,System.Collections.Generic.List`1<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord>>,System.Collections.Generic.IEnumerable`1<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord>> <>9__32_0
void Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9__32_0(::System::Func_2<::System::Collections::Generic::KeyValuePair_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>, ::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9__32_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9__32_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord,System.Boolean> <>9__33_0
::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, bool>* Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9__33_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9__33_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, bool>*>("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9__33_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord,System.Boolean> <>9__33_0
void Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9__33_0(::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9__33_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9__33_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord,System.Boolean> <>9__33_1
::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, bool>* Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9__33_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9__33_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, bool>*>("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9__33_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord,System.Boolean> <>9__33_1
void Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9__33_1(::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9__33_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9__33_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord,System.Boolean> <>9__34_0
::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, bool>* Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9__34_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9__34_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, bool>*>("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9__34_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord,System.Boolean> <>9__34_0
void Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9__34_0(::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9__34_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9__34_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord,System.Boolean> <>9__34_1
::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, bool>* Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9__34_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_get_$$9__34_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, bool>*>("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9__34_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord,System.Boolean> <>9__34_1
void Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9__34_1(::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_set_$$9__34_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", "<>9__34_1", value)));
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext/<>c..cctor
void Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Services", "BacktraceDatabaseContext/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext/<>c.<Any>b__20_0
::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>* Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::$Any$b__20_0(::System::Collections::Generic::KeyValuePair_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*> n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::<Any>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Any>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*, false>(this, ___internal__method, n);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext/<>c.<Get>b__26_0
::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>* Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::$Get$b__26_0(::System::Collections::Generic::KeyValuePair_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*> n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::<Get>b__26_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Get>b__26_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*, false>(this, ___internal__method, n);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext/<>c.<FirstOrDefault>b__32_0
::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>* Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::$FirstOrDefault$b__32_0(::System::Collections::Generic::KeyValuePair_2<int, ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*> n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::<FirstOrDefault>b__32_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FirstOrDefault>b__32_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*, false>(this, ___internal__method, n);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext/<>c.<GetFirstRecord>b__33_0
bool Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::$GetFirstRecord$b__33_0(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::<GetFirstRecord>b__33_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFirstRecord>b__33_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext/<>c.<GetFirstRecord>b__33_1
bool Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::$GetFirstRecord$b__33_1(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::<GetFirstRecord>b__33_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFirstRecord>b__33_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext/<>c.<GetLastRecord>b__34_0
bool Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::$GetLastRecord$b__34_0(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::<GetLastRecord>b__34_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetLastRecord>b__34_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext/<>c.<GetLastRecord>b__34_1
bool Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::$GetLastRecord$b__34_1(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c::<GetLastRecord>b__34_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetLastRecord>b__34_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Services.BacktraceDatabaseContext/<>c__DisplayClass20_0
#include "Backtrace/Unity/Services/BacktraceDatabaseContext_--c__DisplayClass20_0.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.Database.BacktraceDatabaseRecord record
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*& Backtrace::Unity::Services::BacktraceDatabaseContext::$$c__DisplayClass20_0::dyn_record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c__DisplayClass20_0::dyn_record");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "record"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseContext/<>c__DisplayClass20_0.<Any>b__1
bool Backtrace::Unity::Services::BacktraceDatabaseContext::$$c__DisplayClass20_0::$Any$b__1(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseContext::$$c__DisplayClass20_0::<Any>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Any>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Services.BacktraceDatabaseFileContext
#include "Backtrace/Unity/Services/BacktraceDatabaseFileContext.hpp"
// Including type: Backtrace.Unity.Services.BacktraceDatabaseFileContext/<>c
#include "Backtrace/Unity/Services/BacktraceDatabaseFileContext_--c.hpp"
// Including type: Backtrace.Unity.Services.BacktraceDatabaseFileContext/<>c__DisplayClass16_0
#include "Backtrace/Unity/Services/BacktraceDatabaseFileContext_--c__DisplayClass16_0.hpp"
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseAttachmentManager
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseAttachmentManager.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseSettings.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.IO.FileInfo
#include "System/IO/FileInfo.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseRecord.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String RecordFilterRegex
::StringW Backtrace::Unity::Services::BacktraceDatabaseFileContext::_get_RecordFilterRegex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::_get_RecordFilterRegex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Services", "BacktraceDatabaseFileContext", "RecordFilterRegex"));
}
// Autogenerated static field setter
// Set static field: static private System.String RecordFilterRegex
void Backtrace::Unity::Services::BacktraceDatabaseFileContext::_set_RecordFilterRegex(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::_set_RecordFilterRegex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceDatabaseFileContext", "RecordFilterRegex", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _possibleDatabaseExtension
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Backtrace::Unity::Services::BacktraceDatabaseFileContext::dyn__possibleDatabaseExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::dyn__possibleDatabaseExtension");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_possibleDatabaseExtension"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 _maxDatabaseSize
[[deprecated("Use field access instead!")]] int64_t& Backtrace::Unity::Services::BacktraceDatabaseFileContext::dyn__maxDatabaseSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::dyn__maxDatabaseSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxDatabaseSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt32 _maxRecordNumber
[[deprecated("Use field access instead!")]] uint& Backtrace::Unity::Services::BacktraceDatabaseFileContext::dyn__maxRecordNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::dyn__maxRecordNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxRecordNumber"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.DirectoryInfo _databaseDirectoryInfo
[[deprecated("Use field access instead!")]] ::System::IO::DirectoryInfo*& Backtrace::Unity::Services::BacktraceDatabaseFileContext::dyn__databaseDirectoryInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::dyn__databaseDirectoryInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_databaseDirectoryInfo"))->offset;
  return *reinterpret_cast<::System::IO::DirectoryInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly Backtrace.Unity.Model.Database.BacktraceDatabaseAttachmentManager _attachmentManager
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager*& Backtrace::Unity::Services::BacktraceDatabaseFileContext::dyn__attachmentManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::dyn__attachmentManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attachmentManager"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _path
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Services::BacktraceDatabaseFileContext::dyn__path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::dyn__path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.get_ScreenshotQuality
int Backtrace::Unity::Services::BacktraceDatabaseFileContext::get_ScreenshotQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::get_ScreenshotQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseFileContext*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.set_ScreenshotQuality
void Backtrace::Unity::Services::BacktraceDatabaseFileContext::set_ScreenshotQuality(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::set_ScreenshotQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseFileContext*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.get_ScreenshotMaxHeight
int Backtrace::Unity::Services::BacktraceDatabaseFileContext::get_ScreenshotMaxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::get_ScreenshotMaxHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseFileContext*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.set_ScreenshotMaxHeight
void Backtrace::Unity::Services::BacktraceDatabaseFileContext::set_ScreenshotMaxHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::set_ScreenshotMaxHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseFileContext*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.GetAll
::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>* Backtrace::Unity::Services::BacktraceDatabaseFileContext::GetAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::GetAll");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseFileContext*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.GetRecords
::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>* Backtrace::Unity::Services::BacktraceDatabaseFileContext::GetRecords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::GetRecords");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseFileContext*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.RemoveOrphaned
void Backtrace::Unity::Services::BacktraceDatabaseFileContext::RemoveOrphaned(::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>* existingRecords) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::RemoveOrphaned");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseFileContext*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, existingRecords);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.ValidFileConsistency
bool Backtrace::Unity::Services::BacktraceDatabaseFileContext::ValidFileConsistency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::ValidFileConsistency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseFileContext*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.Clear
void Backtrace::Unity::Services::BacktraceDatabaseFileContext::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseFileContext*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.Delete
void Backtrace::Unity::Services::BacktraceDatabaseFileContext::Delete(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::Delete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseFileContext*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.IsDatabaseDependency
bool Backtrace::Unity::Services::BacktraceDatabaseFileContext::IsDatabaseDependency(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::IsDatabaseDependency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDatabaseDependency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.Delete
void Backtrace::Unity::Services::BacktraceDatabaseFileContext::Delete(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.GenerateRecordAttachments
::System::Collections::Generic::IEnumerable_1<::StringW>* Backtrace::Unity::Services::BacktraceDatabaseFileContext::GenerateRecordAttachments(::Backtrace::Unity::Model::BacktraceData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::GenerateRecordAttachments");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseFileContext*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method, data);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.Save
bool Backtrace::Unity::Services::BacktraceDatabaseFileContext::Save(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::Save");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseFileContext*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.Save
int Backtrace::Unity::Services::BacktraceDatabaseFileContext::Save(::StringW json, ::StringW destPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(destPath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, json, destPath);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext.IsValidRecord
bool Backtrace::Unity::Services::BacktraceDatabaseFileContext::IsValidRecord(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::IsValidRecord");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceDatabaseFileContext*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Services.BacktraceDatabaseFileContext/<>c
#include "Backtrace/Unity/Services/BacktraceDatabaseFileContext_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.IO.FileInfo
#include "System/IO/FileInfo.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Backtrace.Unity.Services.BacktraceDatabaseFileContext/<>c <>9
::Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c* Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c*>("Backtrace.Unity.Services", "BacktraceDatabaseFileContext/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Backtrace.Unity.Services.BacktraceDatabaseFileContext/<>c <>9
void Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::_set_$$9(::Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceDatabaseFileContext/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.IO.FileInfo,System.DateTime> <>9__15_0
::System::Func_2<::System::IO::FileInfo*, ::System::DateTime>* Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::IO::FileInfo*, ::System::DateTime>*>("Backtrace.Unity.Services", "BacktraceDatabaseFileContext/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.IO.FileInfo,System.DateTime> <>9__15_0
void Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::_set_$$9__15_0(::System::Func_2<::System::IO::FileInfo*, ::System::DateTime>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceDatabaseFileContext/<>c", "<>9__15_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord,System.String> <>9__16_0
::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, ::StringW>* Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::_get_$$9__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::_get_$$9__16_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, ::StringW>*>("Backtrace.Unity.Services", "BacktraceDatabaseFileContext/<>c", "<>9__16_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Backtrace.Unity.Model.Database.BacktraceDatabaseRecord,System.String> <>9__16_0
void Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::_set_$$9__16_0(::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::_set_$$9__16_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceDatabaseFileContext/<>c", "<>9__16_0", value)));
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext/<>c..cctor
void Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Services", "BacktraceDatabaseFileContext/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext/<>c.<GetRecords>b__15_0
::System::DateTime Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::$GetRecords$b__15_0(::System::IO::FileInfo* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::<GetRecords>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetRecords>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, n);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext/<>c.<RemoveOrphaned>b__16_0
::StringW Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::$RemoveOrphaned$b__16_0(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c::<RemoveOrphaned>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RemoveOrphaned>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Services.BacktraceDatabaseFileContext/<>c__DisplayClass16_0
#include "Backtrace/Unity/Services/BacktraceDatabaseFileContext_--c__DisplayClass16_0.hpp"
// Including type: System.IO.FileInfo
#include "System/IO/FileInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IO.FileInfo file
[[deprecated("Use field access instead!")]] ::System::IO::FileInfo*& Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c__DisplayClass16_0::dyn_file() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c__DisplayClass16_0::dyn_file");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "file"))->offset;
  return *reinterpret_cast<::System::IO::FileInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceDatabaseFileContext/<>c__DisplayClass16_0.<RemoveOrphaned>b__1
bool Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c__DisplayClass16_0::$RemoveOrphaned$b__1(::StringW n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceDatabaseFileContext::$$c__DisplayClass16_0::<RemoveOrphaned>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RemoveOrphaned>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Backtrace.Unity.Services.BacktraceMetrics
#include "Backtrace/Unity/Services/BacktraceMetrics.hpp"
// Including type: Backtrace.Unity.Services.BacktraceMetrics/<>c__DisplayClass44_0
#include "Backtrace/Unity/Services/BacktraceMetrics_--c__DisplayClass44_0.hpp"
// Including type: Backtrace.Unity.Model.Metrics.UniqueEventsSubmissionQueue
#include "Backtrace/Unity/Model/Metrics/UniqueEventsSubmissionQueue.hpp"
// Including type: Backtrace.Unity.Model.Metrics.SummedEventsSubmissionQueue
#include "Backtrace/Unity/Model/Metrics/SummedEventsSubmissionQueue.hpp"
// Including type: Backtrace.Unity.Model.JsonData.AttributeProvider
#include "Backtrace/Unity/Model/JsonData/AttributeProvider.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: Backtrace.Unity.Model.Metrics.UniqueEvent
#include "Backtrace/Unity/Model/Metrics/UniqueEvent.hpp"
// Including type: Backtrace.Unity.Model.Metrics.SummedEvent
#include "Backtrace/Unity/Model/Metrics/SummedEvent.hpp"
// Including type: Backtrace.Unity.Model.IBacktraceHttpClient
#include "Backtrace/Unity/Model/IBacktraceHttpClient.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String DefaultSubmissionUrl
::StringW Backtrace::Unity::Services::BacktraceMetrics::_get_DefaultSubmissionUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_get_DefaultSubmissionUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Services", "BacktraceMetrics", "DefaultSubmissionUrl"));
}
// Autogenerated static field setter
// Set static field: static public System.String DefaultSubmissionUrl
void Backtrace::Unity::Services::BacktraceMetrics::_set_DefaultSubmissionUrl(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_set_DefaultSubmissionUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceMetrics", "DefaultSubmissionUrl", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 DefaultTimeIntervalInMin
uint Backtrace::Unity::Services::BacktraceMetrics::_get_DefaultTimeIntervalInMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_get_DefaultTimeIntervalInMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Backtrace.Unity.Services", "BacktraceMetrics", "DefaultTimeIntervalInMin"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 DefaultTimeIntervalInMin
void Backtrace::Unity::Services::BacktraceMetrics::_set_DefaultTimeIntervalInMin(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_set_DefaultTimeIntervalInMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceMetrics", "DefaultTimeIntervalInMin", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 DefaultTimeIntervalInSec
uint Backtrace::Unity::Services::BacktraceMetrics::_get_DefaultTimeIntervalInSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_get_DefaultTimeIntervalInSec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Backtrace.Unity.Services", "BacktraceMetrics", "DefaultTimeIntervalInSec"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 DefaultTimeIntervalInSec
void Backtrace::Unity::Services::BacktraceMetrics::_set_DefaultTimeIntervalInSec(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_set_DefaultTimeIntervalInSec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceMetrics", "DefaultTimeIntervalInSec", value));
}
// Autogenerated static field getter
// Get static field: static public System.String DefaultUniqueAttributeName
::StringW Backtrace::Unity::Services::BacktraceMetrics::_get_DefaultUniqueAttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_get_DefaultUniqueAttributeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Services", "BacktraceMetrics", "DefaultUniqueAttributeName"));
}
// Autogenerated static field setter
// Set static field: static public System.String DefaultUniqueAttributeName
void Backtrace::Unity::Services::BacktraceMetrics::_set_DefaultUniqueAttributeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_set_DefaultUniqueAttributeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceMetrics", "DefaultUniqueAttributeName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxTimeBetweenRequests
int Backtrace::Unity::Services::BacktraceMetrics::_get_MaxTimeBetweenRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_get_MaxTimeBetweenRequests");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Backtrace.Unity.Services", "BacktraceMetrics", "MaxTimeBetweenRequests"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxTimeBetweenRequests
void Backtrace::Unity::Services::BacktraceMetrics::_set_MaxTimeBetweenRequests(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_set_MaxTimeBetweenRequests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceMetrics", "MaxTimeBetweenRequests", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxNumberOfAttempts
int Backtrace::Unity::Services::BacktraceMetrics::_get_MaxNumberOfAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_get_MaxNumberOfAttempts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Backtrace.Unity.Services", "BacktraceMetrics", "MaxNumberOfAttempts"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxNumberOfAttempts
void Backtrace::Unity::Services::BacktraceMetrics::_set_MaxNumberOfAttempts(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_set_MaxNumberOfAttempts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceMetrics", "MaxNumberOfAttempts", value));
}
// Autogenerated static field getter
// Get static field: static System.String ApplicationSessionKey
::StringW Backtrace::Unity::Services::BacktraceMetrics::_get_ApplicationSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_get_ApplicationSessionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Services", "BacktraceMetrics", "ApplicationSessionKey"));
}
// Autogenerated static field setter
// Set static field: static System.String ApplicationSessionKey
void Backtrace::Unity::Services::BacktraceMetrics::_set_ApplicationSessionKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_set_ApplicationSessionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceMetrics", "ApplicationSessionKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String StartupEventName
::StringW Backtrace::Unity::Services::BacktraceMetrics::_get_StartupEventName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_get_StartupEventName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Services", "BacktraceMetrics", "StartupEventName"));
}
// Autogenerated static field setter
// Set static field: static private System.String StartupEventName
void Backtrace::Unity::Services::BacktraceMetrics::_set_StartupEventName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::_set_StartupEventName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Services", "BacktraceMetrics", "StartupEventName", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Guid SessionId
[[deprecated("Use field access instead!")]] ::System::Guid& Backtrace::Unity::Services::BacktraceMetrics::dyn_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::dyn_SessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionId"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <StartupUniqueAttributeName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Services::BacktraceMetrics::dyn_$StartupUniqueAttributeName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::dyn_$StartupUniqueAttributeName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StartupUniqueAttributeName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly Backtrace.Unity.Model.Metrics.UniqueEventsSubmissionQueue _uniqueEventsSubmissionQueue
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Metrics::UniqueEventsSubmissionQueue*& Backtrace::Unity::Services::BacktraceMetrics::dyn__uniqueEventsSubmissionQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::dyn__uniqueEventsSubmissionQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uniqueEventsSubmissionQueue"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Metrics::UniqueEventsSubmissionQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly Backtrace.Unity.Model.Metrics.SummedEventsSubmissionQueue _summedEventsSubmissionQueue
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue*& Backtrace::Unity::Services::BacktraceMetrics::dyn__summedEventsSubmissionQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::dyn__summedEventsSubmissionQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_summedEventsSubmissionQueue"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 _timeIntervalInSec
[[deprecated("Use field access instead!")]] int64_t& Backtrace::Unity::Services::BacktraceMetrics::dyn__timeIntervalInSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::dyn__timeIntervalInSec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeIntervalInSec"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastUpdateTime
[[deprecated("Use field access instead!")]] float& Backtrace::Unity::Services::BacktraceMetrics::dyn__lastUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::dyn__lastUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastUpdateTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Backtrace.Unity.Model.JsonData.AttributeProvider _attributeProvider
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::JsonData::AttributeProvider*& Backtrace::Unity::Services::BacktraceMetrics::dyn__attributeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::dyn__attributeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributeProvider"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::JsonData::AttributeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _object
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Backtrace::Unity::Services::BacktraceMetrics::dyn__object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::dyn__object");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_object"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _sessionId
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Services::BacktraceMetrics::dyn__sessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::dyn__sessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.get_StartupUniqueAttributeName
::StringW Backtrace::Unity::Services::BacktraceMetrics::get_StartupUniqueAttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::get_StartupUniqueAttributeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartupUniqueAttributeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.set_StartupUniqueAttributeName
void Backtrace::Unity::Services::BacktraceMetrics::set_StartupUniqueAttributeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::set_StartupUniqueAttributeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartupUniqueAttributeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.get_MaximumUniqueEvents
uint Backtrace::Unity::Services::BacktraceMetrics::get_MaximumUniqueEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::get_MaximumUniqueEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceMetrics*), 6));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.set_MaximumUniqueEvents
void Backtrace::Unity::Services::BacktraceMetrics::set_MaximumUniqueEvents(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::set_MaximumUniqueEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceMetrics*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.get_MaximumSummedEvents
uint Backtrace::Unity::Services::BacktraceMetrics::get_MaximumSummedEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::get_MaximumSummedEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceMetrics*), 4));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.set_MaximumSummedEvents
void Backtrace::Unity::Services::BacktraceMetrics::set_MaximumSummedEvents(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::set_MaximumSummedEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceMetrics*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.get_UniqueEventsSubmissionUrl
::StringW Backtrace::Unity::Services::BacktraceMetrics::get_UniqueEventsSubmissionUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::get_UniqueEventsSubmissionUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceMetrics*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.set_UniqueEventsSubmissionUrl
void Backtrace::Unity::Services::BacktraceMetrics::set_UniqueEventsSubmissionUrl(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::set_UniqueEventsSubmissionUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceMetrics*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.get_SummedEventsSubmissionUrl
::StringW Backtrace::Unity::Services::BacktraceMetrics::get_SummedEventsSubmissionUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::get_SummedEventsSubmissionUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceMetrics*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.set_SummedEventsSubmissionUrl
void Backtrace::Unity::Services::BacktraceMetrics::set_SummedEventsSubmissionUrl(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::set_SummedEventsSubmissionUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceMetrics*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.set_IgnoreSslValidation
void Backtrace::Unity::Services::BacktraceMetrics::set_IgnoreSslValidation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::set_IgnoreSslValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IgnoreSslValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.get_UniqueEvents
::System::Collections::Generic::LinkedList_1<::Backtrace::Unity::Model::Metrics::UniqueEvent*>* Backtrace::Unity::Services::BacktraceMetrics::get_UniqueEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::get_UniqueEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UniqueEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::LinkedList_1<::Backtrace::Unity::Model::Metrics::UniqueEvent*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.get_SummedEvents
::System::Collections::Generic::LinkedList_1<::Backtrace::Unity::Model::Metrics::SummedEvent*>* Backtrace::Unity::Services::BacktraceMetrics::get_SummedEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::get_SummedEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SummedEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::LinkedList_1<::Backtrace::Unity::Model::Metrics::SummedEvent*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.OverrideHttpClient
void Backtrace::Unity::Services::BacktraceMetrics::OverrideHttpClient(::Backtrace::Unity::Model::IBacktraceHttpClient* client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::OverrideHttpClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverrideHttpClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.SendStartupEvent
void Backtrace::Unity::Services::BacktraceMetrics::SendStartupEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::SendStartupEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendStartupEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.Tick
void Backtrace::Unity::Services::BacktraceMetrics::Tick(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::Tick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.Send
void Backtrace::Unity::Services::BacktraceMetrics::Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceMetrics*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.AddUniqueEvent
bool Backtrace::Unity::Services::BacktraceMetrics::AddUniqueEvent(::StringW attributeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::AddUniqueEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUniqueEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeName);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.AddUniqueEvent
bool Backtrace::Unity::Services::BacktraceMetrics::AddUniqueEvent(::StringW attributeName, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::AddUniqueEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUniqueEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeName), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeName, attributes);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.Count
int Backtrace::Unity::Services::BacktraceMetrics::Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.AddSummedEvent
bool Backtrace::Unity::Services::BacktraceMetrics::AddSummedEvent(::StringW metricsGroupName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::AddSummedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceMetrics*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, metricsGroupName);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.AddSummedEvent
bool Backtrace::Unity::Services::BacktraceMetrics::AddSummedEvent(::StringW metricsGroupName, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::AddSummedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceMetrics*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, metricsGroupName, attributes);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.SendPendingSubmissionJobs
void Backtrace::Unity::Services::BacktraceMetrics::SendPendingSubmissionJobs(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::SendPendingSubmissionJobs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendPendingSubmissionJobs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.GetDefaultUniqueEventsUrl
::StringW Backtrace::Unity::Services::BacktraceMetrics::GetDefaultUniqueEventsUrl(::StringW universeName, ::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::GetDefaultUniqueEventsUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Services", "BacktraceMetrics", "GetDefaultUniqueEventsUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(universeName), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, universeName, token);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.GetDefaultSummedEventsUrl
::StringW Backtrace::Unity::Services::BacktraceMetrics::GetDefaultSummedEventsUrl(::StringW universeName, ::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::GetDefaultSummedEventsUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Services", "BacktraceMetrics", "GetDefaultSummedEventsUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(universeName), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, universeName, token);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.GetDefaultSubmissionUrl
::StringW Backtrace::Unity::Services::BacktraceMetrics::GetDefaultSubmissionUrl(::StringW serviceName, ::StringW universeName, ::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::GetDefaultSubmissionUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Services", "BacktraceMetrics", "GetDefaultSubmissionUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serviceName), ::il2cpp_utils::ExtractType(universeName), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, serviceName, universeName, token);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics.GetAttributes
void Backtrace::Unity::Services::BacktraceMetrics::GetAttributes(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Services::BacktraceMetrics*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Services.BacktraceMetrics/<>c__DisplayClass44_0
#include "Backtrace/Unity/Services/BacktraceMetrics_--c__DisplayClass44_0.hpp"
// Including type: Backtrace.Unity.Model.Metrics.UniqueEvent
#include "Backtrace/Unity/Model/Metrics/UniqueEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String attributeName
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Services::BacktraceMetrics::$$c__DisplayClass44_0::dyn_attributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::$$c__DisplayClass44_0::dyn_attributeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Services.BacktraceMetrics/<>c__DisplayClass44_0.<AddUniqueEvent>b__0
bool Backtrace::Unity::Services::BacktraceMetrics::$$c__DisplayClass44_0::$AddUniqueEvent$b__0(::Backtrace::Unity::Model::Metrics::UniqueEvent* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::BacktraceMetrics::$$c__DisplayClass44_0::<AddUniqueEvent>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddUniqueEvent>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Backtrace.Unity.Services.ReportLimitWatcher
#include "Backtrace/Unity/Services/ReportLimitWatcher.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceReport
#include "Backtrace/Unity/Model/BacktraceReport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Collections.Generic.Queue`1<System.Int64> _reportQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<int64_t>*& Backtrace::Unity::Services::ReportLimitWatcher::dyn__reportQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::ReportLimitWatcher::dyn__reportQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reportQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<int64_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Object _object
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Backtrace::Unity::Services::ReportLimitWatcher::dyn__object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::ReportLimitWatcher::dyn__object");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_object"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 _queueReportTime
[[deprecated("Use field access instead!")]] int64_t& Backtrace::Unity::Services::ReportLimitWatcher::dyn__queueReportTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::ReportLimitWatcher::dyn__queueReportTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_queueReportTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _watcherEnable
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Services::ReportLimitWatcher::dyn__watcherEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::ReportLimitWatcher::dyn__watcherEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_watcherEnable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _reportPerMin
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Services::ReportLimitWatcher::dyn__reportPerMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::ReportLimitWatcher::dyn__reportPerMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reportPerMin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _displayMessage
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Services::ReportLimitWatcher::dyn__displayMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::ReportLimitWatcher::dyn__displayMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_displayMessage"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _limitHit
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Services::ReportLimitWatcher::dyn__limitHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::ReportLimitWatcher::dyn__limitHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_limitHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Services.ReportLimitWatcher.SetClientReportLimit
void Backtrace::Unity::Services::ReportLimitWatcher::SetClientReportLimit(uint reportPerMin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::ReportLimitWatcher::SetClientReportLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetClientReportLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reportPerMin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reportPerMin);
}
// Autogenerated method: Backtrace.Unity.Services.ReportLimitWatcher.WatchReport
bool Backtrace::Unity::Services::ReportLimitWatcher::WatchReport(int64_t timestamp, bool displayMessageOnLimitHit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::ReportLimitWatcher::WatchReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WatchReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(displayMessageOnLimitHit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timestamp, displayMessageOnLimitHit);
}
// Autogenerated method: Backtrace.Unity.Services.ReportLimitWatcher.WatchReport
bool Backtrace::Unity::Services::ReportLimitWatcher::WatchReport(::Backtrace::Unity::Model::BacktraceReport* report, bool displayMessageOnLimitHit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::ReportLimitWatcher::WatchReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WatchReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(report), ::il2cpp_utils::ExtractType(displayMessageOnLimitHit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, report, displayMessageOnLimitHit);
}
// Autogenerated method: Backtrace.Unity.Services.ReportLimitWatcher.ShouldDisplayMessage
bool Backtrace::Unity::Services::ReportLimitWatcher::ShouldDisplayMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::ReportLimitWatcher::ShouldDisplayMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldDisplayMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.ReportLimitWatcher.DisplayReportLimitHitMessage
void Backtrace::Unity::Services::ReportLimitWatcher::DisplayReportLimitHitMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::ReportLimitWatcher::DisplayReportLimitHitMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisplayReportLimitHitMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.ReportLimitWatcher.Clear
void Backtrace::Unity::Services::ReportLimitWatcher::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::ReportLimitWatcher::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Services.ReportLimitWatcher.Reset
void Backtrace::Unity::Services::ReportLimitWatcher::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Services::ReportLimitWatcher::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Runtime.Native.INativeClient
#include "Backtrace/Unity/Runtime/Native/INativeClient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Runtime.Native.INativeClient.HandleAnr
void Backtrace::Unity::Runtime::Native::INativeClient::HandleAnr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::INativeClient::HandleAnr");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Runtime::Native::INativeClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.INativeClient.SetAttribute
void Backtrace::Unity::Runtime::Native::INativeClient::SetAttribute(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::INativeClient::SetAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Runtime::Native::INativeClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.INativeClient.OnOOM
bool Backtrace::Unity::Runtime::Native::INativeClient::OnOOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::INativeClient::OnOOM");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Runtime::Native::INativeClient*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.INativeClient.Update
void Backtrace::Unity::Runtime::Native::INativeClient::Update(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::INativeClient::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Runtime::Native::INativeClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.INativeClient.Disable
void Backtrace::Unity::Runtime::Native::INativeClient::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::INativeClient::Disable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Runtime::Native::INativeClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.INativeClient.PauseAnrThread
void Backtrace::Unity::Runtime::Native::INativeClient::PauseAnrThread(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::INativeClient::PauseAnrThread");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Runtime::Native::INativeClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
