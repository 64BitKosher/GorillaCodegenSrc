// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipMuteState
#include "Oculus/Platform/VoipMuteState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipMuteState Unknown
::Oculus::Platform::VoipMuteState Oculus::Platform::VoipMuteState::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipMuteState::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipMuteState>("Oculus.Platform", "VoipMuteState", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipMuteState Unknown
void Oculus::Platform::VoipMuteState::_set_Unknown(::Oculus::Platform::VoipMuteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipMuteState::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipMuteState", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipMuteState Muted
::Oculus::Platform::VoipMuteState Oculus::Platform::VoipMuteState::_get_Muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipMuteState::_get_Muted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipMuteState>("Oculus.Platform", "VoipMuteState", "Muted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipMuteState Muted
void Oculus::Platform::VoipMuteState::_set_Muted(::Oculus::Platform::VoipMuteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipMuteState::_set_Muted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipMuteState", "Muted", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipMuteState Unmuted
::Oculus::Platform::VoipMuteState Oculus::Platform::VoipMuteState::_get_Unmuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipMuteState::_get_Unmuted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipMuteState>("Oculus.Platform", "VoipMuteState", "Unmuted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipMuteState Unmuted
void Oculus::Platform::VoipMuteState::_set_Unmuted(::Oculus::Platform::VoipMuteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipMuteState::_set_Unmuted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipMuteState", "Unmuted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::VoipMuteState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipMuteState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.VoipOptions
#include "Oculus/Platform/VoipOptions.hpp"
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::VoipOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.VoipOptions.SetBitrateForNewConnections
void Oculus::Platform::VoipOptions::SetBitrateForNewConnections(::Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipOptions::SetBitrateForNewConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBitrateForNewConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.VoipOptions.SetCreateNewConnectionUseDtx
void Oculus::Platform::VoipOptions::SetCreateNewConnectionUseDtx(::Oculus::Platform::VoipDtxState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipOptions::SetCreateNewConnectionUseDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCreateNewConnectionUseDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.VoipOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::VoipOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.VoipOptions.Finalize
void Oculus::Platform::VoipOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipPCMSourceNative
#include "Oculus/Platform/VoipPCMSourceNative.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 senderID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::VoipPCMSourceNative::dyn_senderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipPCMSourceNative::dyn_senderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "senderID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.VoipPCMSourceNative.GetPCM
int Oculus::Platform::VoipPCMSourceNative::GetPCM(::ArrayW<float> dest, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipPCMSourceNative::GetPCM");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::VoipPCMSourceNative*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dest, length);
}
// Autogenerated method: Oculus.Platform.VoipPCMSourceNative.SetSenderID
void Oculus::Platform::VoipPCMSourceNative::SetSenderID(uint64_t senderID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipPCMSourceNative::SetSenderID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::VoipPCMSourceNative*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, senderID);
}
// Autogenerated method: Oculus.Platform.VoipPCMSourceNative.PeekSizeElements
int Oculus::Platform::VoipPCMSourceNative::PeekSizeElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipPCMSourceNative::PeekSizeElements");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::VoipPCMSourceNative*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipPCMSourceNative.Update
void Oculus::Platform::VoipPCMSourceNative::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipPCMSourceNative::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::VoipPCMSourceNative*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipSampleRate
#include "Oculus/Platform/VoipSampleRate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipSampleRate Unknown
::Oculus::Platform::VoipSampleRate Oculus::Platform::VoipSampleRate::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipSampleRate>("Oculus.Platform", "VoipSampleRate", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipSampleRate Unknown
void Oculus::Platform::VoipSampleRate::_set_Unknown(::Oculus::Platform::VoipSampleRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipSampleRate", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipSampleRate HZ24000
::Oculus::Platform::VoipSampleRate Oculus::Platform::VoipSampleRate::_get_HZ24000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_get_HZ24000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipSampleRate>("Oculus.Platform", "VoipSampleRate", "HZ24000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipSampleRate HZ24000
void Oculus::Platform::VoipSampleRate::_set_HZ24000(::Oculus::Platform::VoipSampleRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_set_HZ24000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipSampleRate", "HZ24000", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipSampleRate HZ44100
::Oculus::Platform::VoipSampleRate Oculus::Platform::VoipSampleRate::_get_HZ44100() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_get_HZ44100");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipSampleRate>("Oculus.Platform", "VoipSampleRate", "HZ44100"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipSampleRate HZ44100
void Oculus::Platform::VoipSampleRate::_set_HZ44100(::Oculus::Platform::VoipSampleRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_set_HZ44100");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipSampleRate", "HZ44100", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipSampleRate HZ48000
::Oculus::Platform::VoipSampleRate Oculus::Platform::VoipSampleRate::_get_HZ48000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_get_HZ48000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipSampleRate>("Oculus.Platform", "VoipSampleRate", "HZ48000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipSampleRate HZ48000
void Oculus::Platform::VoipSampleRate::_set_HZ48000(::Oculus::Platform::VoipSampleRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_set_HZ48000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipSampleRate", "HZ48000", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::VoipSampleRate::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.WindowsPlatform
#include "Oculus/Platform/WindowsPlatform.hpp"
// Including type: Oculus.Platform.WindowsPlatform/UnityLogDelegate
#include "Oculus/Platform/WindowsPlatform_UnityLogDelegate.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.WindowsPlatform.CPPLogCallback
void Oculus::Platform::WindowsPlatform::CPPLogCallback(::System::IntPtr tag, ::System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::WindowsPlatform::CPPLogCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CPPLogCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tag, message);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform.getCallbackPointer
::System::IntPtr Oculus::Platform::WindowsPlatform::getCallbackPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::WindowsPlatform::getCallbackPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getCallbackPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform.Initialize
bool Oculus::Platform::WindowsPlatform::Initialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::WindowsPlatform::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform.AsyncInitialize
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::WindowsPlatform::AsyncInitialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::WindowsPlatform::AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>*, false>(this, ___internal__method, appId);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.WindowsPlatform/UnityLogDelegate
#include "Oculus/Platform/WindowsPlatform_UnityLogDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.WindowsPlatform/UnityLogDelegate.Invoke
void Oculus::Platform::WindowsPlatform::UnityLogDelegate::Invoke(::System::IntPtr tag, ::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::WindowsPlatform::UnityLogDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::WindowsPlatform::UnityLogDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tag, msg);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform/UnityLogDelegate.BeginInvoke
::System::IAsyncResult* Oculus::Platform::WindowsPlatform::UnityLogDelegate::BeginInvoke(::System::IntPtr tag, ::System::IntPtr msg, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::WindowsPlatform::UnityLogDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::WindowsPlatform::UnityLogDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, tag, msg, callback, object);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform/UnityLogDelegate.EndInvoke
void Oculus::Platform::WindowsPlatform::UnityLogDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::WindowsPlatform::UnityLogDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::WindowsPlatform::UnityLogDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AbuseReportRecording
#include "Oculus/Platform/Models/AbuseReportRecording.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String RecordingUuid
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AbuseReportRecording::dyn_RecordingUuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AbuseReportRecording::dyn_RecordingUuid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecordingUuid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AchievementDefinition
#include "Oculus/Platform/Models/AchievementDefinition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.AchievementType Type
[[deprecated("Use field access instead!")]] ::Oculus::Platform::AchievementType& Oculus::Platform::Models::AchievementDefinition::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementDefinition::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Oculus::Platform::AchievementType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AchievementDefinition::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementDefinition::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 BitfieldLength
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::AchievementDefinition::dyn_BitfieldLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementDefinition::dyn_BitfieldLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BitfieldLength"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 Target
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AchievementDefinition::dyn_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementDefinition::dyn_Target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Target"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinition
#include "Oculus/Platform/Models/AchievementDefinition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AchievementProgress
#include "Oculus/Platform/Models/AchievementProgress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Bitfield
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AchievementProgress::dyn_Bitfield() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementProgress::dyn_Bitfield");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Bitfield"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 Count
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AchievementProgress::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementProgress::dyn_Count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsUnlocked
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::AchievementProgress::dyn_IsUnlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementProgress::dyn_IsUnlocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsUnlocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AchievementProgress::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementProgress::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime UnlockTime
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::AchievementProgress::dyn_UnlockTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementProgress::dyn_UnlockTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UnlockTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgress
#include "Oculus/Platform/Models/AchievementProgress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean JustUnlocked
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::AchievementUpdate::dyn_JustUnlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementUpdate::dyn_JustUnlocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JustUnlocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AchievementUpdate::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementUpdate::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AppDownloadProgressResult
#include "Oculus/Platform/Models/AppDownloadProgressResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 DownloadBytes
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::AppDownloadProgressResult::dyn_DownloadBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AppDownloadProgressResult::dyn_DownloadBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DownloadBytes"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 DownloadedBytes
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::AppDownloadProgressResult::dyn_DownloadedBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AppDownloadProgressResult::dyn_DownloadedBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DownloadedBytes"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.AppStatus StatusCode
[[deprecated("Use field access instead!")]] ::Oculus::Platform::AppStatus& Oculus::Platform::Models::AppDownloadProgressResult::dyn_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AppDownloadProgressResult::dyn_StatusCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StatusCode"))->offset;
  return *reinterpret_cast<::Oculus::Platform::AppStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AppDownloadResult
#include "Oculus/Platform/Models/AppDownloadResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 Timestamp
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::AppDownloadResult::dyn_Timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AppDownloadResult::dyn_Timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Timestamp"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ApplicationInvite
#include "Oculus/Platform/Models/ApplicationInvite.hpp"
// Including type: Oculus.Platform.Models.Destination
#include "Oculus/Platform/Models/Destination.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Destination DestinationOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Destination*& Oculus::Platform::Models::ApplicationInvite::dyn_DestinationOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationInvite::dyn_DestinationOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Destination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Destination Destination
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Destination*& Oculus::Platform::Models::ApplicationInvite::dyn_Destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationInvite::dyn_Destination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Destination"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Destination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::ApplicationInvite::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationInvite::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsActive
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::ApplicationInvite::dyn_IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationInvite::dyn_IsActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String LobbySessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::ApplicationInvite::dyn_LobbySessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationInvite::dyn_LobbySessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LobbySessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String MatchSessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::ApplicationInvite::dyn_MatchSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationInvite::dyn_MatchSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchSessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User RecipientOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::ApplicationInvite::dyn_RecipientOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationInvite::dyn_RecipientOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecipientOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User Recipient
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::ApplicationInvite::dyn_Recipient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationInvite::dyn_Recipient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Recipient"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ApplicationInviteList
#include "Oculus/Platform/Models/ApplicationInviteList.hpp"
// Including type: Oculus.Platform.Models.ApplicationInvite
#include "Oculus/Platform/Models/ApplicationInvite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 CurrentCode
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::ApplicationVersion::dyn_CurrentCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationVersion::dyn_CurrentCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String CurrentName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::ApplicationVersion::dyn_CurrentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationVersion::dyn_CurrentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 LatestCode
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::ApplicationVersion::dyn_LatestCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationVersion::dyn_LatestCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LatestCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String LatestName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::ApplicationVersion::dyn_LatestName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationVersion::dyn_LatestName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LatestName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 ReleaseDate
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::ApplicationVersion::dyn_ReleaseDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationVersion::dyn_ReleaseDate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReleaseDate"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Size
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::ApplicationVersion::dyn_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationVersion::dyn_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Size"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
// Including type: Oculus.Platform.Models.LanguagePackInfo
#include "Oculus/Platform/Models/LanguagePackInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetDetails::dyn_AssetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_AssetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String AssetType
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetDetails::dyn_AssetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_AssetType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String DownloadStatus
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetDetails::dyn_DownloadStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_DownloadStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DownloadStatus"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Filepath
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetDetails::dyn_Filepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_Filepath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Filepath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String IapStatus
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetDetails::dyn_IapStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_IapStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IapStatus"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.LanguagePackInfo LanguageOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::LanguagePackInfo*& Oculus::Platform::Models::AssetDetails::dyn_LanguageOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_LanguageOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LanguageOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::LanguagePackInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.LanguagePackInfo Language
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::LanguagePackInfo*& Oculus::Platform::Models::AssetDetails::dyn_Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_Language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Language"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::LanguagePackInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Metadata
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetDetails::dyn_Metadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_Metadata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metadata"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetFileId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDeleteResult::dyn_AssetFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDeleteResult::dyn_AssetFileId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetFileId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDeleteResult::dyn_AssetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDeleteResult::dyn_AssetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Filepath
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetFileDeleteResult::dyn_Filepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDeleteResult::dyn_Filepath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Filepath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Success
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::AssetFileDeleteResult::dyn_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDeleteResult::dyn_Success");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Success"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetFileId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_AssetFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_AssetFileId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetFileId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_AssetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_AssetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Filepath
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_Filepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_Filepath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Filepath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Success
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_Success");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Success"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDownloadResult::dyn_AssetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadResult::dyn_AssetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Filepath
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetFileDownloadResult::dyn_Filepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadResult::dyn_Filepath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Filepath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetFileId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_AssetFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_AssetFileId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetFileId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_AssetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_AssetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 BytesTotal
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_BytesTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_BytesTotal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BytesTotal"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 BytesTransferred
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_BytesTransferred() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_BytesTransferred");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BytesTransferred"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Completed
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_Completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Completed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AvatarEditorResult
#include "Oculus/Platform/Models/AvatarEditorResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean RequestSent
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::AvatarEditorResult::dyn_RequestSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AvatarEditorResult::dyn_RequestSent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequestSent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.BlockedUser
#include "Oculus/Platform/Models/BlockedUser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 Id
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::BlockedUser::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::BlockedUser::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.BlockedUserList
#include "Oculus/Platform/Models/BlockedUserList.hpp"
// Including type: Oculus.Platform.Models.BlockedUser
#include "Oculus/Platform/Models/BlockedUser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.Leaderboard
#include "Oculus/Platform/Models/Leaderboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.ChallengeCreationType CreationType
[[deprecated("Use field access instead!")]] ::Oculus::Platform::ChallengeCreationType& Oculus::Platform::Models::Challenge::dyn_CreationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_CreationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CreationType"))->offset;
  return *reinterpret_cast<::Oculus::Platform::ChallengeCreationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Description
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Challenge::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime EndDate
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::Challenge::dyn_EndDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_EndDate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EndDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::Challenge::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Challenge::dyn_InvitedUsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_InvitedUsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Challenge::dyn_InvitedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_InvitedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Leaderboard Leaderboard
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Leaderboard*& Oculus::Platform::Models::Challenge::dyn_Leaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_Leaderboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Leaderboard"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Leaderboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList ParticipantsOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Challenge::dyn_ParticipantsOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_ParticipantsOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ParticipantsOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList Participants
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Challenge::dyn_Participants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_Participants");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Participants"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime StartDate
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::Challenge::dyn_StartDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_StartDate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Title
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Challenge::dyn_Title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_Title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Title"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.ChallengeVisibility Visibility
[[deprecated("Use field access instead!")]] ::Oculus::Platform::ChallengeVisibility& Oculus::Platform::Models::Challenge::dyn_Visibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_Visibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Visibility"))->offset;
  return *reinterpret_cast<::Oculus::Platform::ChallengeVisibility*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 TotalCount
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::ChallengeList::dyn_TotalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeList::dyn_TotalCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalCount"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ChallengeEntry
#include "Oculus/Platform/Models/ChallengeEntry.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DisplayScore
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::ChallengeEntry::dyn_DisplayScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeEntry::dyn_DisplayScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayScore"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] ExtraData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Oculus::Platform::Models::ChallengeEntry::dyn_ExtraData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeEntry::dyn_ExtraData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::ChallengeEntry::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeEntry::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Rank
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::ChallengeEntry::dyn_Rank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeEntry::dyn_Rank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rank"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 Score
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::ChallengeEntry::dyn_Score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeEntry::dyn_Score");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Score"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime Timestamp
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::ChallengeEntry::dyn_Timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeEntry::dyn_Timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Timestamp"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User User
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::ChallengeEntry::dyn_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeEntry::dyn_User");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "User"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ChallengeEntryList
#include "Oculus/Platform/Models/ChallengeEntryList.hpp"
// Including type: Oculus.Platform.Models.ChallengeEntry
#include "Oculus/Platform/Models/ChallengeEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 TotalCount
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::ChallengeEntryList::dyn_TotalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeEntryList::dyn_TotalCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalCount"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Destination
#include "Oculus/Platform/Models/Destination.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String ApiName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Destination::dyn_ApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Destination::dyn_ApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String DeeplinkMessage
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Destination::dyn_DeeplinkMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Destination::dyn_DeeplinkMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeeplinkMessage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String DisplayName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Destination::dyn_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Destination::dyn_DisplayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.Models.Destination
#include "Oculus/Platform/Models/Destination.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Error
#include "Oculus/Platform/Models/Error.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Code
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::Error::dyn_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Error::dyn_Code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Code"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 HttpCode
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::Error::dyn_HttpCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Error::dyn_HttpCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HttpCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Message
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Error::dyn_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Error::dyn_Message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.GroupPresenceJoinIntent
#include "Oculus/Platform/Models/GroupPresenceJoinIntent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DeeplinkMessage
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_DeeplinkMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_DeeplinkMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeeplinkMessage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String DestinationApiName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_DestinationApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_DestinationApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String LobbySessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_LobbySessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_LobbySessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LobbySessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String MatchSessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_MatchSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_MatchSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchSessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.GroupPresenceLeaveIntent
#include "Oculus/Platform/Models/GroupPresenceLeaveIntent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DestinationApiName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::GroupPresenceLeaveIntent::dyn_DestinationApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::GroupPresenceLeaveIntent::dyn_DestinationApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String LobbySessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::GroupPresenceLeaveIntent::dyn_LobbySessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::GroupPresenceLeaveIntent::dyn_LobbySessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LobbySessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String MatchSessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::GroupPresenceLeaveIntent::dyn_MatchSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::GroupPresenceLeaveIntent::dyn_MatchSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchSessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.HttpTransferUpdate
#include "Oculus/Platform/Models/HttpTransferUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::HttpTransferUpdate::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::HttpTransferUpdate::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] Payload
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Oculus::Platform::Models::HttpTransferUpdate::dyn_Payload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::HttpTransferUpdate::dyn_Payload");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Payload"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsCompleted
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::HttpTransferUpdate::dyn_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::HttpTransferUpdate::dyn_IsCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsCompleted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.InstalledApplication
#include "Oculus/Platform/Models/InstalledApplication.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String ApplicationId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::InstalledApplication::dyn_ApplicationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::InstalledApplication::dyn_ApplicationId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApplicationId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PackageName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::InstalledApplication::dyn_PackageName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::InstalledApplication::dyn_PackageName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PackageName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Status
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::InstalledApplication::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::InstalledApplication::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 VersionCode
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::InstalledApplication::dyn_VersionCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::InstalledApplication::dyn_VersionCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String VersionName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::InstalledApplication::dyn_VersionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::InstalledApplication::dyn_VersionName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.InstalledApplicationList
#include "Oculus/Platform/Models/InstalledApplicationList.hpp"
// Including type: Oculus.Platform.Models.InstalledApplication
#include "Oculus/Platform/Models/InstalledApplication.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.InvitePanelResultInfo
#include "Oculus/Platform/Models/InvitePanelResultInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean InvitesSent
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::InvitePanelResultInfo::dyn_InvitesSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::InvitePanelResultInfo::dyn_InvitesSent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitesSent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LanguagePackInfo
#include "Oculus/Platform/Models/LanguagePackInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String EnglishName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LanguagePackInfo::dyn_EnglishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LanguagePackInfo::dyn_EnglishName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnglishName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String NativeName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LanguagePackInfo::dyn_NativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LanguagePackInfo::dyn_NativeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NativeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Tag
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LanguagePackInfo::dyn_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LanguagePackInfo::dyn_Tag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tag"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchBlockFlowResult
#include "Oculus/Platform/Models/LaunchBlockFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidBlock
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LaunchBlockFlowResult::dyn_DidBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchBlockFlowResult::dyn_DidBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidBlock"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidCancel
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LaunchBlockFlowResult::dyn_DidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchBlockFlowResult::dyn_DidCancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidCancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchDetails
#include "Oculus/Platform/Models/LaunchDetails.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DeeplinkMessage
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LaunchDetails::dyn_DeeplinkMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchDetails::dyn_DeeplinkMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeeplinkMessage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String DestinationApiName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LaunchDetails::dyn_DestinationApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchDetails::dyn_DestinationApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String LaunchSource
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LaunchDetails::dyn_LaunchSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchDetails::dyn_LaunchSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LaunchSource"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.LaunchType LaunchType
[[deprecated("Use field access instead!")]] ::Oculus::Platform::LaunchType& Oculus::Platform::Models::LaunchDetails::dyn_LaunchType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchDetails::dyn_LaunchType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LaunchType"))->offset;
  return *reinterpret_cast<::Oculus::Platform::LaunchType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String TrackingID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LaunchDetails::dyn_TrackingID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchDetails::dyn_TrackingID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList UsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::LaunchDetails::dyn_UsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchDetails::dyn_UsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList Users
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::LaunchDetails::dyn_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchDetails::dyn_Users");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Users"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidCancel
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LaunchFriendRequestFlowResult::dyn_DidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchFriendRequestFlowResult::dyn_DidCancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidCancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidSendRequest
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LaunchFriendRequestFlowResult::dyn_DidSendRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchFriendRequestFlowResult::dyn_DidSendRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidSendRequest"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchInvitePanelFlowResult
#include "Oculus/Platform/Models/LaunchInvitePanelFlowResult.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::LaunchInvitePanelFlowResult::dyn_InvitedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchInvitePanelFlowResult::dyn_InvitedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchReportFlowResult
#include "Oculus/Platform/Models/LaunchReportFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidCancel
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LaunchReportFlowResult::dyn_DidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchReportFlowResult::dyn_DidCancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidCancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserReportId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::LaunchReportFlowResult::dyn_UserReportId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchReportFlowResult::dyn_UserReportId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserReportId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchUnblockFlowResult
#include "Oculus/Platform/Models/LaunchUnblockFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidCancel
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LaunchUnblockFlowResult::dyn_DidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchUnblockFlowResult::dyn_DidCancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidCancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidUnblock
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LaunchUnblockFlowResult::dyn_DidUnblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchUnblockFlowResult::dyn_DidUnblock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidUnblock"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Leaderboard
#include "Oculus/Platform/Models/Leaderboard.hpp"
// Including type: Oculus.Platform.Models.Destination
#include "Oculus/Platform/Models/Destination.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String ApiName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Leaderboard::dyn_ApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Leaderboard::dyn_ApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Destination DestinationOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Destination*& Oculus::Platform::Models::Leaderboard::dyn_DestinationOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Leaderboard::dyn_DestinationOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Destination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Destination Destination
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Destination*& Oculus::Platform::Models::Leaderboard::dyn_Destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Leaderboard::dyn_Destination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Destination"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Destination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::Leaderboard::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Leaderboard::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LeaderboardList
#include "Oculus/Platform/Models/LeaderboardList.hpp"
// Including type: Oculus.Platform.Models.Leaderboard
#include "Oculus/Platform/Models/Leaderboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
// Including type: Oculus.Platform.Models.SupplementaryMetric
#include "Oculus/Platform/Models/SupplementaryMetric.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DisplayScore
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LeaderboardEntry::dyn_DisplayScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_DisplayScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayScore"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] ExtraData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Oculus::Platform::Models::LeaderboardEntry::dyn_ExtraData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_ExtraData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::LeaderboardEntry::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Rank
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::LeaderboardEntry::dyn_Rank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_Rank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rank"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 Score
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::LeaderboardEntry::dyn_Score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_Score");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Score"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.SupplementaryMetric SupplementaryMetricOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::SupplementaryMetric*& Oculus::Platform::Models::LeaderboardEntry::dyn_SupplementaryMetricOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_SupplementaryMetricOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SupplementaryMetricOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::SupplementaryMetric**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.SupplementaryMetric SupplementaryMetric
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::SupplementaryMetric*& Oculus::Platform::Models::LeaderboardEntry::dyn_SupplementaryMetric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_SupplementaryMetric");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SupplementaryMetric"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::SupplementaryMetric**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime Timestamp
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::LeaderboardEntry::dyn_Timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_Timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Timestamp"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User User
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::LeaderboardEntry::dyn_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_User");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "User"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 TotalCount
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::LeaderboardEntryList::dyn_TotalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntryList::dyn_TotalCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalCount"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LinkedAccount
#include "Oculus/Platform/Models/LinkedAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String AccessToken
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LinkedAccount::dyn_AccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LinkedAccount::dyn_AccessToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AccessToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.ServiceProvider ServiceProvider
[[deprecated("Use field access instead!")]] ::Oculus::Platform::ServiceProvider& Oculus::Platform::Models::LinkedAccount::dyn_ServiceProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LinkedAccount::dyn_ServiceProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServiceProvider"))->offset;
  return *reinterpret_cast<::Oculus::Platform::ServiceProvider*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UserId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LinkedAccount::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LinkedAccount::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LinkedAccountList
#include "Oculus/Platform/Models/LinkedAccountList.hpp"
// Including type: Oculus.Platform.Models.LinkedAccount
#include "Oculus/Platform/Models/LinkedAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingApplicationStatus
#include "Oculus/Platform/Models/LivestreamingApplicationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean StreamingEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingApplicationStatus::dyn_StreamingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingApplicationStatus::dyn_StreamingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StreamingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingStartResult
#include "Oculus/Platform/Models/LivestreamingStartResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.LivestreamingStartStatus StreamingResult
[[deprecated("Use field access instead!")]] ::Oculus::Platform::LivestreamingStartStatus& Oculus::Platform::Models::LivestreamingStartResult::dyn_StreamingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStartResult::dyn_StreamingResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StreamingResult"))->offset;
  return *reinterpret_cast<::Oculus::Platform::LivestreamingStartStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean CommentsVisible
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_CommentsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_CommentsVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CommentsVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsPaused
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_IsPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_IsPaused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPaused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean LivestreamingEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LivestreamingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 LivestreamingType
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LivestreamingType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean MicEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_MicEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_MicEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MicEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingVideoStats
#include "Oculus/Platform/Models/LivestreamingVideoStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 CommentCount
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::LivestreamingVideoStats::dyn_CommentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingVideoStats::dyn_CommentCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CommentCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 ReactionCount
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::LivestreamingVideoStats::dyn_ReactionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingVideoStats::dyn_ReactionCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReactionCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String TotalViews
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LivestreamingVideoStats::dyn_TotalViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingVideoStats::dyn_TotalViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalViews"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MicrophoneAvailabilityState
#include "Oculus/Platform/Models/MicrophoneAvailabilityState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean MicrophoneAvailable
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::MicrophoneAvailabilityState::dyn_MicrophoneAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MicrophoneAvailabilityState::dyn_MicrophoneAvailable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MicrophoneAvailable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 ConnectionId
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::NetSyncConnection::dyn_ConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_ConnectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionId"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.NetSyncDisconnectReason DisconnectReason
[[deprecated("Use field access instead!")]] ::Oculus::Platform::NetSyncDisconnectReason& Oculus::Platform::Models::NetSyncConnection::dyn_DisconnectReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_DisconnectReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisconnectReason"))->offset;
  return *reinterpret_cast<::Oculus::Platform::NetSyncDisconnectReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SessionId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::NetSyncConnection::dyn_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_SessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.NetSyncConnectionStatus Status
[[deprecated("Use field access instead!")]] ::Oculus::Platform::NetSyncConnectionStatus& Oculus::Platform::Models::NetSyncConnection::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::NetSyncConnectionStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ZoneId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::NetSyncConnection::dyn_ZoneId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_ZoneId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ZoneId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 ConnectionId
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::NetSyncSession::dyn_ConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_ConnectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionId"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Muted
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::NetSyncSession::dyn_Muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_Muted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Muted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SessionId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::NetSyncSession::dyn_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_SessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::NetSyncSession::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String VoipGroup
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::NetSyncSession::dyn_VoipGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_VoipGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VoipGroup"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 ConnectionId
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_ConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_ConnectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionId"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.NetSyncSessionList Sessions
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::NetSyncSessionList*& Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_Sessions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_Sessions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sessions"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::NetSyncSessionList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSetSessionPropertyResult
#include "Oculus/Platform/Models/NetSyncSetSessionPropertyResult.hpp"
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.NetSyncSession Session
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::NetSyncSession*& Oculus::Platform::Models::NetSyncSetSessionPropertyResult::dyn_Session() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSetSessionPropertyResult::dyn_Session");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Session"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::NetSyncSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValue
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single Decibels
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Decibels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Decibels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Decibels"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single Distance
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValueList
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValueList.hpp"
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValue
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::OrgScopedID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::OrgScopedID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::Party::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_InvitedUsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_InvitedUsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_InvitedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_InvitedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User LeaderOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Party::dyn_LeaderOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_LeaderOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeaderOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User Leader
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Party::dyn_Leader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_Leader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Leader"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList UsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_UsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_UsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList Users
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_Users");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Users"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PartyID
#include "Oculus/Platform/Models/PartyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.PartyUpdateAction Action
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PartyUpdateAction& Oculus::Platform::Models::PartyUpdateNotification::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_Action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PartyUpdateAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 PartyId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyUpdateNotification::dyn_PartyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_PartyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PartyId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SenderId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyUpdateNotification::dyn_SenderId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_SenderId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SenderId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UpdateTimestamp
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::PartyUpdateNotification::dyn_UpdateTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UpdateTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateTimestamp"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UserAlias
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::PartyUpdateNotification::dyn_UserAlias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UserAlias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserAlias"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyUpdateNotification::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UserName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::PartyUpdateNotification::dyn_UserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UserName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Pid
#include "Oculus/Platform/Models/Pid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Id
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Pid::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Pid::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PidList
#include "Oculus/Platform/Models/PidList.hpp"
// Including type: Oculus.Platform.Models.Pid
#include "Oculus/Platform/Models/Pid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 <ID>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PingResult::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.UInt64> pingTimeUsec
[[deprecated("Use field access instead!")]] ::System::Nullable_1<uint64_t>& Oculus::Platform::Models::PingResult::dyn_pingTimeUsec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::dyn_pingTimeUsec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingTimeUsec"))->offset;
  return *reinterpret_cast<::System::Nullable_1<uint64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_ID
uint64_t Oculus::Platform::Models::PingResult::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.set_ID
void Oculus::Platform::Models::PingResult::set_ID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::set_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_PingTimeUsec
uint64_t Oculus::Platform::Models::PingResult::get_PingTimeUsec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::get_PingTimeUsec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PingTimeUsec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_IsTimeout
bool Oculus::Platform::Models::PingResult::get_IsTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::get_IsTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.PlatformInitializeResult Result
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PlatformInitializeResult& Oculus::Platform::Models::PlatformInitialize::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PlatformInitialize::dyn_Result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PlatformInitializeResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Product
#include "Oculus/Platform/Models/Product.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Description
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String FormattedPrice
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_FormattedPrice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_FormattedPrice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FormattedPrice"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Sku
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_Sku() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_Sku");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sku"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.Product
#include "Oculus/Platform/Models/Product.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DeveloperPayload
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Purchase::dyn_DeveloperPayload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_DeveloperPayload");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeveloperPayload"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime ExpirationTime
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::Purchase::dyn_ExpirationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_ExpirationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpirationTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime GrantTime
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::Purchase::dyn_GrantTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_GrantTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GrantTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Purchase::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ReportingId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Purchase::dyn_ReportingId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_ReportingId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReportingId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Sku
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Purchase::dyn_Sku() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_Sku");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sku"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RejoinDialogResult
#include "Oculus/Platform/Models/RejoinDialogResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean RejoinSelected
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::RejoinDialogResult::dyn_RejoinSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RejoinDialogResult::dyn_RejoinSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RejoinSelected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.SdkAccountType AccountType
[[deprecated("Use field access instead!")]] ::Oculus::Platform::SdkAccountType& Oculus::Platform::Models::SdkAccount::dyn_AccountType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SdkAccount::dyn_AccountType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AccountType"))->offset;
  return *reinterpret_cast<::Oculus::Platform::SdkAccountType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::SdkAccount::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SdkAccount::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SendInvitesResult
#include "Oculus/Platform/Models/SendInvitesResult.hpp"
// Including type: Oculus.Platform.Models.ApplicationInviteList
#include "Oculus/Platform/Models/ApplicationInviteList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.ApplicationInviteList Invites
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::ApplicationInviteList*& Oculus::Platform::Models::SendInvitesResult::dyn_Invites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SendInvitesResult::dyn_Invites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Invites"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::ApplicationInviteList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.ShareMediaStatus Status
[[deprecated("Use field access instead!")]] ::Oculus::Platform::ShareMediaStatus& Oculus::Platform::Models::ShareMediaResult::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ShareMediaResult::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::ShareMediaStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SupplementaryMetric
#include "Oculus/Platform/Models/SupplementaryMetric.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::SupplementaryMetric::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SupplementaryMetric::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 Metric
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::SupplementaryMetric::dyn_Metric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SupplementaryMetric::dyn_Metric");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metric"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.VoipMuteState MicrophoneMuted
[[deprecated("Use field access instead!")]] ::Oculus::Platform::VoipMuteState& Oculus::Platform::Models::SystemVoipState::dyn_MicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemVoipState::dyn_MicrophoneMuted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MicrophoneMuted"))->offset;
  return *reinterpret_cast<::Oculus::Platform::VoipMuteState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.SystemVoipStatus Status
[[deprecated("Use field access instead!")]] ::Oculus::Platform::SystemVoipStatus& Oculus::Platform::Models::SystemVoipState::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemVoipState::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::SystemVoipStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DisplayName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_DisplayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::User::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ImageURL
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_ImageURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_ImageURL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ImageURL"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String OculusID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_OculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_OculusID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OculusID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Presence
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_Presence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_Presence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Presence"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceDeeplinkMessage
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceDeeplinkMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceDeeplinkMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceDeeplinkMessage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceDestinationApiName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceDestinationApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceDestinationApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceDestinationApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceLobbySessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceLobbySessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceLobbySessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceLobbySessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceMatchSessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceMatchSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceMatchSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceMatchSessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.UserPresenceStatus PresenceStatus
[[deprecated("Use field access instead!")]] ::Oculus::Platform::UserPresenceStatus& Oculus::Platform::Models::User::dyn_PresenceStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceStatus"))->offset;
  return *reinterpret_cast<::Oculus::Platform::UserPresenceStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String SmallImageUrl
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_SmallImageUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_SmallImageUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SmallImageUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserAccountAgeCategory
#include "Oculus/Platform/Models/UserAccountAgeCategory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.AccountAgeCategory AgeCategory
[[deprecated("Use field access instead!")]] ::Oculus::Platform::AccountAgeCategory& Oculus::Platform::Models::UserAccountAgeCategory::dyn_AgeCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAccountAgeCategory::dyn_AgeCategory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AgeCategory"))->offset;
  return *reinterpret_cast<::Oculus::Platform::AccountAgeCategory*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserCapability
#include "Oculus/Platform/Models/UserCapability.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Description
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::UserCapability::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserCapability::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::UserCapability::dyn_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserCapability::dyn_IsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::UserCapability::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserCapability::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ReasonCode
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::UserCapability::dyn_ReasonCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserCapability::dyn_ReasonCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReasonCode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserCapabilityList
#include "Oculus/Platform/Models/UserCapabilityList.hpp"
// Including type: Oculus.Platform.Models.UserCapability
#include "Oculus/Platform/Models/UserCapability.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserDataStoreUpdateResponse
#include "Oculus/Platform/Models/UserDataStoreUpdateResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Success
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::UserDataStoreUpdateResponse::dyn_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserDataStoreUpdateResponse::dyn_Success");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Success"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Value
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::UserProof::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserProof::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidCancel
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::UserReportID::dyn_DidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserReportID::dyn_DidCancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidCancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::UserReportID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserReportID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.SimplePlatformSample.DataEntry
#include "Oculus/Platform/Samples/SimplePlatformSample/DataEntry.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text dataOutput
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::SimplePlatformSample::DataEntry::dyn_dataOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::dyn_dataOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataOutput"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.Start
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.Update
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.SubmitCommand
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::SubmitCommand(::StringW command) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::SubmitCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(command)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, command);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getLeaderboardEntries
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLeaderboardEntries(::StringW leaderboardName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLeaderboardEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getLeaderboardEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardName);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.writeLeaderboardEntry
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::writeLeaderboardEntry(::StringW leaderboardName, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::writeLeaderboardEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "writeLeaderboardEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardName, value);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.addFieldsAchievement
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::addFieldsAchievement(::StringW achievementName, ::StringW fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::addFieldsAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "addFieldsAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementName), ::il2cpp_utils::ExtractType(fields)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievementName, fields);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.addCountAchievement
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::addCountAchievement(::StringW achievementName, ::StringW count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::addCountAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "addCountAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementName), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievementName, count);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.unlockAchievement
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::unlockAchievement(::StringW achievementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::unlockAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "unlockAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievementName);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getAchievementProgress
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getAchievementProgress(::StringW achievementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getAchievementProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getAchievementProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievementName);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getAchievementDefinition
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getAchievementDefinition(::StringW achievementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getAchievementDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getAchievementDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievementName);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.checkEntitlement
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::checkEntitlement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::checkEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getUserNonce
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUserNonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUserNonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getUserNonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getLoggedInUser
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getUser
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUser(::StringW userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getLoggedInFriends
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLoggedInFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLoggedInFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getLoggedInFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.printOutputLine
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::printOutputLine(::StringW newLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::printOutputLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "printOutputLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newLine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newLine);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.outputUserArray
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::outputUserArray(::Oculus::Platform::Models::UserList* users) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::outputUserArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "outputUserArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(users)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, users);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.userProofCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::userProofCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::UserProof*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::userProofCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "userProofCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getEntitlementCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getEntitlementCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getEntitlementCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getEntitlementCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.leaderboardGetCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaderboardGetCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaderboardGetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "leaderboardGetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.leaderboardWriteCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaderboardWriteCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaderboardWriteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "leaderboardWriteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.achievementFieldsCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementFieldsCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementFieldsCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "achievementFieldsCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.achievementCountCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementCountCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementCountCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "achievementCountCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.achievementUnlockCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementUnlockCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementUnlockCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "achievementUnlockCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.achievementProgressCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementProgressCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::AchievementProgressList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementProgressCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "achievementProgressCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.achievementDefinitionCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementDefinitionCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::AchievementDefinitionList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementDefinitionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "achievementDefinitionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getUserCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUserCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUserCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getUserCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getFriendsCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getFriendsCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::UserList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getFriendsCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getFriendsCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck
#include "Oculus/Platform/Samples/EntitlementCheck/EntitlementCheck.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action UserFailedEntitlementCheck
::System::Action* Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_get_UserFailedEntitlementCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_get_UserFailedEntitlementCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "UserFailedEntitlementCheck"));
}
// Autogenerated static field setter
// Set static field: static private System.Action UserFailedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_set_UserFailedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_set_UserFailedEntitlementCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "UserFailedEntitlementCheck", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action UserPassedEntitlementCheck
::System::Action* Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_get_UserPassedEntitlementCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_get_UserPassedEntitlementCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "UserPassedEntitlementCheck"));
}
// Autogenerated static field setter
// Set static field: static private System.Action UserPassedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_set_UserPassedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_set_UserPassedEntitlementCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "UserPassedEntitlementCheck", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean exitAppOnFailure
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::dyn_exitAppOnFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::dyn_exitAppOnFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exitAppOnFailure"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.add_UserFailedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::add_UserFailedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::add_UserFailedEntitlementCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "add_UserFailedEntitlementCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.remove_UserFailedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::remove_UserFailedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::remove_UserFailedEntitlementCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "remove_UserFailedEntitlementCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.add_UserPassedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::add_UserPassedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::add_UserPassedEntitlementCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "add_UserPassedEntitlementCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.remove_UserPassedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::remove_UserPassedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::remove_UserPassedEntitlementCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "remove_UserPassedEntitlementCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.Start
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.EntitlementCheckCallback
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::EntitlementCheckCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::EntitlementCheckCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EntitlementCheckCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.HandleEntitlementCheckResult
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::HandleEntitlementCheckResult(bool result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::HandleEntitlementCheckResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEntitlementCheckResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MouseLook
#include "GlobalNamespace/MouseLook.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MouseLook/RotationAxes axes
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MouseLook::RotationAxes& GlobalNamespace::MouseLook::dyn_axes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_axes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axes"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MouseLook::RotationAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sensitivityX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_sensitivityX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_sensitivityX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sensitivityX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sensitivityY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_sensitivityY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_sensitivityY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sensitivityY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minimumX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_minimumX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_minimumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maximumX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_maximumX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_maximumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maximumX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minimumY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_minimumY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_minimumY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maximumY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_maximumY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_maximumY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maximumY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_rotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_rotationY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MouseLook.Update
void GlobalNamespace::MouseLook::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MouseLook.Start
void GlobalNamespace::MouseLook::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MouseLook/RotationAxes
#include "GlobalNamespace/MouseLook.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MouseLook/RotationAxes MouseXAndY
::GlobalNamespace::MouseLook::RotationAxes GlobalNamespace::MouseLook::RotationAxes::_get_MouseXAndY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_get_MouseXAndY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MouseLook::RotationAxes>("", "MouseLook/RotationAxes", "MouseXAndY"));
}
// Autogenerated static field setter
// Set static field: static public MouseLook/RotationAxes MouseXAndY
void GlobalNamespace::MouseLook::RotationAxes::_set_MouseXAndY(::GlobalNamespace::MouseLook::RotationAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_set_MouseXAndY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MouseLook/RotationAxes", "MouseXAndY", value));
}
// Autogenerated static field getter
// Get static field: static public MouseLook/RotationAxes MouseX
::GlobalNamespace::MouseLook::RotationAxes GlobalNamespace::MouseLook::RotationAxes::_get_MouseX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_get_MouseX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MouseLook::RotationAxes>("", "MouseLook/RotationAxes", "MouseX"));
}
// Autogenerated static field setter
// Set static field: static public MouseLook/RotationAxes MouseX
void GlobalNamespace::MouseLook::RotationAxes::_set_MouseX(::GlobalNamespace::MouseLook::RotationAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_set_MouseX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MouseLook/RotationAxes", "MouseX", value));
}
// Autogenerated static field getter
// Get static field: static public MouseLook/RotationAxes MouseY
::GlobalNamespace::MouseLook::RotationAxes GlobalNamespace::MouseLook::RotationAxes::_get_MouseY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_get_MouseY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MouseLook::RotationAxes>("", "MouseLook/RotationAxes", "MouseY"));
}
// Autogenerated static field setter
// Set static field: static public MouseLook/RotationAxes MouseY
void GlobalNamespace::MouseLook::RotationAxes::_set_MouseY(::GlobalNamespace::MouseLook::RotationAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_set_MouseY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MouseLook/RotationAxes", "MouseY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MouseLook::RotationAxes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPReflectionZone
#include "GlobalNamespace/ONSPReflectionZone.hpp"
// Including type: UnityEngine.Audio.AudioMixerSnapshot
#include "UnityEngine/Audio/AudioMixerSnapshot.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Stack`1<ReflectionSnapshot> snapshotList
::System::Collections::Generic::Stack_1<::GlobalNamespace::ReflectionSnapshot>* GlobalNamespace::ONSPReflectionZone::_get_snapshotList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_get_snapshotList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Stack_1<::GlobalNamespace::ReflectionSnapshot>*>("", "ONSPReflectionZone", "snapshotList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Stack`1<ReflectionSnapshot> snapshotList
void GlobalNamespace::ONSPReflectionZone::_set_snapshotList(::System::Collections::Generic::Stack_1<::GlobalNamespace::ReflectionSnapshot>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_set_snapshotList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPReflectionZone", "snapshotList", value));
}
// Autogenerated static field getter
// Get static field: static private ReflectionSnapshot currentSnapshot
::GlobalNamespace::ReflectionSnapshot GlobalNamespace::ONSPReflectionZone::_get_currentSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_get_currentSnapshot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ReflectionSnapshot>("", "ONSPReflectionZone", "currentSnapshot"));
}
// Autogenerated static field setter
// Set static field: static private ReflectionSnapshot currentSnapshot
void GlobalNamespace::ONSPReflectionZone::_set_currentSnapshot(::GlobalNamespace::ReflectionSnapshot value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_set_currentSnapshot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPReflectionZone", "currentSnapshot", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerSnapshot mixerSnapshot
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerSnapshot*& GlobalNamespace::ONSPReflectionZone::dyn_mixerSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::dyn_mixerSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixerSnapshot"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPReflectionZone::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPReflectionZone.Start
void GlobalNamespace::ONSPReflectionZone::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.Update
void GlobalNamespace::ONSPReflectionZone::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.OnTriggerEnter
void GlobalNamespace::ONSPReflectionZone::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: ONSPReflectionZone.OnTriggerExit
void GlobalNamespace::ONSPReflectionZone::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: ONSPReflectionZone.CheckForAudioListener
bool GlobalNamespace::ONSPReflectionZone::CheckForAudioListener(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::CheckForAudioListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForAudioListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: ONSPReflectionZone.PushCurrentMixerShapshot
void GlobalNamespace::ONSPReflectionZone::PushCurrentMixerShapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::PushCurrentMixerShapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushCurrentMixerShapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.PopCurrentMixerSnapshot
void GlobalNamespace::ONSPReflectionZone::PopCurrentMixerSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::PopCurrentMixerSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopCurrentMixerSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.SetReflectionValues
void GlobalNamespace::ONSPReflectionZone::SetReflectionValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::SetReflectionValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReflectionValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.SetReflectionValues
void GlobalNamespace::ONSPReflectionZone::SetReflectionValues(ByRef<::GlobalNamespace::ReflectionSnapshot> mss) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::SetReflectionValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReflectionValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mss)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(mss));
}
// Autogenerated method: ONSPReflectionZone..cctor
void GlobalNamespace::ONSPReflectionZone::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPReflectionZone", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OculusSpatializerUnity
#include "GlobalNamespace/OculusSpatializerUnity.hpp"
// Including type: OculusSpatializerUnity/AudioRaycastCallback
#include "GlobalNamespace/OculusSpatializerUnity_AudioRaycastCallback.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 HIT_COUNT
int GlobalNamespace::OculusSpatializerUnity::_get_HIT_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_get_HIT_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OculusSpatializerUnity", "HIT_COUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 HIT_COUNT
void GlobalNamespace::OculusSpatializerUnity::_set_HIT_COUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_set_HIT_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusSpatializerUnity", "HIT_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.LayerMask gLayerMask
::UnityEngine::LayerMask GlobalNamespace::OculusSpatializerUnity::_get_gLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_get_gLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::LayerMask>("", "OculusSpatializerUnity", "gLayerMask"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.LayerMask gLayerMask
void GlobalNamespace::OculusSpatializerUnity::_set_gLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_set_gLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusSpatializerUnity", "gLayerMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.String strOSP
::StringW GlobalNamespace::OculusSpatializerUnity::_get_strOSP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_get_strOSP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusSpatializerUnity", "strOSP"));
}
// Autogenerated static field setter
// Set static field: static private System.String strOSP
void GlobalNamespace::OculusSpatializerUnity::_set_strOSP(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_set_strOSP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusSpatializerUnity", "strOSP", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask layerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::OculusSpatializerUnity::dyn_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_layerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean visualizeRoom
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusSpatializerUnity::dyn_visualizeRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_visualizeRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visualizeRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean roomVisualizationInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusSpatializerUnity::dyn_roomVisualizationInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_roomVisualizationInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomVisualizationInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 raysPerSecond
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusSpatializerUnity::dyn_raysPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_raysPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raysPerSecond"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single roomInterpSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_roomInterpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_roomInterpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomInterpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxWallDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_maxWallDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_maxWallDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxWallDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 rayCacheSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusSpatializerUnity::dyn_rayCacheSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_rayCacheSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayCacheSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean dynamicReflectionsEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusSpatializerUnity::dyn_dynamicReflectionsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_dynamicReflectionsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dynamicReflectionsEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single particleSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_particleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_particleSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single particleOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_particleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_particleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject room
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OculusSpatializerUnity::dyn_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "room"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer[] wallRenderer
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Renderer*>& GlobalNamespace::OculusSpatializerUnity::dyn_wallRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_wallRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallRenderer"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Renderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] dims
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OculusSpatializerUnity::dyn_dims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_dims");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dims"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] coefs
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OculusSpatializerUnity::dyn_coefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_coefs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coefs"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] points
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::OculusSpatializerUnity::dyn_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "points"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] normals
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::OculusSpatializerUnity::dyn_normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_normals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normals"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem sys
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::OculusSpatializerUnity::dyn_sys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_sys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sys"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/Particle[] particles
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ParticleSystem::Particle>& GlobalNamespace::OculusSpatializerUnity::dyn_particles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_particles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particles"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ParticleSystem::Particle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSpatializerUnity.swapHandedness
::UnityEngine::Vector3 GlobalNamespace::OculusSpatializerUnity::swapHandedness(::UnityEngine::Vector3 vec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::swapHandedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "swapHandedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vec)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vec);
}
// Autogenerated method: OculusSpatializerUnity.AudioRaycast
void GlobalNamespace::OculusSpatializerUnity::AudioRaycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "AudioRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(point), byref(normal), data);
}
// Autogenerated method: OculusSpatializerUnity.Start
void GlobalNamespace::OculusSpatializerUnity::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.OnDestroy
void GlobalNamespace::OculusSpatializerUnity::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.Update
void GlobalNamespace::OculusSpatializerUnity::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.inititalizeRoomVisualization
void GlobalNamespace::OculusSpatializerUnity::inititalizeRoomVisualization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::inititalizeRoomVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "inititalizeRoomVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_AssignRaycastCallback
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback* callback, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_AssignRaycastCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, data);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_AssignRaycastCallback
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback(::System::IntPtr callback, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_AssignRaycastCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, data);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomRaysPerSecond
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomRaysPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(RaysPerSecond)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, RaysPerSecond);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomInterpSpeed
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomInterpSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomInterpSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(InterpSpeed)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, InterpSpeed);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomMaxWallDistance
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomMaxWallDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomMaxWallDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(MaxWallDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, MaxWallDistance);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomRaysRayCacheSize
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysRayCacheSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomRaysRayCacheSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(RayCacheSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, RayCacheSize);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_UpdateRoomModel
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_UpdateRoomModel(float wetLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_UpdateRoomModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_UpdateRoomModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wetLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, wetLevel);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_GetRoomDimensions
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRoomDimensions(::ArrayW<float> roomDimensions, ::ArrayW<float> reflectionsCoefs, ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRoomDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_GetRoomDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomDimensions), ::il2cpp_utils::ExtractType(reflectionsCoefs), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomDimensions, reflectionsCoefs, byref(position));
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_GetRaycastHits
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRaycastHits(::ArrayW<::UnityEngine::Vector3> points, ::ArrayW<::UnityEngine::Vector3> normals, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRaycastHits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_GetRaycastHits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points, normals, length);
}
// Autogenerated method: OculusSpatializerUnity..cctor
void GlobalNamespace::OculusSpatializerUnity::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSpatializerUnity/AudioRaycastCallback
#include "GlobalNamespace/OculusSpatializerUnity_AudioRaycastCallback.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSpatializerUnity/AudioRaycastCallback.Invoke
void GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::Invoke(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, origin, direction, byref(point), byref(normal), data);
}
// Autogenerated method: OculusSpatializerUnity/AudioRaycastCallback.BeginInvoke
::System::IAsyncResult* GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::BeginInvoke(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IntPtr data, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, origin, direction, byref(point), byref(normal), data, callback, object);
}
// Autogenerated method: OculusSpatializerUnity/AudioRaycastCallback.EndInvoke
void GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::EndInvoke(ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(point), byref(normal), result);
}
