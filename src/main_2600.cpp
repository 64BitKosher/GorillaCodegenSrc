// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Runtime.Native.IStartupMinidumpSender
#include "Backtrace/Unity/Runtime/Native/IStartupMinidumpSender.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: Backtrace.Unity.Interfaces.IBacktraceApi
#include "Backtrace/Unity/Interfaces/IBacktraceApi.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Runtime.Native.IStartupMinidumpSender.SendMinidumpOnStartup
::System::Collections::IEnumerator* Backtrace::Unity::Runtime::Native::IStartupMinidumpSender::SendMinidumpOnStartup(::System::Collections::Generic::ICollection_1<::StringW>* clientAttachments, ::Backtrace::Unity::Interfaces::IBacktraceApi* backtraceApi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::IStartupMinidumpSender::SendMinidumpOnStartup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Runtime::Native::IStartupMinidumpSender*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, clientAttachments, backtraceApi);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Runtime.Native.NativeClientFactory
#include "Backtrace/Unity/Runtime/Native/NativeClientFactory.hpp"
// Including type: Backtrace.Unity.Runtime.Native.INativeClient
#include "Backtrace/Unity/Runtime/Native/INativeClient.hpp"
// Including type: Backtrace.Unity.Model.BacktraceConfiguration
#include "Backtrace/Unity/Model/BacktraceConfiguration.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs
#include "Backtrace/Unity/Model/Breadcrumbs/BacktraceBreadcrumbs.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Runtime.Native.NativeClientFactory.CreateNativeClient
::Backtrace::Unity::Runtime::Native::INativeClient* Backtrace::Unity::Runtime::Native::NativeClientFactory::CreateNativeClient(::Backtrace::Unity::Model::BacktraceConfiguration* configuration, ::StringW gameObjectName, ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs* breadcrumbs, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes, ::System::Collections::Generic::ICollection_1<::StringW>* attachments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::NativeClientFactory::CreateNativeClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Runtime.Native", "NativeClientFactory", "CreateNativeClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(gameObjectName), ::il2cpp_utils::ExtractType(breadcrumbs), ::il2cpp_utils::ExtractType(attributes), ::il2cpp_utils::ExtractType(attachments)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Runtime::Native::INativeClient*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, configuration, gameObjectName, breadcrumbs, attributes, attachments);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Backtrace.Unity.Runtime.Native.Base.NativeClientBase
#include "Backtrace/Unity/Runtime/Native/Base/NativeClientBase.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: Backtrace.Unity.Model.BacktraceConfiguration
#include "Backtrace/Unity/Model/BacktraceConfiguration.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs
#include "Backtrace/Unity/Model/Breadcrumbs/BacktraceBreadcrumbs.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String AnrMessage
::StringW Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_get_AnrMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_get_AnrMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Runtime.Native.Base", "NativeClientBase", "AnrMessage"));
}
// Autogenerated static field setter
// Set static field: static System.String AnrMessage
void Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_set_AnrMessage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_set_AnrMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Runtime.Native.Base", "NativeClientBase", "AnrMessage", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String HangType
::StringW Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_get_HangType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_get_HangType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Runtime.Native.Base", "NativeClientBase", "HangType"));
}
// Autogenerated static field setter
// Set static field: static protected System.String HangType
void Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_set_HangType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_set_HangType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Runtime.Native.Base", "NativeClientBase", "HangType", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String CrashType
::StringW Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_get_CrashType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_get_CrashType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Runtime.Native.Base", "NativeClientBase", "CrashType"));
}
// Autogenerated static field setter
// Set static field: static protected System.String CrashType
void Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_set_CrashType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_set_CrashType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Runtime.Native.Base", "NativeClientBase", "CrashType", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String ErrorTypeAttribute
::StringW Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_get_ErrorTypeAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_get_ErrorTypeAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Runtime.Native.Base", "NativeClientBase", "ErrorTypeAttribute"));
}
// Autogenerated static field setter
// Set static field: static protected System.String ErrorTypeAttribute
void Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_set_ErrorTypeAttribute(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::_set_ErrorTypeAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Runtime.Native.Base", "NativeClientBase", "ErrorTypeAttribute", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 AnrWatchdogTimeout
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_AnrWatchdogTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_AnrWatchdogTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AnrWatchdogTimeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean LogAnr
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_LogAnr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_LogAnr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LogAnr"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Single LastUpdateTime
[[deprecated("Use field access instead!")]] float& Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_LastUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_LastUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastUpdateTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean PreventAnr
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_PreventAnr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_PreventAnr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreventAnr"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean StopAnr
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_StopAnr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_StopAnr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StopAnr"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.Thread AnrThread
[[deprecated("Use field access instead!")]] ::System::Threading::Thread*& Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_AnrThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_AnrThread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AnrThread"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean CaptureNativeCrashes
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_CaptureNativeCrashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_CaptureNativeCrashes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CaptureNativeCrashes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean HandlerANR
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_HandlerANR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn_HandlerANR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandlerANR"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly Backtrace.Unity.Model.BacktraceConfiguration _configuration
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceConfiguration*& Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn__configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn__configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_configuration"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs _breadcrumbs
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*& Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn__breadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn__breadcrumbs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_breadcrumbs"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _shouldLogAnrsInBreadcrumbs
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn__shouldLogAnrsInBreadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn__shouldLogAnrsInBreadcrumbs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shouldLogAnrsInBreadcrumbs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _lockObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn__lockObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::dyn__lockObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Base.NativeClientBase.Update
void Backtrace::Unity::Runtime::Native::Base::NativeClientBase::Update(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Runtime::Native::Base::NativeClientBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Base.NativeClientBase.OnAnrDetection
void Backtrace::Unity::Runtime::Native::Base::NativeClientBase::OnAnrDetection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::OnAnrDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAnrDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Base.NativeClientBase.PauseAnrThread
void Backtrace::Unity::Runtime::Native::Base::NativeClientBase::PauseAnrThread(bool stopAnr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::PauseAnrThread");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Runtime::Native::Base::NativeClientBase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stopAnr);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Base.NativeClientBase.Disable
void Backtrace::Unity::Runtime::Native::Base::NativeClientBase::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::Disable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Runtime::Native::Base::NativeClientBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Base.NativeClientBase.ShouldStoreAnrBreadcrumbs
bool Backtrace::Unity::Runtime::Native::Base::NativeClientBase::ShouldStoreAnrBreadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Base::NativeClientBase::ShouldStoreAnrBreadcrumbs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldStoreAnrBreadcrumbs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Runtime.Native.Android.NativeClient
#include "Backtrace/Unity/Runtime/Native/Android/NativeClient.hpp"
// Including type: Backtrace.Unity.Runtime.Native.Android.NativeClient/<>c__DisplayClass27_0
#include "Backtrace/Unity/Runtime/Native/Android/NativeClient_--c__DisplayClass27_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Backtrace.Unity.Model.BacktraceConfiguration
#include "Backtrace/Unity/Model/BacktraceConfiguration.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs
#include "Backtrace/Unity/Model/Breadcrumbs/BacktraceBreadcrumbs.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String CallbackMethodName
::StringW Backtrace::Unity::Runtime::Native::Android::NativeClient::_get_CallbackMethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::_get_CallbackMethodName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Runtime.Native.Android", "NativeClient", "CallbackMethodName"));
}
// Autogenerated static field setter
// Set static field: static private System.String CallbackMethodName
void Backtrace::Unity::Runtime::Native::Android::NativeClient::_set_CallbackMethodName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::_set_CallbackMethodName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Runtime.Native.Android", "NativeClient", "CallbackMethodName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _namespace
::StringW Backtrace::Unity::Runtime::Native::Android::NativeClient::_get__namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::_get__namespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Runtime.Native.Android", "NativeClient", "_namespace"));
}
// Autogenerated static field setter
// Set static field: static private System.String _namespace
void Backtrace::Unity::Runtime::Native::Android::NativeClient::_set__namespace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::_set__namespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Runtime.Native.Android", "NativeClient", "_namespace", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> _builtInAttributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__builtInAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__builtInAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_builtInAttributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> _attributeMapping
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__attributeMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__attributeMapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributeMapping"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Runtime.Native.Android.UnwindingMode UnwindingMode
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Runtime::Native::Android::UnwindingMode& Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn_UnwindingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn_UnwindingMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UnwindingMode"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Runtime::Native::Android::UnwindingMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _anrPath
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__anrPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__anrPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anrPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _unhandledExceptionPath
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__unhandledExceptionPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__unhandledExceptionPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unhandledExceptionPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _enabled
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AndroidJavaObject _anrWatcher
[[deprecated("Use field access instead!")]] ::UnityEngine::AndroidJavaObject*& Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__anrWatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__anrWatcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anrWatcher"))->offset;
  return *reinterpret_cast<::UnityEngine::AndroidJavaObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AndroidJavaObject _unhandledExceptionWatcher
[[deprecated("Use field access instead!")]] ::UnityEngine::AndroidJavaObject*& Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__unhandledExceptionWatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__unhandledExceptionWatcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unhandledExceptionWatcher"))->offset;
  return *reinterpret_cast<::UnityEngine::AndroidJavaObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _enableClientSideUnwinding
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__enableClientSideUnwinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn__enableClientSideUnwinding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableClientSideUnwinding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <GameObjectName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn_$GameObjectName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::dyn_$GameObjectName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GameObjectName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.Initialize
bool Backtrace::Unity::Runtime::Native::Android::NativeClient::Initialize(::System::IntPtr submissionUrl, ::System::IntPtr databasePath, ::System::IntPtr handlerPath, ::System::IntPtr keys, ::System::IntPtr values, ::System::IntPtr attachments, bool enableClientSideUnwinding, int unwindingMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Runtime.Native.Android", "NativeClient", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submissionUrl), ::il2cpp_utils::ExtractType(databasePath), ::il2cpp_utils::ExtractType(handlerPath), ::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(attachments), ::il2cpp_utils::ExtractType(enableClientSideUnwinding), ::il2cpp_utils::ExtractType(unwindingMode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, submissionUrl, databasePath, handlerPath, keys, values, attachments, enableClientSideUnwinding, unwindingMode);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.AddAttribute
bool Backtrace::Unity::Runtime::Native::Android::NativeClient::AddAttribute(::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Runtime.Native.Android", "NativeClient", "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.NativeReport
bool Backtrace::Unity::Runtime::Native::Android::NativeClient::NativeReport(::System::IntPtr message, bool setMainThreadAsFaultingThread) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::NativeReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Runtime.Native.Android", "NativeClient", "NativeReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(setMainThreadAsFaultingThread)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, setMainThreadAsFaultingThread);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.DisableNativeIntegration
bool Backtrace::Unity::Runtime::Native::Android::NativeClient::DisableNativeIntegration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::DisableNativeIntegration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Runtime.Native.Android", "NativeClient", "DisableNativeIntegration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.SetDefaultAttributeMaps
void Backtrace::Unity::Runtime::Native::Android::NativeClient::SetDefaultAttributeMaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::SetDefaultAttributeMaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultAttributeMaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.get_GameObjectName
::StringW Backtrace::Unity::Runtime::Native::Android::NativeClient::get_GameObjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::get_GameObjectName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GameObjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.set_GameObjectName
void Backtrace::Unity::Runtime::Native::Android::NativeClient::set_GameObjectName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::set_GameObjectName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GameObjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.HandleUnhandledExceptions
void Backtrace::Unity::Runtime::Native::Android::NativeClient::HandleUnhandledExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::HandleUnhandledExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUnhandledExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.GetNativeDirectoryPath
::StringW Backtrace::Unity::Runtime::Native::Android::NativeClient::GetNativeDirectoryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::GetNativeDirectoryPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNativeDirectoryPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.GuessNativeDirectoryPath
::StringW Backtrace::Unity::Runtime::Native::Android::NativeClient::GuessNativeDirectoryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::GuessNativeDirectoryPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GuessNativeDirectoryPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.HandleNativeCrashes
void Backtrace::Unity::Runtime::Native::Android::NativeClient::HandleNativeCrashes(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* backtraceAttributes, ::System::Collections::Generic::IEnumerable_1<::StringW>* attachments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::HandleNativeCrashes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNativeCrashes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backtraceAttributes), ::il2cpp_utils::ExtractType(attachments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, backtraceAttributes, attachments);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.GetAttributes
void Backtrace::Unity::Runtime::Native::Android::NativeClient::GetAttributes(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Runtime::Native::Android::NativeClient*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.FinishUnhandledBackgroundException
void Backtrace::Unity::Runtime::Native::Android::NativeClient::FinishUnhandledBackgroundException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::FinishUnhandledBackgroundException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishUnhandledBackgroundException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.HandleAnr
void Backtrace::Unity::Runtime::Native::Android::NativeClient::HandleAnr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::HandleAnr");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Runtime::Native::Android::NativeClient*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.SetAttribute
void Backtrace::Unity::Runtime::Native::Android::NativeClient::SetAttribute(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::SetAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Runtime::Native::Android::NativeClient*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.OnOOM
bool Backtrace::Unity::Runtime::Native::Android::NativeClient::OnOOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::OnOOM");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Runtime::Native::Android::NativeClient*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient.Disable
void Backtrace::Unity::Runtime::Native::Android::NativeClient::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::Disable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Runtime::Native::Base::NativeClientBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Runtime.Native.Android.NativeClient/<>c__DisplayClass27_0
#include "Backtrace/Unity/Runtime/Native/Android/NativeClient_--c__DisplayClass27_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Runtime.Native.Android.NativeClient <>4__this
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Runtime::Native::Android::NativeClient*& Backtrace::Unity::Runtime::Native::Android::NativeClient::$$c__DisplayClass27_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::$$c__DisplayClass27_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Runtime::Native::Android::NativeClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean reported
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Runtime::Native::Android::NativeClient::$$c__DisplayClass27_0::dyn_reported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::$$c__DisplayClass27_0::dyn_reported");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reported"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Runtime.Native.Android.NativeClient/<>c__DisplayClass27_0.<HandleAnr>b__0
void Backtrace::Unity::Runtime::Native::Android::NativeClient::$$c__DisplayClass27_0::$HandleAnr$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::NativeClient::$$c__DisplayClass27_0::<HandleAnr>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleAnr>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Runtime.Native.Android.UnwindingMode
#include "Backtrace/Unity/Runtime/Native/Android/UnwindingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Runtime.Native.Android.UnwindingMode LOCAL
::Backtrace::Unity::Runtime::Native::Android::UnwindingMode Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_get_LOCAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_get_LOCAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Runtime::Native::Android::UnwindingMode>("Backtrace.Unity.Runtime.Native.Android", "UnwindingMode", "LOCAL"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Runtime.Native.Android.UnwindingMode LOCAL
void Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_set_LOCAL(::Backtrace::Unity::Runtime::Native::Android::UnwindingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_set_LOCAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Runtime.Native.Android", "UnwindingMode", "LOCAL", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Runtime.Native.Android.UnwindingMode REMOTE
::Backtrace::Unity::Runtime::Native::Android::UnwindingMode Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_get_REMOTE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_get_REMOTE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Runtime::Native::Android::UnwindingMode>("Backtrace.Unity.Runtime.Native.Android", "UnwindingMode", "REMOTE"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Runtime.Native.Android.UnwindingMode REMOTE
void Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_set_REMOTE(::Backtrace::Unity::Runtime::Native::Android::UnwindingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_set_REMOTE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Runtime.Native.Android", "UnwindingMode", "REMOTE", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Runtime.Native.Android.UnwindingMode REMOTE_DUMPWITHOUTCRASH
::Backtrace::Unity::Runtime::Native::Android::UnwindingMode Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_get_REMOTE_DUMPWITHOUTCRASH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_get_REMOTE_DUMPWITHOUTCRASH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Runtime::Native::Android::UnwindingMode>("Backtrace.Unity.Runtime.Native.Android", "UnwindingMode", "REMOTE_DUMPWITHOUTCRASH"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Runtime.Native.Android.UnwindingMode REMOTE_DUMPWITHOUTCRASH
void Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_set_REMOTE_DUMPWITHOUTCRASH(::Backtrace::Unity::Runtime::Native::Android::UnwindingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_set_REMOTE_DUMPWITHOUTCRASH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Runtime.Native.Android", "UnwindingMode", "REMOTE_DUMPWITHOUTCRASH", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Runtime.Native.Android.UnwindingMode LOCAL_DUMPWITHOUTCRASH
::Backtrace::Unity::Runtime::Native::Android::UnwindingMode Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_get_LOCAL_DUMPWITHOUTCRASH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_get_LOCAL_DUMPWITHOUTCRASH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Runtime::Native::Android::UnwindingMode>("Backtrace.Unity.Runtime.Native.Android", "UnwindingMode", "LOCAL_DUMPWITHOUTCRASH"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Runtime.Native.Android.UnwindingMode LOCAL_DUMPWITHOUTCRASH
void Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_set_LOCAL_DUMPWITHOUTCRASH(::Backtrace::Unity::Runtime::Native::Android::UnwindingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_set_LOCAL_DUMPWITHOUTCRASH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Runtime.Native.Android", "UnwindingMode", "LOCAL_DUMPWITHOUTCRASH", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Runtime.Native.Android.UnwindingMode LOCAL_CONTEXT
::Backtrace::Unity::Runtime::Native::Android::UnwindingMode Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_get_LOCAL_CONTEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_get_LOCAL_CONTEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Runtime::Native::Android::UnwindingMode>("Backtrace.Unity.Runtime.Native.Android", "UnwindingMode", "LOCAL_CONTEXT"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Runtime.Native.Android.UnwindingMode LOCAL_CONTEXT
void Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_set_LOCAL_CONTEXT(::Backtrace::Unity::Runtime::Native::Android::UnwindingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::UnwindingMode::_set_LOCAL_CONTEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Runtime.Native.Android", "UnwindingMode", "LOCAL_CONTEXT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Runtime::Native::Android::UnwindingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Runtime::Native::Android::UnwindingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.BacktraceClientConfiguration
#include "Backtrace/Unity/Model/BacktraceClientConfiguration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ServerUrl
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_ServerUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_ServerUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ReportPerMin
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_ReportPerMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_ReportPerMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReportPerMin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HandleUnhandledExceptions
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_HandleUnhandledExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_HandleUnhandledExceptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandleUnhandledExceptions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IgnoreSslValidation
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_IgnoreSslValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_IgnoreSslValidation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IgnoreSslValidation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DestroyOnLoad
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_DestroyOnLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_DestroyOnLoad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestroyOnLoad"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HandleANR
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_HandleANR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_HandleANR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandleANR"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean OomReports
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_OomReports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_OomReports");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OomReports"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 GameObjectDepth
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_GameObjectDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_GameObjectDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameObjectDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Types.MiniDumpType MinidumpType
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Types::MiniDumpType& Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_MinidumpType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceClientConfiguration::dyn_MinidumpType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinidumpType"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Types::MiniDumpType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceClientConfiguration.UpdateServerUrl
void Backtrace::Unity::Model::BacktraceClientConfiguration::UpdateServerUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceClientConfiguration::UpdateServerUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateServerUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceClientConfiguration.ValidateServerUrl
bool Backtrace::Unity::Model::BacktraceClientConfiguration::ValidateServerUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceClientConfiguration::ValidateServerUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateServerUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.BacktraceConfiguration
#include "Backtrace/Unity/Model/BacktraceConfiguration.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceCredentials
#include "Backtrace/Unity/Model/BacktraceCredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType AllBreadcrumbsTypes
::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType Backtrace::Unity::Model::BacktraceConfiguration::_get_AllBreadcrumbsTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_get_AllBreadcrumbsTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType>("Backtrace.Unity.Model", "BacktraceConfiguration", "AllBreadcrumbsTypes"));
}
// Autogenerated static field setter
// Set static field: static private Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType AllBreadcrumbsTypes
void Backtrace::Unity::Model::BacktraceConfiguration::_set_AllBreadcrumbsTypes(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_set_AllBreadcrumbsTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceConfiguration", "AllBreadcrumbsTypes", value));
}
// Autogenerated static field getter
// Get static field: static private Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel AllLogTypes
::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel Backtrace::Unity::Model::BacktraceConfiguration::_get_AllLogTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_get_AllLogTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel>("Backtrace.Unity.Model", "BacktraceConfiguration", "AllLogTypes"));
}
// Autogenerated static field setter
// Set static field: static private Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel AllLogTypes
void Backtrace::Unity::Model::BacktraceConfiguration::_set_AllLogTypes(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_set_AllLogTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceConfiguration", "AllLogTypes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultAnrWatchdogTimeout
int Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultAnrWatchdogTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultAnrWatchdogTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultAnrWatchdogTimeout"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultAnrWatchdogTimeout
void Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultAnrWatchdogTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultAnrWatchdogTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultAnrWatchdogTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultRetryLimit
int Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultRetryLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultRetryLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultRetryLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultRetryLimit
void Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultRetryLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultRetryLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultRetryLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultReportPerMin
int Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultReportPerMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultReportPerMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultReportPerMin"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultReportPerMin
void Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultReportPerMin(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultReportPerMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultReportPerMin", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultGameObjectDepth
int Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultGameObjectDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultGameObjectDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultGameObjectDepth"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultGameObjectDepth
void Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultGameObjectDepth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultGameObjectDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultGameObjectDepth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultNumberOfLogs
int Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultNumberOfLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultNumberOfLogs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultNumberOfLogs"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultNumberOfLogs
void Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultNumberOfLogs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultNumberOfLogs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultNumberOfLogs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultMaxRecordCount
int Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultMaxRecordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultMaxRecordCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultMaxRecordCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultMaxRecordCount
void Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultMaxRecordCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultMaxRecordCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultMaxRecordCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultMaxDatabaseSize
int Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultMaxDatabaseSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultMaxDatabaseSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultMaxDatabaseSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultMaxDatabaseSize
void Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultMaxDatabaseSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultMaxDatabaseSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultMaxDatabaseSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultRetryInterval
int Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultRetryInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_get_DefaultRetryInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultRetryInterval"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultRetryInterval
void Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultRetryInterval(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::_set_DefaultRetryInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceConfiguration", "DefaultRetryInterval", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String ServerUrl
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceConfiguration::dyn_ServerUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_ServerUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Token
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceConfiguration::dyn_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_Token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Token"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ReportPerMin
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::BacktraceConfiguration::dyn_ReportPerMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_ReportPerMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReportPerMin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DisableInEditor
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_DisableInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_DisableInEditor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisableInEditor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HandleUnhandledExceptions
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_HandleUnhandledExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_HandleUnhandledExceptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandleUnhandledExceptions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IgnoreSslValidation
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_IgnoreSslValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_IgnoreSslValidation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IgnoreSslValidation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DestroyOnLoad
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_DestroyOnLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_DestroyOnLoad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestroyOnLoad"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double Sampling
[[deprecated("Use field access instead!")]] double& Backtrace::Unity::Model::BacktraceConfiguration::dyn_Sampling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_Sampling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sampling"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Types.ReportFilterType ReportFilterType
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Types::ReportFilterType& Backtrace::Unity::Model::BacktraceConfiguration::dyn_ReportFilterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_ReportFilterType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReportFilterType"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Types::ReportFilterType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 GameObjectDepth
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::BacktraceConfiguration::dyn_GameObjectDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_GameObjectDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameObjectDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 NumberOfLogs
[[deprecated("Use field access instead!")]] uint& Backtrace::Unity::Model::BacktraceConfiguration::dyn_NumberOfLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_NumberOfLogs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfLogs"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean PerformanceStatistics
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_PerformanceStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_PerformanceStatistics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PerformanceStatistics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean SendUnhandledGameCrashesOnGameStartup
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_SendUnhandledGameCrashesOnGameStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_SendUnhandledGameCrashesOnGameStartup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SendUnhandledGameCrashesOnGameStartup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean CaptureNativeCrashes
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_CaptureNativeCrashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_CaptureNativeCrashes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CaptureNativeCrashes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HandleANR
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_HandleANR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_HandleANR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandleANR"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 AnrWatchdogTimeout
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::BacktraceConfiguration::dyn_AnrWatchdogTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_AnrWatchdogTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AnrWatchdogTimeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean OomReports
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_OomReports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_OomReports");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OomReports"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ClientSideUnwinding
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_ClientSideUnwinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_ClientSideUnwinding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClientSideUnwinding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SymbolsUploadToken
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceConfiguration::dyn_SymbolsUploadToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_SymbolsUploadToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SymbolsUploadToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Types.DeduplicationStrategy DeduplicationStrategy
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Types::DeduplicationStrategy& Backtrace::Unity::Model::BacktraceConfiguration::dyn_DeduplicationStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_DeduplicationStrategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeduplicationStrategy"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Types::DeduplicationStrategy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableBreadcrumbsSupport
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_EnableBreadcrumbsSupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_EnableBreadcrumbsSupport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableBreadcrumbsSupport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType BacktraceBreadcrumbsLevel
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType& Backtrace::Unity::Model::BacktraceConfiguration::dyn_BacktraceBreadcrumbsLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_BacktraceBreadcrumbsLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BacktraceBreadcrumbsLevel"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel LogLevel
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel& Backtrace::Unity::Model::BacktraceConfiguration::dyn_LogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_LogLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LogLevel"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseNormalizedExceptionMessage
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_UseNormalizedExceptionMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_UseNormalizedExceptionMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseNormalizedExceptionMessage"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Types.MiniDumpType MinidumpType
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Types::MiniDumpType& Backtrace::Unity::Model::BacktraceConfiguration::dyn_MinidumpType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_MinidumpType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinidumpType"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Types::MiniDumpType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean GenerateScreenshotOnException
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_GenerateScreenshotOnException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_GenerateScreenshotOnException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GenerateScreenshotOnException"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] AttachmentPaths
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Backtrace::Unity::Model::BacktraceConfiguration::dyn_AttachmentPaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_AttachmentPaths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AttachmentPaths"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DatabasePath
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceConfiguration::dyn_DatabasePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_DatabasePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DatabasePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableMetricsSupport
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_EnableMetricsSupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_EnableMetricsSupport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableMetricsSupport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 TimeIntervalInMin
[[deprecated("Use field access instead!")]] uint& Backtrace::Unity::Model::BacktraceConfiguration::dyn_TimeIntervalInMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_TimeIntervalInMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TimeIntervalInMin"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Enabled
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_Enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AddUnityLogToReport
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_AddUnityLogToReport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_AddUnityLogToReport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AddUnityLogToReport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutoSendMode
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_AutoSendMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_AutoSendMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoSendMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean CreateDatabase
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceConfiguration::dyn_CreateDatabase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_CreateDatabase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CreateDatabase"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxRecordCount
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::BacktraceConfiguration::dyn_MaxRecordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_MaxRecordCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxRecordCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 MaxDatabaseSize
[[deprecated("Use field access instead!")]] int64_t& Backtrace::Unity::Model::BacktraceConfiguration::dyn_MaxDatabaseSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_MaxDatabaseSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxDatabaseSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 RetryInterval
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::BacktraceConfiguration::dyn_RetryInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_RetryInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RetryInterval"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 RetryLimit
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::BacktraceConfiguration::dyn_RetryLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_RetryLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RetryLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Types.RetryOrder RetryOrder
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Types::RetryOrder& Backtrace::Unity::Model::BacktraceConfiguration::dyn_RetryOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::dyn_RetryOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RetryOrder"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Types::RetryOrder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceConfiguration.GetAttachmentPaths
::System::Collections::Generic::HashSet_1<::StringW>* Backtrace::Unity::Model::BacktraceConfiguration::GetAttachmentPaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::GetAttachmentPaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttachmentPaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceConfiguration.GetUniverseName
::StringW Backtrace::Unity::Model::BacktraceConfiguration::GetUniverseName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::GetUniverseName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUniverseName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceConfiguration.GetToken
::StringW Backtrace::Unity::Model::BacktraceConfiguration::GetToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::GetToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceConfiguration.GetFullDatabasePath
::StringW Backtrace::Unity::Model::BacktraceConfiguration::GetFullDatabasePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::GetFullDatabasePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFullDatabasePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceConfiguration.get_CrashpadDatabasePath
::StringW Backtrace::Unity::Model::BacktraceConfiguration::get_CrashpadDatabasePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::get_CrashpadDatabasePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CrashpadDatabasePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceConfiguration.GetValidServerUrl
::StringW Backtrace::Unity::Model::BacktraceConfiguration::GetValidServerUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::GetValidServerUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidServerUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceConfiguration.UpdateServerUrl
::StringW Backtrace::Unity::Model::BacktraceConfiguration::UpdateServerUrl(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::UpdateServerUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model", "BacktraceConfiguration", "UpdateServerUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceConfiguration.ValidateServerUrl
bool Backtrace::Unity::Model::BacktraceConfiguration::ValidateServerUrl(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::ValidateServerUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model", "BacktraceConfiguration", "ValidateServerUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceConfiguration.IsValid
bool Backtrace::Unity::Model::BacktraceConfiguration::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceConfiguration.GetEventAggregationIntervalTimerInMs
uint Backtrace::Unity::Model::BacktraceConfiguration::GetEventAggregationIntervalTimerInMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::GetEventAggregationIntervalTimerInMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEventAggregationIntervalTimerInMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceConfiguration.ToCredentials
::Backtrace::Unity::Model::BacktraceCredentials* Backtrace::Unity::Model::BacktraceConfiguration::ToCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceConfiguration::ToCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceCredentials*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.BacktraceCredentials
#include "Backtrace/Unity/Model/BacktraceCredentials.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Uri <BacktraceHostUri>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Uri*& Backtrace::Unity::Model::BacktraceCredentials::dyn_$BacktraceHostUri$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceCredentials::dyn_$BacktraceHostUri$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BacktraceHostUri>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceCredentials.get_BacktraceHostUri
::System::Uri* Backtrace::Unity::Model::BacktraceCredentials::get_BacktraceHostUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceCredentials::get_BacktraceHostUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BacktraceHostUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceCredentials.set_BacktraceHostUri
void Backtrace::Unity::Model::BacktraceCredentials::set_BacktraceHostUri(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceCredentials::set_BacktraceHostUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BacktraceHostUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceCredentials.GetSubmissionUrl
::System::Uri* Backtrace::Unity::Model::BacktraceCredentials::GetSubmissionUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceCredentials::GetSubmissionUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubmissionUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceCredentials.GetPlCrashReporterSubmissionUrl
::System::Uri* Backtrace::Unity::Model::BacktraceCredentials::GetPlCrashReporterSubmissionUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceCredentials::GetPlCrashReporterSubmissionUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlCrashReporterSubmissionUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceCredentials.GetMinidumpSubmissionUrl
::System::Uri* Backtrace::Unity::Model::BacktraceCredentials::GetMinidumpSubmissionUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceCredentials::GetMinidumpSubmissionUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMinidumpSubmissionUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceCredentials.GetSymbolsSubmissionUrl
::System::Uri* Backtrace::Unity::Model::BacktraceCredentials::GetSymbolsSubmissionUrl(::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceCredentials::GetSymbolsSubmissionUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSymbolsSubmissionUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, token);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceCredentials.IsValid
bool Backtrace::Unity::Model::BacktraceCredentials::IsValid(::System::Uri* uri, ::ArrayW<uint8_t> token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceCredentials::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uri, token);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Backtrace.Unity.Model.JsonData.ThreadInformation
#include "Backtrace/Unity/Model/JsonData/ThreadInformation.hpp"
// Including type: Backtrace.Unity.Model.BacktraceSourceCode
#include "Backtrace/Unity/Model/BacktraceSourceCode.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceReport
#include "Backtrace/Unity/Model/BacktraceReport.hpp"
// Including type: Backtrace.Unity.Model.JsonData.BacktraceAttributes
#include "Backtrace/Unity/Model/JsonData/BacktraceAttributes.hpp"
// Including type: Backtrace.Unity.Model.JsonData.Annotations
#include "Backtrace/Unity/Model/JsonData/Annotations.hpp"
// Including type: Backtrace.Unity.Model.JsonData.ThreadData
#include "Backtrace/Unity/Model/JsonData/ThreadData.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String Lang
::StringW Backtrace::Unity::Model::BacktraceData::_get_Lang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::_get_Lang");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model", "BacktraceData", "Lang"));
}
// Autogenerated static field setter
// Set static field: static public System.String Lang
void Backtrace::Unity::Model::BacktraceData::_set_Lang(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::_set_Lang");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceData", "Lang", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Agent
::StringW Backtrace::Unity::Model::BacktraceData::_get_Agent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::_get_Agent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model", "BacktraceData", "Agent"));
}
// Autogenerated static field setter
// Set static field: static public System.String Agent
void Backtrace::Unity::Model::BacktraceData::_set_Agent(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::_set_Agent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceData", "Agent", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AgentVersion
::StringW Backtrace::Unity::Model::BacktraceData::_get_AgentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::_get_AgentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model", "BacktraceData", "AgentVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.String AgentVersion
void Backtrace::Unity::Model::BacktraceData::_set_AgentVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::_set_AgentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceData", "AgentVersion", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Guid <Uuid>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Guid& Backtrace::Unity::Model::BacktraceData::dyn_$Uuid$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::dyn_$Uuid$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Uuid>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _uuidString
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceData::dyn__uuidString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::dyn__uuidString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uuidString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <Timestamp>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& Backtrace::Unity::Model::BacktraceData::dyn_$Timestamp$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::dyn_$Timestamp$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Timestamp>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String LangVersion
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceData::dyn_LangVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::dyn_LangVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LangVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,Backtrace.Unity.Model.JsonData.ThreadInformation> ThreadInformations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Backtrace::Unity::Model::JsonData::ThreadInformation*>*& Backtrace::Unity::Model::BacktraceData::dyn_ThreadInformations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::dyn_ThreadInformations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ThreadInformations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Backtrace::Unity::Model::JsonData::ThreadInformation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MainThread
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceData::dyn_MainThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::dyn_MainThread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MainThread"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] Classifier
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Backtrace::Unity::Model::BacktraceData::dyn_Classifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::dyn_Classifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Classifier"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.BacktraceSourceCode SourceCode
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceSourceCode*& Backtrace::Unity::Model::BacktraceData::dyn_SourceCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::dyn_SourceCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SourceCode"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceSourceCode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.ICollection`1<System.String> Attachments
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::ICollection_1<::StringW>*& Backtrace::Unity::Model::BacktraceData::dyn_Attachments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::dyn_Attachments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attachments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::ICollection_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Model.BacktraceReport <Report>k__BackingField
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceReport*& Backtrace::Unity::Model::BacktraceData::dyn_$Report$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::dyn_$Report$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Report>k__BackingField"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceReport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.JsonData.BacktraceAttributes Attributes
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::JsonData::BacktraceAttributes*& Backtrace::Unity::Model::BacktraceData::dyn_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::dyn_Attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attributes"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::JsonData::BacktraceAttributes**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.JsonData.Annotations Annotation
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::JsonData::Annotations*& Backtrace::Unity::Model::BacktraceData::dyn_Annotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::dyn_Annotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Annotation"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::JsonData::Annotations**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.JsonData.ThreadData ThreadData
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::JsonData::ThreadData*& Backtrace::Unity::Model::BacktraceData::dyn_ThreadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::dyn_ThreadData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ThreadData"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::JsonData::ThreadData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Deduplication
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::BacktraceData::dyn_Deduplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::dyn_Deduplication");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Deduplication"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceData.get_Uuid
::System::Guid Backtrace::Unity::Model::BacktraceData::get_Uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::get_Uuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Uuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceData.set_Uuid
void Backtrace::Unity::Model::BacktraceData::set_Uuid(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::set_Uuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Uuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceData.get_UuidString
::StringW Backtrace::Unity::Model::BacktraceData::get_UuidString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::get_UuidString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UuidString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceData.get_Timestamp
int64_t Backtrace::Unity::Model::BacktraceData::get_Timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::get_Timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceData.set_Timestamp
void Backtrace::Unity::Model::BacktraceData::set_Timestamp(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::set_Timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceData.get_Report
::Backtrace::Unity::Model::BacktraceReport* Backtrace::Unity::Model::BacktraceData::get_Report() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::get_Report");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Report", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceReport*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceData.set_Report
void Backtrace::Unity::Model::BacktraceData::set_Report(::Backtrace::Unity::Model::BacktraceReport* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::set_Report");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Report", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceData.ToJson
::StringW Backtrace::Unity::Model::BacktraceData::ToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceData.SetThreadInformations
void Backtrace::Unity::Model::BacktraceData::SetThreadInformations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::SetThreadInformations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetThreadInformations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceData.SetAttributes
void Backtrace::Unity::Model::BacktraceData::SetAttributes(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* clientAttributes, int gameObjectDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceData::SetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientAttributes), ::il2cpp_utils::ExtractType(gameObjectDepth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clientAttributes, gameObjectDepth);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.BacktraceDatabaseConfiguration
#include "Backtrace/Unity/Model/BacktraceDatabaseConfiguration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Enabled
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_Enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DatabasePath
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_DatabasePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_DatabasePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DatabasePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutoSendMode
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_AutoSendMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_AutoSendMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoSendMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean CreateDatabase
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_CreateDatabase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_CreateDatabase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CreateDatabase"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean GenerateScreenshotOnException
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_GenerateScreenshotOnException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_GenerateScreenshotOnException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GenerateScreenshotOnException"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Types.DeduplicationStrategy DeduplicationStrategy
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Types::DeduplicationStrategy& Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_DeduplicationStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_DeduplicationStrategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeduplicationStrategy"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Types::DeduplicationStrategy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxRecordCount
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_MaxRecordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_MaxRecordCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxRecordCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 MaxDatabaseSize
[[deprecated("Use field access instead!")]] int64_t& Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_MaxDatabaseSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_MaxDatabaseSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxDatabaseSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 RetryInterval
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_RetryInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_RetryInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RetryInterval"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 RetryLimit
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_RetryLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_RetryLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RetryLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Types.RetryOrder RetryOrder
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Types::RetryOrder& Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_RetryOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDatabaseConfiguration::dyn_RetryOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RetryOrder"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Types::RetryOrder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceDatabaseConfiguration.ValidDatabasePath
bool Backtrace::Unity::Model::BacktraceDatabaseConfiguration::ValidDatabasePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDatabaseConfiguration::ValidDatabasePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidDatabasePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.BacktraceDefaultClassifierTypes
#include "Backtrace/Unity/Model/BacktraceDefaultClassifierTypes.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String MessageType
::StringW Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_get_MessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_get_MessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model", "BacktraceDefaultClassifierTypes", "MessageType"));
}
// Autogenerated static field setter
// Set static field: static System.String MessageType
void Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_set_MessageType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_set_MessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceDefaultClassifierTypes", "MessageType", value));
}
// Autogenerated static field getter
// Get static field: static System.String ExceptionType
::StringW Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_get_ExceptionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_get_ExceptionType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model", "BacktraceDefaultClassifierTypes", "ExceptionType"));
}
// Autogenerated static field setter
// Set static field: static System.String ExceptionType
void Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_set_ExceptionType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_set_ExceptionType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceDefaultClassifierTypes", "ExceptionType", value));
}
// Autogenerated static field getter
// Get static field: static System.String UnhandledExceptionType
::StringW Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_get_UnhandledExceptionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_get_UnhandledExceptionType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model", "BacktraceDefaultClassifierTypes", "UnhandledExceptionType"));
}
// Autogenerated static field setter
// Set static field: static System.String UnhandledExceptionType
void Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_set_UnhandledExceptionType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_set_UnhandledExceptionType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceDefaultClassifierTypes", "UnhandledExceptionType", value));
}
// Autogenerated static field getter
// Get static field: static System.String OOMExceptionType
::StringW Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_get_OOMExceptionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_get_OOMExceptionType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model", "BacktraceDefaultClassifierTypes", "OOMExceptionType"));
}
// Autogenerated static field setter
// Set static field: static System.String OOMExceptionType
void Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_set_OOMExceptionType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_set_OOMExceptionType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceDefaultClassifierTypes", "OOMExceptionType", value));
}
// Autogenerated static field getter
// Get static field: static System.String AnrExceptionType
::StringW Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_get_AnrExceptionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_get_AnrExceptionType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model", "BacktraceDefaultClassifierTypes", "AnrExceptionType"));
}
// Autogenerated static field setter
// Set static field: static System.String AnrExceptionType
void Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_set_AnrExceptionType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceDefaultClassifierTypes::_set_AnrExceptionType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceDefaultClassifierTypes", "AnrExceptionType", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.BacktraceHttpClient
#include "Backtrace/Unity/Model/BacktraceHttpClient.hpp"
// Including type: Backtrace.Unity.Model.BacktraceHttpClient/<>c__DisplayClass6_0
#include "Backtrace/Unity/Model/BacktraceHttpClient_--c__DisplayClass6_0.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Backtrace.Unity.Json.BacktraceJObject
#include "Backtrace/Unity/Json/BacktraceJObject.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Networking.IMultipartFormSection
#include "UnityEngine/Networking/IMultipartFormSection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String DiagnosticFileName
::StringW Backtrace::Unity::Model::BacktraceHttpClient::_get_DiagnosticFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::_get_DiagnosticFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model", "BacktraceHttpClient", "DiagnosticFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String DiagnosticFileName
void Backtrace::Unity::Model::BacktraceHttpClient::_set_DiagnosticFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::_set_DiagnosticFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceHttpClient", "DiagnosticFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RequestTimeout
int Backtrace::Unity::Model::BacktraceHttpClient::_get_RequestTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::_get_RequestTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Backtrace.Unity.Model", "BacktraceHttpClient", "RequestTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RequestTimeout
void Backtrace::Unity::Model::BacktraceHttpClient::_set_RequestTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::_set_RequestTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceHttpClient", "RequestTimeout", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IgnoreSslValidation>k__BackingField
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceHttpClient::dyn_$IgnoreSslValidation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::dyn_$IgnoreSslValidation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IgnoreSslValidation>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceHttpClient.get_IgnoreSslValidation
bool Backtrace::Unity::Model::BacktraceHttpClient::get_IgnoreSslValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::get_IgnoreSslValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::BacktraceHttpClient*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceHttpClient.set_IgnoreSslValidation
void Backtrace::Unity::Model::BacktraceHttpClient::set_IgnoreSslValidation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::set_IgnoreSslValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::BacktraceHttpClient*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceHttpClient.Post
void Backtrace::Unity::Model::BacktraceHttpClient::Post(::StringW submissionUrl, ::Backtrace::Unity::Json::BacktraceJObject* jObject, ::System::Action_3<int64_t, bool, ::StringW>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::Post");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::BacktraceHttpClient*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, submissionUrl, jObject, onComplete);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceHttpClient.Post
::UnityEngine::Networking::UnityWebRequest* Backtrace::Unity::Model::BacktraceHttpClient::Post(::StringW submissionUrl, ::StringW json, ::System::Collections::Generic::IEnumerable_1<::StringW>* attachments, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::Post");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::BacktraceHttpClient*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(this, ___internal__method, submissionUrl, json, attachments, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceHttpClient.Post
::UnityEngine::Networking::UnityWebRequest* Backtrace::Unity::Model::BacktraceHttpClient::Post(::StringW submissionUrl, ::ArrayW<uint8_t> minidump, ::System::Collections::Generic::IEnumerable_1<::StringW>* attachments, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::Post");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::BacktraceHttpClient*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(this, ___internal__method, submissionUrl, minidump, attachments, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceHttpClient.Post
::UnityEngine::Networking::UnityWebRequest* Backtrace::Unity::Model::BacktraceHttpClient::Post(::StringW submissionUrl, ::System::Collections::Generic::List_1<::UnityEngine::Networking::IMultipartFormSection*>* formData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submissionUrl), ::il2cpp_utils::ExtractType(formData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(this, ___internal__method, submissionUrl, formData);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceHttpClient.CreateJsonFormData
::System::Collections::Generic::List_1<::UnityEngine::Networking::IMultipartFormSection*>* Backtrace::Unity::Model::BacktraceHttpClient::CreateJsonFormData(::ArrayW<uint8_t> json, ::System::Collections::Generic::IEnumerable_1<::StringW>* attachments, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::CreateJsonFormData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateJsonFormData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(attachments), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Networking::IMultipartFormSection*>*, false>(this, ___internal__method, json, attachments, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceHttpClient.CreateMinidumpFormData
::System::Collections::Generic::List_1<::UnityEngine::Networking::IMultipartFormSection*>* Backtrace::Unity::Model::BacktraceHttpClient::CreateMinidumpFormData(::ArrayW<uint8_t> minidump, ::System::Collections::Generic::IEnumerable_1<::StringW>* attachments, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::CreateMinidumpFormData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMinidumpFormData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minidump), ::il2cpp_utils::ExtractType(attachments), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Networking::IMultipartFormSection*>*, false>(this, ___internal__method, minidump, attachments, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceHttpClient.AddAttributesToFormData
void Backtrace::Unity::Model::BacktraceHttpClient::AddAttributesToFormData(::System::Collections::Generic::List_1<::UnityEngine::Networking::IMultipartFormSection*>* formData, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::AddAttributesToFormData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttributesToFormData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formData), ::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, formData, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceHttpClient.AddAttachmentToFormData
void Backtrace::Unity::Model::BacktraceHttpClient::AddAttachmentToFormData(::System::Collections::Generic::List_1<::UnityEngine::Networking::IMultipartFormSection*>* formData, ::System::Collections::Generic::IEnumerable_1<::StringW>* attachments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::AddAttachmentToFormData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttachmentToFormData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formData), ::il2cpp_utils::ExtractType(attachments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, formData, attachments);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.BacktraceHttpClient/<>c__DisplayClass6_0
#include "Backtrace/Unity/Model/BacktraceHttpClient_--c__DisplayClass6_0.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Networking.UnityWebRequest request
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& Backtrace::Unity::Model::BacktraceHttpClient::$$c__DisplayClass6_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::$$c__DisplayClass6_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`3<System.Int64,System.Boolean,System.String> onComplete
[[deprecated("Use field access instead!")]] ::System::Action_3<int64_t, bool, ::StringW>*& Backtrace::Unity::Model::BacktraceHttpClient::$$c__DisplayClass6_0::dyn_onComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::$$c__DisplayClass6_0::dyn_onComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onComplete"))->offset;
  return *reinterpret_cast<::System::Action_3<int64_t, bool, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceHttpClient/<>c__DisplayClass6_0.<Post>b__0
void Backtrace::Unity::Model::BacktraceHttpClient::$$c__DisplayClass6_0::$Post$b__0(::UnityEngine::AsyncOperation* operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceHttpClient::$$c__DisplayClass6_0::<Post>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Post>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, operation);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Backtrace.Unity.Model.BacktraceLogManager
#include "Backtrace/Unity/Model/BacktraceLogManager.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceReport
#include "Backtrace/Unity/Model/BacktraceReport.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
// Including type: Backtrace.Unity.Model.BacktraceUnityMessage
#include "Backtrace/Unity/Model/BacktraceUnityMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Collections.Generic.Queue`1<System.String> LogQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::StringW>*& Backtrace::Unity::Model::BacktraceLogManager::dyn_LogQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceLogManager::dyn_LogQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LogQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object lockObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Backtrace::Unity::Model::BacktraceLogManager::dyn_lockObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceLogManager::dyn_lockObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt32 _limit
[[deprecated("Use field access instead!")]] uint& Backtrace::Unity::Model::BacktraceLogManager::dyn__limit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceLogManager::dyn__limit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_limit"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceLogManager.get_Size
int Backtrace::Unity::Model::BacktraceLogManager::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceLogManager::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceLogManager.get_Disabled
bool Backtrace::Unity::Model::BacktraceLogManager::get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceLogManager::get_Disabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Disabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceLogManager.Enqueue
bool Backtrace::Unity::Model::BacktraceLogManager::Enqueue(::Backtrace::Unity::Model::BacktraceReport* report) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceLogManager::Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(report)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, report);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceLogManager.Enqueue
bool Backtrace::Unity::Model::BacktraceLogManager::Enqueue(::StringW message, ::StringW stackTrace, ::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceLogManager::Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, stackTrace, type);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceLogManager.Enqueue
bool Backtrace::Unity::Model::BacktraceLogManager::Enqueue(::Backtrace::Unity::Model::BacktraceUnityMessage* unityMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceLogManager::Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unityMessage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unityMessage);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceLogManager.ToSourceCode
::StringW Backtrace::Unity::Model::BacktraceLogManager::ToSourceCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceLogManager::ToSourceCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSourceCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.BacktraceReport
#include "Backtrace/Unity/Model/BacktraceReport.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceStackFrame
#include "Backtrace/Unity/Model/BacktraceStackFrame.hpp"
// Including type: Backtrace.Unity.Model.BacktraceSourceCode
#include "Backtrace/Unity/Model/BacktraceSourceCode.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String ErrorTypeAttributeName
::StringW Backtrace::Unity::Model::BacktraceReport::_get_ErrorTypeAttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::_get_ErrorTypeAttributeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model", "BacktraceReport", "ErrorTypeAttributeName"));
}
// Autogenerated static field setter
// Set static field: static private System.String ErrorTypeAttributeName
void Backtrace::Unity::Model::BacktraceReport::_set_ErrorTypeAttributeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::_set_ErrorTypeAttributeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceReport", "ErrorTypeAttributeName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <Fingerprint>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceReport::dyn_$Fingerprint$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::dyn_$Fingerprint$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Fingerprint>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Factor>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceReport::dyn_$Factor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::dyn_$Factor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Factor>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Guid Uuid
[[deprecated("Use field access instead!")]] ::System::Guid& Backtrace::Unity::Model::BacktraceReport::dyn_Uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::dyn_Uuid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Uuid"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 Timestamp
[[deprecated("Use field access instead!")]] int64_t& Backtrace::Unity::Model::BacktraceReport::dyn_Timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::dyn_Timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Timestamp"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean ExceptionTypeReport
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceReport::dyn_ExceptionTypeReport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::dyn_ExceptionTypeReport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExceptionTypeReport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Classifier
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceReport::dyn_Classifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::dyn_Classifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Classifier"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.String> <Attributes>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Backtrace::Unity::Model::BacktraceReport::dyn_$Attributes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::dyn_$Attributes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Attributes>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Message>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceReport::dyn_$Message$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::dyn_$Message$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Message>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception <Exception>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Exception*& Backtrace::Unity::Model::BacktraceReport::dyn_$Exception$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::dyn_$Exception$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Exception>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> <AttachmentPaths>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Backtrace::Unity::Model::BacktraceReport::dyn_$AttachmentPaths$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::dyn_$AttachmentPaths$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AttachmentPaths>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Backtrace.Unity.Model.BacktraceStackFrame> <DiagnosticStack>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::BacktraceStackFrame*>*& Backtrace::Unity::Model::BacktraceReport::dyn_$DiagnosticStack$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::dyn_$DiagnosticStack$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DiagnosticStack>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Backtrace::Unity::Model::BacktraceStackFrame*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.BacktraceSourceCode SourceCode
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceSourceCode*& Backtrace::Unity::Model::BacktraceReport::dyn_SourceCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::dyn_SourceCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SourceCode"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceSourceCode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.get_Fingerprint
::StringW Backtrace::Unity::Model::BacktraceReport::get_Fingerprint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::get_Fingerprint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Fingerprint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.set_Fingerprint
void Backtrace::Unity::Model::BacktraceReport::set_Fingerprint(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::set_Fingerprint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Fingerprint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.get_Factor
::StringW Backtrace::Unity::Model::BacktraceReport::get_Factor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::get_Factor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Factor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.set_Factor
void Backtrace::Unity::Model::BacktraceReport::set_Factor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::set_Factor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Factor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.get_Attributes
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Backtrace::Unity::Model::BacktraceReport::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.set_Attributes
void Backtrace::Unity::Model::BacktraceReport::set_Attributes(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::set_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.get_Message
::StringW Backtrace::Unity::Model::BacktraceReport::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.set_Message
void Backtrace::Unity::Model::BacktraceReport::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.get_Exception
::System::Exception* Backtrace::Unity::Model::BacktraceReport::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::get_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.set_Exception
void Backtrace::Unity::Model::BacktraceReport::set_Exception(::System::Exception* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::set_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.get_AttachmentPaths
::System::Collections::Generic::List_1<::StringW>* Backtrace::Unity::Model::BacktraceReport::get_AttachmentPaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::get_AttachmentPaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttachmentPaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.set_AttachmentPaths
void Backtrace::Unity::Model::BacktraceReport::set_AttachmentPaths(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::set_AttachmentPaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AttachmentPaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.get_DiagnosticStack
::System::Collections::Generic::List_1<::Backtrace::Unity::Model::BacktraceStackFrame*>* Backtrace::Unity::Model::BacktraceReport::get_DiagnosticStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::get_DiagnosticStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DiagnosticStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Backtrace::Unity::Model::BacktraceStackFrame*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.set_DiagnosticStack
void Backtrace::Unity::Model::BacktraceReport::set_DiagnosticStack(::System::Collections::Generic::List_1<::Backtrace::Unity::Model::BacktraceStackFrame*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::set_DiagnosticStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DiagnosticStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.SetDefaultAttributes
void Backtrace::Unity::Model::BacktraceReport::SetDefaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::SetDefaultAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.AssignSourceCodeToReport
void Backtrace::Unity::Model::BacktraceReport::AssignSourceCodeToReport(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::AssignSourceCodeToReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignSourceCodeToReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.SetClassifierInfo
void Backtrace::Unity::Model::BacktraceReport::SetClassifierInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::SetClassifierInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetClassifierInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.SetReportFingerprint
void Backtrace::Unity::Model::BacktraceReport::SetReportFingerprint(bool generateFingerprint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::SetReportFingerprint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReportFingerprint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(generateFingerprint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, generateFingerprint);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.ToBacktraceData
::Backtrace::Unity::Model::BacktraceData* Backtrace::Unity::Model::BacktraceReport::ToBacktraceData(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* clientAttributes, int gameObjectDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::ToBacktraceData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBacktraceData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientAttributes), ::il2cpp_utils::ExtractType(gameObjectDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceData*, false>(this, ___internal__method, clientAttributes, gameObjectDepth);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.SetStacktraceInformation
void Backtrace::Unity::Model::BacktraceReport::SetStacktraceInformation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::SetStacktraceInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStacktraceInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceReport.CreateInnerReport
::Backtrace::Unity::Model::BacktraceReport* Backtrace::Unity::Model::BacktraceReport::CreateInnerReport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceReport::CreateInnerReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInnerReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceReport*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.BacktraceResult
#include "Backtrace/Unity/Model/BacktraceResult.hpp"
// Including type: Backtrace.Unity.Model.BacktraceResult/BacktraceRawResult
#include "Backtrace/Unity/Model/BacktraceResult_BacktraceRawResult.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Model.BacktraceResult InnerExceptionResult
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceResult*& Backtrace::Unity::Model::BacktraceResult::dyn_InnerExceptionResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::dyn_InnerExceptionResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InnerExceptionResult"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String message
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceResult::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String response
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceResult::dyn_response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::dyn_response");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "response"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Backtrace.Unity.Types.BacktraceResultStatus Status
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Types::BacktraceResultStatus& Backtrace::Unity::Model::BacktraceResult::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Types::BacktraceResultStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String object
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceResult::dyn_object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::dyn_object");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "object"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String _rxId
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceResult::dyn__rxId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::dyn__rxId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rxId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceResult.get_Message
::StringW Backtrace::Unity::Model::BacktraceResult::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceResult.set_Message
void Backtrace::Unity::Model::BacktraceResult::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceResult.get_Object
::StringW Backtrace::Unity::Model::BacktraceResult::get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::get_Object");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceResult.set_Object
void Backtrace::Unity::Model::BacktraceResult::set_Object(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::set_Object");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceResult.get_RxId
::StringW Backtrace::Unity::Model::BacktraceResult::get_RxId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::get_RxId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RxId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceResult.set_RxId
void Backtrace::Unity::Model::BacktraceResult::set_RxId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::set_RxId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RxId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceResult.OnLimitReached
::Backtrace::Unity::Model::BacktraceResult* Backtrace::Unity::Model::BacktraceResult::OnLimitReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::OnLimitReached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model", "BacktraceResult", "OnLimitReached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceResult*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceResult.OnNetworkError
::Backtrace::Unity::Model::BacktraceResult* Backtrace::Unity::Model::BacktraceResult::OnNetworkError(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::OnNetworkError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model", "BacktraceResult", "OnNetworkError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceResult*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceResult.AddInnerResult
void Backtrace::Unity::Model::BacktraceResult::AddInnerResult(::Backtrace::Unity::Model::BacktraceResult* innerResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::AddInnerResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInnerResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, innerResult);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceResult.FromJson
::Backtrace::Unity::Model::BacktraceResult* Backtrace::Unity::Model::BacktraceResult::FromJson(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::FromJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model", "BacktraceResult", "FromJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceResult*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.BacktraceResult/BacktraceRawResult
#include "Backtrace/Unity/Model/BacktraceResult_BacktraceRawResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String response
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceResult::BacktraceRawResult::dyn_response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::BacktraceRawResult::dyn_response");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "response"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String _rxid
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceResult::BacktraceRawResult::dyn__rxid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceResult::BacktraceRawResult::dyn__rxid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rxid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.BacktraceSelfSSLCertificateHandler
#include "Backtrace/Unity/Model/BacktraceSelfSSLCertificateHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String PUB_KEY
::StringW Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler::_get_PUB_KEY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler::_get_PUB_KEY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model", "BacktraceSelfSSLCertificateHandler", "PUB_KEY"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String PUB_KEY
void Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler::_set_PUB_KEY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler::_set_PUB_KEY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceSelfSSLCertificateHandler", "PUB_KEY", value));
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceSelfSSLCertificateHandler..cctor
void Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model", "BacktraceSelfSSLCertificateHandler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceSelfSSLCertificateHandler.ValidateCertificate
bool Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler::ValidateCertificate(::ArrayW<uint8_t> certificateData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceSelfSSLCertificateHandler::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::CertificateHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificateData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.BacktraceSourceCode
#include "Backtrace/Unity/Model/BacktraceSourceCode.hpp"
// Including type: Backtrace.Unity.Json.BacktraceJObject
#include "Backtrace/Unity/Json/BacktraceJObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String SOURCE_CODE_PROPERTY
::StringW Backtrace::Unity::Model::BacktraceSourceCode::_get_SOURCE_CODE_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceSourceCode::_get_SOURCE_CODE_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model", "BacktraceSourceCode", "SOURCE_CODE_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static System.String SOURCE_CODE_PROPERTY
void Backtrace::Unity::Model::BacktraceSourceCode::_set_SOURCE_CODE_PROPERTY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceSourceCode::_set_SOURCE_CODE_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceSourceCode", "SOURCE_CODE_PROPERTY", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Type
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceSourceCode::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceSourceCode::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Title
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceSourceCode::dyn_Title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceSourceCode::dyn_Title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Title"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Text>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceSourceCode::dyn_$Text$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceSourceCode::dyn_$Text$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Text>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceSourceCode.get_Text
::StringW Backtrace::Unity::Model::BacktraceSourceCode::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceSourceCode::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceSourceCode.set_Text
void Backtrace::Unity::Model::BacktraceSourceCode::set_Text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceSourceCode::set_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceSourceCode.ToJson
::Backtrace::Unity::Json::BacktraceJObject* Backtrace::Unity::Model::BacktraceSourceCode::ToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceSourceCode::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Json::BacktraceJObject*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceSourceCode..cctor
void Backtrace::Unity::Model::BacktraceSourceCode::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceSourceCode::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model", "BacktraceSourceCode", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Backtrace.Unity.Model.BacktraceStackFrame
#include "Backtrace/Unity/Model/BacktraceStackFrame.hpp"
// Including type: Backtrace.Unity.Json.BacktraceJObject
#include "Backtrace/Unity/Json/BacktraceJObject.hpp"
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] _frameSeparators
::ArrayW<::StringW> Backtrace::Unity::Model::BacktraceStackFrame::_get__frameSeparators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::_get__frameSeparators");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Backtrace.Unity.Model", "BacktraceStackFrame", "_frameSeparators"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] _frameSeparators
void Backtrace::Unity::Model::BacktraceStackFrame::_set__frameSeparators(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::_set__frameSeparators");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceStackFrame", "_frameSeparators", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String FunctionName
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceStackFrame::dyn_FunctionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::dyn_FunctionName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FunctionName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Backtrace.Unity.Types.BacktraceStackFrameType StackFrameType
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Types::BacktraceStackFrameType& Backtrace::Unity::Model::BacktraceStackFrame::dyn_StackFrameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::dyn_StackFrameType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StackFrameType"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Types::BacktraceStackFrameType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Line
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::BacktraceStackFrame::dyn_Line() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::dyn_Line");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Line"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MemberInfo
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceStackFrame::dyn_MemberInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::dyn_MemberInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MemberInfo"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SourceCodeFullPath
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceStackFrame::dyn_SourceCodeFullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::dyn_SourceCodeFullPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SourceCodeFullPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Column
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::BacktraceStackFrame::dyn_Column() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::dyn_Column");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Column"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ILOffset
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::BacktraceStackFrame::dyn_ILOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::dyn_ILOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ILOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SourceCode
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceStackFrame::dyn_SourceCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::dyn_SourceCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SourceCode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Address
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceStackFrame::dyn_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::dyn_Address");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Address"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Assembly
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceStackFrame::dyn_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::dyn_Assembly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Assembly"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <InvalidFrame>k__BackingField
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceStackFrame::dyn_$InvalidFrame$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::dyn_$InvalidFrame$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InvalidFrame>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Library
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceStackFrame::dyn_Library() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::dyn_Library");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Library"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceStackFrame.get_FileName
::StringW Backtrace::Unity::Model::BacktraceStackFrame::get_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::get_FileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceStackFrame.get_InvalidFrame
bool Backtrace::Unity::Model::BacktraceStackFrame::get_InvalidFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::get_InvalidFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InvalidFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceStackFrame.set_InvalidFrame
void Backtrace::Unity::Model::BacktraceStackFrame::set_InvalidFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::set_InvalidFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InvalidFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceStackFrame.ToJson
::Backtrace::Unity::Json::BacktraceJObject* Backtrace::Unity::Model::BacktraceStackFrame::ToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Json::BacktraceJObject*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceStackFrame.GetMethodName
::StringW Backtrace::Unity::Model::BacktraceStackFrame::GetMethodName(::System::Reflection::MethodBase* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::GetMethodName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceStackFrame.GetFileNameFromLibraryName
::StringW Backtrace::Unity::Model::BacktraceStackFrame::GetFileNameFromLibraryName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::GetFileNameFromLibraryName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFileNameFromLibraryName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceStackFrame.GetFileNameFromFunctionName
::StringW Backtrace::Unity::Model::BacktraceStackFrame::GetFileNameFromFunctionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::GetFileNameFromFunctionName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFileNameFromFunctionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceStackFrame..cctor
void Backtrace::Unity::Model::BacktraceStackFrame::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model", "BacktraceStackFrame", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceStackFrame.ToString
::StringW Backtrace::Unity::Model::BacktraceStackFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackFrame::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.BacktraceStackTrace
#include "Backtrace/Unity/Model/BacktraceStackTrace.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceStackFrame
#include "Backtrace/Unity/Model/BacktraceStackFrame.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<Backtrace.Unity.Model.BacktraceStackFrame> StackFrames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::BacktraceStackFrame*>*& Backtrace::Unity::Model::BacktraceStackTrace::dyn_StackFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackTrace::dyn_StackFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StackFrames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Backtrace::Unity::Model::BacktraceStackFrame*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Exception _exception
[[deprecated("Use field access instead!")]] ::System::Exception*& Backtrace::Unity::Model::BacktraceStackTrace::dyn__exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackTrace::dyn__exception");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exception"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceStackTrace.Initialize
void Backtrace::Unity::Model::BacktraceStackTrace::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackTrace::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceStackTrace.SetStacktraceInformation
void Backtrace::Unity::Model::BacktraceStackTrace::SetStacktraceInformation(::ArrayW<::System::Diagnostics::StackFrame*> frames, bool generatedByException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceStackTrace::SetStacktraceInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStacktraceInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frames), ::il2cpp_utils::ExtractType(generatedByException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frames, generatedByException);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.BacktraceUnhandledException
#include "Backtrace/Unity/Model/BacktraceUnhandledException.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceStackFrame
#include "Backtrace/Unity/Model/BacktraceStackFrame.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] _javaExtensions
::ArrayW<::StringW> Backtrace::Unity::Model::BacktraceUnhandledException::_get__javaExtensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::_get__javaExtensions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Backtrace.Unity.Model", "BacktraceUnhandledException", "_javaExtensions"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] _javaExtensions
void Backtrace::Unity::Model::BacktraceUnhandledException::_set__javaExtensions(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::_set__javaExtensions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "BacktraceUnhandledException", "_javaExtensions", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _header
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::BacktraceUnhandledException::dyn__header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::dyn__header");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_header"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _message
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceUnhandledException::dyn__message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::dyn__message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Classifier>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceUnhandledException::dyn_$Classifier$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::dyn_$Classifier$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Classifier>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _stacktrace
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceUnhandledException::dyn__stacktrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::dyn__stacktrace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stacktrace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LogType <Type>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::LogType& Backtrace::Unity::Model::BacktraceUnhandledException::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::LogType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<Backtrace.Unity.Model.BacktraceStackFrame> StackFrames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Backtrace::Unity::Model::BacktraceStackFrame*>*& Backtrace::Unity::Model::BacktraceUnhandledException::dyn_StackFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::dyn_StackFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StackFrames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Backtrace::Unity::Model::BacktraceStackFrame*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException.get_Header
bool Backtrace::Unity::Model::BacktraceUnhandledException::get_Header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::get_Header");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Header", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException.get_Classifier
::StringW Backtrace::Unity::Model::BacktraceUnhandledException::get_Classifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::get_Classifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Classifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException.set_Classifier
void Backtrace::Unity::Model::BacktraceUnhandledException::set_Classifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::set_Classifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Classifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException.get_Type
::UnityEngine::LogType Backtrace::Unity::Model::BacktraceUnhandledException::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LogType, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException.set_Type
void Backtrace::Unity::Model::BacktraceUnhandledException::set_Type(::UnityEngine::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::set_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException.GetStackTraceErrorMessage
::StringW Backtrace::Unity::Model::BacktraceUnhandledException::GetStackTraceErrorMessage(::StringW beginningOfTheFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::GetStackTraceErrorMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStackTraceErrorMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beginningOfTheFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, beginningOfTheFrame);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException.ConvertStackFrames
::System::Collections::Generic::List_1<::Backtrace::Unity::Model::BacktraceStackFrame*>* Backtrace::Unity::Model::BacktraceUnhandledException::ConvertStackFrames(::System::Collections::Generic::IEnumerable_1<::StringW>* frames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::ConvertStackFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertStackFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frames)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Backtrace::Unity::Model::BacktraceStackFrame*>*, false>(this, ___internal__method, frames);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException.ConvertFrame
::Backtrace::Unity::Model::BacktraceStackFrame* Backtrace::Unity::Model::BacktraceUnhandledException::ConvertFrame(::StringW frameString, int methodNameEndIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::ConvertFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameString), ::il2cpp_utils::ExtractType(methodNameEndIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceStackFrame*, false>(this, ___internal__method, frameString, methodNameEndIndex);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException.SetJITStackTraceInformation
::Backtrace::Unity::Model::BacktraceStackFrame* Backtrace::Unity::Model::BacktraceUnhandledException::SetJITStackTraceInformation(::StringW frameString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::SetJITStackTraceInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJITStackTraceInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameString)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceStackFrame*, false>(this, ___internal__method, frameString);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException.SetNativeStackTraceInformation
::Backtrace::Unity::Model::BacktraceStackFrame* Backtrace::Unity::Model::BacktraceUnhandledException::SetNativeStackTraceInformation(::StringW frameString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::SetNativeStackTraceInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNativeStackTraceInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameString)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceStackFrame*, false>(this, ___internal__method, frameString);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException.SetAndroidStackTraceInformation
::Backtrace::Unity::Model::BacktraceStackFrame* Backtrace::Unity::Model::BacktraceUnhandledException::SetAndroidStackTraceInformation(::StringW frameString, int parameterStart, int parameterEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::SetAndroidStackTraceInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAndroidStackTraceInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameString), ::il2cpp_utils::ExtractType(parameterStart), ::il2cpp_utils::ExtractType(parameterEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceStackFrame*, false>(this, ___internal__method, frameString, parameterStart, parameterEnd);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException.SetDefaultStackTraceInformation
::Backtrace::Unity::Model::BacktraceStackFrame* Backtrace::Unity::Model::BacktraceUnhandledException::SetDefaultStackTraceInformation(::StringW frameString, int methodNameEndIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::SetDefaultStackTraceInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultStackTraceInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameString), ::il2cpp_utils::ExtractType(methodNameEndIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceStackFrame*, false>(this, ___internal__method, frameString, methodNameEndIndex);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException.TrySetClassifier
void Backtrace::Unity::Model::BacktraceUnhandledException::TrySetClassifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::TrySetClassifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySetClassifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException..cctor
void Backtrace::Unity::Model::BacktraceUnhandledException::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model", "BacktraceUnhandledException", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException.get_Message
::StringW Backtrace::Unity::Model::BacktraceUnhandledException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnhandledException.get_StackTrace
::StringW Backtrace::Unity::Model::BacktraceUnhandledException::get_StackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnhandledException::get_StackTrace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Backtrace.Unity.Model.BacktraceUnityMessage
#include "Backtrace/Unity/Model/BacktraceUnityMessage.hpp"
// Including type: Backtrace.Unity.Model.BacktraceReport
#include "Backtrace/Unity/Model/BacktraceReport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _formattedMessage
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceUnityMessage::dyn__formattedMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnityMessage::dyn__formattedMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_formattedMessage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Message
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceUnityMessage::dyn_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnityMessage::dyn_Message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String StackTrace
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::BacktraceUnityMessage::dyn_StackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnityMessage::dyn_StackTrace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StackTrace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.LogType Type
[[deprecated("Use field access instead!")]] ::UnityEngine::LogType& Backtrace::Unity::Model::BacktraceUnityMessage::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnityMessage::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::UnityEngine::LogType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnityMessage.GetFormattedMessage
::StringW Backtrace::Unity::Model::BacktraceUnityMessage::GetFormattedMessage(bool backtraceFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnityMessage::GetFormattedMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFormattedMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backtraceFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, backtraceFrame);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnityMessage.GetFormattedStackTrace
::StringW Backtrace::Unity::Model::BacktraceUnityMessage::GetFormattedStackTrace(::StringW stacktrace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnityMessage::GetFormattedStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFormattedStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stacktrace)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, stacktrace);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnityMessage.IsUnhandledException
bool Backtrace::Unity::Model::BacktraceUnityMessage::IsUnhandledException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnityMessage::IsUnhandledException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUnhandledException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.BacktraceUnityMessage.ToString
::StringW Backtrace::Unity::Model::BacktraceUnityMessage::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::BacktraceUnityMessage::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.DeduplicationModel
#include "Backtrace/Unity/Model/DeduplicationModel.hpp"
// Including type: Backtrace.Unity.Model.DeduplicationModel/<>c
#include "Backtrace/Unity/Model/DeduplicationModel_--c.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Backtrace.Unity.Model.BacktraceData _backtraceData
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceData*& Backtrace::Unity::Model::DeduplicationModel::dyn__backtraceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::dyn__backtraceData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backtraceData"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Backtrace.Unity.Types.DeduplicationStrategy _strategy
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Types::DeduplicationStrategy& Backtrace::Unity::Model::DeduplicationModel::dyn__strategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::dyn__strategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strategy"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Types::DeduplicationStrategy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.DeduplicationModel.get_StackTrace
::StringW Backtrace::Unity::Model::DeduplicationModel::get_StackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::get_StackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.DeduplicationModel.get_Classifier
::StringW Backtrace::Unity::Model::DeduplicationModel::get_Classifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::get_Classifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Classifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.DeduplicationModel.get_ExceptionMessage
::StringW Backtrace::Unity::Model::DeduplicationModel::get_ExceptionMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::get_ExceptionMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExceptionMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.DeduplicationModel.get_Factor
::StringW Backtrace::Unity::Model::DeduplicationModel::get_Factor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::get_Factor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Factor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.DeduplicationModel.GetSha
::StringW Backtrace::Unity::Model::DeduplicationModel::GetSha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::GetSha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.DeduplicationModel/<>c
#include "Backtrace/Unity/Model/DeduplicationModel_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Backtrace.Unity.Model.BacktraceStackFrame
#include "Backtrace/Unity/Model/BacktraceStackFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Backtrace.Unity.Model.DeduplicationModel/<>c <>9
::Backtrace::Unity::Model::DeduplicationModel::$$c* Backtrace::Unity::Model::DeduplicationModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::DeduplicationModel::$$c*>("Backtrace.Unity.Model", "DeduplicationModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Backtrace.Unity.Model.DeduplicationModel/<>c <>9
void Backtrace::Unity::Model::DeduplicationModel::$$c::_set_$$9(::Backtrace::Unity::Model::DeduplicationModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "DeduplicationModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Backtrace.Unity.Model.BacktraceStackFrame,System.String> <>9__4_0
::System::Func_2<::Backtrace::Unity::Model::BacktraceStackFrame*, ::StringW>* Backtrace::Unity::Model::DeduplicationModel::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Backtrace::Unity::Model::BacktraceStackFrame*, ::StringW>*>("Backtrace.Unity.Model", "DeduplicationModel/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Backtrace.Unity.Model.BacktraceStackFrame,System.String> <>9__4_0
void Backtrace::Unity::Model::DeduplicationModel::$$c::_set_$$9__4_0(::System::Func_2<::Backtrace::Unity::Model::BacktraceStackFrame*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "DeduplicationModel/<>c", "<>9__4_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,System.String> <>9__4_1
::System::Func_2<::StringW, ::StringW>* Backtrace::Unity::Model::DeduplicationModel::$$c::_get_$$9__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::$$c::_get_$$9__4_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::StringW, ::StringW>*>("Backtrace.Unity.Model", "DeduplicationModel/<>c", "<>9__4_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,System.String> <>9__4_1
void Backtrace::Unity::Model::DeduplicationModel::$$c::_set_$$9__4_1(::System::Func_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::$$c::_set_$$9__4_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "DeduplicationModel/<>c", "<>9__4_1", value)));
}
// Autogenerated method: Backtrace.Unity.Model.DeduplicationModel/<>c..cctor
void Backtrace::Unity::Model::DeduplicationModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model", "DeduplicationModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.DeduplicationModel/<>c.<get_StackTrace>b__4_0
::StringW Backtrace::Unity::Model::DeduplicationModel::$$c::$get_StackTrace$b__4_0(::Backtrace::Unity::Model::BacktraceStackFrame* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::$$c::<get_StackTrace>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_StackTrace>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, n);
}
// Autogenerated method: Backtrace.Unity.Model.DeduplicationModel/<>c.<get_StackTrace>b__4_1
::StringW Backtrace::Unity::Model::DeduplicationModel::$$c::$get_StackTrace$b__4_1(::StringW n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::DeduplicationModel::$$c::<get_StackTrace>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_StackTrace>b__4_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.IBacktraceHttpClient
#include "Backtrace/Unity/Model/IBacktraceHttpClient.hpp"
// Including type: Backtrace.Unity.Json.BacktraceJObject
#include "Backtrace/Unity/Json/BacktraceJObject.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Model.IBacktraceHttpClient.get_IgnoreSslValidation
bool Backtrace::Unity::Model::IBacktraceHttpClient::get_IgnoreSslValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::IBacktraceHttpClient::get_IgnoreSslValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::IBacktraceHttpClient*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.IBacktraceHttpClient.set_IgnoreSslValidation
void Backtrace::Unity::Model::IBacktraceHttpClient::set_IgnoreSslValidation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::IBacktraceHttpClient::set_IgnoreSslValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::IBacktraceHttpClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.IBacktraceHttpClient.Post
void Backtrace::Unity::Model::IBacktraceHttpClient::Post(::StringW submissionUrl, ::Backtrace::Unity::Json::BacktraceJObject* jObject, ::System::Action_3<int64_t, bool, ::StringW>* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::IBacktraceHttpClient::Post");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::IBacktraceHttpClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, submissionUrl, jObject, onComplete);
}
// Autogenerated method: Backtrace.Unity.Model.IBacktraceHttpClient.Post
::UnityEngine::Networking::UnityWebRequest* Backtrace::Unity::Model::IBacktraceHttpClient::Post(::StringW submissionUrl, ::StringW json, ::System::Collections::Generic::IEnumerable_1<::StringW>* attachments, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::IBacktraceHttpClient::Post");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::IBacktraceHttpClient*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(this, ___internal__method, submissionUrl, json, attachments, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.IBacktraceHttpClient.Post
::UnityEngine::Networking::UnityWebRequest* Backtrace::Unity::Model::IBacktraceHttpClient::Post(::StringW submissionUrl, ::ArrayW<uint8_t> minidump, ::System::Collections::Generic::IEnumerable_1<::StringW>* attachments, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::IBacktraceHttpClient::Post");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::IBacktraceHttpClient*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(this, ___internal__method, submissionUrl, minidump, attachments, attributes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.MachineIdStorage
#include "Backtrace/Unity/Model/MachineIdStorage.hpp"
// Including type: Backtrace.Unity.Model.MachineIdStorage/<>c
#include "Backtrace/Unity/Model/MachineIdStorage_--c.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String MachineIdentifierKey
::StringW Backtrace::Unity::Model::MachineIdStorage::_get_MachineIdentifierKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::MachineIdStorage::_get_MachineIdentifierKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model", "MachineIdStorage", "MachineIdentifierKey"));
}
// Autogenerated static field setter
// Set static field: static System.String MachineIdentifierKey
void Backtrace::Unity::Model::MachineIdStorage::_set_MachineIdentifierKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::MachineIdStorage::_set_MachineIdentifierKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "MachineIdStorage", "MachineIdentifierKey", value));
}
// Autogenerated method: Backtrace.Unity.Model.MachineIdStorage.GenerateMachineId
::StringW Backtrace::Unity::Model::MachineIdStorage::GenerateMachineId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::MachineIdStorage::GenerateMachineId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateMachineId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.MachineIdStorage.FetchMachineIdFromStorage
::StringW Backtrace::Unity::Model::MachineIdStorage::FetchMachineIdFromStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::MachineIdStorage::FetchMachineIdFromStorage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FetchMachineIdFromStorage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.MachineIdStorage.StoreMachineId
void Backtrace::Unity::Model::MachineIdStorage::StoreMachineId(::StringW machineId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::MachineIdStorage::StoreMachineId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreMachineId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(machineId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, machineId);
}
// Autogenerated method: Backtrace.Unity.Model.MachineIdStorage.UseUnityIdentifier
::StringW Backtrace::Unity::Model::MachineIdStorage::UseUnityIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::MachineIdStorage::UseUnityIdentifier");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::MachineIdStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.MachineIdStorage.UseNetworkingIdentifier
::StringW Backtrace::Unity::Model::MachineIdStorage::UseNetworkingIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::MachineIdStorage::UseNetworkingIdentifier");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::MachineIdStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.MachineIdStorage/<>c
#include "Backtrace/Unity/Model/MachineIdStorage_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterface
#include "System/Net/NetworkInformation/NetworkInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Backtrace.Unity.Model.MachineIdStorage/<>c <>9
::Backtrace::Unity::Model::MachineIdStorage::$$c* Backtrace::Unity::Model::MachineIdStorage::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::MachineIdStorage::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::MachineIdStorage::$$c*>("Backtrace.Unity.Model", "MachineIdStorage/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Backtrace.Unity.Model.MachineIdStorage/<>c <>9
void Backtrace::Unity::Model::MachineIdStorage::$$c::_set_$$9(::Backtrace::Unity::Model::MachineIdStorage::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::MachineIdStorage::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "MachineIdStorage/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Net.NetworkInformation.NetworkInterface,System.Boolean> <>9__5_0
::System::Func_2<::System::Net::NetworkInformation::NetworkInterface*, bool>* Backtrace::Unity::Model::MachineIdStorage::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::MachineIdStorage::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Net::NetworkInformation::NetworkInterface*, bool>*>("Backtrace.Unity.Model", "MachineIdStorage/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Net.NetworkInformation.NetworkInterface,System.Boolean> <>9__5_0
void Backtrace::Unity::Model::MachineIdStorage::$$c::_set_$$9__5_0(::System::Func_2<::System::Net::NetworkInformation::NetworkInterface*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::MachineIdStorage::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Model", "MachineIdStorage/<>c", "<>9__5_0", value)));
}
// Autogenerated method: Backtrace.Unity.Model.MachineIdStorage/<>c..cctor
void Backtrace::Unity::Model::MachineIdStorage::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::MachineIdStorage::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model", "MachineIdStorage/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.MachineIdStorage/<>c.<UseNetworkingIdentifier>b__5_0
bool Backtrace::Unity::Model::MachineIdStorage::$$c::$UseNetworkingIdentifier$b__5_0(::System::Net::NetworkInformation::NetworkInterface* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::MachineIdStorage::$$c::<UseNetworkingIdentifier>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UseNetworkingIdentifier>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Metrics.EventAggregationBase
#include "Backtrace/Unity/Model/Metrics/EventAggregationBase.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Backtrace.Unity.Json.BacktraceJObject
#include "Backtrace/Unity/Json/BacktraceJObject.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String TimestampName
::StringW Backtrace::Unity::Model::Metrics::EventAggregationBase::_get_TimestampName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::EventAggregationBase::_get_TimestampName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model.Metrics", "EventAggregationBase", "TimestampName"));
}
// Autogenerated static field setter
// Set static field: static private System.String TimestampName
void Backtrace::Unity::Model::Metrics::EventAggregationBase::_set_TimestampName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::EventAggregationBase::_set_TimestampName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Metrics", "EventAggregationBase", "TimestampName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String AttributesName
::StringW Backtrace::Unity::Model::Metrics::EventAggregationBase::_get_AttributesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::EventAggregationBase::_get_AttributesName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model.Metrics", "EventAggregationBase", "AttributesName"));
}
// Autogenerated static field setter
// Set static field: static private System.String AttributesName
void Backtrace::Unity::Model::Metrics::EventAggregationBase::_set_AttributesName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::EventAggregationBase::_set_AttributesName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Metrics", "EventAggregationBase", "AttributesName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <Timestamp>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& Backtrace::Unity::Model::Metrics::EventAggregationBase::dyn_$Timestamp$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::EventAggregationBase::dyn_$Timestamp$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Timestamp>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::Metrics::EventAggregationBase::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::EventAggregationBase::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.Metrics.EventAggregationBase.get_Timestamp
int64_t Backtrace::Unity::Model::Metrics::EventAggregationBase::get_Timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::EventAggregationBase::get_Timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Metrics.EventAggregationBase.set_Timestamp
void Backtrace::Unity::Model::Metrics::EventAggregationBase::set_Timestamp(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::EventAggregationBase::set_Timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Metrics.EventAggregationBase.get_Name
::StringW Backtrace::Unity::Model::Metrics::EventAggregationBase::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::EventAggregationBase::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Metrics.EventAggregationBase.set_Name
void Backtrace::Unity::Model::Metrics::EventAggregationBase::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::EventAggregationBase::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Metrics.EventAggregationBase.ToBaseObject
::Backtrace::Unity::Json::BacktraceJObject* Backtrace::Unity::Model::Metrics::EventAggregationBase::ToBaseObject(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::EventAggregationBase::ToBaseObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBaseObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Json::BacktraceJObject*, false>(this, ___internal__method, attributes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Metrics.SummedEvent
#include "Backtrace/Unity/Model/Metrics/SummedEvent.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Backtrace.Unity.Json.BacktraceJObject
#include "Backtrace/Unity/Json/BacktraceJObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String MetricGroupName
::StringW Backtrace::Unity::Model::Metrics::SummedEvent::_get_MetricGroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::SummedEvent::_get_MetricGroupName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model.Metrics", "SummedEvent", "MetricGroupName"));
}
// Autogenerated static field setter
// Set static field: static System.String MetricGroupName
void Backtrace::Unity::Model::Metrics::SummedEvent::_set_MetricGroupName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::SummedEvent::_set_MetricGroupName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Metrics", "SummedEvent", "MetricGroupName", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.Collections.Generic.IDictionary`2<System.String,System.String> Attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*& Backtrace::Unity::Model::Metrics::SummedEvent::dyn_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::SummedEvent::dyn_Attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.Metrics.SummedEvent.ToJson
::Backtrace::Unity::Json::BacktraceJObject* Backtrace::Unity::Model::Metrics::SummedEvent::ToJson(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* scopedAttributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::SummedEvent::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scopedAttributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Json::BacktraceJObject*, false>(this, ___internal__method, scopedAttributes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Metrics.SummedEventsSubmissionQueue
#include "Backtrace/Unity/Model/Metrics/SummedEventsSubmissionQueue.hpp"
// Including type: Backtrace.Unity.Model.Metrics.SummedEvent
#include "Backtrace/Unity/Model/Metrics/SummedEvent.hpp"
// Including type: Backtrace.Unity.Model.JsonData.AttributeProvider
#include "Backtrace/Unity/Model/JsonData/AttributeProvider.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Backtrace.Unity.Json.BacktraceJObject
#include "Backtrace/Unity/Json/BacktraceJObject.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String Name
::StringW Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model.Metrics", "SummedEventsSubmissionQueue", "Name"));
}
// Autogenerated static field setter
// Set static field: static private System.String Name
void Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue::_set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Metrics", "SummedEventsSubmissionQueue", "Name", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly Backtrace.Unity.Model.JsonData.AttributeProvider _attributeProvider
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::JsonData::AttributeProvider*& Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue::dyn__attributeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue::dyn__attributeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributeProvider"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::JsonData::AttributeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.Metrics.SummedEventsSubmissionQueue.GetEventsPayload
::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Json::BacktraceJObject*>* Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue::GetEventsPayload(::System::Collections::Generic::ICollection_1<::Backtrace::Unity::Model::Metrics::SummedEvent*>* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue::GetEventsPayload");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Json::BacktraceJObject*>*, false>(this, ___internal__method, events);
}
// Autogenerated method: Backtrace.Unity.Model.Metrics.SummedEventsSubmissionQueue.OnMaximumAttemptsReached
void Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue::OnMaximumAttemptsReached(::System::Collections::Generic::ICollection_1<::Backtrace::Unity::Model::Metrics::SummedEvent*>* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue::OnMaximumAttemptsReached");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, events);
}
// Autogenerated method: Backtrace.Unity.Model.Metrics.SummedEventsSubmissionQueue.StartWithEvent
void Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue::StartWithEvent(::StringW eventName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::SummedEventsSubmissionQueue::StartWithEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Metrics::MetricsSubmissionQueue_1<T>*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Metrics.UniqueEvent
#include "Backtrace/Unity/Model/Metrics/UniqueEvent.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Backtrace.Unity.Json.BacktraceJObject
#include "Backtrace/Unity/Json/BacktraceJObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String UniqueEventName
::StringW Backtrace::Unity::Model::Metrics::UniqueEvent::_get_UniqueEventName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::UniqueEvent::_get_UniqueEventName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model.Metrics", "UniqueEvent", "UniqueEventName"));
}
// Autogenerated static field setter
// Set static field: static System.String UniqueEventName
void Backtrace::Unity::Model::Metrics::UniqueEvent::_set_UniqueEventName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::UniqueEvent::_set_UniqueEventName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Metrics", "UniqueEvent", "UniqueEventName", value));
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.IDictionary`2<System.String,System.String> Attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*& Backtrace::Unity::Model::Metrics::UniqueEvent::dyn_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::UniqueEvent::dyn_Attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.Metrics.UniqueEvent.UpdateTimestamp
void Backtrace::Unity::Model::Metrics::UniqueEvent::UpdateTimestamp(int64_t timestamp, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::UniqueEvent::UpdateTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timestamp, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Metrics.UniqueEvent.ToJson
::Backtrace::Unity::Json::BacktraceJObject* Backtrace::Unity::Model::Metrics::UniqueEvent::ToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::UniqueEvent::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Json::BacktraceJObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Metrics.UniqueEventsSubmissionQueue
#include "Backtrace/Unity/Model/Metrics/UniqueEventsSubmissionQueue.hpp"
// Including type: Backtrace.Unity.Model.Metrics.UniqueEvent
#include "Backtrace/Unity/Model/Metrics/UniqueEvent.hpp"
// Including type: Backtrace.Unity.Model.JsonData.AttributeProvider
#include "Backtrace/Unity/Model/JsonData/AttributeProvider.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Backtrace.Unity.Json.BacktraceJObject
#include "Backtrace/Unity/Json/BacktraceJObject.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String Name
::StringW Backtrace::Unity::Model::Metrics::UniqueEventsSubmissionQueue::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::UniqueEventsSubmissionQueue::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model.Metrics", "UniqueEventsSubmissionQueue", "Name"));
}
// Autogenerated static field setter
// Set static field: static private System.String Name
void Backtrace::Unity::Model::Metrics::UniqueEventsSubmissionQueue::_set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::UniqueEventsSubmissionQueue::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Metrics", "UniqueEventsSubmissionQueue", "Name", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly Backtrace.Unity.Model.JsonData.AttributeProvider _attributeProvider
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::JsonData::AttributeProvider*& Backtrace::Unity::Model::Metrics::UniqueEventsSubmissionQueue::dyn__attributeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::UniqueEventsSubmissionQueue::dyn__attributeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributeProvider"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::JsonData::AttributeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.Metrics.UniqueEventsSubmissionQueue.GetEventsPayload
::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Json::BacktraceJObject*>* Backtrace::Unity::Model::Metrics::UniqueEventsSubmissionQueue::GetEventsPayload(::System::Collections::Generic::ICollection_1<::Backtrace::Unity::Model::Metrics::UniqueEvent*>* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::UniqueEventsSubmissionQueue::GetEventsPayload");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Metrics::UniqueEventsSubmissionQueue*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Json::BacktraceJObject*>*, false>(this, ___internal__method, events);
}
// Autogenerated method: Backtrace.Unity.Model.Metrics.UniqueEventsSubmissionQueue.GetUniqueEventAttributes
::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* Backtrace::Unity::Model::Metrics::UniqueEventsSubmissionQueue::GetUniqueEventAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::UniqueEventsSubmissionQueue::GetUniqueEventAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUniqueEventAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Metrics.UniqueEventsSubmissionQueue.StartWithEvent
void Backtrace::Unity::Model::Metrics::UniqueEventsSubmissionQueue::StartWithEvent(::StringW eventName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Metrics::UniqueEventsSubmissionQueue::StartWithEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Metrics::MetricsSubmissionQueue_1<T>*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.JsonData.Annotations
#include "Backtrace/Unity/Model/JsonData/Annotations.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Backtrace.Unity.Json.BacktraceJObject
#include "Backtrace/Unity/Json/BacktraceJObject.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.Dictionary`2<System.String,System.String> _environmentVariablesCache
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Backtrace::Unity::Model::JsonData::Annotations::_get__environmentVariablesCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::_get__environmentVariablesCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>("Backtrace.Unity.Model.JsonData", "Annotations", "_environmentVariablesCache")));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.Dictionary`2<System.String,System.String> _environmentVariablesCache
void Backtrace::Unity::Model::JsonData::Annotations::_set__environmentVariablesCache(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::_set__environmentVariablesCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.JsonData", "Annotations", "_environmentVariablesCache", value));
}
// Autogenerated static field getter
// Get static field: static System.Boolean VariablesLoaded
bool Backtrace::Unity::Model::JsonData::Annotations::_get_VariablesLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::_get_VariablesLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Backtrace.Unity.Model.JsonData", "Annotations", "VariablesLoaded"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean VariablesLoaded
void Backtrace::Unity::Model::JsonData::Annotations::_set_VariablesLoaded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::_set_VariablesLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.JsonData", "Annotations", "VariablesLoaded", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _gameObjectDepth
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::JsonData::Annotations::dyn__gameObjectDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::dyn__gameObjectDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameObjectDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception <Exception>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Exception*& Backtrace::Unity::Model::JsonData::Annotations::dyn_$Exception$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::dyn_$Exception$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Exception>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.Annotations.get_EnvironmentVariablesCache
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Backtrace::Unity::Model::JsonData::Annotations::get_EnvironmentVariablesCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::get_EnvironmentVariablesCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model.JsonData", "Annotations", "get_EnvironmentVariablesCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.Annotations.set_EnvironmentVariablesCache
void Backtrace::Unity::Model::JsonData::Annotations::set_EnvironmentVariablesCache(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::set_EnvironmentVariablesCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model.JsonData", "Annotations", "set_EnvironmentVariablesCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.Annotations.get_EnvironmentVariables
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Backtrace::Unity::Model::JsonData::Annotations::get_EnvironmentVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::get_EnvironmentVariables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnvironmentVariables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.Annotations.set_EnvironmentVariables
void Backtrace::Unity::Model::JsonData::Annotations::set_EnvironmentVariables(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::set_EnvironmentVariables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnvironmentVariables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.Annotations.get_Exception
::System::Exception* Backtrace::Unity::Model::JsonData::Annotations::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::get_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.Annotations.set_Exception
void Backtrace::Unity::Model::JsonData::Annotations::set_Exception(::System::Exception* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::set_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.Annotations.SetEnvironmentVariables
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Backtrace::Unity::Model::JsonData::Annotations::SetEnvironmentVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::SetEnvironmentVariables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model.JsonData", "Annotations", "SetEnvironmentVariables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.Annotations.ToJson
::Backtrace::Unity::Json::BacktraceJObject* Backtrace::Unity::Model::JsonData::Annotations::ToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Json::BacktraceJObject*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.Annotations.ConvertGameObject
::Backtrace::Unity::Json::BacktraceJObject* Backtrace::Unity::Model::JsonData::Annotations::ConvertGameObject(::UnityEngine::GameObject* gameObject, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::ConvertGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Json::BacktraceJObject*, false>(this, ___internal__method, gameObject, depth);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.Annotations.ConvertGameObject
::Backtrace::Unity::Json::BacktraceJObject* Backtrace::Unity::Model::JsonData::Annotations::ConvertGameObject(::UnityEngine::Component* gameObject, ::StringW parentName, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::ConvertGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(parentName), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Json::BacktraceJObject*, false>(this, ___internal__method, gameObject, parentName, depth);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.Annotations.GetJObject
::Backtrace::Unity::Json::BacktraceJObject* Backtrace::Unity::Model::JsonData::Annotations::GetJObject(::UnityEngine::GameObject* gameObject, ::StringW parentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::GetJObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetJObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(parentName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Json::BacktraceJObject*, false>(this, ___internal__method, gameObject, parentName);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.Annotations.GetJObject
::Backtrace::Unity::Json::BacktraceJObject* Backtrace::Unity::Model::JsonData::Annotations::GetJObject(::UnityEngine::Component* gameObject, ::StringW parentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::Annotations::GetJObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetJObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(parentName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Json::BacktraceJObject*, false>(this, ___internal__method, gameObject, parentName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.JsonData.AttributeProvider
#include "Backtrace/Unity/Model/JsonData/AttributeProvider.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: Backtrace.Unity.Model.Attributes.IDynamicAttributeProvider
#include "Backtrace/Unity/Model/Attributes/IDynamicAttributeProvider.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Backtrace.Unity.Model.Attributes.IScopeAttributeProvider
#include "Backtrace/Unity/Model/Attributes/IScopeAttributeProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IDictionary`2<System.String,System.String> _attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*& Backtrace::Unity::Model::JsonData::AttributeProvider::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::AttributeProvider::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IList`1<Backtrace.Unity.Model.Attributes.IDynamicAttributeProvider> _dynamicAttributeProvider
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::Backtrace::Unity::Model::Attributes::IDynamicAttributeProvider*>*& Backtrace::Unity::Model::JsonData::AttributeProvider::dyn__dynamicAttributeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::AttributeProvider::dyn__dynamicAttributeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dynamicAttributeProvider"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::Backtrace::Unity::Model::Attributes::IDynamicAttributeProvider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.AttributeProvider.get_ApplicationVersion
::StringW Backtrace::Unity::Model::JsonData::AttributeProvider::get_ApplicationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::AttributeProvider::get_ApplicationVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplicationVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.AttributeProvider.get_ApplicationSessionKey
::StringW Backtrace::Unity::Model::JsonData::AttributeProvider::get_ApplicationSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::AttributeProvider::get_ApplicationSessionKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplicationSessionKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.AttributeProvider.get_ApplicationGuid
::StringW Backtrace::Unity::Model::JsonData::AttributeProvider::get_ApplicationGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::AttributeProvider::get_ApplicationGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplicationGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.AttributeProvider.get_Item
::StringW Backtrace::Unity::Model::JsonData::AttributeProvider::get_Item(::StringW index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::AttributeProvider::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.AttributeProvider.set_Item
void Backtrace::Unity::Model::JsonData::AttributeProvider::set_Item(::StringW index, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::AttributeProvider::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.AttributeProvider.Count
int Backtrace::Unity::Model::JsonData::AttributeProvider::Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::AttributeProvider::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.AttributeProvider.AddDynamicAttributeProvider
void Backtrace::Unity::Model::JsonData::AttributeProvider::AddDynamicAttributeProvider(::Backtrace::Unity::Model::Attributes::IDynamicAttributeProvider* attributeProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::AttributeProvider::AddDynamicAttributeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDynamicAttributeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeProvider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeProvider);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.AttributeProvider.AddScopedAttributeProvider
void Backtrace::Unity::Model::JsonData::AttributeProvider::AddScopedAttributeProvider(::Backtrace::Unity::Model::Attributes::IScopeAttributeProvider* attributeProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::AttributeProvider::AddScopedAttributeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScopedAttributeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeProvider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeProvider);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.AttributeProvider.AddAttributes
void Backtrace::Unity::Model::JsonData::AttributeProvider::AddAttributes(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* source, bool includeDynamic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::AttributeProvider::AddAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(includeDynamic)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, includeDynamic);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.AttributeProvider.GenerateAttributes
::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* Backtrace::Unity::Model::JsonData::AttributeProvider::GenerateAttributes(bool includeDynamic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::AttributeProvider::GenerateAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includeDynamic)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method, includeDynamic);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.JsonData.BacktraceAttributes
#include "Backtrace/Unity/Model/JsonData/BacktraceAttributes.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Backtrace.Unity.Model.BacktraceReport
#include "Backtrace/Unity/Model/BacktraceReport.hpp"
// Including type: Backtrace.Unity.Json.BacktraceJObject
#include "Backtrace/Unity/Json/BacktraceJObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.String,System.String> Attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Backtrace::Unity::Model::JsonData::BacktraceAttributes::dyn_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::BacktraceAttributes::dyn_Attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.BacktraceAttributes.ToJson
::Backtrace::Unity::Json::BacktraceJObject* Backtrace::Unity::Model::JsonData::BacktraceAttributes::ToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::BacktraceAttributes::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Json::BacktraceJObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.JsonData.SourceCodeData
#include "Backtrace/Unity/Model/JsonData/SourceCodeData.hpp"
// Including type: Backtrace.Unity.Model.JsonData.SourceCodeData/SourceCode
#include "Backtrace/Unity/Model/JsonData/SourceCodeData_SourceCode.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceStackFrame
#include "Backtrace/Unity/Model/BacktraceStackFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,Backtrace.Unity.Model.JsonData.SourceCodeData/SourceCode> data
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode*>*& Backtrace::Unity::Model::JsonData::SourceCodeData::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::SourceCodeData::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.JsonData.SourceCodeData/SourceCode
#include "Backtrace/Unity/Model/JsonData/SourceCodeData_SourceCode.hpp"
// Including type: Backtrace.Unity.Model.BacktraceStackFrame
#include "Backtrace/Unity/Model/BacktraceStackFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <StartLine>k__BackingField
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::dyn_$StartLine$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::dyn_$StartLine$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StartLine>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <StartColumn>k__BackingField
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::dyn_$StartColumn$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::dyn_$StartColumn$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StartColumn>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <_sourceCodeFullPath>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::dyn_$_sourceCodeFullPath$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::dyn_$_sourceCodeFullPath$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<_sourceCodeFullPath>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.SourceCodeData/SourceCode.get_StartLine
int Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::get_StartLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::get_StartLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.SourceCodeData/SourceCode.set_StartLine
void Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::set_StartLine(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::set_StartLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.SourceCodeData/SourceCode.get_StartColumn
int Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::get_StartColumn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::get_StartColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.SourceCodeData/SourceCode.set_StartColumn
void Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::set_StartColumn(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::set_StartColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.SourceCodeData/SourceCode.get__sourceCodeFullPath
::StringW Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::get__sourceCodeFullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::get__sourceCodeFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__sourceCodeFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.SourceCodeData/SourceCode.set__sourceCodeFullPath
void Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::set__sourceCodeFullPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::set__sourceCodeFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set__sourceCodeFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.SourceCodeData/SourceCode.get_SourceCodeFullPath
::StringW Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::get_SourceCodeFullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::get_SourceCodeFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SourceCodeFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.SourceCodeData/SourceCode.set_SourceCodeFullPath
void Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::set_SourceCodeFullPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::set_SourceCodeFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SourceCodeFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.SourceCodeData/SourceCode.FromExceptionStack
::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode* Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::FromExceptionStack(::Backtrace::Unity::Model::BacktraceStackFrame* stackFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode::FromExceptionStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model.JsonData", "SourceCodeData/SourceCode", "FromExceptionStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stackFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::JsonData::SourceCodeData::SourceCode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stackFrame);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.JsonData.ThreadData
#include "Backtrace/Unity/Model/JsonData/ThreadData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Backtrace.Unity.Model.JsonData.ThreadInformation
#include "Backtrace/Unity/Model/JsonData/ThreadInformation.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceStackFrame
#include "Backtrace/Unity/Model/BacktraceStackFrame.hpp"
// Including type: Backtrace.Unity.Json.BacktraceJObject
#include "Backtrace/Unity/Json/BacktraceJObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,Backtrace.Unity.Model.JsonData.ThreadInformation> ThreadInformations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Backtrace::Unity::Model::JsonData::ThreadInformation*>*& Backtrace::Unity::Model::JsonData::ThreadData::dyn_ThreadInformations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::ThreadData::dyn_ThreadInformations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ThreadInformations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Backtrace::Unity::Model::JsonData::ThreadInformation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String MainThread
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::JsonData::ThreadData::dyn_MainThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::ThreadData::dyn_MainThread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MainThread"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.ThreadData.ToJson
::Backtrace::Unity::Json::BacktraceJObject* Backtrace::Unity::Model::JsonData::ThreadData::ToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::ThreadData::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Json::BacktraceJObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.JsonData.ThreadInformation
#include "Backtrace/Unity/Model/JsonData/ThreadInformation.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceStackFrame
#include "Backtrace/Unity/Model/BacktraceStackFrame.hpp"
// Including type: Backtrace.Unity.Json.BacktraceJObject
#include "Backtrace/Unity/Json/BacktraceJObject.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::JsonData::ThreadInformation::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::ThreadInformation::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Fault>k__BackingField
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::JsonData::ThreadInformation::dyn_$Fault$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::ThreadInformation::dyn_$Fault$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Fault>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.IEnumerable`1<Backtrace.Unity.Model.BacktraceStackFrame> Stack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::BacktraceStackFrame*>*& Backtrace::Unity::Model::JsonData::ThreadInformation::dyn_Stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::ThreadInformation::dyn_Stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Stack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::BacktraceStackFrame*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.ThreadInformation.get_Name
::StringW Backtrace::Unity::Model::JsonData::ThreadInformation::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::ThreadInformation::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.ThreadInformation.set_Name
void Backtrace::Unity::Model::JsonData::ThreadInformation::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::ThreadInformation::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.ThreadInformation.get_Fault
bool Backtrace::Unity::Model::JsonData::ThreadInformation::get_Fault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::ThreadInformation::get_Fault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Fault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.ThreadInformation.set_Fault
void Backtrace::Unity::Model::JsonData::ThreadInformation::set_Fault(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::ThreadInformation::set_Fault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Fault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.JsonData.ThreadInformation.ToJson
::Backtrace::Unity::Json::BacktraceJObject* Backtrace::Unity::Model::JsonData::ThreadInformation::ToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::JsonData::ThreadInformation::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Json::BacktraceJObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseAttachmentManager
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseAttachmentManager.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseSettings.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <ScreenshotMaxHeight>k__BackingField
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::dyn_$ScreenshotMaxHeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::dyn_$ScreenshotMaxHeight$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ScreenshotMaxHeight>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <ScreenshotQuality>k__BackingField
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::dyn_$ScreenshotQuality$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::dyn_$ScreenshotQuality$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ScreenshotQuality>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Backtrace.Unity.Model.Database.BacktraceDatabaseSettings _settings
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings*& Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::dyn__settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::dyn__settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settings"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastScreenTime
[[deprecated("Use field access instead!")]] float& Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::dyn__lastScreenTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::dyn__lastScreenTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastScreenTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _lastScreenPath
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::dyn__lastScreenPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::dyn__lastScreenPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastScreenPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _lock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::dyn__lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::dyn__lock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseAttachmentManager.get_ScreenshotMaxHeight
int Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::get_ScreenshotMaxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::get_ScreenshotMaxHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScreenshotMaxHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseAttachmentManager.set_ScreenshotMaxHeight
void Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::set_ScreenshotMaxHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::set_ScreenshotMaxHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ScreenshotMaxHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseAttachmentManager.get_ScreenshotQuality
int Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::get_ScreenshotQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::get_ScreenshotQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScreenshotQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseAttachmentManager.set_ScreenshotQuality
void Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::set_ScreenshotQuality(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::set_ScreenshotQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ScreenshotQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseAttachmentManager.GetReportAttachments
::System::Collections::Generic::IEnumerable_1<::StringW>* Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::GetReportAttachments(::Backtrace::Unity::Model::BacktraceData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::GetReportAttachments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReportAttachments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method, data);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseAttachmentManager.AddIfPathIsNotEmpty
void Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::AddIfPathIsNotEmpty(::System::Collections::Generic::List_1<::StringW>* source, ::StringW attachmentPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::AddIfPathIsNotEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddIfPathIsNotEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(attachmentPath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, attachmentPath);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseAttachmentManager.GetMinidumpPath
::StringW Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::GetMinidumpPath(::Backtrace::Unity::Model::BacktraceData* backtraceData, ::StringW dataPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::GetMinidumpPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMinidumpPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backtraceData), ::il2cpp_utils::ExtractType(dataPrefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, backtraceData, dataPrefix);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseAttachmentManager.GetScreenshotPath
::StringW Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::GetScreenshotPath(::StringW dataPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::GetScreenshotPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScreenshotPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataPrefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, dataPrefix);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseAttachmentManager.GetUnityPlayerLogFile
::StringW Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::GetUnityPlayerLogFile(::Backtrace::Unity::Model::BacktraceData* backtraceData, ::StringW dataPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseAttachmentManager::GetUnityPlayerLogFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnityPlayerLogFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backtraceData), ::il2cpp_utils::ExtractType(dataPrefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, backtraceData, dataPrefix);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseRecord.hpp"
// Including type: System.IO.FileInfo
#include "System/IO/FileInfo.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Guid Id
[[deprecated("Use field access instead!")]] ::System::Guid& Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean Locked
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_Locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_Locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Locked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <RecordPath>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_$RecordPath$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_$RecordPath$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RecordPath>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <DiagnosticDataPath>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_$DiagnosticDataPath$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_$DiagnosticDataPath$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DiagnosticDataPath>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <Size>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_$Size$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_$Size$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Size>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Hash
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_Hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hash"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Model.BacktraceData <Record>k__BackingField
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceData*& Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_$Record$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_$Record$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Record>k__BackingField"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.ICollection`1<System.String> <Attachments>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::ICollection_1<::StringW>*& Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_$Attachments$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_$Attachments$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Attachments>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::ICollection_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <DiagnosticDataJson>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_$DiagnosticDataJson$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn_$DiagnosticDataJson$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DiagnosticDataJson>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _count
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.get_RecordPath
::StringW Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_RecordPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_RecordPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecordPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.set_RecordPath
void Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::set_RecordPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::set_RecordPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RecordPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.get_DiagnosticDataPath
::StringW Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_DiagnosticDataPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_DiagnosticDataPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DiagnosticDataPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.set_DiagnosticDataPath
void Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::set_DiagnosticDataPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::set_DiagnosticDataPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DiagnosticDataPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.get_Size
int64_t Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.set_Size
void Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::set_Size(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::set_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.get_Record
::Backtrace::Unity::Model::BacktraceData* Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_Record");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Record", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceData*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.set_Record
void Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::set_Record(::Backtrace::Unity::Model::BacktraceData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::set_Record");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Record", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.get_Attachments
::System::Collections::Generic::ICollection_1<::StringW>* Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_Attachments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_Attachments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attachments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.set_Attachments
void Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::set_Attachments(::System::Collections::Generic::ICollection_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::set_Attachments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Attachments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.get_DiagnosticDataJson
::StringW Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_DiagnosticDataJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_DiagnosticDataJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DiagnosticDataJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.set_DiagnosticDataJson
void Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::set_DiagnosticDataJson(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::set_DiagnosticDataJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DiagnosticDataJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.get_Duplicated
bool Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_Duplicated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_Duplicated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Duplicated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.get_Count
int Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.BacktraceDataJson
::StringW Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::BacktraceDataJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::BacktraceDataJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BacktraceDataJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.get_BacktraceData
::Backtrace::Unity::Model::BacktraceData* Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_BacktraceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::get_BacktraceData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BacktraceData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceData*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.ToJson
::StringW Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::ToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.Deserialize
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::Deserialize(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model.Database", "BacktraceDatabaseRecord", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.Increment
void Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::Increment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::Increment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.ReadFromFile
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::ReadFromFile(::System::IO::FileInfo* file) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::ReadFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model.Database", "BacktraceDatabaseRecord", "ReadFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(file)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, file);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord.Unlock
void Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::Unlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord::Unlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseSettings.hpp"
// Including type: Backtrace.Unity.Model.BacktraceConfiguration
#include "Backtrace/Unity/Model/BacktraceConfiguration.hpp"
// Including type: Backtrace.Unity.Types.DeduplicationStrategy
#include "Backtrace/Unity/Types/DeduplicationStrategy.hpp"
// Including type: Backtrace.Unity.Types.RetryOrder
#include "Backtrace/Unity/Types/RetryOrder.hpp"
// Including type: Backtrace.Unity.Types.MiniDumpType
#include "Backtrace/Unity/Types/MiniDumpType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Backtrace.Unity.Model.BacktraceConfiguration _configuration
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::BacktraceConfiguration*& Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::dyn__configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::dyn__configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_configuration"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::BacktraceConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt32 _retryInterval
[[deprecated("Use field access instead!")]] uint& Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::dyn__retryInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::dyn__retryInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_retryInterval"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <DatabasePath>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::dyn_$DatabasePath$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::dyn_$DatabasePath$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DatabasePath>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings.get_DatabasePath
::StringW Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_DatabasePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_DatabasePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DatabasePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings.set_DatabasePath
void Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::set_DatabasePath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::set_DatabasePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DatabasePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings.get_MaxRecordCount
uint Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_MaxRecordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_MaxRecordCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxRecordCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings.get_MaxDatabaseSize
int64_t Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_MaxDatabaseSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_MaxDatabaseSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxDatabaseSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings.get_AutoSendMode
bool Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_AutoSendMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_AutoSendMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoSendMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings.get_RetryInterval
uint Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_RetryInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_RetryInterval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RetryInterval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings.get_RetryLimit
uint Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_RetryLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_RetryLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RetryLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings.get_DeduplicationStrategy
::Backtrace::Unity::Types::DeduplicationStrategy Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_DeduplicationStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_DeduplicationStrategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeduplicationStrategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Types::DeduplicationStrategy, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings.get_GenerateScreenshotOnException
bool Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_GenerateScreenshotOnException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_GenerateScreenshotOnException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GenerateScreenshotOnException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings.get_AddUnityLogToReport
bool Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_AddUnityLogToReport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_AddUnityLogToReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AddUnityLogToReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings.get_RetryOrder
::Backtrace::Unity::Types::RetryOrder Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_RetryOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_RetryOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RetryOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Types::RetryOrder, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings.get_MinidumpType
::Backtrace::Unity::Types::MiniDumpType Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_MinidumpType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings::get_MinidumpType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinidumpType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Types::MiniDumpType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs
#include "Backtrace/Unity/Model/Breadcrumbs/BacktraceBreadcrumbs.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.IBacktraceLogManager
#include "Backtrace/Unity/Model/Breadcrumbs/IBacktraceLogManager.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler
#include "Backtrace/Unity/Model/Breadcrumbs/BacktraceBreadcrumbsEventHandler.hpp"
// Including type: Backtrace.Unity.Model.BacktraceReport
#include "Backtrace/Unity/Model/BacktraceReport.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel
#include "Backtrace/Unity/Model/Breadcrumbs/BreadcrumbLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType <BreadcrumbsLevel>k__BackingField
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType& Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::dyn_$BreadcrumbsLevel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::dyn_$BreadcrumbsLevel$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BreadcrumbsLevel>k__BackingField"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel <UnityLogLevel>k__BackingField
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel& Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::dyn_$UnityLogLevel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::dyn_$UnityLogLevel$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UnityLogLevel>k__BackingField"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly Backtrace.Unity.Model.Breadcrumbs.IBacktraceLogManager LogManager
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager*& Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::dyn_LogManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::dyn_LogManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LogManager"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler EventHandler
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler*& Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::dyn_EventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::dyn_EventHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EventHandler"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _enabled
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::dyn__enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::dyn__enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.get_BreadcrumbsLevel
::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::get_BreadcrumbsLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::get_BreadcrumbsLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.set_BreadcrumbsLevel
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::set_BreadcrumbsLevel(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::set_BreadcrumbsLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BreadcrumbsLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.get_UnityLogLevel
::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::get_UnityLogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::get_UnityLogLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnityLogLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.set_UnityLogLevel
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::set_UnityLogLevel(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::set_UnityLogLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UnityLogLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.UnregisterEvents
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::UnregisterEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::UnregisterEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.ClearBreadcrumbs
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::ClearBreadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::ClearBreadcrumbs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.EnableBreadcrumbs
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::EnableBreadcrumbs(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType level, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel unityLogLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::EnableBreadcrumbs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, level, unityLogLevel);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.EnableBreadcrumbs
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::EnableBreadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::EnableBreadcrumbs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.FromBacktrace
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::FromBacktrace(::Backtrace::Unity::Model::BacktraceReport* report) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::FromBacktrace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, report);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.FromMonoBehavior
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::FromMonoBehavior(::StringW message, ::UnityEngine::LogType type, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::FromMonoBehavior");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, type, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.GetBreadcrumbLogPath
::StringW Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::GetBreadcrumbLogPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::GetBreadcrumbLogPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.Info
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Info(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Info");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.Info
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Info(::StringW message, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Info");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.Warning
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Warning(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Warning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.Warning
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Warning(::StringW message, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Warning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.Debug
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Debug(::StringW message, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Debug");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.Debug
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Debug(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Debug");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.Exception
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.Exception
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception(::System::Exception* exception, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, exception, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.Exception
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, exception);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.Exception
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception(::StringW message, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Exception");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.Log
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Log(::StringW message, ::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Log");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, type);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.Log
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Log(::StringW message, ::UnityEngine::LogType logType, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Log");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, logType, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.AddBreadcrumbs
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::AddBreadcrumbs(::StringW message, ::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel level, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel type, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::AddBreadcrumbs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBreadcrumbs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, level, type, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.ShouldLog
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::ShouldLog(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::ShouldLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.ConvertLogTypeToLogLevel
::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::ConvertLogTypeToLogLevel(::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::ConvertLogTypeToLogLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbs", "ConvertLogTypeToLogLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.BreadcrumbId
double Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::BreadcrumbId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::BreadcrumbId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 23));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.Update
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.CanStoreBreadcrumbs
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::CanStoreBreadcrumbs(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel logLevel, ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType backtraceBreadcrumbsLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::CanStoreBreadcrumbs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbs", "CanStoreBreadcrumbs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logLevel), ::il2cpp_utils::ExtractType(backtraceBreadcrumbsLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logLevel, backtraceBreadcrumbsLevel);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs.Archive
::StringW Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Archive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs::Archive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler
#include "Backtrace/Unity/Model/Breadcrumbs/BacktraceBreadcrumbsEventHandler.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs
#include "Backtrace/Unity/Model/Breadcrumbs/BacktraceBreadcrumbs.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel
#include "Backtrace/Unity/Model/Breadcrumbs/BreadcrumbLevel.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasRegisteredEvents>k__BackingField
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::dyn_$HasRegisteredEvents$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::dyn_$HasRegisteredEvents$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasRegisteredEvents>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbs _breadcrumbs
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs*& Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::dyn__breadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::dyn__breadcrumbs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_breadcrumbs"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType _registeredLevel
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType& Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::dyn__registeredLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::dyn__registeredLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_registeredLevel"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.NetworkReachability _networkStatus
[[deprecated("Use field access instead!")]] ::UnityEngine::NetworkReachability& Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::dyn__networkStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::dyn__networkStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkStatus"))->offset;
  return *reinterpret_cast<::UnityEngine::NetworkReachability*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Thread _thread
[[deprecated("Use field access instead!")]] ::System::Threading::Thread*& Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::dyn__thread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::dyn__thread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thread"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler.get_HasRegisteredEvents
bool Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::get_HasRegisteredEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::get_HasRegisteredEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasRegisteredEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler.set_HasRegisteredEvents
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::set_HasRegisteredEvents(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::set_HasRegisteredEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasRegisteredEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler.Register
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::Register(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler.Unregister
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::Unregister() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::Unregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler.SceneManager_sceneUnloaded
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::SceneManager_sceneUnloaded(::UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::SceneManager_sceneUnloaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SceneManager_sceneUnloaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler.SceneManager_sceneLoaded
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::SceneManager_sceneLoaded(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode loadSceneMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::SceneManager_sceneLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SceneManager_sceneLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(loadSceneMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, loadSceneMode);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler.HandleSceneChanged
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::HandleSceneChanged(::UnityEngine::SceneManagement::Scene sceneFrom, ::UnityEngine::SceneManagement::Scene sceneTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::HandleSceneChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSceneChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneFrom), ::il2cpp_utils::ExtractType(sceneTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sceneFrom, sceneTo);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler.HandleLowMemory
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::HandleLowMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::HandleLowMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLowMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler.HandleApplicationQuitting
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::HandleApplicationQuitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::HandleApplicationQuitting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleApplicationQuitting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler.HandleBackgroundMessage
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::HandleBackgroundMessage(::StringW condition, ::StringW stackTrace, ::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::HandleBackgroundMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBackgroundMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, condition, stackTrace, type);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler.HandleMessage
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::HandleMessage(::StringW condition, ::StringW stackTrace, ::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::HandleMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, condition, stackTrace, type);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler.Application_focusChanged
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::Application_focusChanged(bool hasFocus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::Application_focusChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Application_focusChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasFocus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hasFocus);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler.Log
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::Log(::StringW message, ::UnityEngine::LogType level, ::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel breadcrumbLevel, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(breadcrumbLevel), ::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, level, breadcrumbLevel, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler.LogNewNetworkStatus
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::LogNewNetworkStatus(::UnityEngine::NetworkReachability status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::LogNewNetworkStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogNewNetworkStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, status);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbsEventHandler.Update
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbsEventHandler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType
#include "Backtrace/Unity/Model/Breadcrumbs/BacktraceBreadcrumbType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType None
::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType>("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType None
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_None(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType Manual
::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType>("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType Manual
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_Manual(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "Manual", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType Log
::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType>("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "Log"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType Log
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_Log(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "Log", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType Navigation
::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_Navigation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_Navigation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType>("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "Navigation"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType Navigation
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_Navigation(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_Navigation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "Navigation", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType Http
::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_Http() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_Http");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType>("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "Http"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType Http
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_Http(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_Http");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "Http", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType System
::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType>("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "System"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType System
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_System(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "System", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType User
::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_User");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType>("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "User"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType User
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_User(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_User");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "User", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType Configuration
::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_Configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_get_Configuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType>("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "Configuration"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType Configuration
void Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_Configuration(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::_set_Configuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "BacktraceBreadcrumbType", "Configuration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel
#include "Backtrace/Unity/Model/Breadcrumbs/BreadcrumbLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel Manual
::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel>("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel Manual
void Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_set_Manual(::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel", "Manual", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel Log
::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel>("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel", "Log"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel Log
void Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_set_Log(::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel", "Log", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel Navigation
::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_get_Navigation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_get_Navigation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel>("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel", "Navigation"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel Navigation
void Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_set_Navigation(::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_set_Navigation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel", "Navigation", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel Http
::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_get_Http() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_get_Http");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel>("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel", "Http"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel Http
void Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_set_Http(::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_set_Http");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel", "Http", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel System
::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_get_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel>("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel", "System"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel System
void Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_set_System(::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_set_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel", "System", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel User
::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_get_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_get_User");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel>("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel", "User"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel User
void Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_set_User(::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_set_User");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel", "User", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel Configuration
::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_get_Configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_get_Configuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel>("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel", "Configuration"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel Configuration
void Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_set_Configuration(::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::_set_Configuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "BreadcrumbLevel", "Configuration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Breadcrumbs.IArchiveableBreadcrumbManager
#include "Backtrace/Unity/Model/Breadcrumbs/IArchiveableBreadcrumbManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IArchiveableBreadcrumbManager.Archive
::StringW Backtrace::Unity::Model::Breadcrumbs::IArchiveableBreadcrumbManager::Archive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IArchiveableBreadcrumbManager::Archive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IArchiveableBreadcrumbManager*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs
#include "Backtrace/Unity/Model/Breadcrumbs/IBacktraceBreadcrumbs.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.BacktraceBreadcrumbType
#include "Backtrace/Unity/Model/Breadcrumbs/BacktraceBreadcrumbType.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel
#include "Backtrace/Unity/Model/Breadcrumbs/UnityEngineLogLevel.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Backtrace.Unity.Model.BacktraceReport
#include "Backtrace/Unity/Model/BacktraceReport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.get_BreadcrumbsLevel
::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::get_BreadcrumbsLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::get_BreadcrumbsLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.EnableBreadcrumbs
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::EnableBreadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::EnableBreadcrumbs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.EnableBreadcrumbs
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::EnableBreadcrumbs(::Backtrace::Unity::Model::Breadcrumbs::BacktraceBreadcrumbType level, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel unityLogLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::EnableBreadcrumbs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, level, unityLogLevel);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.ClearBreadcrumbs
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::ClearBreadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::ClearBreadcrumbs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.Log
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Log(::StringW message, ::UnityEngine::LogType type, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Log");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, type, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.Log
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Log(::StringW message, ::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Log");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, type);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.Debug
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Debug(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Debug");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.Debug
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Debug(::StringW message, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Debug");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.Info
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Info(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Info");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.Info
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Info(::StringW message, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Info");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.Warning
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Warning(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Warning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.Warning
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Warning(::StringW message, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Warning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.Exception
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Exception(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Exception");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, exception);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.Exception
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Exception(::System::Exception* exception, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Exception");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, exception, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.Exception
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Exception(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Exception");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.Exception
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Exception(::StringW message, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Exception");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.FromBacktrace
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::FromBacktrace(::Backtrace::Unity::Model::BacktraceReport* report) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::FromBacktrace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, report);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.FromMonoBehavior
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::FromMonoBehavior(::StringW message, ::UnityEngine::LogType type, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::FromMonoBehavior");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, type, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.GetBreadcrumbLogPath
::StringW Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::GetBreadcrumbLogPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::GetBreadcrumbLogPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.BreadcrumbId
double Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::BreadcrumbId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::BreadcrumbId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.UnregisterEvents
void Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::UnregisterEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::UnregisterEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.Update
void Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs.Archive
::StringW Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Archive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs::Archive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Breadcrumbs.IBacktraceLogManager
#include "Backtrace/Unity/Model/Breadcrumbs/IBacktraceLogManager.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel
#include "Backtrace/Unity/Model/Breadcrumbs/BreadcrumbLevel.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel
#include "Backtrace/Unity/Model/Breadcrumbs/UnityEngineLogLevel.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceLogManager.get_BreadcrumbsFilePath
::StringW Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager::get_BreadcrumbsFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager::get_BreadcrumbsFilePath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceLogManager.Add
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager::Add(::StringW message, ::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel level, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel type, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, level, type, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceLogManager.Clear
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceLogManager.Enable
bool Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager::Enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceLogManager.Length
int Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager::Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.IBacktraceLogManager.BreadcrumbId
double Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager::BreadcrumbId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager::BreadcrumbId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::IBacktraceLogManager*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel
#include "Backtrace/Unity/Model/Breadcrumbs/UnityEngineLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel None
::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel>("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel", "None"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel None
void Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_set_None(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel Debug
::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel>("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel Debug
void Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_set_Debug(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel", "Debug", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel Warning
::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel>("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel Warning
void Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_set_Warning(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel Info
::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel>("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel", "Info"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel Info
void Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_set_Info(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel Fatal
::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_get_Fatal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_get_Fatal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel>("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel", "Fatal"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel Fatal
void Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_set_Fatal(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_set_Fatal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel", "Fatal", value));
}
// Autogenerated static field getter
// Get static field: static public Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel Error
::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel>("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel Error
void Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_set_Error(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs", "UnityEngineLogLevel", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager
#include "Backtrace/Unity/Model/Breadcrumbs/Storage/BacktraceStorageLogManager.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.Storage.IBreadcrumbFile
#include "Backtrace/Unity/Model/Breadcrumbs/Storage/IBreadcrumbFile.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel
#include "Backtrace/Unity/Model/Breadcrumbs/BreadcrumbLevel.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel
#include "Backtrace/Unity/Model/Breadcrumbs/UnityEngineLogLevel.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: Backtrace.Unity.Json.BacktraceJObject
#include "Backtrace/Unity/Json/BacktraceJObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MinimumBreadcrumbsFileSize
int Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_get_MinimumBreadcrumbsFileSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_get_MinimumBreadcrumbsFileSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Backtrace.Unity.Model.Breadcrumbs.Storage", "BacktraceStorageLogManager", "MinimumBreadcrumbsFileSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MinimumBreadcrumbsFileSize
void Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_set_MinimumBreadcrumbsFileSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_set_MinimumBreadcrumbsFileSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs.Storage", "BacktraceStorageLogManager", "MinimumBreadcrumbsFileSize", value));
}
// Autogenerated static field getter
// Get static field: static System.String BreadcrumbLogFilePrefix
::StringW Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_get_BreadcrumbLogFilePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_get_BreadcrumbLogFilePrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model.Breadcrumbs.Storage", "BacktraceStorageLogManager", "BreadcrumbLogFilePrefix"));
}
// Autogenerated static field setter
// Set static field: static System.String BreadcrumbLogFilePrefix
void Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_set_BreadcrumbLogFilePrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_set_BreadcrumbLogFilePrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs.Storage", "BacktraceStorageLogManager", "BreadcrumbLogFilePrefix", value));
}
// Autogenerated static field getter
// Get static field: static System.String BreadcrumbLogFileName
::StringW Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_get_BreadcrumbLogFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_get_BreadcrumbLogFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Model.Breadcrumbs.Storage", "BacktraceStorageLogManager", "BreadcrumbLogFileName"));
}
// Autogenerated static field setter
// Set static field: static System.String BreadcrumbLogFileName
void Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_set_BreadcrumbLogFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_set_BreadcrumbLogFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs.Storage", "BacktraceStorageLogManager", "BreadcrumbLogFileName", value));
}
// Autogenerated static field getter
// Get static field: static System.Byte[] NewRow
::ArrayW<uint8_t> Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_get_NewRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_get_NewRow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Backtrace.Unity.Model.Breadcrumbs.Storage", "BacktraceStorageLogManager", "NewRow"));
}
// Autogenerated static field setter
// Set static field: static System.Byte[] NewRow
void Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_set_NewRow(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_set_NewRow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs.Storage", "BacktraceStorageLogManager", "NewRow", value));
}
// Autogenerated static field getter
// Get static field: static System.Byte[] EndOfDocument
::ArrayW<uint8_t> Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_get_EndOfDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_get_EndOfDocument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Backtrace.Unity.Model.Breadcrumbs.Storage", "BacktraceStorageLogManager", "EndOfDocument"));
}
// Autogenerated static field setter
// Set static field: static System.Byte[] EndOfDocument
void Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_set_EndOfDocument(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_set_EndOfDocument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs.Storage", "BacktraceStorageLogManager", "EndOfDocument", value));
}
// Autogenerated static field getter
// Get static field: static System.Byte[] StartOfDocument
::ArrayW<uint8_t> Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_get_StartOfDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_get_StartOfDocument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Backtrace.Unity.Model.Breadcrumbs.Storage", "BacktraceStorageLogManager", "StartOfDocument"));
}
// Autogenerated static field setter
// Set static field: static System.Byte[] StartOfDocument
void Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_set_StartOfDocument(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_set_StartOfDocument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs.Storage", "BacktraceStorageLogManager", "StartOfDocument", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <BreadcrumbsFilePath>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn_$BreadcrumbsFilePath$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn_$BreadcrumbsFilePath$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BreadcrumbsFilePath>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _breadcrumbsSize
[[deprecated("Use field access instead!")]] int64_t& Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn__breadcrumbsSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn__breadcrumbsSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_breadcrumbsSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _emptyFile
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn__emptyFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn__emptyFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emptyFile"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _breadcrumbId
[[deprecated("Use field access instead!")]] double& Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn__breadcrumbId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn__breadcrumbId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_breadcrumbId"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _lockObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn__lockObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn__lockObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 currentSize
[[deprecated("Use field access instead!")]] int64_t& Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn_currentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn_currentSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<System.Int64> _logSize
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<int64_t>*& Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn__logSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn__logSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logSize"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<int64_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _storagePath
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn__storagePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn__storagePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storagePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Backtrace.Unity.Model.Breadcrumbs.Storage.IBreadcrumbFile <BreadcrumbFile>k__BackingField
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile*& Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn_$BreadcrumbFile$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::dyn_$BreadcrumbFile$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BreadcrumbFile>k__BackingField"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.get_BreadcrumbsFilePath
::StringW Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::get_BreadcrumbsFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::get_BreadcrumbsFilePath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.set_BreadcrumbsFilePath
void Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::set_BreadcrumbsFilePath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::set_BreadcrumbsFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BreadcrumbsFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.get_BreadcrumbsSize
int64_t Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::get_BreadcrumbsSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::get_BreadcrumbsSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BreadcrumbsSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.set_BreadcrumbsSize
void Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::set_BreadcrumbsSize(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::set_BreadcrumbsSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BreadcrumbsSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.get_BreadcrumbFile
::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile* Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::get_BreadcrumbFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::get_BreadcrumbFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BreadcrumbFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.set_BreadcrumbFile
void Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::set_BreadcrumbFile(::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::set_BreadcrumbFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BreadcrumbFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.Enable
bool Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.Add
bool Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Add(::StringW message, ::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel level, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel type, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, level, type, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.CreateBreadcrumbJson
::Backtrace::Unity::Json::BacktraceJObject* Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::CreateBreadcrumbJson(double id, ::StringW message, ::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel level, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel type, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::CreateBreadcrumbJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBreadcrumbJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Json::BacktraceJObject*, false>(this, ___internal__method, id, message, level, type, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.AppendBreadcrumb
bool Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::AppendBreadcrumb(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::AppendBreadcrumb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendBreadcrumb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bytes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.ClearOldLogs
void Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::ClearOldLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::ClearOldLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearOldLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.GetNextStartPosition
int64_t Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::GetNextStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::GetNextStartPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextStartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.Clear
bool Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.Length
int Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.BreadcrumbId
double Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::BreadcrumbId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::BreadcrumbId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), 9));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager.Archive
::StringW Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Archive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::Archive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BacktraceStorageLogManager..cctor
void Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BacktraceStorageLogManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Model.Breadcrumbs.Storage", "BacktraceStorageLogManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Breadcrumbs.Storage.BreadcrumbFile
#include "Backtrace/Unity/Model/Breadcrumbs/Storage/BreadcrumbFile.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _path
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::dyn__path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::dyn__path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BreadcrumbFile.Delete
void Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::Delete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BreadcrumbFile.Exists
bool Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::Exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::Exists");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BreadcrumbFile.GetCreateStream
::System::IO::Stream* Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::GetCreateStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::GetCreateStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BreadcrumbFile.GetIOStream
::System::IO::Stream* Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::GetIOStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::GetIOStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.BreadcrumbFile.GetWriteStream
::System::IO::Stream* Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::GetWriteStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile::GetWriteStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::BreadcrumbFile*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Breadcrumbs.Storage.IBreadcrumbFile
#include "Backtrace/Unity/Model/Breadcrumbs/Storage/IBreadcrumbFile.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.IBreadcrumbFile.Exists
bool Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile::Exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile::Exists");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.IBreadcrumbFile.Delete
void Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile::Delete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.IBreadcrumbFile.GetCreateStream
::System::IO::Stream* Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile::GetCreateStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile::GetCreateStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.IBreadcrumbFile.GetIOStream
::System::IO::Stream* Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile::GetIOStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile::GetIOStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.Storage.IBreadcrumbFile.GetWriteStream
::System::IO::Stream* Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile::GetWriteStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile::GetWriteStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::Storage::IBreadcrumbFile*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Backtrace.Unity.Model.Breadcrumbs.InMemory.BacktraceInMemoryLogManager
#include "Backtrace/Unity/Model/Breadcrumbs/InMemory/BacktraceInMemoryLogManager.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.InMemory.InMemoryBreadcrumb
#include "Backtrace/Unity/Model/Breadcrumbs/InMemory/InMemoryBreadcrumb.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel
#include "Backtrace/Unity/Model/Breadcrumbs/BreadcrumbLevel.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel
#include "Backtrace/Unity/Model/Breadcrumbs/UnityEngineLogLevel.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultMaximumNumberOfInMemoryBreadcrumbs
int Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::_get_DefaultMaximumNumberOfInMemoryBreadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::_get_DefaultMaximumNumberOfInMemoryBreadcrumbs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Backtrace.Unity.Model.Breadcrumbs.InMemory", "BacktraceInMemoryLogManager", "DefaultMaximumNumberOfInMemoryBreadcrumbs"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultMaximumNumberOfInMemoryBreadcrumbs
void Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::_set_DefaultMaximumNumberOfInMemoryBreadcrumbs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::_set_DefaultMaximumNumberOfInMemoryBreadcrumbs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Model.Breadcrumbs.InMemory", "BacktraceInMemoryLogManager", "DefaultMaximumNumberOfInMemoryBreadcrumbs", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <MaximumNumberOfBreadcrumbs>k__BackingField
[[deprecated("Use field access instead!")]] int& Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::dyn_$MaximumNumberOfBreadcrumbs$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::dyn_$MaximumNumberOfBreadcrumbs$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaximumNumberOfBreadcrumbs>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _lockObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::dyn__lockObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::dyn__lockObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Collections.Generic.Queue`1<Backtrace.Unity.Model.Breadcrumbs.InMemory.InMemoryBreadcrumb> Breadcrumbs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb*>*& Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::dyn_Breadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::dyn_Breadcrumbs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Breadcrumbs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _breadcrumbId
[[deprecated("Use field access instead!")]] double& Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::dyn__breadcrumbId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::dyn__breadcrumbId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_breadcrumbId"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.BacktraceInMemoryLogManager.get_MaximumNumberOfBreadcrumbs
int Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::get_MaximumNumberOfBreadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::get_MaximumNumberOfBreadcrumbs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaximumNumberOfBreadcrumbs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.BacktraceInMemoryLogManager.set_MaximumNumberOfBreadcrumbs
void Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::set_MaximumNumberOfBreadcrumbs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::set_MaximumNumberOfBreadcrumbs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaximumNumberOfBreadcrumbs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.BacktraceInMemoryLogManager.get_BreadcrumbsFilePath
::StringW Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::get_BreadcrumbsFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::get_BreadcrumbsFilePath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.BacktraceInMemoryLogManager.Add
bool Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::Add(::StringW message, ::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel type, ::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel level, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, type, level, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.BacktraceInMemoryLogManager.Clear
bool Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.BacktraceInMemoryLogManager.Enable
bool Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::Enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.BacktraceInMemoryLogManager.Length
int Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.BacktraceInMemoryLogManager.BreadcrumbId
double Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::BreadcrumbId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager::BreadcrumbId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Breadcrumbs::InMemory::BacktraceInMemoryLogManager*), 9));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Breadcrumbs.InMemory.InMemoryBreadcrumb
#include "Backtrace/Unity/Model/Breadcrumbs/InMemory/InMemoryBreadcrumb.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.BreadcrumbLevel
#include "Backtrace/Unity/Model/Breadcrumbs/BreadcrumbLevel.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.UnityEngineLogLevel
#include "Backtrace/Unity/Model/Breadcrumbs/UnityEngineLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String message
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String timestamp
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::dyn_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::dyn_timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timestamp"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String type
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String level
[[deprecated("Use field access instead!")]] ::StringW& Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::dyn_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::dyn_level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IDictionary`2<System.String,System.String> Attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*& Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::dyn_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::dyn_Attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.InMemoryBreadcrumb.get_Message
::StringW Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.InMemoryBreadcrumb.set_Message
void Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.InMemoryBreadcrumb.get_Timestamp
double Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.InMemoryBreadcrumb.set_Timestamp
void Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Timestamp(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.InMemoryBreadcrumb.get_Type
::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.InMemoryBreadcrumb.set_Type
void Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Type(::Backtrace::Unity::Model::Breadcrumbs::BreadcrumbLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.InMemoryBreadcrumb.get_Level
::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::get_Level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Breadcrumbs.InMemory.InMemoryBreadcrumb.set_Level
void Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Level(::Backtrace::Unity::Model::Breadcrumbs::UnityEngineLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Breadcrumbs::InMemory::InMemoryBreadcrumb::set_Level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Attributes.IDynamicAttributeProvider
#include "Backtrace/Unity/Model/Attributes/IDynamicAttributeProvider.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Model.Attributes.IDynamicAttributeProvider.GetAttributes
void Backtrace::Unity::Model::Attributes::IDynamicAttributeProvider::GetAttributes(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Attributes::IDynamicAttributeProvider::GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Attributes::IDynamicAttributeProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Attributes.IScopeAttributeProvider
#include "Backtrace/Unity/Model/Attributes/IScopeAttributeProvider.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Model.Attributes.IScopeAttributeProvider.GetAttributes
void Backtrace::Unity::Model::Attributes::IScopeAttributeProvider::GetAttributes(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Attributes::IScopeAttributeProvider::GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Attributes::IScopeAttributeProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Attributes.MachineAttributeProvider
#include "Backtrace/Unity/Model/Attributes/MachineAttributeProvider.hpp"
// Including type: Backtrace.Unity.Model.MachineIdStorage
#include "Backtrace/Unity/Model/MachineIdStorage.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Backtrace.Unity.Model.MachineIdStorage _machineIdStorage
[[deprecated("Use field access instead!")]] ::Backtrace::Unity::Model::MachineIdStorage*& Backtrace::Unity::Model::Attributes::MachineAttributeProvider::dyn__machineIdStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Attributes::MachineAttributeProvider::dyn__machineIdStorage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_machineIdStorage"))->offset;
  return *reinterpret_cast<::Backtrace::Unity::Model::MachineIdStorage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Model.Attributes.MachineAttributeProvider.GetAttributes
void Backtrace::Unity::Model::Attributes::MachineAttributeProvider::GetAttributes(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Attributes::MachineAttributeProvider::GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Attributes::MachineAttributeProvider*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Attributes.MachineAttributeProvider.IncludeOsInformation
void Backtrace::Unity::Model::Attributes::MachineAttributeProvider::IncludeOsInformation(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Attributes::MachineAttributeProvider::IncludeOsInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncludeOsInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Attributes.MachineAttributeProvider.IncludeGraphicCardInformation
void Backtrace::Unity::Model::Attributes::MachineAttributeProvider::IncludeGraphicCardInformation(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Attributes::MachineAttributeProvider::IncludeGraphicCardInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncludeGraphicCardInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Attributes.MachineStateAttributeProvider
#include "Backtrace/Unity/Model/Attributes/MachineStateAttributeProvider.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Model.Attributes.MachineStateAttributeProvider.GetAttributes
void Backtrace::Unity::Model::Attributes::MachineStateAttributeProvider::GetAttributes(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Attributes::MachineStateAttributeProvider::GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Attributes::MachineStateAttributeProvider*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Attributes.PiiAttributeProvider
#include "Backtrace/Unity/Model/Attributes/PiiAttributeProvider.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Model.Attributes.PiiAttributeProvider.GetAttributes
void Backtrace::Unity::Model::Attributes::PiiAttributeProvider::GetAttributes(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Attributes::PiiAttributeProvider::GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Attributes::PiiAttributeProvider*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Attributes.ProcessAttributeProvider
#include "Backtrace/Unity/Model/Attributes/ProcessAttributeProvider.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Model.Attributes.ProcessAttributeProvider.GetAttributes
void Backtrace::Unity::Model::Attributes::ProcessAttributeProvider::GetAttributes(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Attributes::ProcessAttributeProvider::GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Attributes::ProcessAttributeProvider*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Attributes.RuntimeAttributeProvider
#include "Backtrace/Unity/Model/Attributes/RuntimeAttributeProvider.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Model.Attributes.RuntimeAttributeProvider.GetAttributes
void Backtrace::Unity::Model::Attributes::RuntimeAttributeProvider::GetAttributes(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Attributes::RuntimeAttributeProvider::GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Attributes::RuntimeAttributeProvider*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated method: Backtrace.Unity.Model.Attributes.RuntimeAttributeProvider.GetScriptingBackend
::StringW Backtrace::Unity::Model::Attributes::RuntimeAttributeProvider::GetScriptingBackend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Attributes::RuntimeAttributeProvider::GetScriptingBackend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScriptingBackend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Model.Attributes.RuntimeAttributeProvider.GetApiCompatibility
::StringW Backtrace::Unity::Model::Attributes::RuntimeAttributeProvider::GetApiCompatibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Attributes::RuntimeAttributeProvider::GetApiCompatibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApiCompatibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Model.Attributes.SceneAttributeProvider
#include "Backtrace/Unity/Model/Attributes/SceneAttributeProvider.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Model.Attributes.SceneAttributeProvider.GetAttributes
void Backtrace::Unity::Model::Attributes::SceneAttributeProvider::GetAttributes(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Model::Attributes::SceneAttributeProvider::GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Model::Attributes::SceneAttributeProvider*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Backtrace.Unity.Json.BacktraceJObject
#include "Backtrace/Unity/Json/BacktraceJObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Collections.Generic.Dictionary`2<System.String,System.String> PrimitiveValues
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Backtrace::Unity::Json::BacktraceJObject::dyn_PrimitiveValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::dyn_PrimitiveValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimitiveValues"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Collections.Generic.IDictionary`2<System.String,System.String> UserPrimitives
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*& Backtrace::Unity::Json::BacktraceJObject::dyn_UserPrimitives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::dyn_UserPrimitives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserPrimitives"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Collections.Generic.Dictionary`2<System.String,Backtrace.Unity.Json.BacktraceJObject> InnerObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Backtrace::Unity::Json::BacktraceJObject*>*& Backtrace::Unity::Json::BacktraceJObject::dyn_InnerObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::dyn_InnerObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InnerObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Backtrace::Unity::Json::BacktraceJObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Collections.Generic.Dictionary`2<System.String,System.Object> ComplexObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*& Backtrace::Unity::Json::BacktraceJObject::dyn_ComplexObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::dyn_ComplexObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ComplexObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.Add
void Backtrace::Unity::Json::BacktraceJObject::Add(::StringW key, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.Add
void Backtrace::Unity::Json::BacktraceJObject::Add(::StringW key, float value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value, format);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.Add
void Backtrace::Unity::Json::BacktraceJObject::Add(::StringW key, double value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value, format);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.Add
void Backtrace::Unity::Json::BacktraceJObject::Add(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.Add
void Backtrace::Unity::Json::BacktraceJObject::Add(::StringW key, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.Add
void Backtrace::Unity::Json::BacktraceJObject::Add(::StringW key, ::Backtrace::Unity::Json::BacktraceJObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.Add
void Backtrace::Unity::Json::BacktraceJObject::Add(::StringW key, ::System::Collections::IEnumerable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.ToJson
::StringW Backtrace::Unity::Json::BacktraceJObject::ToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.ToJson
void Backtrace::Unity::Json::BacktraceJObject::ToJson(::System::Text::StringBuilder* stringBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringBuilder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stringBuilder);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.AddUserPrimitives
void Backtrace::Unity::Json::BacktraceJObject::AddUserPrimitives(::System::Text::StringBuilder* stringBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::AddUserPrimitives");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUserPrimitives", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringBuilder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stringBuilder);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.AppendPrimitives
void Backtrace::Unity::Json::BacktraceJObject::AppendPrimitives(::System::Text::StringBuilder* stringBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::AppendPrimitives");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendPrimitives", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringBuilder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stringBuilder);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.AppendJObjects
void Backtrace::Unity::Json::BacktraceJObject::AppendJObjects(::System::Text::StringBuilder* stringBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::AppendJObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendJObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringBuilder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stringBuilder);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.AppendComplexValues
void Backtrace::Unity::Json::BacktraceJObject::AppendComplexValues(::System::Text::StringBuilder* stringBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::AppendComplexValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendComplexValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringBuilder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stringBuilder);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.ShouldContinueAddingJSONProperties
bool Backtrace::Unity::Json::BacktraceJObject::ShouldContinueAddingJSONProperties(::System::Text::StringBuilder* stringBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::ShouldContinueAddingJSONProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldContinueAddingJSONProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stringBuilder);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.AppendKey
void Backtrace::Unity::Json::BacktraceJObject::AppendKey(::StringW value, ::System::Text::StringBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::AppendKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, builder);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.EscapeString
void Backtrace::Unity::Json::BacktraceJObject::EscapeString(::StringW value, ::System::Text::StringBuilder* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::EscapeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EscapeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, output);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.IntToHex
::Il2CppChar Backtrace::Unity::Json::BacktraceJObject::IntToHex(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::IntToHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IntToHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, n);
}
// Autogenerated method: Backtrace.Unity.Json.BacktraceJObject.ToCharAsUnicodeToStringBuilder
void Backtrace::Unity::Json::BacktraceJObject::ToCharAsUnicodeToStringBuilder(::Il2CppChar c, ::System::Text::StringBuilder* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Json::BacktraceJObject::ToCharAsUnicodeToStringBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToCharAsUnicodeToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c, output);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Interfaces.IBacktraceApi
#include "Backtrace/Unity/Interfaces/IBacktraceApi.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceResult
#include "Backtrace/Unity/Model/BacktraceResult.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceApi.get_ServerUrl
::StringW Backtrace::Unity::Interfaces::IBacktraceApi::get_ServerUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceApi::get_ServerUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceApi.Send
::System::Collections::IEnumerator* Backtrace::Unity::Interfaces::IBacktraceApi::Send(::Backtrace::Unity::Model::BacktraceData* data, ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceApi::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, data, callback);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceApi.Send
::System::Collections::IEnumerator* Backtrace::Unity::Interfaces::IBacktraceApi::Send(::StringW json, ::System::Collections::Generic::IEnumerable_1<::StringW>* attachments, int deduplication, ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceApi::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, json, attachments, deduplication, callback);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceApi.Send
::System::Collections::IEnumerator* Backtrace::Unity::Interfaces::IBacktraceApi::Send(::StringW json, ::System::Collections::Generic::IEnumerable_1<::StringW>* attachments, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* queryAttributes, ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceApi::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, json, attachments, queryAttributes, callback);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceApi.get_OnServerError
::System::Action_1<::System::Exception*>* Backtrace::Unity::Interfaces::IBacktraceApi::get_OnServerError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceApi::get_OnServerError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action_1<::System::Exception*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceApi.set_OnServerError
void Backtrace::Unity::Interfaces::IBacktraceApi::set_OnServerError(::System::Action_1<::System::Exception*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceApi::set_OnServerError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceApi*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceApi.get_OnServerResponse
::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* Backtrace::Unity::Interfaces::IBacktraceApi::get_OnServerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceApi::get_OnServerResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceApi.set_OnServerResponse
void Backtrace::Unity::Interfaces::IBacktraceApi::set_OnServerResponse(::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceApi::set_OnServerResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceApi*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceApi.get_RequestHandler
::System::Func_3<::StringW, ::Backtrace::Unity::Model::BacktraceData*, ::Backtrace::Unity::Model::BacktraceResult*>* Backtrace::Unity::Interfaces::IBacktraceApi::get_RequestHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceApi::get_RequestHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_3<::StringW, ::Backtrace::Unity::Model::BacktraceData*, ::Backtrace::Unity::Model::BacktraceResult*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceApi.set_RequestHandler
void Backtrace::Unity::Interfaces::IBacktraceApi::set_RequestHandler(::System::Func_3<::StringW, ::Backtrace::Unity::Model::BacktraceData*, ::Backtrace::Unity::Model::BacktraceResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceApi::set_RequestHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceApi*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceApi.SendMinidump
::System::Collections::IEnumerator* Backtrace::Unity::Interfaces::IBacktraceApi::SendMinidump(::StringW minidumpPath, ::System::Collections::Generic::IEnumerable_1<::StringW>* attachments, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* queryAttributes, ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceApi::SendMinidump");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, minidumpPath, attachments, queryAttributes, callback);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceApi.get_EnablePerformanceStatistics
bool Backtrace::Unity::Interfaces::IBacktraceApi::get_EnablePerformanceStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceApi::get_EnablePerformanceStatistics");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceApi.set_EnablePerformanceStatistics
void Backtrace::Unity::Interfaces::IBacktraceApi::set_EnablePerformanceStatistics(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceApi::set_EnablePerformanceStatistics");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceApi*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Interfaces.IBacktraceClient
#include "Backtrace/Unity/Interfaces/IBacktraceClient.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs
#include "Backtrace/Unity/Model/Breadcrumbs/IBacktraceBreadcrumbs.hpp"
// Including type: Backtrace.Unity.Model.BacktraceReport
#include "Backtrace/Unity/Model/BacktraceReport.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Backtrace.Unity.Model.BacktraceResult
#include "Backtrace/Unity/Model/BacktraceResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Backtrace.Unity.Interfaces.IBacktraceMetrics
#include "Backtrace/Unity/Interfaces/IBacktraceMetrics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceClient.get_Breadcrumbs
::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs* Backtrace::Unity::Interfaces::IBacktraceClient::get_Breadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceClient::get_Breadcrumbs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceClient*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceClient.Send
void Backtrace::Unity::Interfaces::IBacktraceClient::Send(::Backtrace::Unity::Model::BacktraceReport* report, ::System::Action_1<::Backtrace::Unity::Model::BacktraceResult*>* sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceClient::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, report, sendCallback);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceClient.Send
void Backtrace::Unity::Interfaces::IBacktraceClient::Send(::StringW message, ::System::Collections::Generic::List_1<::StringW>* attachmentPaths, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceClient::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, attachmentPaths, attributes);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceClient.Send
void Backtrace::Unity::Interfaces::IBacktraceClient::Send(::System::Exception* exception, ::System::Collections::Generic::List_1<::StringW>* attachmentPaths, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceClient::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception, attachmentPaths, attributes);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceClient.SetClientReportLimit
void Backtrace::Unity::Interfaces::IBacktraceClient::SetClientReportLimit(uint reportPerMin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceClient::SetClientReportLimit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reportPerMin);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceClient.Refresh
void Backtrace::Unity::Interfaces::IBacktraceClient::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceClient::Refresh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceClient*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceClient.EnableBreadcrumbsSupport
bool Backtrace::Unity::Interfaces::IBacktraceClient::EnableBreadcrumbsSupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceClient::EnableBreadcrumbsSupport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceClient*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceClient.get_Metrics
::Backtrace::Unity::Interfaces::IBacktraceMetrics* Backtrace::Unity::Interfaces::IBacktraceClient::get_Metrics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceClient::get_Metrics");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceClient*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Interfaces::IBacktraceMetrics*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceClient.EnableMetrics
bool Backtrace::Unity::Interfaces::IBacktraceClient::EnableMetrics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceClient::EnableMetrics");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceClient*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceClient.EnableMetrics
bool Backtrace::Unity::Interfaces::IBacktraceClient::EnableMetrics(::StringW uniqueEventsSubmissionUrl, ::StringW summedEventsSubmissionUrl, uint timeIntervalInSec, ::StringW uniqueEventName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceClient::EnableMetrics");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceClient*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uniqueEventsSubmissionUrl, summedEventsSubmissionUrl, timeIntervalInSec, uniqueEventName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Interfaces.IBacktraceDatabase
#include "Backtrace/Unity/Interfaces/IBacktraceDatabase.hpp"
// Including type: Backtrace.Unity.Model.Breadcrumbs.IBacktraceBreadcrumbs
#include "Backtrace/Unity/Model/Breadcrumbs/IBacktraceBreadcrumbs.hpp"
// Including type: Backtrace.Unity.Interfaces.IBacktraceApi
#include "Backtrace/Unity/Interfaces/IBacktraceApi.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseRecord.hpp"
// Including type: Backtrace.Unity.Model.BacktraceReport
#include "Backtrace/Unity/Model/BacktraceReport.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Backtrace.Unity.Types.MiniDumpType
#include "Backtrace/Unity/Types/MiniDumpType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseSettings
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseSettings.hpp"
// Including type: Backtrace.Unity.Services.ReportLimitWatcher
#include "Backtrace/Unity/Services/ReportLimitWatcher.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.get_ScreenshotQuality
int Backtrace::Unity::Interfaces::IBacktraceDatabase::get_ScreenshotQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::get_ScreenshotQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.set_ScreenshotQuality
void Backtrace::Unity::Interfaces::IBacktraceDatabase::set_ScreenshotQuality(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::set_ScreenshotQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.get_ScreenshotMaxHeight
int Backtrace::Unity::Interfaces::IBacktraceDatabase::get_ScreenshotMaxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::get_ScreenshotMaxHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.set_ScreenshotMaxHeight
void Backtrace::Unity::Interfaces::IBacktraceDatabase::set_ScreenshotMaxHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::set_ScreenshotMaxHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.get_Breadcrumbs
::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs* Backtrace::Unity::Interfaces::IBacktraceDatabase::get_Breadcrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::get_Breadcrumbs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Breadcrumbs::IBacktraceBreadcrumbs*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.Flush
void Backtrace::Unity::Interfaces::IBacktraceDatabase::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.SetApi
void Backtrace::Unity::Interfaces::IBacktraceDatabase::SetApi(::Backtrace::Unity::Interfaces::IBacktraceApi* backtraceApi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::SetApi");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, backtraceApi);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.Clear
void Backtrace::Unity::Interfaces::IBacktraceDatabase::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.ValidConsistency
bool Backtrace::Unity::Interfaces::IBacktraceDatabase::ValidConsistency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::ValidConsistency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.Add
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Interfaces::IBacktraceDatabase::Add(::Backtrace::Unity::Model::BacktraceReport* backtraceReport, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributes, ::Backtrace::Unity::Types::MiniDumpType miniDumpType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method, backtraceReport, attributes, miniDumpType);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.Get
::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>* Backtrace::Unity::Interfaces::IBacktraceDatabase::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.Delete
void Backtrace::Unity::Interfaces::IBacktraceDatabase::Delete(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::Delete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.GetSettings
::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings* Backtrace::Unity::Interfaces::IBacktraceDatabase::GetSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::GetSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.GetDatabaseSize
int64_t Backtrace::Unity::Interfaces::IBacktraceDatabase::GetDatabaseSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::GetDatabaseSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.SetReportWatcher
void Backtrace::Unity::Interfaces::IBacktraceDatabase::SetReportWatcher(::Backtrace::Unity::Services::ReportLimitWatcher* reportLimitWatcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::SetReportWatcher");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reportLimitWatcher);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.Reload
void Backtrace::Unity::Interfaces::IBacktraceDatabase::Reload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::Reload");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.Add
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Interfaces::IBacktraceDatabase::Add(::Backtrace::Unity::Model::BacktraceData* data, bool lock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method, data, lock);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.Enabled
bool Backtrace::Unity::Interfaces::IBacktraceDatabase::Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::Enabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabase.EnableBreadcrumbsSupport
bool Backtrace::Unity::Interfaces::IBacktraceDatabase::EnableBreadcrumbsSupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabase::EnableBreadcrumbsSupport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext
#include "Backtrace/Unity/Interfaces/IBacktraceDatabaseContext.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseRecord.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Backtrace.Unity.Types.DeduplicationStrategy
#include "Backtrace/Unity/Types/DeduplicationStrategy.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.Add
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::Add(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* backtraceDatabaseRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method, backtraceDatabaseRecord);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.FirstOrDefault
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::FirstOrDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::FirstOrDefault");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.FirstOrDefault
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::FirstOrDefault(::System::Func_2<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::FirstOrDefault");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method, predicate);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.LastOrDefault
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::LastOrDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::LastOrDefault");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.Get
::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>* Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.Delete
void Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::Delete(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::Delete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.Any
bool Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::Any(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::Any");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.Any
bool Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::Any");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.Count
int Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.Clear
void Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.IncrementBatchRetry
void Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::IncrementBatchRetry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::IncrementBatchRetry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.GetSize
int64_t Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::GetSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.GetTotalNumberOfRecords
int Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::GetTotalNumberOfRecords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::GetTotalNumberOfRecords");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.get_DeduplicationStrategy
::Backtrace::Unity::Types::DeduplicationStrategy Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::get_DeduplicationStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::get_DeduplicationStrategy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Types::DeduplicationStrategy, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.set_DeduplicationStrategy
void Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::set_DeduplicationStrategy(::Backtrace::Unity::Types::DeduplicationStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::set_DeduplicationStrategy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.GetRecordsToDelete
::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>* Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::GetRecordsToDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::GetRecordsToDelete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.GetHash
::StringW Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::GetHash(::Backtrace::Unity::Model::BacktraceData* backtraceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::GetHash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, backtraceData);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.GetRecordByHash
::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::GetRecordByHash(::StringW hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::GetRecordByHash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*, false>(this, ___internal__method, hash);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseContext.AddDuplicate
void Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::AddDuplicate(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext::AddDuplicate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext
#include "Backtrace/Unity/Interfaces/IBacktraceDatabaseFileContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.IO.FileInfo
#include "System/IO/FileInfo.hpp"
// Including type: Backtrace.Unity.Model.Database.BacktraceDatabaseRecord
#include "Backtrace/Unity/Model/Database/BacktraceDatabaseRecord.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext.get_ScreenshotQuality
int Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::get_ScreenshotQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::get_ScreenshotQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext.set_ScreenshotQuality
void Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::set_ScreenshotQuality(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::set_ScreenshotQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext.get_ScreenshotMaxHeight
int Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::get_ScreenshotMaxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::get_ScreenshotMaxHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext.set_ScreenshotMaxHeight
void Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::set_ScreenshotMaxHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::set_ScreenshotMaxHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext.GetRecords
::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>* Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::GetRecords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::GetRecords");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext.GetAll
::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>* Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::GetAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::GetAll");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext.ValidFileConsistency
bool Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::ValidFileConsistency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::ValidFileConsistency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext.RemoveOrphaned
void Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::RemoveOrphaned(::System::Collections::Generic::IEnumerable_1<::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord*>* existingRecords) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::RemoveOrphaned");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, existingRecords);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext.Clear
void Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext.Delete
void Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::Delete(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::Delete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext.GenerateRecordAttachments
::System::Collections::Generic::IEnumerable_1<::StringW>* Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::GenerateRecordAttachments(::Backtrace::Unity::Model::BacktraceData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::GenerateRecordAttachments");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method, data);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext.Save
bool Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::Save(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::Save");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceDatabaseFileContext.IsValidRecord
bool Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::IsValidRecord(::Backtrace::Unity::Model::Database::BacktraceDatabaseRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext::IsValidRecord");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceDatabaseFileContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Interfaces.IBacktraceMetrics
#include "Backtrace/Unity/Interfaces/IBacktraceMetrics.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceMetrics.get_MaximumSummedEvents
uint Backtrace::Unity::Interfaces::IBacktraceMetrics::get_MaximumSummedEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceMetrics::get_MaximumSummedEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceMetrics*), -1));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceMetrics.set_MaximumSummedEvents
void Backtrace::Unity::Interfaces::IBacktraceMetrics::set_MaximumSummedEvents(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceMetrics::set_MaximumSummedEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceMetrics*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceMetrics.get_MaximumUniqueEvents
uint Backtrace::Unity::Interfaces::IBacktraceMetrics::get_MaximumUniqueEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceMetrics::get_MaximumUniqueEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceMetrics*), -1));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceMetrics.set_MaximumUniqueEvents
void Backtrace::Unity::Interfaces::IBacktraceMetrics::set_MaximumUniqueEvents(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceMetrics::set_MaximumUniqueEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceMetrics*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceMetrics.get_UniqueEventsSubmissionUrl
::StringW Backtrace::Unity::Interfaces::IBacktraceMetrics::get_UniqueEventsSubmissionUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceMetrics::get_UniqueEventsSubmissionUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceMetrics*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceMetrics.set_UniqueEventsSubmissionUrl
void Backtrace::Unity::Interfaces::IBacktraceMetrics::set_UniqueEventsSubmissionUrl(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceMetrics::set_UniqueEventsSubmissionUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceMetrics*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceMetrics.get_SummedEventsSubmissionUrl
::StringW Backtrace::Unity::Interfaces::IBacktraceMetrics::get_SummedEventsSubmissionUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceMetrics::get_SummedEventsSubmissionUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceMetrics*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceMetrics.set_SummedEventsSubmissionUrl
void Backtrace::Unity::Interfaces::IBacktraceMetrics::set_SummedEventsSubmissionUrl(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceMetrics::set_SummedEventsSubmissionUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceMetrics*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceMetrics.Send
void Backtrace::Unity::Interfaces::IBacktraceMetrics::Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceMetrics::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceMetrics*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceMetrics.AddSummedEvent
bool Backtrace::Unity::Interfaces::IBacktraceMetrics::AddSummedEvent(::StringW metricsGroupName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceMetrics::AddSummedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceMetrics*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, metricsGroupName);
}
// Autogenerated method: Backtrace.Unity.Interfaces.IBacktraceMetrics.AddSummedEvent
bool Backtrace::Unity::Interfaces::IBacktraceMetrics::AddSummedEvent(::StringW metricsGroupName, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Interfaces::IBacktraceMetrics::AddSummedEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Backtrace::Unity::Interfaces::IBacktraceMetrics*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, metricsGroupName, attributes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Extensions.GuidHelper
#include "Backtrace/Unity/Extensions/GuidHelper.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Extensions.GuidHelper.FromLong
::System::Guid Backtrace::Unity::Extensions::GuidHelper::FromLong(int64_t source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::GuidHelper::FromLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Extensions", "GuidHelper", "FromLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: Backtrace.Unity.Extensions.GuidHelper.IsNullOrEmpty
bool Backtrace::Unity::Extensions::GuidHelper::IsNullOrEmpty(::StringW guid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::GuidHelper::IsNullOrEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Extensions", "GuidHelper", "IsNullOrEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guid)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guid);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Extensions.EnumExtensions
#include "Backtrace/Unity/Extensions/EnumExtensions.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Extensions.EnumExtensions.HasFlag
bool Backtrace::Unity::Extensions::EnumExtensions::HasFlag(::System::Enum* variable, ::System::Enum* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::EnumExtensions::HasFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Extensions", "EnumExtensions", "HasFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variable), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, variable, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Extensions.StreamExtensions
#include "Backtrace/Unity/Extensions/StreamExtensions.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 _DefaultCopyBufferSize
int Backtrace::Unity::Extensions::StreamExtensions::_get__DefaultCopyBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::StreamExtensions::_get__DefaultCopyBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Backtrace.Unity.Extensions", "StreamExtensions", "_DefaultCopyBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _DefaultCopyBufferSize
void Backtrace::Unity::Extensions::StreamExtensions::_set__DefaultCopyBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::StreamExtensions::_set__DefaultCopyBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Extensions", "StreamExtensions", "_DefaultCopyBufferSize", value));
}
// Autogenerated method: Backtrace.Unity.Extensions.StreamExtensions.CopyTo
void Backtrace::Unity::Extensions::StreamExtensions::CopyTo(::System::IO::Stream* original, ::System::IO::Stream* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::StreamExtensions::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Extensions", "StreamExtensions", "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(destination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, destination);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Extensions.StringHelper
#include "Backtrace/Unity/Extensions/StringHelper.hpp"
// Including type: Backtrace.Unity.Extensions.StringHelper/<>c
#include "Backtrace/Unity/Extensions/StringHelper_--c.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Extensions.StringHelper.OnlyLetters
::StringW Backtrace::Unity::Extensions::StringHelper::OnlyLetters(::StringW source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::StringHelper::OnlyLetters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Extensions", "StringHelper", "OnlyLetters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: Backtrace.Unity.Extensions.StringHelper.GetSha
::StringW Backtrace::Unity::Extensions::StringHelper::GetSha(::System::Text::StringBuilder* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::StringHelper::GetSha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Extensions", "StringHelper", "GetSha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: Backtrace.Unity.Extensions.StringHelper.GetSha
::StringW Backtrace::Unity::Extensions::StringHelper::GetSha(::StringW source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::StringHelper::GetSha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Extensions", "StringHelper", "GetSha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Extensions.StringHelper/<>c
#include "Backtrace/Unity/Extensions/StringHelper_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Backtrace.Unity.Extensions.StringHelper/<>c <>9
::Backtrace::Unity::Extensions::StringHelper::$$c* Backtrace::Unity::Extensions::StringHelper::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::StringHelper::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Backtrace::Unity::Extensions::StringHelper::$$c*>("Backtrace.Unity.Extensions", "StringHelper/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Backtrace.Unity.Extensions.StringHelper/<>c <>9
void Backtrace::Unity::Extensions::StringHelper::$$c::_set_$$9(::Backtrace::Unity::Extensions::StringHelper::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::StringHelper::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Extensions", "StringHelper/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__0_0
::System::Func_2<::Il2CppChar, bool>* Backtrace::Unity::Extensions::StringHelper::$$c::_get_$$9__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::StringHelper::$$c::_get_$$9__0_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppChar, bool>*>("Backtrace.Unity.Extensions", "StringHelper/<>c", "<>9__0_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__0_0
void Backtrace::Unity::Extensions::StringHelper::$$c::_set_$$9__0_0(::System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::StringHelper::$$c::_set_$$9__0_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Extensions", "StringHelper/<>c", "<>9__0_0", value)));
}
// Autogenerated method: Backtrace.Unity.Extensions.StringHelper/<>c..cctor
void Backtrace::Unity::Extensions::StringHelper::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::StringHelper::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Extensions", "StringHelper/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Extensions.StringHelper/<>c.<OnlyLetters>b__0_0
bool Backtrace::Unity::Extensions::StringHelper::$$c::$OnlyLetters$b__0_0(::Il2CppChar n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::StringHelper::$$c::<OnlyLetters>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnlyLetters>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Extensions.ThreadExtensions
#include "Backtrace/Unity/Extensions/ThreadExtensions.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Extensions.ThreadExtensions.GenerateValidThreadName
::StringW Backtrace::Unity::Extensions::ThreadExtensions::GenerateValidThreadName(::System::Threading::Thread* thread) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::ThreadExtensions::GenerateValidThreadName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Extensions", "ThreadExtensions", "GenerateValidThreadName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thread)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thread);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Extensions.UnityWebRequestExtensions
#include "Backtrace/Unity/Extensions/UnityWebRequestExtensions.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String ContentTypeHeader
::StringW Backtrace::Unity::Extensions::UnityWebRequestExtensions::_get_ContentTypeHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::UnityWebRequestExtensions::_get_ContentTypeHeader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Backtrace.Unity.Extensions", "UnityWebRequestExtensions", "ContentTypeHeader"));
}
// Autogenerated static field setter
// Set static field: static System.String ContentTypeHeader
void Backtrace::Unity::Extensions::UnityWebRequestExtensions::_set_ContentTypeHeader(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::UnityWebRequestExtensions::_set_ContentTypeHeader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Extensions", "UnityWebRequestExtensions", "ContentTypeHeader", value));
}
// Autogenerated method: Backtrace.Unity.Extensions.UnityWebRequestExtensions.SetMultipartFormData
::UnityEngine::Networking::UnityWebRequest* Backtrace::Unity::Extensions::UnityWebRequestExtensions::SetMultipartFormData(::UnityEngine::Networking::UnityWebRequest* source, ::ArrayW<uint8_t> boundaryId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::UnityWebRequestExtensions::SetMultipartFormData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Extensions", "UnityWebRequestExtensions", "SetMultipartFormData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(boundaryId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, boundaryId);
}
// Autogenerated method: Backtrace.Unity.Extensions.UnityWebRequestExtensions.ReceivedNetworkError
bool Backtrace::Unity::Extensions::UnityWebRequestExtensions::ReceivedNetworkError(::UnityEngine::Networking::UnityWebRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::UnityWebRequestExtensions::ReceivedNetworkError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Extensions", "UnityWebRequestExtensions", "ReceivedNetworkError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request);
}
// Autogenerated method: Backtrace.Unity.Extensions.UnityWebRequestExtensions.SetJsonContentType
::UnityEngine::Networking::UnityWebRequest* Backtrace::Unity::Extensions::UnityWebRequestExtensions::SetJsonContentType(::UnityEngine::Networking::UnityWebRequest* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::UnityWebRequestExtensions::SetJsonContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Extensions", "UnityWebRequestExtensions", "SetJsonContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: Backtrace.Unity.Extensions.UnityWebRequestExtensions.IgnoreSsl
::UnityEngine::Networking::UnityWebRequest* Backtrace::Unity::Extensions::UnityWebRequestExtensions::IgnoreSsl(::UnityEngine::Networking::UnityWebRequest* source, bool shouldIgnore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Extensions::UnityWebRequestExtensions::IgnoreSsl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Extensions", "UnityWebRequestExtensions", "IgnoreSsl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(shouldIgnore)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, shouldIgnore);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Common.ClientPathHelper
#include "Backtrace/Unity/Common/ClientPathHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Common.ClientPathHelper.GetFullPath
::StringW Backtrace::Unity::Common::ClientPathHelper::GetFullPath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::ClientPathHelper::GetFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "ClientPathHelper", "GetFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Backtrace.Unity.Common.ClientPathHelper.ParseInterpolatedString
::StringW Backtrace::Unity::Common::ClientPathHelper::ParseInterpolatedString(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::ClientPathHelper::ParseInterpolatedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "ClientPathHelper", "ParseInterpolatedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Backtrace.Unity.Common.ClientPathHelper.GenerateFullPath
::StringW Backtrace::Unity::Common::ClientPathHelper::GenerateFullPath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::ClientPathHelper::GenerateFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "ClientPathHelper", "GenerateFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Backtrace.Unity.Common.ClientPathHelper.IsFileInDatabaseDirectory
bool Backtrace::Unity::Common::ClientPathHelper::IsFileInDatabaseDirectory(::StringW databasePath, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::ClientPathHelper::IsFileInDatabaseDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "ClientPathHelper", "IsFileInDatabaseDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(databasePath), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, databasePath, filePath);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Common.DateTimeHelper
#include "Backtrace/Unity/Common/DateTimeHelper.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Common.DateTimeHelper.Now
::System::TimeSpan Backtrace::Unity::Common::DateTimeHelper::Now() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::DateTimeHelper::Now");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "DateTimeHelper", "Now", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Common.DateTimeHelper.Timestamp
int Backtrace::Unity::Common::DateTimeHelper::Timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::DateTimeHelper::Timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "DateTimeHelper", "Timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Common.DateTimeHelper.TimestampMs
double Backtrace::Unity::Common::DateTimeHelper::TimestampMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::DateTimeHelper::TimestampMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "DateTimeHelper", "TimestampMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Common.MathHelper
#include "Backtrace/Unity/Common/MathHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Common.MathHelper.Clamp
double Backtrace::Unity::Common::MathHelper::Clamp(double value, double minimum, double maximum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::MathHelper::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "MathHelper", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(minimum), ::il2cpp_utils::ExtractType(maximum)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, minimum, maximum);
}
// Autogenerated method: Backtrace.Unity.Common.MathHelper.Uniform
double Backtrace::Unity::Common::MathHelper::Uniform(double minimum, double maximum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::MathHelper::Uniform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "MathHelper", "Uniform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minimum), ::il2cpp_utils::ExtractType(maximum)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, minimum, maximum);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Common.MetricsHelper
#include "Backtrace/Unity/Common/MetricsHelper.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Common.MetricsHelper.GetMicroseconds
::StringW Backtrace::Unity::Common::MetricsHelper::GetMicroseconds(::System::Diagnostics::Stopwatch* stopwatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::MetricsHelper::GetMicroseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "MetricsHelper", "GetMicroseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stopwatch)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stopwatch);
}
// Autogenerated method: Backtrace.Unity.Common.MetricsHelper.Restart
void Backtrace::Unity::Common::MetricsHelper::Restart(::System::Diagnostics::Stopwatch* stopwatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::MetricsHelper::Restart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "MetricsHelper", "Restart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stopwatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stopwatch);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Common.MiniDumpExceptionInformation
#include "Backtrace/Unity/Common/MiniDumpExceptionInformation.hpp"
// Including type: Backtrace.Unity.Types.MinidumpException
#include "Backtrace/Unity/Types/MinidumpException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.UInt32 ThreadId
[[deprecated("Use field access instead!")]] uint& Backtrace::Unity::Common::MiniDumpExceptionInformation::dyn_ThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::MiniDumpExceptionInformation::dyn_ThreadId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ThreadId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IntPtr ExceptionPointers
[[deprecated("Use field access instead!")]] ::System::IntPtr& Backtrace::Unity::Common::MiniDumpExceptionInformation::dyn_ExceptionPointers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::MiniDumpExceptionInformation::dyn_ExceptionPointers");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExceptionPointers"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean ClientPointers
[[deprecated("Use field access instead!")]] bool& Backtrace::Unity::Common::MiniDumpExceptionInformation::dyn_ClientPointers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::MiniDumpExceptionInformation::dyn_ClientPointers");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClientPointers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Backtrace.Unity.Common.MiniDumpExceptionInformation.GetInstance
::Backtrace::Unity::Common::MiniDumpExceptionInformation Backtrace::Unity::Common::MiniDumpExceptionInformation::GetInstance(::Backtrace::Unity::Types::MinidumpException exceptionInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::MiniDumpExceptionInformation::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "MiniDumpExceptionInformation", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exceptionInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Common::MiniDumpExceptionInformation, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exceptionInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Common.MinidumpHelper
#include "Backtrace/Unity/Common/MinidumpHelper.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: Backtrace.Unity.Common.MiniDumpExceptionInformation
#include "Backtrace/Unity/Common/MiniDumpExceptionInformation.hpp"
// Including type: Backtrace.Unity.Types.MiniDumpType
#include "Backtrace/Unity/Types/MiniDumpType.hpp"
// Including type: Backtrace.Unity.Types.MinidumpException
#include "Backtrace/Unity/Types/MinidumpException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String[] Libraries
::ArrayW<::StringW> Backtrace::Unity::Common::MinidumpHelper::_get_Libraries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::MinidumpHelper::_get_Libraries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Backtrace.Unity.Common", "MinidumpHelper", "Libraries"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] Libraries
void Backtrace::Unity::Common::MinidumpHelper::_set_Libraries(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::MinidumpHelper::_set_Libraries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Common", "MinidumpHelper", "Libraries", value));
}
// Autogenerated method: Backtrace.Unity.Common.MinidumpHelper.IsMemoryDumpAvailable
bool Backtrace::Unity::Common::MinidumpHelper::IsMemoryDumpAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::MinidumpHelper::IsMemoryDumpAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "MinidumpHelper", "IsMemoryDumpAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Common.MinidumpHelper.MiniDumpWriteDump
bool Backtrace::Unity::Common::MinidumpHelper::MiniDumpWriteDump(::System::IntPtr hProcess, uint processId, ::System::Runtime::InteropServices::SafeHandle* hFile, uint dumpType, ByRef<::Backtrace::Unity::Common::MiniDumpExceptionInformation> expParam, ::System::IntPtr userStreamParam, ::System::IntPtr callbackParam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::MinidumpHelper::MiniDumpWriteDump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "MinidumpHelper", "MiniDumpWriteDump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hProcess), ::il2cpp_utils::ExtractType(processId), ::il2cpp_utils::ExtractType(hFile), ::il2cpp_utils::ExtractType(dumpType), ::il2cpp_utils::ExtractType(expParam), ::il2cpp_utils::ExtractType(userStreamParam), ::il2cpp_utils::ExtractType(callbackParam)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hProcess, processId, hFile, dumpType, byref(expParam), userStreamParam, callbackParam);
}
// Autogenerated method: Backtrace.Unity.Common.MinidumpHelper.MiniDumpWriteDump
bool Backtrace::Unity::Common::MinidumpHelper::MiniDumpWriteDump(::System::IntPtr hProcess, uint processId, ::System::Runtime::InteropServices::SafeHandle* hFile, uint dumpType, ::System::IntPtr expParam, ::System::IntPtr userStreamParam, ::System::IntPtr callbackParam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::MinidumpHelper::MiniDumpWriteDump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "MinidumpHelper", "MiniDumpWriteDump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hProcess), ::il2cpp_utils::ExtractType(processId), ::il2cpp_utils::ExtractType(hFile), ::il2cpp_utils::ExtractType(dumpType), ::il2cpp_utils::ExtractType(expParam), ::il2cpp_utils::ExtractType(userStreamParam), ::il2cpp_utils::ExtractType(callbackParam)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hProcess, processId, hFile, dumpType, expParam, userStreamParam, callbackParam);
}
// Autogenerated method: Backtrace.Unity.Common.MinidumpHelper.Write
bool Backtrace::Unity::Common::MinidumpHelper::Write(::StringW filePath, ::Backtrace::Unity::Types::MiniDumpType options, ::Backtrace::Unity::Types::MinidumpException exceptionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::MinidumpHelper::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "MinidumpHelper", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(exceptionType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, options, exceptionType);
}
// Autogenerated method: Backtrace.Unity.Common.MinidumpHelper..cctor
void Backtrace::Unity::Common::MinidumpHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::MinidumpHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "MinidumpHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Common.SystemHelper
#include "Backtrace/Unity/Common/SystemHelper.hpp"
// Including type: Backtrace.Unity.Common.SystemHelper/<>c
#include "Backtrace/Unity/Common/SystemHelper_--c.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Common.SystemHelper.GetCurrentThreadId
uint Backtrace::Unity::Common::SystemHelper::GetCurrentThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::SystemHelper::GetCurrentThreadId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "SystemHelper", "GetCurrentThreadId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Common.SystemHelper.LoadLibrary
::System::IntPtr Backtrace::Unity::Common::SystemHelper::LoadLibrary(::StringW lpFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::SystemHelper::LoadLibrary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "SystemHelper", "LoadLibrary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lpFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lpFileName);
}
// Autogenerated method: Backtrace.Unity.Common.SystemHelper.IsLibraryAvailable
bool Backtrace::Unity::Common::SystemHelper::IsLibraryAvailable(::StringW libraryName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::SystemHelper::IsLibraryAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "SystemHelper", "IsLibraryAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(libraryName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, libraryName);
}
// Autogenerated method: Backtrace.Unity.Common.SystemHelper.IsLibraryAvailable
bool Backtrace::Unity::Common::SystemHelper::IsLibraryAvailable(::ArrayW<::StringW> libraries) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::SystemHelper::IsLibraryAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "SystemHelper", "IsLibraryAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(libraries)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, libraries);
}
// Autogenerated method: Backtrace.Unity.Common.SystemHelper.Name
::StringW Backtrace::Unity::Common::SystemHelper::Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::SystemHelper::Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "SystemHelper", "Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Common.SystemHelper.CpuArchitecture
::StringW Backtrace::Unity::Common::SystemHelper::CpuArchitecture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::SystemHelper::CpuArchitecture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "SystemHelper", "CpuArchitecture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Common.SystemHelper/<>c
#include "Backtrace/Unity/Common/SystemHelper_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Backtrace.Unity.Common.SystemHelper/<>c <>9
::Backtrace::Unity::Common::SystemHelper::$$c* Backtrace::Unity::Common::SystemHelper::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::SystemHelper::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Backtrace::Unity::Common::SystemHelper::$$c*>("Backtrace.Unity.Common", "SystemHelper/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Backtrace.Unity.Common.SystemHelper/<>c <>9
void Backtrace::Unity::Common::SystemHelper::$$c::_set_$$9(::Backtrace::Unity::Common::SystemHelper::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::SystemHelper::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Common", "SystemHelper/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,System.Boolean> <>9__3_0
::System::Func_2<::StringW, bool>* Backtrace::Unity::Common::SystemHelper::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::SystemHelper::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::StringW, bool>*>("Backtrace.Unity.Common", "SystemHelper/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,System.Boolean> <>9__3_0
void Backtrace::Unity::Common::SystemHelper::$$c::_set_$$9__3_0(::System::Func_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::SystemHelper::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Backtrace.Unity.Common", "SystemHelper/<>c", "<>9__3_0", value)));
}
// Autogenerated method: Backtrace.Unity.Common.SystemHelper/<>c..cctor
void Backtrace::Unity::Common::SystemHelper::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::SystemHelper::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "SystemHelper/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Backtrace.Unity.Common.SystemHelper/<>c.<IsLibraryAvailable>b__3_0
bool Backtrace::Unity::Common::SystemHelper::$$c::$IsLibraryAvailable$b__3_0(::StringW n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::SystemHelper::$$c::<IsLibraryAvailable>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IsLibraryAvailable>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Common.TypeHelper
#include "Backtrace/Unity/Common/TypeHelper.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.HashSet`1<System.Type> NumericTypes
::System::Collections::Generic::HashSet_1<::System::Type*>* Backtrace::Unity::Common::TypeHelper::_get_NumericTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::TypeHelper::_get_NumericTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::System::Type*>*>("Backtrace.Unity.Common", "TypeHelper", "NumericTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.HashSet`1<System.Type> NumericTypes
void Backtrace::Unity::Common::TypeHelper::_set_NumericTypes(::System::Collections::Generic::HashSet_1<::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::TypeHelper::_set_NumericTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Backtrace.Unity.Common", "TypeHelper", "NumericTypes", value));
}
// Autogenerated method: Backtrace.Unity.Common.TypeHelper.IsNumeric
bool Backtrace::Unity::Common::TypeHelper::IsNumeric(::System::Type* myType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::TypeHelper::IsNumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "TypeHelper", "IsNumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(myType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, myType);
}
// Autogenerated method: Backtrace.Unity.Common.TypeHelper..cctor
void Backtrace::Unity::Common::TypeHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::TypeHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "TypeHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Backtrace.Unity.Common.ExceptionExtensions
#include "Backtrace/Unity/Common/ExceptionExtensions.hpp"
// Including type: Backtrace.Unity.Model.BacktraceReport
#include "Backtrace/Unity/Model/BacktraceReport.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Backtrace.Unity.Common.ExceptionExtensions.ToBacktraceReport
::Backtrace::Unity::Model::BacktraceReport* Backtrace::Unity::Common::ExceptionExtensions::ToBacktraceReport(::System::Exception* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Backtrace::Unity::Common::ExceptionExtensions::ToBacktraceReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Backtrace.Unity.Common", "ExceptionExtensions", "ToBacktraceReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceReport*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BakeryAlwaysRender
#include "GlobalNamespace/BakeryAlwaysRender.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BakeryDirectLight
#include "GlobalNamespace/BakeryDirectLight.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 lightsChanged
int GlobalNamespace::BakeryDirectLight::_get_lightsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::_get_lightsChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakeryDirectLight", "lightsChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 lightsChanged
void GlobalNamespace::BakeryDirectLight::_set_lightsChanged(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::_set_lightsChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryDirectLight", "lightsChanged", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::BakeryDirectLight::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single intensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryDirectLight::dyn_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single shadowSpread
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryDirectLight::dyn_shadowSpread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_shadowSpread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shadowSpread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 samples
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryDirectLight::dyn_samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_samples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "samples"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 bitmask
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryDirectLight::dyn_bitmask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_bitmask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitmask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean bakeToIndirect
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryDirectLight::dyn_bakeToIndirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_bakeToIndirect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bakeToIndirect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean shadowmask
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryDirectLight::dyn_shadowmask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_shadowmask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shadowmask"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean shadowmaskDenoise
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryDirectLight::dyn_shadowmaskDenoise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_shadowmaskDenoise");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shadowmaskDenoise"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single indirectIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryDirectLight::dyn_indirectIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_indirectIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indirectIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D cloudShadow
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BakeryDirectLight::dyn_cloudShadow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_cloudShadow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cloudShadow"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cloudShadowTilingX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryDirectLight::dyn_cloudShadowTilingX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_cloudShadowTilingX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cloudShadowTilingX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cloudShadowTilingY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryDirectLight::dyn_cloudShadowTilingY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_cloudShadowTilingY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cloudShadowTilingY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cloudShadowOffsetX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryDirectLight::dyn_cloudShadowOffsetX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_cloudShadowOffsetX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cloudShadowOffsetX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cloudShadowOffsetY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryDirectLight::dyn_cloudShadowOffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_cloudShadowOffsetY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cloudShadowOffsetY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 UID
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryDirectLight::dyn_UID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_UID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BakeryLightmapGroup
#include "GlobalNamespace/BakeryLightmapGroup.hpp"
// Including type: BakeryLightmapGroupPlain
#include "GlobalNamespace/BakeryLightmapGroupPlain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 resolution
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_resolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolution"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 bitmask
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_bitmask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_bitmask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitmask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 id
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sortingID
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_sortingID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_sortingID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortingID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isImplicit
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightmapGroup::dyn_isImplicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_isImplicit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isImplicit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single area
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryLightmapGroup::dyn_area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_area");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "area"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 totalVertexCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_totalVertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_totalVertexCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalVertexCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 vertexCounter
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_vertexCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_vertexCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vertexCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sceneLodLevel
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_sceneLodLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_sceneLodLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneLodLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sceneName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BakeryLightmapGroup::dyn_sceneName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_sceneName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean containsTerrains
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightmapGroup::dyn_containsTerrains() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_containsTerrains");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "containsTerrains"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean probes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightmapGroup::dyn_probes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_probes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "probes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BakeryLightmapGroup/ftLMGroupMode mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode& GlobalNamespace::BakeryLightmapGroup::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BakeryLightmapGroup/RenderMode renderMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BakeryLightmapGroup::RenderMode& GlobalNamespace::BakeryLightmapGroup::dyn_renderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_renderMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BakeryLightmapGroup::RenderMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BakeryLightmapGroup/RenderDirMode renderDirMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BakeryLightmapGroup::RenderDirMode& GlobalNamespace::BakeryLightmapGroup::dyn_renderDirMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_renderDirMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderDirMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BakeryLightmapGroup::RenderDirMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BakeryLightmapGroup/AtlasPacker atlasPacker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BakeryLightmapGroup::AtlasPacker& GlobalNamespace::BakeryLightmapGroup::dyn_atlasPacker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_atlasPacker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "atlasPacker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BakeryLightmapGroup::AtlasPacker*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean computeSSS
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightmapGroup::dyn_computeSSS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_computeSSS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "computeSSS"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sssSamples
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_sssSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_sssSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sssSamples"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sssDensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryLightmapGroup::dyn_sssDensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_sssDensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sssDensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color sssColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::BakeryLightmapGroup::dyn_sssColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_sssColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sssColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sssScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryLightmapGroup::dyn_sssScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_sssScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sssScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fakeShadowBias
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryLightmapGroup::dyn_fakeShadowBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_fakeShadowBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeShadowBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean transparentSelfShadow
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightmapGroup::dyn_transparentSelfShadow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_transparentSelfShadow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transparentSelfShadow"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean flipNormal
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightmapGroup::dyn_flipNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_flipNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flipNormal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String parentName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BakeryLightmapGroup::dyn_parentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_parentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String overridePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BakeryLightmapGroup::dyn_overridePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_overridePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overridePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fixPos3D
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightmapGroup::dyn_fixPos3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_fixPos3D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixPos3D"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 voxelSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::BakeryLightmapGroup::dyn_voxelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_voxelSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voxelSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 passedFilter
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_passedFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_passedFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passedFilter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BakeryLightmapGroup.GetPlainStruct
::GlobalNamespace::BakeryLightmapGroupPlain GlobalNamespace::BakeryLightmapGroup::GetPlainStruct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::GetPlainStruct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlainStruct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BakeryLightmapGroupPlain, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BakeryLightmapGroup/ftLMGroupMode
#include "GlobalNamespace/BakeryLightmapGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/ftLMGroupMode OriginalUV
::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode::_get_OriginalUV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode::_get_OriginalUV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode>("", "BakeryLightmapGroup/ftLMGroupMode", "OriginalUV"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/ftLMGroupMode OriginalUV
void GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode::_set_OriginalUV(::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode::_set_OriginalUV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/ftLMGroupMode", "OriginalUV", value));
}
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/ftLMGroupMode PackAtlas
::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode::_get_PackAtlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode::_get_PackAtlas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode>("", "BakeryLightmapGroup/ftLMGroupMode", "PackAtlas"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/ftLMGroupMode PackAtlas
void GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode::_set_PackAtlas(::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode::_set_PackAtlas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/ftLMGroupMode", "PackAtlas", value));
}
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/ftLMGroupMode Vertex
::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode::_get_Vertex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode::_get_Vertex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode>("", "BakeryLightmapGroup/ftLMGroupMode", "Vertex"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/ftLMGroupMode Vertex
void GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode::_set_Vertex(::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode::_set_Vertex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/ftLMGroupMode", "Vertex", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BakeryLightmapGroup/RenderMode
#include "GlobalNamespace/BakeryLightmapGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/RenderMode FullLighting
::GlobalNamespace::BakeryLightmapGroup::RenderMode GlobalNamespace::BakeryLightmapGroup::RenderMode::_get_FullLighting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderMode::_get_FullLighting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::RenderMode>("", "BakeryLightmapGroup/RenderMode", "FullLighting"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/RenderMode FullLighting
void GlobalNamespace::BakeryLightmapGroup::RenderMode::_set_FullLighting(::GlobalNamespace::BakeryLightmapGroup::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderMode::_set_FullLighting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/RenderMode", "FullLighting", value));
}
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/RenderMode Indirect
::GlobalNamespace::BakeryLightmapGroup::RenderMode GlobalNamespace::BakeryLightmapGroup::RenderMode::_get_Indirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderMode::_get_Indirect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::RenderMode>("", "BakeryLightmapGroup/RenderMode", "Indirect"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/RenderMode Indirect
void GlobalNamespace::BakeryLightmapGroup::RenderMode::_set_Indirect(::GlobalNamespace::BakeryLightmapGroup::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderMode::_set_Indirect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/RenderMode", "Indirect", value));
}
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/RenderMode Shadowmask
::GlobalNamespace::BakeryLightmapGroup::RenderMode GlobalNamespace::BakeryLightmapGroup::RenderMode::_get_Shadowmask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderMode::_get_Shadowmask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::RenderMode>("", "BakeryLightmapGroup/RenderMode", "Shadowmask"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/RenderMode Shadowmask
void GlobalNamespace::BakeryLightmapGroup::RenderMode::_set_Shadowmask(::GlobalNamespace::BakeryLightmapGroup::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderMode::_set_Shadowmask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/RenderMode", "Shadowmask", value));
}
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/RenderMode Subtractive
::GlobalNamespace::BakeryLightmapGroup::RenderMode GlobalNamespace::BakeryLightmapGroup::RenderMode::_get_Subtractive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderMode::_get_Subtractive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::RenderMode>("", "BakeryLightmapGroup/RenderMode", "Subtractive"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/RenderMode Subtractive
void GlobalNamespace::BakeryLightmapGroup::RenderMode::_set_Subtractive(::GlobalNamespace::BakeryLightmapGroup::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderMode::_set_Subtractive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/RenderMode", "Subtractive", value));
}
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/RenderMode AmbientOcclusionOnly
::GlobalNamespace::BakeryLightmapGroup::RenderMode GlobalNamespace::BakeryLightmapGroup::RenderMode::_get_AmbientOcclusionOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderMode::_get_AmbientOcclusionOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::RenderMode>("", "BakeryLightmapGroup/RenderMode", "AmbientOcclusionOnly"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/RenderMode AmbientOcclusionOnly
void GlobalNamespace::BakeryLightmapGroup::RenderMode::_set_AmbientOcclusionOnly(::GlobalNamespace::BakeryLightmapGroup::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderMode::_set_AmbientOcclusionOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/RenderMode", "AmbientOcclusionOnly", value));
}
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/RenderMode Auto
::GlobalNamespace::BakeryLightmapGroup::RenderMode GlobalNamespace::BakeryLightmapGroup::RenderMode::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderMode::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::RenderMode>("", "BakeryLightmapGroup/RenderMode", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/RenderMode Auto
void GlobalNamespace::BakeryLightmapGroup::RenderMode::_set_Auto(::GlobalNamespace::BakeryLightmapGroup::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderMode::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/RenderMode", "Auto", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::RenderMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BakeryLightmapGroup/RenderDirMode
#include "GlobalNamespace/BakeryLightmapGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/RenderDirMode None
::GlobalNamespace::BakeryLightmapGroup::RenderDirMode GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::RenderDirMode>("", "BakeryLightmapGroup/RenderDirMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/RenderDirMode None
void GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_set_None(::GlobalNamespace::BakeryLightmapGroup::RenderDirMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/RenderDirMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/RenderDirMode BakedNormalMaps
::GlobalNamespace::BakeryLightmapGroup::RenderDirMode GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_get_BakedNormalMaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_get_BakedNormalMaps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::RenderDirMode>("", "BakeryLightmapGroup/RenderDirMode", "BakedNormalMaps"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/RenderDirMode BakedNormalMaps
void GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_set_BakedNormalMaps(::GlobalNamespace::BakeryLightmapGroup::RenderDirMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_set_BakedNormalMaps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/RenderDirMode", "BakedNormalMaps", value));
}
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/RenderDirMode DominantDirection
::GlobalNamespace::BakeryLightmapGroup::RenderDirMode GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_get_DominantDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_get_DominantDirection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::RenderDirMode>("", "BakeryLightmapGroup/RenderDirMode", "DominantDirection"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/RenderDirMode DominantDirection
void GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_set_DominantDirection(::GlobalNamespace::BakeryLightmapGroup::RenderDirMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_set_DominantDirection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/RenderDirMode", "DominantDirection", value));
}
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/RenderDirMode RNM
::GlobalNamespace::BakeryLightmapGroup::RenderDirMode GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_get_RNM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_get_RNM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::RenderDirMode>("", "BakeryLightmapGroup/RenderDirMode", "RNM"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/RenderDirMode RNM
void GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_set_RNM(::GlobalNamespace::BakeryLightmapGroup::RenderDirMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_set_RNM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/RenderDirMode", "RNM", value));
}
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/RenderDirMode SH
::GlobalNamespace::BakeryLightmapGroup::RenderDirMode GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_get_SH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_get_SH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::RenderDirMode>("", "BakeryLightmapGroup/RenderDirMode", "SH"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/RenderDirMode SH
void GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_set_SH(::GlobalNamespace::BakeryLightmapGroup::RenderDirMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_set_SH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/RenderDirMode", "SH", value));
}
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/RenderDirMode ProbeSH
::GlobalNamespace::BakeryLightmapGroup::RenderDirMode GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_get_ProbeSH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_get_ProbeSH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::RenderDirMode>("", "BakeryLightmapGroup/RenderDirMode", "ProbeSH"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/RenderDirMode ProbeSH
void GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_set_ProbeSH(::GlobalNamespace::BakeryLightmapGroup::RenderDirMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_set_ProbeSH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/RenderDirMode", "ProbeSH", value));
}
// Autogenerated static field getter
// Get static field: static public BakeryLightmapGroup/RenderDirMode Auto
::GlobalNamespace::BakeryLightmapGroup::RenderDirMode GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BakeryLightmapGroup::RenderDirMode>("", "BakeryLightmapGroup/RenderDirMode", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public BakeryLightmapGroup/RenderDirMode Auto
void GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_set_Auto(::GlobalNamespace::BakeryLightmapGroup::RenderDirMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderDirMode::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightmapGroup/RenderDirMode", "Auto", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::RenderDirMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::RenderDirMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
